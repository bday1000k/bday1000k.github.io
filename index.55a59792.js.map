{"mappings":"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","sources":["node_modules/ol/src/extent.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/asserts.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/util.js","node_modules/ol/src/proj.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/obj.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/string.js","node_modules/ol/src/sphere.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/Object.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/functions.js","node_modules/ol/src/array.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/Feature.js","node_modules/ol/src/Map.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/color.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/dom.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/Collection.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/View.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/size.js","node_modules/ol/src/control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/style.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/source.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/source/Stamen.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/OSM.js"],"sourcesContent":["/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {Array<PointerEvent>} [opt_activePointers] Active pointers.\n   */\n  constructor(\n    type,\n    map,\n    originalEvent,\n    opt_dragging,\n    opt_frameState,\n    opt_activePointers\n  ) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = opt_activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {getValues} from './obj.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = getValues(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {string|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {string|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, opt_projection) {\n    if (this.featuresRtree_) {\n      const multiWorld =\n        opt_projection && opt_projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, opt_projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!opt_backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      opt_backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = opt_backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (opt_declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                opt_declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (opt_declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (opt_declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  opt_declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                opt_declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n"],"names":["$iM9A6","parcelRequire","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","extent","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","i","ii","length","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$ab1029bcae9ddb4a","value","opt_extent","$6da4c8ed3074c92b$export$9cd59f9826255e47","slice","$6da4c8ed3074c92b$export$cbe64c389534206f","x","y","dx","dy","$6da4c8ed3074c92b$export$ac68c24d37ca240f","coordinate","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","default","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$4838bf78d04a9440","$6da4c8ed3074c92b$export$be0ab0bf96ca59ca","flatCoordinates","offset","end","stride","$6da4c8ed3074c92b$export$30570204156ffd18","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$8b58be045bf06082","$6da4c8ed3074c92b$export$f1dab130b92b85a9","Math","min","max","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","$4Cz58","assert","$6da4c8ed3074c92b$export$13ba650faf8308","center","resolution","rotation","size","_a","$6da4c8ed3074c92b$export$4b7a6fb4002cd6ac","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$6a4fe494c558c238","$6da4c8ed3074c92b$export$a6a5a7a461419425","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6da4c8ed3074c92b$export$39a9ce3624977b84","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","$6da4c8ed3074c92b$export$9031237f01de0947","isFinite","$dab4245bc22b806c$export$2e2bcd8739ae039","$5wMtC","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$export$2e2bcd8739ae039","_super","AssertionError","code","_this","this","message","$9iPUS","VERSION","split","call","name","$40658b5e833b516b$var$__extends","Error","$6c5e11070e371322$export$817eb92a8194bab0","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$6c5e11070e371322$export$a4ad2735b021c132","$9c4744460e43e41b$var$showCoordinateWarning","$9c4744460e43e41b$export$ed949affbc7c4223","opt_disable","undefined","$9c4744460e43e41b$export$dd516654c5f598fb","input","opt_output","opt_dimension","output","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$l72II","add","getCode","$1wgRP","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","get","$9c4744460e43e41b$export$2d8f7b4eec383d44","point","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","metersPerUnit","getMetersPerUnit","$kUyy5","METERS_PER_UNIT","units","DEGREES","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$lAvh5","getDistance","$9c4744460e43e41b$export$eeb8392580a05a37","projections","forEach","$9c4744460e43e41b$export$638ad73f7aafb913","source","destination","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$b15d9668511529b9","opt_projection","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$751c68e0e0efff79","$9pD6L","applyTransform","projections1","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$3973b77d5f6f2790","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","$2o3CH","equals","console","warn","$9c4744460e43e41b$export$96bfd09e2cffb006","$9c4744460e43e41b$export$494be3a3a25689ca","$9c4744460e43e41b$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$9c4744460e43e41b$export$bd1cd3b88140b906","$bof21","PROJECTIONS","$fAlut","fromEPSG4326","toEPSG4326","$03edbd434a9e6608$var$Units","RADIANS","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","PI","$03edbd434a9e6608$export$2e2bcd8739ae039","$84ad988f04807ab1$export$2d2c9be8b5b863f","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","log","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection","global","worldExtent","getPointResolution","$9byFX","cosh","$84ad988f04807ab1$var$__extends","$9qhtr","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","dimension","Array","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","exp","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection","options","code_","units_","extent_","worldExtent_","axisOrientation_","axisOrientation","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","prototype","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","$6b000a049d919fe5$export$2e2fd1ad24e4d350","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$8240f01c446270e6","mat","n","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","m","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","a","b","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$6b000a049d919fe5$export$a81f732198733497","decimals","factor","pow","round","$6b000a049d919fe5$export$a3fe094919f356fd","$6b000a049d919fe5$export$803ce6b71a0a94b2","ceil","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$f5ec5c943d804ecb$export$42ffd38884aecdac","$f5ec5c943d804ecb$export$3988ae62b71be9a3","replace","$f5ec5c943d804ecb$export$e16d8520af44a096","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$42ffd38884aecdac","$11b5dd198626e1de$export$e16d8520af44a096","$11b5dd198626e1de$export$3988ae62b71be9a3","transform","$beaefe87199bb537$export$e6e34fd1f2686227","Object","assign","target","var_sources","TypeError","arguments","key","hasOwnProperty","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","$beaefe87199bb537$export$dd1bc94b04021eeb","$1bd0a226f9a16141$export$e16d8520af44a096","delta","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","$1bd0a226f9a16141$export$bb628a54ab399bc9","angle","cosAngle","sinAngle","$1bd0a226f9a16141$export$dcdf75081b88279d","scale","$1bd0a226f9a16141$export$39a9ce3624977b84","getWidth","worldsAway","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","sourceExtentWidth","$ff7180bdd45ebb19$export$24be126cb0a7bbeb","number","opt_precision","numberString","toFixed","decimal","indexOf","join","$fb75384508533d8f$export$63f2df7bd7371262","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","toRadians","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","lon","toDegrees","$292e4002746c8223$export$2e2bcd8739ae039","LineString","opt_layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","isArray","setCoordinates","setFlatCoordinates","$292e4002746c8223$var$__extends","appendCoordinate","$fVVyM","extend","changed","clone","lineString","layout","applyProperties","closestPointXY","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getRevision","$gqtzW","maxSquaredDelta","assignClosestPoint","forEachSegment","$5m6tu","getCoordinateAtM","opt_extrapolate","$5G9oU","XYM","XYZM","extrapolate","$5PzBf","lineStringCoordinateAtM","getCoordinates","$7eSHW","inflateCoordinates","getCoordinateAt","fraction","opt_dest","interpolatePoint","getLength","$goM6N","lineStringLength","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","$bDhby","douglasPeucker","XY","getType","intersectsExtent","$eQvue","intersectsLineString","setLayout","$9bJty","deflateCoordinates","$h7zsK","$42282ac5c8474df1$export$2e2bcd8739ae039","XYZ","$c76e993e57efc8c4$export$6af0c1b4a8549a43","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$1MAUi","transform2D","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry","$c76e993e57efc8c4$var$__extends","computeExtent","createOrUpdateFromFlatCoordinates","abstract","getFirstCoordinate","getLastCoordinate","getLayout","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","nesting","$c76e993e57efc8c4$var$getLayoutForStride","rotate","anchor","sx","opt_sy","opt_anchor","sy","getCenter","translate","deltaX","deltaY","$6WoYU","$50db89a00eb954f6$var$tmpTransform","$jpXrt","create","$50db89a00eb954f6$export$2e2bcd8739ae039","Geometry","createEmpty","extentRevision_","simplifyTransformedInternal","$6wUzV","memoizeOne","revision","opt_transform","$50db89a00eb954f6$var$__extends","simplifyTransformed","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","isNaN","createOrUpdateEmpty","returnOrUpdate","simplify","tolerance","sourceProj","$dpRHA","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getHeight","compose","getTransform","$fFFY7","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","ObjectEvent","type","oldValue","$b68b3d6e32e3074a$var$__extends","$f18Q2","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject","opt_values","on","once","un","getUid","values_","setProperties","getKeys","keys","getProperties","$gn0g3","hasProperties","notify","eventType","concat","hasListener","dispatchEvent","$jXCUw","PROPERTYCHANGE","addChangeListener","listener","addEventListener","removeChangeListener","removeEventListener","set","opt_silent","unset","isEmpty","$2FcER","$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$e881b5dca21eb5d4$export$2e2bcd8739ae039","$1f093ab5083c8a1f$var$Observable","Observable","onInternal","onceInternal","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","$3xzSb","CHANGE","len","$ilM9F","listen","listenOnce","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","$KD0eF","unlistenByKey","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$08c28d22c0cb5a39$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","listeners","listenersForType","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","VOID","disposeInternal","clear","getListeners","opt_type","index","splice","$4kyFN","$3273ed08087da3da$export$2e2bcd8739ae039","Disposable","disposed","dispose","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$013a1733c226ec50$export$ff83df6f9971435f","fn","lastResult","lastArgs","lastThis","called","nextArgs","$b998d41b678ed5d1$export$2e0ae67339d5f1ac","haystack","needle","opt_comparator","mid","cmp","comparator","$b998d41b678ed5d1$export$4e734a3b32fb971b","low","high","found","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","direction","$b998d41b678ed5d1$export$292cfa960964f0e0","begin","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$b998d41b678ed5d1$export$efa610630f9e181","opt_func","opt_strict","compare","every","currentVal","res","$294047c5e65f31a3$export$2e2bcd8739ae039","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$e22e7611e69f42a9$var$transformStringDiv","$8UoiJ","$e22e7611e69f42a9$export$185802fd694ee1f5","$e22e7611e69f42a9$export$adaa4cf7ef1b65be","c","d","e","f","$e22e7611e69f42a9$export$42b4187a82d80ed0","transform1","transform2","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","$e22e7611e69f42a9$export$3e4e33ea14aeb531","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","dx2","dy2","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","det","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","WORKER_OFFSCREEN_CANVAS","node","document","createElement","style","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","$67c66761d21428d0$export$39dfd62a25e0fe93","match","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","defineProperty","window","error","$14c6e714516e527b$export$b92b2dedcfff79de","dest","$14c6e714516e527b$export$bb628a54ab399bc9","anchorX","anchorY","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","lerp","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","squaredDistance","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$60815ead40ec79ab","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","squaredSegmentDistance","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","simplifiedEnds","$3e64078bffae1cbd$export$4b80e395e36b5a56","ret","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$5454470599558ddd$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$43ed5485a1d0c509$export$687ff82efd78795b","o","length_1","cumulativeLengths","binarySearch","$43ed5485a1d0c509$export$8f44c3c220ef6f09","lo","hi","m0","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","extendFlatCoordinates","containsExtent","point1","point2","intersectsSegment","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$33weL","linearRingContainsXY","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","linearRingContainsExtent","$239aa88e7a573859$export$cedabedc7ac0e138","forEachCorner","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$bf04349d827c1d16$export$153f8c6b4d8caebc","$6eced4c969949f6b$export$2e2bcd8739ae039","Point","$6eced4c969949f6b$var$__extends","createOrUpdateFromCoordinate","deflateCoordinate","$9fd014ab6df63665$export$bb06ddfd5d66e02e","styles_1","getZIndex","$9fd014ab6df63665$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","$9fd014ab6df63665$var$__extends","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map","controls","$ftC60","defaults","interactions","$lMSWM","onFocusOnly","$41aa29ae0c4b607a$var$__extends","createRenderer","$lvfQG","$hAMpv","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer","map","fontChangeListenerKey_","$ig1j9","checkedFonts","redrawText","element_","position","zIndex","className","$hGHcK","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","dispatchRenderEvent","frameState","getMap","event_1","$fNIok","parentNode","removeChild","renderFrame","calculateMatrices2D","$l6YBe","PRECOMPOSE","layerStatesArray","sort","viewState","declutterLayers","previousElement","layerState","layerIndex","layer","sourceState","getSourceState","$79s7T","inView","unrender","element","render","renderDeclutter","$DfnQm","replaceChildren","POSTCOMPOSE","display","scheduleExpireIconCache","forEachLayerAtPixel","pixel","hitTolerance","layerFilter","layerStates","hasRenderer","getRenderer","getDataAtPixel","result","$fp9DL","$b370ab32454a96fd$var$expireIconCache","$kTbud","shared","expire","$b370ab32454a96fd$export$2e2bcd8739ae039","MapRenderer","map_","$b370ab32454a96fd$var$__extends","coordinateToPixelTransform","pixelToCoordinateTransform","makeInverse","forEachFeatureAtCoordinate","checkWrapped","thisArg","thisArg2","managed","feature","translatedCoordinate","wrapX","offsets","numLayers","matches","tmpCoord","layerRenderer","getSource","getWrapX","callback_1","order","distanceSq","some","hasFeatureAtCoordinate","TRUE","canExpireCache","postRenderFunctions","$4iSHH","$f351daabfe6e2d22$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","iconImage","src","crossOrigin","color","$f351daabfe6e2d22$var$getKey","setSize","maxCacheSize","asString","$f351daabfe6e2d22$export$747ccdf771a87ab8","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","cache","cacheSize","$322346e1ff7894ca$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$322346e1ff7894ca$export$a3295358bff77e","Number","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","clamp","$534f30fce11effcd$export$acb1e9cb9ce4ca56","visible","minResolution","maxResolution","zoom","minZoom","maxZoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","setMap","$lbO8S","SOURCE","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getRenderSource","getState","handleSourceChange_","getFeatures","Promise","resolve","getData","prepareFrame","setMapInternal","MAP","getMapInternal","arrayLayerState","$7xdj9","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","$57c5f0299cb9b82f$var$__extends","getBackground","getClassName","opt_managed","state","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","EXTENT","setBackground","opt_background","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$f6d1853b3fcae320$export$2e2bcd8739ae039","$f5e92a4d985a2824$export$2e2bcd8739ae039","PRERENDER","POSTRENDER","RENDERCOMPLETE","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$ce07df6d5d4656f1$export$981241db82723ce2","$ce07df6d5d4656f1$export$1afde3d6e16a7b29","$ce07df6d5d4656f1$export$4d4f8be70b656192","$ce07df6d5d4656f1$export$e16017ac68d14492","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$d4aabc5c971073f1$export$3847dfea4f8d4dfa","$d4aabc5c971073f1$export$c495d52ee3fd74b2","$d4aabc5c971073f1$export$17bd0c38d6ae694e","$d4aabc5c971073f1$export$e21b4112fdc612fc","$d4aabc5c971073f1$export$e06efc2409049f76","$d4aabc5c971073f1$export$365eb9648cf19bd0","$d4aabc5c971073f1$export$80c1c01844597b7b","$d4aabc5c971073f1$export$1eb2eaecacf2031e","$d4aabc5c971073f1$export$94d53b95641b5766","$d4aabc5c971073f1$export$cf2279a1bff62eb","$d4aabc5c971073f1$export$40a9eeef55665a40","$d4aabc5c971073f1$export$79661f132c62010e","$d4aabc5c971073f1$export$1d36981fcadac93b","$d4aabc5c971073f1$var$measureFont","measureElement","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","$d4aabc5c971073f1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","getFontParameters","setInterval","$d4aabc5c971073f1$export$4feaf6852ff92513","metrics","$d4aabc5c971073f1$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","left","offsetHeight","createCanvasContext2D","measureText","$d4aabc5c971073f1$export$915c7ba51467308f","reduce","prev","curr","$d4aabc5c971073f1$export$7d7c13020df1e791","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","$d4aabc5c971073f1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$d4aabc5c971073f1$var$executeLabelInstructions","drawImage","restore","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$075f937d7366f1a2$export$e918ac6a1026a12a","clearRect","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","lastChild","$075f937d7366f1a2$export$caeacfe04f52533a","children","oldChildren","childNodes","oldChild","newChild","$cceb59c4bc2a46b0$var$removeLayerMapProperty","$YSU3I","getLayers","$cceb59c4bc2a46b0$var$setLayerMapProperty","layers","getArray","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","overlays","layerGroup","$GsIjZ","LAYERGROUP","TARGET","VIEW","view","$9DiKA","$cD8Qe","$cceb59c4bc2a46b0$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$6yfyT","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","SIZE","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","$1TIYs","ADD","REMOVE","addOverlayInternal_","toString","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","opt_options","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","clientY","top","getTarget","getTargetElement","toUserCoordinate","getView","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","getOwnerDocument","targetElement","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","mapBrowserEvent","$dSQBl","handleMapBrowserEvent","originalEvent","$ijSzV","POINTERDOWN","doc","rootNode","getRootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","maxTotalLoading","maxNewLoads","hints","viewHints","$aKuSF","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","animate","$4Zdcs","$jDfdj","LOADEND","LOADSTART","getAnimating","resolveConstraints","removeNode","$8hMRr","$1O6bd","PASSIVE_EVENT_LISTENERS","defaultView","updateSize","clearTimeout","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","remove","removeInteraction","removeLayer","removeOverlay","previousFrameState","$hxhPO","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","MOVESTART","MOVEEND","getCount","setTimeout","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","setViewportSize","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection","unique_","unique","array_","assertUnique_","updateLength_","item","insertAt","elem","removeAt","setAt","opt_except","$161dd067fe2d672c$export$2e2bcd8739ae039","$0b703156bb914e6f$export$2f5ff21d758d25a7","$0b703156bb914e6f$var$__extends","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","getIntersection","$a1b91f073c6a6c43$export$2e2bcd8739ae039","MapBrowserEvent","opt_dragging","opt_activePointers","pixel_","coordinate_","dragging","activePointers","$a1b91f073c6a6c43$var$__extends","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent","$3a171922c3a0c5ed$var$__extends","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","POINTERMOVE","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent","SINGLECLICK","updateActivePointers_","pointerId","POINTERUP","POINTERCANCEL","getValues","handlePointerUp_","isMouseActionButton_","button","handlePointerMove_","isMoving_","POINTERDRAG","cancelable","$150f412a4a7fa263$export$2e2bcd8739ae039","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","$d564567e31203d44$export$2e2bcd8739ae039","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","$07fa325567004bb7$export$2e2bcd8739ae039","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","enqueue","added","$fOhwi","LOADED","EMPTY","tileKey","newLoads","dequeue","IDLE","load","$9JKwD","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","$716c6804ea170b71$export$b4af72c40fd57063","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","$b8291d9739c3c64e$export$2e2bcd8739ae039","LOADING","$70364d0195659942$var$View","View","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","$70364d0195659942$var$__extends","$i93na","resolutionConstraintInfo","$70364d0195659942$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$70364d0195659942$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$70364d0195659942$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","args","animateInternal","animationCount","series","animation","complete","duration","easing","$h9x7v","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","modulo","targetRotation","$70364d0195659942$export$ee75376562060184","setHint","updateAnimations_","$70364d0195659942$var$animationCallback","getInteracting","cancelAnimations","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","currentResolution","opt_rotation","opt_size","CENTER","getConstraints","getConstrainResolution","opt_hints","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","RESOLUTION","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","ROTATION","getValueForResolutionFunction","logPower","reducedSize","$70364d0195659942$var$calculateCenterOn","nearest","linearFindNearest","baseLevel","fit","geometryOrExtent","$5ydre","fromExtent","userProjection","getUserProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","ratio","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","easeOut","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smooth","smoothExtentConstraint","$fi2rl","createExtent","constrainOnlyCenter","multiWorld","none","smoothResolutionConstraint","showFullExtent","projExtent","$g29x3","createSnapToResolutions","createMinMaxResolution","defaultMaxResolution","$7xn5x","DEFAULT_TILE_SIZE","defaultMinResolution","defaultMaxZoom","createSnapToPower","enableRotation","constrainRotation","$ip5LZ","createSnapToZero","createSnapToN","disable","$70364d0195659942$export$2e2bcd8739ae039","$7d362782b4ccb93d$export$2e2bcd8739ae039","$d35baefbe89be4c5$export$2e2bcd8739ae039","$57cd8651d88957a0$export$e98a216cdcc847dc","$57cd8651d88957a0$export$6b8cb5cd370bd90c","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$d65a517690fc4385","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","$bac43a1f4a628548$export$22ac0f6b219de91a","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$1c4e6da9b4b066fe","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$d65f0a322291d127$export$9ba78806de831083","theta","$d65f0a322291d127$export$17a6e6f3448b17e8","opt_tolerance","$c7ccf7e681a9b333$export$929e5a82286172a6","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$40aa8d43bbe572bf$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","linearRingsContainsXY","getOrientedFlatCoordinates","getArea","$aCXb5","linearRings","opt_right","$alOgM","orientLinearRings","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","$2RNwh","getInteriorPointOfArray","getInteriorPoint","$9vPkX","getLinearRingCount","getLinearRing","$7fV57","getLinearRings","linearRingsAreOriented","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","getRadius","startAngle","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing","$548636579b4087f2$var$__extends","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","numberSafeCompareFunction","segmentLength","$1PJpx","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$155dc783a4ec227e$export$741858880c96b18c","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$dcdf75081b88279d","$cc435a5409103773$export$a71a825ff42fb8e1","$972rY","$b4471d80e1d69273$export$ebe90cb607ad99e","$6gCea","zoomOptions","$dZLuC","rotateOptions","attribution","attributionOptions","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","removeChildren","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","$fVglf","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control","target_","$b978dafe8f7d27ff$var$__extends","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","CLASS_HIDDEN","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$fdc8b40501c0cf45$export$ebe90cb607ad99e","kinetic","$dfvfw","altShiftDragRotate","$2bF2e","doubleClickZoom","$fxxCd","zoomDelta","zoomDuration","dragPan","$gzMtY","pinchRotate","$cYAky","pinchZoom","$asgrH","keyboard","$21kEk","$2W903","mouseWheelZoom","$eEiUy","shiftDragZoom","$f5G4s","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$4U60I","zoomByDelta","$39210df8527e63e5$export$4c486572e961a974","linear","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction","setActive","$39210df8527e63e5$var$__extends","$3Pv6i","ACTIVE","active","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","$c11585da26a016db$export$2e2bcd8739ae039","DragPan","stopDown","FALSE","kinetic_","lastCentroid","lastPointersCount_","panning_","condition","$kqI9g","all","noModifierKeys","primaryAction","condition_","focusWithTabindex","noKinetic_","$c11585da26a016db$var$__extends","handleDragEvent","targetPointers","centroid","$hMuFm","update","handleUpEvent","getAngle","centerpx","handleDownEvent","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction","handleMoveEvent","handlingDownUpSequence","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","WEBKIT","MAC","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","isContentEditable","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate","altShiftKeysOnly","lastAngle_","$197c7092261b2aa0$var$__extends","mouseOnly","mouseActionButton","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom","shiftKeyOnly","minArea","out_","out","$afc7f51010a5b660$var$__extends","onBoxEnd","$jgkip","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","DragBoxEvent","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox","box_","$gRRde","minArea_","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","completeBox","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox","geometry_","endPixel_","$c47adf75308683a6$var$__extends","render_","px","createOrUpdateGeometry","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","targetNotEditable","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","$bc6S3","DOWN","UP","mapUnitsDelta","pan","$82662515908d12f9$export$2e2bcd8739ae039","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","always","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$06150d8570b7481b$export$2e2bcd8739ae039","CircleStyle","points","fill","stroke","rotateWithView","displacement","declutterMode","$06150d8570b7481b$var$__extends","getScale","getFill","getStroke","getRotateWithView","getDisplacement","getDeclutterMode","setRadius","radius_","$5ndKB","$3e99c452138b2224$export$2e2bcd8739ae039","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","$3e99c452138b2224$var$__extends","getPoints","getRadius2","getAnchor","setFill","getHitDetectionImage","createHitDetectionCanvas_","getImage","image","renderOptions","draw_","getPixelRatio","getImageSize","getImageState","$aSvtr","getOrigin","setStroke","listenImageChange","unlistenImageChange","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","defaultLineJoin","lineDash","lineDashOffset","getColor","defaultStrokeStyle","$jh19n","asColorLike","defaultLineWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","defaultMiterLimit","maxRadius","createPath_","defaultFillStyle","fillStyle","setLineDash","asArray","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$jKhJx","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$e60011aea38e6239$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","scale_","scaleArray_","toSize","displacement_","declutterMode_","getScaleArray","setDisplacement","setRotateWithView","setScale","$e0807f400ec9a0a9$export$dc5b1400ac3a10a8","$d61d1dcaf3c44610$export$2e2bcd8739ae039","Fill","color_","setColor","$8463d325b53eeb0c$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","$7fejA","TOP_LEFT","anchorXUnits_","anchorXUnits","$8os65","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize_","imgSize","imageState","iconImage_","$1epqj","offset_","offsetOrigin_","offsetOrigin","$8463d325b53eeb0c$var$__extends","getSrc","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","setAnchor","iconImageSize","$61c65c2463af340d$export$2e2bcd8739ae039","$546509bca2d85ec0$export$2e2bcd8739ae039","$0e5ad1d3b638689e$var$taintedTestContext","$0e5ad1d3b638689e$var$IconImage","IconImage","hitDetectionImage_","image_","unlisten_","imageState_","src_","tainted_","$0e5ad1d3b638689e$var$__extends","isTainted_","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","$fySoz","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$0e5ad1d3b638689e$export$3988ae62b71be9a3","$b54439be79d4619a$export$bc96ecc7c2a50764","loadHandler","errorHandler","listening","decoding","loaded","IMAGE_DECODE","catch","ImageWrapper","imageLoadFunction","imageLoadFunction_","$b54439be79d4619a$var$__extends","setImage","$88Xdk","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase","$5edd00bd92be9cf8$var$__extends","$f9d0329c5c745263$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$wnhPR","$8c7f6dda98e8cb9c$var$Style","Style","geometryFunction_","$8c7f6dda98e8cb9c$var$defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","$8c7f6dda98e8cb9c$export$c314ea3f6b164147","styleFunction","$8c7f6dda98e8cb9c$var$defaultStyles","$8c7f6dda98e8cb9c$export$6865c5ac2f5ce8b6","$inIMS","$lrKvI","$8c7f6dda98e8cb9c$export$2e2bcd8739ae039","$944be50faeff5321$export$2e2bcd8739ae039","Text","font_","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","$3noz3","POINT","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$27569314e3df91c2$export$2e2bcd8739ae039","LINE","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","peek","$84888e4daf3fdf44$export$d402fd02dc2b661c","VectorSourceEvent","opt_feature","opt_features","$84888e4daf3fdf44$var$__extends","$84888e4daf3fdf44$export$2e2bcd8739ae039","VectorSource","interpolate","loader_","format_","format","overlaps_","overlaps","url_","url","loader","$7BfFg","xhr","strategy_","strategy","$kcBeU","useSpatialIndex","featuresRtree_","$4wW9x","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","insert","$hzYQp","ADDFEATURE","handleFeatureChange_","valid","addFeatures","extents","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","getFeaturesInExtent","getInExtent","wrapAndSliceX","anExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","uid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","refresh","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","$knPlK","$20GDs","$34c742891733e7a4$export$2e2bcd8739ae039","RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","items","bbox","search","forEach_","toJSON","createOrUpdate","rbush","module","exports","u","p","_maxEntries","_minEntries","leaf","_all","toBBox","collides","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$ed6dc99f268f3882$var$__extends","getInterpolate","setAttributions","setState","$ccc4e6f11f11978f$export$2e2bcd8739ae039","$eb51d0a16123ee90$export$84bf76cd7afc7469","$588823c001569193$var$withCredentials","$588823c001569193$export$14cc81df70b6707e","success","failure","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$588823c001569193$export$441d7b57adab24d0","dataProjection","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer","$32e67a4d3559554a$var$__extends","$fY4eB","$cGqMj","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","$jDKXi","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","$e4c61536de922b84$export$2e2bcd8739ae039","$02fffef185f4339b$export$2e2bcd8739ae039","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$7iKy2","$02fffef185f4339b$var$__extends","isDrawableTile","getLayer","tileState","getTile","getInterimTile","layerExtent","containsCoordinate","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","tileCoord","getTileCoordForCoordAndZ","$hCs6p","$4WmJ3","tileOrigin","tileSize","getTileSize","col","row","gutter","getGutterForProjection","loadedTileCallback","tiles","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tileRange","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","getRotatedViewport","tileCoordIntersectsViewport","inTransition","endTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","useContainer","tempTransform","containerReused","clipUnrotated","$ltrRF","IMAGE_SMOOTHING_DISABLED","preRender","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTopLeft","originTileExtent","getTileCoordExtent","origin_1","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","contextSaved","i_1","clip","beginPath","moveTo","drawTileImage","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","IMAGE_SMOOTHING_ENABLED","getTileImage","alphaChanged","postRenderFunction","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$5FKVH","$42152f52b26b6ca7$export$a166f0857c555517","$42152f52b26b6ca7$var$pixelContext","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer","pixelContext_","$42152f52b26b6ca7$var$__extends","err","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","getTopRight","bottomRight","getBottomRight","bottomLeft","getBottomLeft","inverted","dispatchRenderEvent_","getRenderTransform","renderPixel","renderCoordinate","pixelContext","pixelCanvas","Uint8Array","$hr4Xu","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","forEachLoadedTile","renderIfReadyAndVisible","loadImage","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$cd3bc8d185522361$var$__extends","naturalWidth","naturalHeight","$1izXo","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile","interimTile","transition_","transitionStarts_","$0f235d2d04095c6e$var$__extends","release","refreshInterimChain","getTileCoord","easeIn","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetProj","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","opt_renderEdges","opt_interpolate","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","$3H62b","calculateSourceExtentResolution","errorThresholdInPixels","$cfilv","ERROR_THRESHOLD","triangulation_","$9gka6","getTriangles","sourceExtent","calculateSourceExtent","sourceRange","srcX","srcY","$398e350e33050c07$var$__extends","reproject_","sources","leftToLoad_1","sourceListenKey_1","unlistenSources_","releaseCanvas","canvasPool","$8ea51dd7be3ba5e2$export$3ecb4bcfa5aae855","$8ea51dd7be3ba5e2$export$584433cc24140052","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","boundingExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","extendCoordinate","$2b0a118af78fb031$var$brokenDiagonalRendering_","$2b0a118af78fb031$export$a166f0857c555517","$2b0a118af78fb031$var$drawTestTriangle","u1","v1","u2","v2","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","$2b0a118af78fb031$export$16d356211d01f1cc","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","solveLinearSystem","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","steps","$fa21ebc07613627d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$fa21ebc07613627d$export$75f39f0ce198f93f","$550e524b0d1b61d4$var$TileRange","TileRange","containsTileRange","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$82a68515bd6ef378$export$2e2bcd8739ae039","VectorLayer","$82a68515bd6ef378$var$__extends","$8IUeQ","$hf3TH","$c8d6dc4c09ed9916$var$Property","$c8d6dc4c09ed9916$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$c8d6dc4c09ed9916$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","$c3RIb","createDefaultStyle","toFunction","$659e0e97392a5f5e$export$2e2bcd8739ae039","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","$659e0e97392a5f5e$var$__extends","renderWorlds","executorGroup","opt_declutterTree","vectorSource","snapToPixel","endWorld","world","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","replayGroup","clipped","transforms","$1HMKO","HIT_DETECT_RESOLUTION","createHitDetectionImageData","hitDetect","featureCallback","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","$6urmj","defaultOrder","buffer","renderedExtent","loadExtents","loadExtent","declutterBuilderGroup","$jpMYX","getTolerance","userTransform","extent_1","userExtent_1","toUserResolution","getTransformFromProjections","getSquaredTolerance","styles","dirty","renderFeature","userExtent","replayGroupInstructions","finish","$e1c3o","builderGroup","opt_declutterBuilderGroup","$3KABr","$e22658f4b743550b$var$BATCH_CONSTRUCTORS","Circle","$aKl4u","Default","$fEvr3","$dUudE","$bboJK","$e22658f4b743550b$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$2bb20f8873deb436$export$2e2bcd8739ae039","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$2bb20f8873deb436$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","coordinateRelationship","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","$hNBYx","CUSTOM","inflateMultiCoordinatesArray","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","instruction","END_GEOMETRY","reverseSubArray","setFillStrokeStyle","fillStyleColor","strokeStyleColor","strokeStyleLineCap","defaultLineCap","strokeStyleLineDash","defaultLineDash","strokeStyleLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$kbchp","$cf547866e052f25b$var$Instruction","BEGIN_PATH","CIRCLE","CLOSE_PATH","DRAW_CHARS","DRAW_IMAGE","FILL","MOVE_TO_LINE_TO","STROKE","$cf547866e052f25b$export$f21891651e408226","$cf547866e052f25b$export$7a98aa5364d62ba8","$cf547866e052f25b$export$9f746cc58a899a00","$cf547866e052f25b$export$89b10f327e413e71","$cf547866e052f25b$export$2e2bcd8739ae039","$eb0e5c3938110b4c$export$2e2bcd8739ae039","VectorContext","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$b652f9dd73b29cfe$export$2e2bcd8739ae039","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$b652f9dd73b29cfe$var$__extends","myBegin","opt_sharedData","origin","$a207f23baa5aa2c5$export$2e2bcd8739ae039","CanvasLineStringBuilder","$a207f23baa5aa2c5$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","beginPathInstruction","strokeInstruction","lastStroke","$7d2e8ba11a45ae8a$export$2e2bcd8739ae039","CanvasPolygonBuilder","$7d2e8ba11a45ae8a$var$__extends","drawFlatCoordinatess_","numEnds","closePathInstruction","setFillStrokeStyles_","circleInstruction","snap","$8243e906fae47bbe$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$8243e906fae47bbe$export$2e2bcd8739ae039","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$8243e906fae47bbe$var$__extends","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","saveTextStates_","defaultPadding","p0","p1","p2","p3","pixelRatio_1","flatOffset","flatEnd","oo","range","$apNsw","matchingChunk","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","$79529ab61b92f869$export$ed6c897eea07a254","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$8GqJ6","$a34a824d875e4ea1$var$ORDER","$a34a824d875e4ea1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$a34a824d875e4ea1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$a34a824d875e4ea1$export$96fc84ea21b8269f","imageData","idx","result_1","executor","executeHitDetection","contextScale","viewRotation","opt_builderTypes","builderTypes","$a34a824d875e4ea1$export$2e2bcd8739ae039","$6526fa4ee42dc39d$var$tmpExtent","$6526fa4ee42dc39d$var$p1","$6526fa4ee42dc39d$var$p2","$6526fa4ee42dc39d$var$p3","$6526fa4ee42dc39d$var$p4","$6526fa4ee42dc39d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6526fa4ee42dc39d$var$rtlRegEx","fromCharCode","$6526fa4ee42dc39d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6526fa4ee42dc39d$var$createTextChunks","acc","line","$6526fa4ee42dc39d$export$2e2bcd8739ae039","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","getTextDimensions","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p4","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","pixelCoordinates","setFromArray","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","measureAndCacheTextWidth","startM","parts","$l8Phk","drawTextOnPath","drawChars","cc","chars","part","ii_1","$f6421f31729929e6$export$153a9a17ab3e949f","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","substring","$ayYEF","$13dfa0283bf5c35f$export$ab51038298418f25","$13dfa0283bf5c35f$export$bd05e394339d469","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$bmHVE","byGeometryType","zIndexKeys","geomAndStyle","kk","$13dfa0283bf5c35f$export$6d4d555ddbfffa32","resultFeatures","$7b0c2128a27f5020$export$2e2bcd8739ae039","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$7b0c2128a27f5020$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$4b9ac454600c05d2$var$GEOMETRY_RENDERERS","imageBuilderGroup","imageReplay_1","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","MultiPoint","imageReplay_2","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","$4b9ac454600c05d2$export$531ddd8416d52dfc","feature1","feature2","$4b9ac454600c05d2$export$75084a70d324c1e6","$4b9ac454600c05d2$export$bdacc5b475012edb","$4b9ac454600c05d2$export$36f470a33a42f413","$4b9ac454600c05d2$var$renderGeometry","$4b9ac454600c05d2$var$renderFeatureInternal","getGeometries","$2f0127a7d7474f3e$var$ATTRIBUTIONS","$9jDAx","ATTRIBUTION","$2f0127a7d7474f3e$var$LayerConfig","terrain","opaque","toner","watercolor","$2f0127a7d7474f3e$var$ProviderConfig","$2f0127a7d7474f3e$export$2e2bcd8739ae039","Stamen","imageSmoothing","provider","providerConfig","layerConfig","reprojectionErrorThreshold","$2f0127a7d7474f3e$var$__extends","$cTF5I","$963a7ef65488964c$export$2e2bcd8739ae039","$7vCDj","createXYZ","extentFromProjection","tileUrlFunction","urls","$963a7ef65488964c$var$__extends","getGutter","$71uyY","$51d055913ca55b5e$var$defaultTileLoadFunction","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","ENABLE_RASTER_REPROJECTION","tileCache","usedTileCache","getTileCacheForProjection","equivalent","thisProj","projKey","getForProjection","$dPXiB","createTile_","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","tileOptions","$gpyQY","newTile","getTileInternal","getKeyZXY","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$jLCO3","$a12e09565a34db59$var$TileCache","TileCache","$a12e09565a34db59$var$__extends","pruneExceptNewestZ","fromKey","$btbc6","$a12e09565a34db59$export$2e2bcd8739ae039","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$bf2a04496fadabc6$export$a807b7874eb66454","$bf2a04496fadabc6$export$d6af199866bfb566","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","getFullTileRange","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","setUrls","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$aPYls","TILELOADSTART","TILELOADERROR","TILELOADEND","$d5XIU","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","setKey","$cwqvp","expandUrl","createFromTemplates","$7e3d7a0f8b272861$export$2e2bcd8739ae039","$988a11d09320f6a8$var$TileSource","TileSource","opaque_","tilePixelRatio_","tmpSize","$988a11d09320f6a8$var$__extends","getTileGrid","withinExtentAndZ","$988a11d09320f6a8$export$c571855c51e6c4b6","$988a11d09320f6a8$export$2e2bcd8739ae039","$g5oyO","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$var$resolutionsFromExtent","getCorner","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$export$a251b12f5601c16f","$5779655d81caea04$export$39a9ce3624977b84","$5779655d81caea04$export$38500bbeccc864ff","xyzOptions","gridOptions","opt_maxResolution","DEFAULT_MAX_ZOOM","half","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$export$2e2bcd8739ae039","TileGrid","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","intersectsLinearRing","fullTileRanges","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","hash","$91dd08a0f5859882$export$4229b1d9af69b3be","$91dd08a0f5859882$export$2a1fa079bfd73dde","startCharCode","stopCharCode","stop_1","$6c8498cc816f2362$export$4de8a5e77eb994ad","OSM","$6c8498cc816f2362$var$__extends"],"version":3,"file":"index.55a59792.js.map"}