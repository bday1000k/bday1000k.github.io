{"mappings":"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","sources":["node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/Feature.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Map.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/structs/LRUCache.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/source/Stamen.js","tracks.json","main.js"],"sourcesContent":["/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {Array<PointerEvent>} [opt_activePointers] Active pointers.\n   */\n  constructor(\n    type,\n    map,\n    originalEvent,\n    opt_dragging,\n    opt_frameState,\n    opt_activePointers\n  ) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = opt_activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {getValues} from './obj.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = getValues(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, opt_projection) {\n    if (this.featuresRtree_) {\n      const multiWorld =\n        opt_projection && opt_projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, opt_projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!opt_backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      opt_backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = opt_backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (opt_declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                opt_declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (opt_declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (opt_declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  opt_declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                opt_declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","{\n\"type\": \"FeatureCollection\",\n\"name\": \"tracks\",\n\"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n\"features\": [\n{ \"type\": \"Feature\", \"properties\": { \"name\": \"Hove BN3 2LS to Isle of Skye IV47 8SU\", \"number\": 1 }, \"geometry\": { \"type\": \"MultiLineString\", \"coordinates\": [ [ [ -0.1682493, 50.824375 ], [ -0.16836, 50.82438 ], [ -0.16849, 50.8244 ], [ -0.16865, 50.82442 ], [ -0.1687, 50.82443 ], [ -0.16875, 50.82446 ], [ -0.1687497, 50.8244613 ], [ -0.16877, 50.82449 ], [ -0.16877, 50.82451 ], [ -0.16877, 50.82453 ], [ -0.16876, 50.82455 ], [ -0.16875, 50.82461 ], [ -0.16874, 50.82464 ], [ -0.16869, 50.82481 ], [ -0.16862, 50.82506 ], [ -0.16861, 50.82509 ], [ -0.16851, 50.82556 ], [ -0.16822, 50.82665 ], [ -0.16822, 50.82666 ], [ -0.16821, 50.8267 ], [ -0.16822, 50.82673 ], [ -0.16823, 50.82676 ], [ -0.16825, 50.82676 ], [ -0.16829, 50.82678 ], [ -0.16863, 50.82682 ], [ -0.1686315, 50.8268154 ], [ -0.1686, 50.82693 ], [ -0.1685, 50.82733 ], [ -0.16848, 50.82743 ], [ -0.16835, 50.82782 ], [ -0.16828, 50.82801 ], [ -0.16825, 50.82814 ], [ -0.16819, 50.82847 ], [ -0.16814, 50.82869 ], [ -0.16804, 50.82905 ], [ -0.16801, 50.82919 ], [ -0.16792, 50.82953 ], [ -0.16791, 50.82955 ], [ -0.16791, 50.82958 ], [ -0.16785, 50.82977 ], [ -0.16783, 50.82984 ], [ -0.16783, 50.82986 ], [ -0.16776, 50.8301 ], [ -0.16775, 50.83023 ], [ -0.16774, 50.83037 ], [ -0.16774, 50.83046 ], [ -0.16776, 50.83054 ], [ -0.16771, 50.83067 ], [ -0.1676, 50.83113 ], [ -0.16742, 50.8318 ], [ -0.16731, 50.83224 ], [ -0.16727, 50.8324 ], [ -0.16725, 50.83245 ], [ -0.16708, 50.83315 ], [ -0.16701, 50.8333 ], [ -0.16697, 50.83342 ], [ -0.16693, 50.8336 ], [ -0.16675, 50.83431 ], [ -0.16673, 50.83438 ], [ -0.16672, 50.83445 ], [ -0.16662, 50.83484 ], [ -0.16658, 50.835 ], [ -0.16643, 50.83556 ], [ -0.16636, 50.83587 ], [ -0.16628, 50.83622 ], [ -0.16617, 50.83669 ], [ -0.16609, 50.83703 ], [ -0.16608, 50.8371 ], [ -0.16601, 50.8374 ], [ -0.1660111, 50.8373951 ], [ -0.16655, 50.83755 ], [ -0.16667, 50.83759 ], [ -0.16742, 50.83783 ], [ -0.16884, 50.83825 ], [ -0.17, 50.8386 ], [ -0.17027, 50.83868 ], [ -0.1704, 50.83871 ], [ -0.17081, 50.83881 ], [ -0.1714, 50.83895 ], [ -0.1713964, 50.838947 ], [ -0.17135, 50.83905 ], [ -0.17134, 50.83921 ], [ -0.17133, 50.83941 ], [ -0.17133, 50.83946 ], [ -0.17126, 50.83969 ], [ -0.17125, 50.83974 ], [ -0.17101, 50.84002 ], [ -0.17085, 50.84025 ], [ -0.17071, 50.84045 ], [ -0.17054, 50.84076 ], [ -0.17044, 50.84104 ], [ -0.17035, 50.84142 ], [ -0.17032, 50.84158 ], [ -0.17029, 50.84184 ], [ -0.17028, 50.84194 ], [ -0.17028, 50.84218 ], [ -0.17029, 50.84234 ], [ -0.1703, 50.8425 ], [ -0.17032, 50.8427 ], [ -0.17043, 50.8432 ], [ -0.17048, 50.84333 ], [ -0.17056, 50.84352 ], [ -0.17069, 50.84382 ], [ -0.17072, 50.84386 ], [ -0.17076, 50.84394 ], [ -0.17082, 50.84401 ], [ -0.17093, 50.84416 ], [ -0.17096, 50.84418 ], [ -0.17106, 50.84428 ], [ -0.17112, 50.84433 ], [ -0.17114, 50.84435 ], [ -0.17128, 50.84446 ], [ -0.1713, 50.84447 ], [ -0.17139, 50.84453 ], [ -0.17151, 50.84461 ], [ -0.17161, 50.84468 ], [ -0.17169, 50.84473 ], [ -0.1717, 50.84473 ], [ -0.17179, 50.84478 ], [ -0.17191, 50.84485 ], [ -0.17214, 50.84496 ], [ -0.17227, 50.84502 ], [ -0.17237, 50.84507 ], [ -0.17239, 50.84508 ], [ -0.17252, 50.84514 ], [ -0.17268, 50.84522 ], [ -0.17276, 50.84526 ], [ -0.17282, 50.84529 ], [ -0.17291, 50.84534 ], [ -0.17303, 50.84541 ], [ -0.17304, 50.84542 ], [ -0.17338, 50.84563 ], [ -0.17343, 50.84567 ], [ -0.17349, 50.84571 ], [ -0.17371, 50.84585 ], [ -0.17387, 50.84597 ], [ -0.17408, 50.84611 ], [ -0.17422, 50.84619 ], [ -0.17428, 50.84622 ], [ -0.17442, 50.8463 ], [ -0.17458, 50.84639 ], [ -0.17466, 50.84642 ], [ -0.17475, 50.84645 ], [ -0.1747471, 50.8464482 ], [ -0.17474, 50.84645 ], [ -0.17474, 50.84646 ], [ -0.17473, 50.84646 ], [ -0.17473, 50.84647 ], [ -0.17472, 50.84647 ], [ -0.17472, 50.84648 ], [ -0.17472, 50.84649 ], [ -0.17473, 50.84649 ], [ -0.17473, 50.8465 ], [ -0.17473, 50.84651 ], [ -0.17474, 50.84651 ], [ -0.17475, 50.84651 ], [ -0.17471, 50.84654 ], [ -0.1747092, 50.8465409 ], [ -0.17475, 50.84658 ], [ -0.17478, 50.84659 ], [ -0.17478, 50.84662 ], [ -0.17478, 50.84666 ], [ -0.17478, 50.84671 ], [ -0.17478, 50.84674 ], [ -0.1747, 50.84688 ], [ -0.1745, 50.84721 ], [ -0.17442, 50.84738 ], [ -0.17435, 50.84753 ], [ -0.17428, 50.84773 ], [ -0.17423, 50.84788 ], [ -0.17405, 50.84825 ], [ -0.17401, 50.84834 ], [ -0.17394, 50.84879 ], [ -0.17393, 50.8488 ], [ -0.17396, 50.84896 ], [ -0.17399, 50.84913 ], [ -0.17407, 50.84931 ], [ -0.17415, 50.84948 ], [ -0.1747, 50.85069 ], [ -0.17476, 50.85082 ], [ -0.17477, 50.85104 ], [ -0.17478, 50.85122 ], [ -0.17479, 50.85146 ], [ -0.17449, 50.85246 ], [ -0.17444, 50.85264 ], [ -0.1744, 50.85278 ], [ -0.17428, 50.85328 ], [ -0.17428, 50.85335 ], [ -0.17431, 50.85371 ], [ -0.17431, 50.85373 ], [ -0.17429, 50.85407 ], [ -0.17429, 50.85416 ], [ -0.17412, 50.85479 ], [ -0.17392, 50.85512 ], [ -0.17383, 50.85526 ], [ -0.17382, 50.85529 ], [ -0.17369, 50.85564 ], [ -0.17368, 50.85564 ], [ -0.17364, 50.85605 ], [ -0.17358, 50.85635 ], [ -0.17354, 50.85653 ], [ -0.17354, 50.85656 ], [ -0.17348, 50.85671 ], [ -0.17341, 50.85688 ], [ -0.17335, 50.85705 ], [ -0.1733478, 50.8570494 ], [ -0.17341, 50.85708 ], [ -0.17363, 50.85715 ], [ -0.17376, 50.8572 ], [ -0.17388, 50.85728 ], [ -0.17394, 50.85732 ], [ -0.17397, 50.85733 ], [ -0.17406, 50.85737 ], [ -0.17412, 50.8574 ], [ -0.17418, 50.85744 ], [ -0.17425, 50.85749 ], [ -0.17434, 50.85757 ], [ -0.1743435, 50.8575687 ], [ -0.17462, 50.85794 ], [ -0.1746153, 50.8579356 ], [ -0.17459, 50.85798 ], [ -0.17459, 50.85804 ], [ -0.1746, 50.85808 ], [ -0.17461, 50.8581 ], [ -0.17462, 50.85813 ], [ -0.17464, 50.85815 ], [ -0.17467, 50.85819 ], [ -0.1747, 50.85822 ], [ -0.17473, 50.85825 ], [ -0.17479, 50.85828 ], [ -0.17484, 50.8583 ], [ -0.17492, 50.85833 ], [ -0.17501, 50.85834 ], [ -0.17506, 50.85834 ], [ -0.17512, 50.85834 ], [ -0.17517, 50.85833 ], [ -0.17525, 50.85832 ], [ -0.17531, 50.85829 ], [ -0.17567, 50.85839 ], [ -0.17583, 50.85851 ], [ -0.17612, 50.85872 ], [ -0.17641, 50.85893 ], [ -0.1766, 50.85907 ], [ -0.17663, 50.85906 ], [ -0.17664, 50.85905 ], [ -0.17665, 50.85905 ], [ -0.17666, 50.85905 ], [ -0.17667, 50.85905 ], [ -0.17668, 50.85904 ], [ -0.17669, 50.85904 ], [ -0.1767, 50.85904 ], [ -0.17671, 50.85904 ], [ -0.17672, 50.85904 ], [ -0.17673, 50.85904 ], [ -0.17674, 50.85904 ], [ -0.17675, 50.85904 ], [ -0.17676, 50.85904 ], [ -0.17677, 50.85904 ], [ -0.17678, 50.85904 ], [ -0.17679, 50.85905 ], [ -0.1768, 50.85905 ], [ -0.17681, 50.85905 ], [ -0.17682, 50.85905 ], [ -0.17683, 50.85906 ], [ -0.17684, 50.85906 ], [ -0.17685, 50.85907 ], [ -0.17686, 50.85907 ], [ -0.17687, 50.85907 ], [ -0.17687, 50.85908 ], [ -0.17688, 50.85908 ], [ -0.17689, 50.85909 ], [ -0.17691, 50.85911 ], [ -0.17692, 50.85914 ], [ -0.17692, 50.85915 ], [ -0.17692, 50.85916 ], [ -0.17693, 50.85916 ], [ -0.17692, 50.85917 ], [ -0.17692, 50.85918 ], [ -0.17692, 50.85919 ], [ -0.17692, 50.8592 ], [ -0.1769, 50.85922 ], [ -0.17736, 50.85943 ], [ -0.17772, 50.8596 ], [ -0.17779, 50.85963 ], [ -0.17817, 50.85981 ], [ -0.17832, 50.85989 ], [ -0.17846, 50.85997 ], [ -0.17854, 50.86001 ], [ -0.17864, 50.86007 ], [ -0.17875, 50.86013 ], [ -0.17881, 50.86017 ], [ -0.17885, 50.86019 ], [ -0.17908, 50.86034 ], [ -0.17916, 50.86038 ], [ -0.17949, 50.86058 ], [ -0.17993, 50.86084 ], [ -0.18044, 50.86113 ], [ -0.18062, 50.86124 ], [ -0.18083, 50.86136 ], [ -0.18096, 50.86144 ], [ -0.18133, 50.86165 ], [ -0.18191, 50.86199 ], [ -0.18208, 50.8621 ], [ -0.18229, 50.86222 ], [ -0.18232, 50.86224 ], [ -0.1825, 50.86234 ], [ -0.18266, 50.86243 ], [ -0.18276, 50.86249 ], [ -0.18288, 50.86257 ], [ -0.18301, 50.86266 ], [ -0.18317, 50.86278 ], [ -0.1831668, 50.8627835 ], [ -0.18356, 50.86325 ], [ -0.18363, 50.86333 ], [ -0.18374, 50.8635 ], [ -0.18381, 50.86366 ], [ -0.1839, 50.86392 ], [ -0.18394, 50.86408 ], [ -0.18394, 50.8641 ], [ -0.18398, 50.86425 ], [ -0.18399, 50.86428 ], [ -0.18411, 50.86479 ], [ -0.18412, 50.86481 ], [ -0.18414, 50.86497 ], [ -0.18418, 50.86529 ], [ -0.18418, 50.86532 ], [ -0.18423, 50.86568 ], [ -0.18431, 50.86627 ], [ -0.18433, 50.8664 ], [ -0.18436, 50.86658 ], [ -0.18439, 50.86676 ], [ -0.18442, 50.86694 ], [ -0.18452, 50.86724 ], [ -0.18454, 50.86729 ], [ -0.1846, 50.86746 ], [ -0.18466, 50.86764 ], [ -0.18472, 50.86782 ], [ -0.18474, 50.86787 ], [ -0.18478, 50.86799 ], [ -0.18485, 50.86815 ], [ -0.18498, 50.86852 ], [ -0.18505, 50.86869 ], [ -0.18511, 50.86887 ], [ -0.18514, 50.86894 ], [ -0.18517, 50.86905 ], [ -0.18521, 50.86917 ], [ -0.18526, 50.8694 ], [ -0.18527, 50.86942 ], [ -0.18528, 50.86958 ], [ -0.18529, 50.86963 ], [ -0.18528, 50.86976 ], [ -0.18528, 50.86978 ], [ -0.18528, 50.86984 ], [ -0.18528, 50.86989 ], [ -0.18527, 50.86994 ], [ -0.18522, 50.87011 ], [ -0.18521, 50.87017 ], [ -0.18518, 50.87029 ], [ -0.18513, 50.87047 ], [ -0.18507, 50.87064 ], [ -0.18502, 50.87082 ], [ -0.18494, 50.8711 ], [ -0.18479, 50.87163 ], [ -0.18469, 50.87205 ], [ -0.18468, 50.87206 ], [ -0.18465, 50.87224 ], [ -0.18465, 50.87225 ], [ -0.18464, 50.87242 ], [ -0.18464, 50.87254 ], [ -0.18465, 50.8726 ], [ -0.18466, 50.87278 ], [ -0.18469, 50.87296 ], [ -0.1847, 50.873 ], [ -0.18474, 50.87314 ], [ -0.18479, 50.87328 ], [ -0.1848, 50.87331 ], [ -0.18485, 50.87341 ], [ -0.18493, 50.87356 ], [ -0.18503, 50.8737 ], [ -0.18512, 50.87381 ], [ -0.18514, 50.87383 ], [ -0.18529, 50.87398 ], [ -0.1854, 50.87407 ], [ -0.18556, 50.87419 ], [ -0.18574, 50.87431 ], [ -0.186, 50.87446 ], [ -0.1861, 50.87452 ], [ -0.18625, 50.87461 ], [ -0.18644, 50.87476 ], [ -0.1866, 50.87495 ], [ -0.18665, 50.875 ], [ -0.18684, 50.87526 ], [ -0.18701, 50.87549 ], [ -0.18714, 50.87572 ], [ -0.18725, 50.87596 ], [ -0.18727, 50.876 ], [ -0.18741, 50.87635 ], [ -0.18742, 50.87637 ], [ -0.18761, 50.87688 ], [ -0.18764, 50.87695 ], [ -0.18771, 50.87717 ], [ -0.18772, 50.87723 ], [ -0.18774, 50.87741 ], [ -0.18775, 50.87743 ], [ -0.18774, 50.87746 ], [ -0.18774, 50.87761 ], [ -0.18767, 50.87785 ], [ -0.18762, 50.87808 ], [ -0.18761, 50.87812 ], [ -0.1876, 50.8783 ], [ -0.1876, 50.87833 ], [ -0.1876, 50.87846 ], [ -0.18761, 50.87848 ], [ -0.18761, 50.87851 ], [ -0.18763, 50.87859 ], [ -0.18767, 50.87865 ], [ -0.18769, 50.87869 ], [ -0.18776, 50.87878 ], [ -0.18779, 50.87882 ], [ -0.18792, 50.87895 ], [ -0.18794, 50.87897 ], [ -0.18816, 50.87922 ], [ -0.18822, 50.87929 ], [ -0.18836, 50.87944 ], [ -0.1885, 50.8796 ], [ -0.18864, 50.87975 ], [ -0.18866, 50.87978 ], [ -0.18878, 50.87991 ], [ -0.18883, 50.87996 ], [ -0.18896, 50.88012 ], [ -0.1891, 50.8803 ], [ -0.18917, 50.88039 ], [ -0.18926, 50.88051 ], [ -0.18934, 50.88066 ], [ -0.18943, 50.88088 ], [ -0.18947, 50.88106 ], [ -0.18954, 50.8814 ], [ -0.18954, 50.88142 ], [ -0.18961, 50.88194 ], [ -0.18964, 50.88212 ], [ -0.18966, 50.8823 ], [ -0.18967, 50.88235 ], [ -0.18975, 50.88283 ], [ -0.18977, 50.88298 ], [ -0.1898, 50.88319 ], [ -0.18983, 50.88337 ], [ -0.18986, 50.88355 ], [ -0.1899, 50.88381 ], [ -0.18998, 50.88426 ], [ -0.19005, 50.88462 ], [ -0.19007, 50.8848 ], [ -0.19008, 50.88487 ], [ -0.1901, 50.88495 ], [ -0.19013, 50.88504 ], [ -0.19013, 50.88505 ], [ -0.19018, 50.88514 ], [ -0.19023, 50.88522 ], [ -0.19028, 50.88529 ], [ -0.19036, 50.88538 ], [ -0.19039, 50.8854 ], [ -0.19047, 50.88547 ], [ -0.19054, 50.88552 ], [ -0.19072, 50.88565 ], [ -0.19073, 50.88565 ], [ -0.1912, 50.88597 ], [ -0.19132, 50.88604 ], [ -0.19171, 50.8863 ], [ -0.1918, 50.88636 ], [ -0.19191, 50.88643 ], [ -0.1921, 50.88657 ], [ -0.19218, 50.88662 ], [ -0.19246, 50.88684 ], [ -0.19257, 50.88693 ], [ -0.19264, 50.88699 ], [ -0.1928, 50.88713 ], [ -0.19297, 50.88728 ], [ -0.19324, 50.88752 ], [ -0.19343, 50.88767 ], [ -0.19379, 50.88801 ], [ -0.19384, 50.88806 ], [ -0.19394, 50.88817 ], [ -0.19397, 50.8882 ], [ -0.1941, 50.88832 ], [ -0.19426, 50.88846 ], [ -0.19438, 50.88857 ], [ -0.19445, 50.88863 ], [ -0.19451, 50.88867 ], [ -0.1947, 50.88881 ], [ -0.19488, 50.88894 ], [ -0.19519, 50.88911 ], [ -0.19584, 50.88946 ], [ -0.19597, 50.88953 ], [ -0.19605, 50.88958 ], [ -0.19625, 50.88971 ], [ -0.19645, 50.88983 ], [ -0.19682, 50.89006 ], [ -0.19686, 50.89009 ], [ -0.19705, 50.89022 ], [ -0.19763, 50.89062 ], [ -0.19786, 50.89078 ], [ -0.19801, 50.89089 ], [ -0.19841, 50.89117 ], [ -0.19858, 50.89129 ], [ -0.19874, 50.89141 ], [ -0.1989, 50.89155 ], [ -0.19892, 50.89158 ], [ -0.19907, 50.89173 ], [ -0.19909, 50.89176 ], [ -0.19922, 50.89188 ], [ -0.19932, 50.89198 ], [ -0.19955, 50.89224 ], [ -0.19962, 50.89236 ], [ -0.19971, 50.89249 ], [ -0.19973, 50.89252 ], [ -0.19979, 50.89263 ], [ -0.19981, 50.8927 ], [ -0.19988, 50.89287 ], [ -0.19996, 50.89304 ], [ -0.20005, 50.89321 ], [ -0.20006, 50.89324 ], [ -0.20021, 50.89374 ], [ -0.20024, 50.89392 ], [ -0.20027, 50.89407 ], [ -0.20026, 50.89427 ], [ -0.20026, 50.89428 ], [ -0.20022, 50.89447 ], [ -0.20016, 50.89468 ], [ -0.20014, 50.89481 ], [ -0.20009, 50.89499 ], [ -0.20004, 50.89517 ], [ -0.19998, 50.89535 ], [ -0.19988, 50.8957 ], [ -0.19978, 50.89605 ], [ -0.19973, 50.89623 ], [ -0.19967, 50.89641 ], [ -0.19962, 50.89658 ], [ -0.19948, 50.89707 ], [ -0.19948, 50.89712 ], [ -0.19949, 50.89729 ], [ -0.19949, 50.89738 ], [ -0.19949, 50.89747 ], [ -0.19951, 50.89765 ], [ -0.19952, 50.89783 ], [ -0.19953, 50.89799 ], [ -0.1995274, 50.8979864 ], [ -0.19941, 50.89807 ], [ -0.19937, 50.89813 ], [ -0.19933, 50.89818 ], [ -0.19927, 50.8983 ], [ -0.19922, 50.8984 ], [ -0.1992, 50.89848 ], [ -0.19914, 50.89865 ], [ -0.19914, 50.89867 ], [ -0.19909, 50.89883 ], [ -0.19905, 50.89898 ], [ -0.19904, 50.89901 ], [ -0.19899, 50.89918 ], [ -0.19894, 50.89936 ], [ -0.19893, 50.8994 ], [ -0.19888, 50.89954 ], [ -0.19882, 50.89971 ], [ -0.1988, 50.89977 ], [ -0.19874, 50.89988 ], [ -0.19871, 50.89994 ], [ -0.1987, 50.90006 ], [ -0.19864, 50.90014 ], [ -0.19857, 50.90022 ], [ -0.19843, 50.90038 ], [ -0.19829, 50.90053 ], [ -0.19826, 50.90057 ], [ -0.19815, 50.90069 ], [ -0.198, 50.90085 ], [ -0.19791, 50.90094 ], [ -0.19771, 50.90115 ], [ -0.19769, 50.90118 ], [ -0.19755, 50.9013 ], [ -0.19743, 50.90141 ], [ -0.19739, 50.90145 ], [ -0.19726, 50.9016 ], [ -0.19725, 50.90161 ], [ -0.19724, 50.90163 ], [ -0.19721, 50.90168 ], [ -0.19719, 50.90174 ], [ -0.19717, 50.9018 ], [ -0.19715, 50.90191 ], [ -0.197153, 50.9019146 ], [ -0.19715, 50.9021 ], [ -0.19714, 50.90228 ], [ -0.19714, 50.90232 ], [ -0.19713, 50.90264 ], [ -0.19713, 50.90282 ], [ -0.19713, 50.90289 ], [ -0.19712, 50.90299 ], [ -0.19712, 50.903 ], [ -0.1971, 50.90305 ], [ -0.19704, 50.90315 ], [ -0.19702, 50.90317 ], [ -0.19693, 50.90327 ], [ -0.19687, 50.90332 ], [ -0.19674, 50.90342 ], [ -0.19669, 50.90346 ], [ -0.1965, 50.90359 ], [ -0.19627, 50.90376 ], [ -0.19614, 50.90387 ], [ -0.19602, 50.90397 ], [ -0.19598, 50.90402 ], [ -0.19587, 50.90413 ], [ -0.19584, 50.90418 ], [ -0.19571, 50.90436 ], [ -0.19562, 50.90451 ], [ -0.19551, 50.90467 ], [ -0.19542, 50.90482 ], [ -0.1954, 50.90484 ], [ -0.19491, 50.90549 ], [ -0.19486, 50.90555 ], [ -0.19478, 50.90565 ], [ -0.19466, 50.90581 ], [ -0.19429, 50.9063 ], [ -0.19405, 50.90663 ], [ -0.19392, 50.90684 ], [ -0.19387, 50.90697 ], [ -0.19379, 50.90714 ], [ -0.19372, 50.90729 ], [ -0.19369, 50.90749 ], [ -0.19364, 50.90772 ], [ -0.19365, 50.90785 ], [ -0.19366, 50.90802 ], [ -0.19367, 50.90816 ], [ -0.19367, 50.90825 ], [ -0.19366, 50.9083 ], [ -0.19362, 50.90838 ], [ -0.19358, 50.90847 ], [ -0.19352, 50.90855 ], [ -0.19349, 50.9086 ], [ -0.19347, 50.90864 ], [ -0.19345, 50.90869 ], [ -0.19342, 50.90884 ], [ -0.19341, 50.90898 ], [ -0.19339, 50.90907 ], [ -0.19338, 50.90908 ], [ -0.19337, 50.90911 ], [ -0.19333, 50.9092 ], [ -0.1933, 50.90925 ], [ -0.19324, 50.90934 ], [ -0.19318, 50.90944 ], [ -0.19309, 50.90955 ], [ -0.19307, 50.90958 ], [ -0.1930668, 50.9095781 ], [ -0.19278, 50.9096 ], [ -0.19244, 50.90963 ], [ -0.19228, 50.90966 ], [ -0.19221, 50.90971 ], [ -0.19222, 50.90979 ], [ -0.19226, 50.90987 ], [ -0.19227, 50.9099 ], [ -0.19234, 50.91007 ], [ -0.19235, 50.9101 ], [ -0.19239, 50.91025 ], [ -0.19241, 50.91034 ], [ -0.19243, 50.91043 ], [ -0.19245, 50.91053 ], [ -0.19248, 50.9106 ], [ -0.19251, 50.91069 ], [ -0.19258, 50.91082 ], [ -0.19262, 50.9109 ], [ -0.19273, 50.91103 ], [ -0.1928, 50.91118 ], [ -0.19282, 50.91128 ], [ -0.19284, 50.9114 ], [ -0.19284, 50.91146 ], [ -0.19284, 50.91163 ], [ -0.19286, 50.912 ], [ -0.19287, 50.91223 ], [ -0.19287, 50.91236 ], [ -0.19286, 50.91244 ], [ -0.19281, 50.91254 ], [ -0.19278, 50.91258 ], [ -0.19267, 50.91276 ], [ -0.19265, 50.91287 ], [ -0.19261, 50.91294 ], [ -0.19258, 50.91297 ], [ -0.19255, 50.91312 ], [ -0.19248, 50.91341 ], [ -0.19236, 50.91386 ], [ -0.19214, 50.91473 ], [ -0.19214, 50.91492 ], [ -0.19219, 50.91494 ], [ -0.1921919, 50.914945 ], [ -0.19216, 50.91496 ], [ -0.19215, 50.91498 ], [ -0.1921494, 50.9149804 ], [ -0.19211, 50.91498 ], [ -0.19206, 50.91497 ], [ -0.19191, 50.91496 ], [ -0.1919112, 50.914956 ], [ -0.19188, 50.91516 ], [ -0.19187, 50.91525 ], [ -0.19182, 50.91564 ], [ -0.1918, 50.91589 ], [ -0.19179, 50.91621 ], [ -0.19179, 50.91639 ], [ -0.19179, 50.91653 ], [ -0.1918, 50.91681 ], [ -0.1918, 50.91686 ], [ -0.19181, 50.91701 ], [ -0.19186, 50.9175 ], [ -0.19187, 50.91764 ], [ -0.19191, 50.91789 ], [ -0.19194, 50.91806 ], [ -0.19201, 50.91842 ], [ -0.19205, 50.91861 ], [ -0.19211, 50.91885 ], [ -0.19217, 50.91907 ], [ -0.1922, 50.91916 ], [ -0.19234, 50.9196 ], [ -0.19238, 50.91971 ], [ -0.1924, 50.91977 ], [ -0.19249, 50.92003 ], [ -0.19268, 50.9205 ], [ -0.19275, 50.92064 ], [ -0.19279, 50.92073 ], [ -0.19297, 50.92111 ], [ -0.1932, 50.92158 ], [ -0.19334, 50.92185 ], [ -0.19347, 50.92211 ], [ -0.19374, 50.92265 ], [ -0.19393, 50.92305 ], [ -0.19401, 50.92322 ], [ -0.19408, 50.92335 ], [ -0.19417, 50.92358 ], [ -0.19448, 50.92436 ], [ -0.19457, 50.92464 ], [ -0.19467, 50.92493 ], [ -0.19481, 50.92542 ], [ -0.19487, 50.92563 ], [ -0.19509, 50.92664 ], [ -0.1951, 50.92667 ], [ -0.19515, 50.92702 ], [ -0.19524, 50.9277 ], [ -0.19526, 50.9278 ], [ -0.19527, 50.92806 ], [ -0.19529, 50.92846 ], [ -0.1953, 50.92859 ], [ -0.19531, 50.9288 ], [ -0.19532, 50.92895 ], [ -0.19533, 50.929 ], [ -0.19534, 50.92931 ], [ -0.19536, 50.92953 ], [ -0.19537, 50.92967 ], [ -0.19538, 50.92985 ], [ -0.19538, 50.92988 ], [ -0.19541, 50.93045 ], [ -0.19545, 50.93101 ], [ -0.19549, 50.93149 ], [ -0.1955, 50.93182 ], [ -0.19552, 50.93205 ], [ -0.19553, 50.93222 ], [ -0.19555, 50.93255 ], [ -0.19555, 50.93262 ], [ -0.19557, 50.93291 ], [ -0.19558, 50.93295 ], [ -0.19559, 50.93309 ], [ -0.19559, 50.93313 ], [ -0.1956, 50.93327 ], [ -0.19561, 50.93363 ], [ -0.19562, 50.93368 ], [ -0.19562, 50.93381 ], [ -0.19564, 50.93416 ], [ -0.19564, 50.93453 ], [ -0.19565, 50.93465 ], [ -0.19565, 50.93471 ], [ -0.19565, 50.93475 ], [ -0.19565, 50.93512 ], [ -0.19563, 50.93552 ], [ -0.19562, 50.93578 ], [ -0.19561, 50.93592 ], [ -0.19561, 50.93596 ], [ -0.1956, 50.93614 ], [ -0.19559, 50.93618 ], [ -0.19558, 50.93637 ], [ -0.19551, 50.93706 ], [ -0.19549, 50.93722 ], [ -0.19546, 50.93744 ], [ -0.19546, 50.93745 ], [ -0.19541, 50.93785 ], [ -0.19532, 50.93841 ], [ -0.19531, 50.93848 ], [ -0.19522, 50.93897 ], [ -0.19518, 50.93919 ], [ -0.19515, 50.93936 ], [ -0.19515, 50.93937 ], [ -0.19507, 50.93977 ], [ -0.19505, 50.9399 ], [ -0.19499, 50.94017 ], [ -0.1949, 50.94057 ], [ -0.19481, 50.94097 ], [ -0.19473, 50.94133 ], [ -0.19472, 50.94137 ], [ -0.1947, 50.94145 ], [ -0.19469, 50.94151 ], [ -0.19458, 50.942 ], [ -0.19448, 50.94248 ], [ -0.1944, 50.9428 ], [ -0.19438, 50.94293 ], [ -0.19434, 50.94312 ], [ -0.19425, 50.94352 ], [ -0.19414, 50.944 ], [ -0.19406, 50.94431 ], [ -0.19404, 50.9444 ], [ -0.19401, 50.94454 ], [ -0.19401, 50.94456 ], [ -0.19392, 50.94495 ], [ -0.19385, 50.94527 ], [ -0.1938, 50.94547 ], [ -0.19378, 50.94559 ], [ -0.19377, 50.9456 ], [ -0.19376, 50.94564 ], [ -0.1937, 50.94592 ], [ -0.19366, 50.94614 ], [ -0.19364, 50.94623 ], [ -0.19356, 50.94654 ], [ -0.19349, 50.94686 ], [ -0.19342, 50.94717 ], [ -0.19335, 50.9475 ], [ -0.19328, 50.94782 ], [ -0.19326, 50.94792 ], [ -0.19321, 50.94813 ], [ -0.19321, 50.94814 ], [ -0.19314, 50.94853 ], [ -0.19307, 50.94901 ], [ -0.19304, 50.94935 ], [ -0.19303, 50.94941 ], [ -0.19302, 50.94957 ], [ -0.19301, 50.94975 ], [ -0.193, 50.94979 ], [ -0.19299, 50.9501 ], [ -0.19298, 50.95042 ], [ -0.19298, 50.95083 ], [ -0.193, 50.95115 ], [ -0.193, 50.95138 ], [ -0.19302, 50.95155 ], [ -0.19304, 50.9518 ], [ -0.19307, 50.95205 ], [ -0.1931, 50.95227 ], [ -0.19311, 50.95241 ], [ -0.19312, 50.95245 ], [ -0.19314, 50.95262 ], [ -0.19315, 50.95275 ], [ -0.19322, 50.95322 ], [ -0.19325, 50.95353 ], [ -0.19329, 50.95386 ], [ -0.19331, 50.95402 ], [ -0.19333, 50.95417 ], [ -0.19339, 50.95466 ], [ -0.19343, 50.95505 ], [ -0.19346, 50.95532 ], [ -0.19347, 50.95538 ], [ -0.19351, 50.95581 ], [ -0.19352, 50.95593 ], [ -0.19355, 50.95633 ], [ -0.19359, 50.95687 ], [ -0.19363, 50.95786 ], [ -0.19363, 50.95794 ], [ -0.19366, 50.95833 ], [ -0.19369, 50.95874 ], [ -0.19371, 50.95906 ], [ -0.19375, 50.95949 ], [ -0.19377, 50.9597 ], [ -0.19386, 50.96089 ], [ -0.19391, 50.96157 ], [ -0.1939062, 50.9615734 ], [ -0.19408, 50.96156 ], [ -0.19407, 50.96138 ], [ -0.19406, 50.96133 ], [ -0.19406, 50.96132 ], [ -0.19405, 50.96132 ], [ -0.19403, 50.96132 ], [ -0.19402, 50.96133 ], [ -0.19402, 50.96134 ], [ -0.19403, 50.96142 ], [ -0.19405, 50.96153 ], [ -0.19376, 50.96154 ], [ -0.19374, 50.96154 ], [ -0.19344, 50.96155 ], [ -0.19339, 50.96136 ], [ -0.19339, 50.96135 ], [ -0.19338, 50.96135 ], [ -0.19338, 50.96134 ], [ -0.19337, 50.96134 ], [ -0.19336, 50.96134 ], [ -0.19335, 50.96135 ], [ -0.19335, 50.96136 ], [ -0.19336, 50.96137 ], [ -0.19337, 50.96148 ], [ -0.19338, 50.96155 ], [ -0.19338, 50.96158 ], [ -0.19352, 50.96158 ], [ -0.1935185, 50.9615834 ], [ -0.19352, 50.96196 ], [ -0.19353, 50.96214 ], [ -0.19353, 50.96248 ], [ -0.19354, 50.96262 ], [ -0.19354, 50.96302 ], [ -0.19354, 50.9632 ], [ -0.19354, 50.96322 ], [ -0.19355, 50.96356 ], [ -0.19355, 50.96394 ], [ -0.19356, 50.96414 ], [ -0.19356, 50.96425 ], [ -0.19356, 50.96432 ], [ -0.19358, 50.96504 ], [ -0.1936, 50.96613 ], [ -0.19361, 50.96666 ], [ -0.19361, 50.96669 ], [ -0.19363, 50.96701 ], [ -0.19365, 50.96733 ], [ -0.19369, 50.96774 ], [ -0.19371, 50.96792 ], [ -0.19374, 50.96811 ], [ -0.19377, 50.96836 ], [ -0.19382, 50.96868 ], [ -0.19386, 50.96891 ], [ -0.19388, 50.96908 ], [ -0.1939, 50.96917 ], [ -0.19394, 50.96935 ], [ -0.19395, 50.96939 ], [ -0.19398, 50.96953 ], [ -0.194, 50.96962 ], [ -0.19406, 50.96986 ], [ -0.1941, 50.97002 ], [ -0.19414, 50.97018 ], [ -0.19418, 50.97034 ], [ -0.19427, 50.97065 ], [ -0.19434, 50.97089 ], [ -0.19439, 50.97104 ], [ -0.19449, 50.97139 ], [ -0.19458, 50.97164 ], [ -0.19463, 50.9718 ], [ -0.19477, 50.97215 ], [ -0.19478, 50.97218 ], [ -0.19487, 50.97241 ], [ -0.19495, 50.97259 ], [ -0.195, 50.9727 ], [ -0.19511, 50.97293 ], [ -0.19524, 50.97316 ], [ -0.19537, 50.97338 ], [ -0.19539, 50.97341 ], [ -0.19539, 50.97342 ], [ -0.1955, 50.97358 ], [ -0.19556, 50.97368 ], [ -0.19575, 50.97396 ], [ -0.19592, 50.9742 ], [ -0.1961, 50.97444 ], [ -0.19629, 50.97471 ], [ -0.19639, 50.97484 ], [ -0.19656, 50.97506 ], [ -0.19663, 50.97516 ], [ -0.1968, 50.97539 ], [ -0.19691, 50.97555 ], [ -0.19698, 50.97567 ], [ -0.19706, 50.9758 ], [ -0.19716, 50.97597 ], [ -0.1973, 50.97621 ], [ -0.19743, 50.97648 ], [ -0.19747, 50.97655 ], [ -0.19752, 50.97666 ], [ -0.19759, 50.97681 ], [ -0.19759, 50.97683 ], [ -0.19767, 50.977 ], [ -0.19773, 50.97713 ], [ -0.19782, 50.97736 ], [ -0.19788, 50.97753 ], [ -0.19788, 50.97754 ], [ -0.19794, 50.97774 ], [ -0.198, 50.97793 ], [ -0.19812, 50.97834 ], [ -0.19815, 50.97846 ], [ -0.1982, 50.97866 ], [ -0.19825, 50.97895 ], [ -0.19828, 50.97917 ], [ -0.19832, 50.97948 ], [ -0.19835, 50.97979 ], [ -0.19837, 50.98012 ], [ -0.19839, 50.98044 ], [ -0.19838, 50.9807 ], [ -0.19837, 50.98094 ], [ -0.19836, 50.9811 ], [ -0.19836, 50.98117 ], [ -0.19834, 50.98128 ], [ -0.19831, 50.98147 ], [ -0.19829, 50.98163 ], [ -0.19825, 50.9818 ], [ -0.19821, 50.98202 ], [ -0.19817, 50.98218 ], [ -0.19813, 50.98235 ], [ -0.19802, 50.9827 ], [ -0.1979, 50.98306 ], [ -0.19788, 50.98311 ], [ -0.19774, 50.98347 ], [ -0.19765, 50.98371 ], [ -0.19762, 50.98378 ], [ -0.19747, 50.98424 ], [ -0.1974, 50.98449 ], [ -0.19734, 50.9848 ], [ -0.19727, 50.98519 ], [ -0.19724, 50.98548 ], [ -0.19723, 50.98567 ], [ -0.19723, 50.98571 ], [ -0.19723, 50.98585 ], [ -0.19723, 50.98594 ], [ -0.19724, 50.98612 ], [ -0.19726, 50.98636 ], [ -0.19729, 50.98655 ], [ -0.19733, 50.98678 ], [ -0.19736, 50.98695 ], [ -0.19741, 50.98717 ], [ -0.19747, 50.98738 ], [ -0.19766, 50.98793 ], [ -0.19778, 50.98825 ], [ -0.1979, 50.98857 ], [ -0.19802, 50.98886 ], [ -0.19813, 50.98917 ], [ -0.19825, 50.98949 ], [ -0.19835, 50.98981 ], [ -0.19842, 50.99004 ], [ -0.1985, 50.99038 ], [ -0.19855, 50.99067 ], [ -0.19857, 50.99092 ], [ -0.19858, 50.99109 ], [ -0.19859, 50.99115 ], [ -0.19859, 50.99125 ], [ -0.19859, 50.99139 ], [ -0.19858, 50.99157 ], [ -0.19856, 50.99178 ], [ -0.19855, 50.99182 ], [ -0.19852, 50.99205 ], [ -0.19846, 50.9923 ], [ -0.19841, 50.99249 ], [ -0.19839, 50.99255 ], [ -0.19827, 50.99286 ], [ -0.1982, 50.99302 ], [ -0.19814, 50.99317 ], [ -0.19808, 50.9933 ], [ -0.19805, 50.99336 ], [ -0.19793, 50.99357 ], [ -0.19773, 50.99389 ], [ -0.19771, 50.99392 ], [ -0.19754, 50.99418 ], [ -0.19732, 50.99451 ], [ -0.19727, 50.99459 ], [ -0.19711, 50.99482 ], [ -0.1971, 50.99484 ], [ -0.19688, 50.99518 ], [ -0.19675, 50.9954 ], [ -0.19672, 50.99546 ], [ -0.19665, 50.99557 ], [ -0.19655, 50.99574 ], [ -0.19631, 50.99625 ], [ -0.19616, 50.99658 ], [ -0.19603, 50.99699 ], [ -0.19593, 50.99734 ], [ -0.19586, 50.99767 ], [ -0.19581, 50.99797 ], [ -0.19577, 50.99826 ], [ -0.19576, 50.99859 ], [ -0.19574, 50.9989 ], [ -0.19574, 50.99913 ], [ -0.19576, 50.99934 ], [ -0.19579, 50.9996 ], [ -0.19584, 50.99992 ], [ -0.19587, 51.00008 ], [ -0.1959, 51.00026 ], [ -0.19595, 51.00045 ], [ -0.196, 51.00065 ], [ -0.19605, 51.00083 ], [ -0.19612, 51.00104 ], [ -0.19621, 51.00128 ], [ -0.19627, 51.00144 ], [ -0.19633, 51.0016 ], [ -0.19633, 51.00161 ], [ -0.19649, 51.00197 ], [ -0.19662, 51.00232 ], [ -0.19675, 51.00264 ], [ -0.19689, 51.00302 ], [ -0.19699, 51.00336 ], [ -0.19712, 51.00384 ], [ -0.19718, 51.00414 ], [ -0.19723, 51.0044 ], [ -0.19726, 51.00466 ], [ -0.19728, 51.0048 ], [ -0.19729, 51.00488 ], [ -0.19731, 51.00507 ], [ -0.19733, 51.00527 ], [ -0.19734, 51.00548 ], [ -0.19734, 51.00556 ], [ -0.19734, 51.00559 ], [ -0.19734, 51.00569 ], [ -0.19734, 51.0059 ], [ -0.19734, 51.00619 ], [ -0.19733, 51.00627 ], [ -0.19733, 51.00637 ], [ -0.19732, 51.00641 ], [ -0.19732, 51.00656 ], [ -0.19731, 51.00659 ], [ -0.19729, 51.00693 ], [ -0.19729, 51.00713 ], [ -0.19729, 51.00727 ], [ -0.19729, 51.0073 ], [ -0.19729, 51.00731 ], [ -0.19729, 51.00751 ], [ -0.19729, 51.00767 ], [ -0.19729, 51.0077 ], [ -0.1973, 51.00785 ], [ -0.19731, 51.00799 ], [ -0.19733, 51.00821 ], [ -0.19733, 51.00827 ], [ -0.19737, 51.00859 ], [ -0.1974, 51.00871 ], [ -0.1974, 51.00875 ], [ -0.19743, 51.00893 ], [ -0.19744, 51.00895 ], [ -0.19751, 51.00932 ], [ -0.19752, 51.00938 ], [ -0.19752, 51.00942 ], [ -0.19753, 51.00946 ], [ -0.19757, 51.00974 ], [ -0.19761, 51.01008 ], [ -0.19765, 51.01042 ], [ -0.19766, 51.01068 ], [ -0.19766, 51.01105 ], [ -0.19766, 51.01108 ], [ -0.19764, 51.01126 ], [ -0.19764, 51.01134 ], [ -0.19763, 51.0114 ], [ -0.19763, 51.01144 ], [ -0.19762, 51.01152 ], [ -0.1976, 51.01162 ], [ -0.19759, 51.01169 ], [ -0.19754, 51.01196 ], [ -0.1975, 51.01215 ], [ -0.19747, 51.01229 ], [ -0.19734, 51.01273 ], [ -0.19731, 51.01286 ], [ -0.19728, 51.01293 ], [ -0.19717, 51.01329 ], [ -0.19713, 51.01338 ], [ -0.1971, 51.01347 ], [ -0.19706, 51.01356 ], [ -0.19705, 51.01359 ], [ -0.19691, 51.01393 ], [ -0.19681, 51.01417 ], [ -0.19664, 51.01452 ], [ -0.19646, 51.01487 ], [ -0.19628, 51.01518 ], [ -0.19618, 51.01536 ], [ -0.19608, 51.01552 ], [ -0.19591, 51.01579 ], [ -0.19572, 51.01609 ], [ -0.19552, 51.01639 ], [ -0.19548, 51.01645 ], [ -0.19526, 51.01682 ], [ -0.1951, 51.01714 ], [ -0.19507, 51.01721 ], [ -0.19504, 51.01728 ], [ -0.19499, 51.01742 ], [ -0.19495, 51.01754 ], [ -0.19488, 51.01774 ], [ -0.19483, 51.01804 ], [ -0.19479, 51.01823 ], [ -0.19478, 51.01835 ], [ -0.19478, 51.0185 ], [ -0.19478, 51.01874 ], [ -0.19481, 51.01906 ], [ -0.19482, 51.01913 ], [ -0.19485, 51.01932 ], [ -0.19486, 51.01934 ], [ -0.19493, 51.01964 ], [ -0.19497, 51.01978 ], [ -0.19512, 51.02031 ], [ -0.19518, 51.02052 ], [ -0.19524, 51.0207 ], [ -0.19528, 51.02084 ], [ -0.19529, 51.02088 ], [ -0.19545, 51.02141 ], [ -0.19546, 51.02143 ], [ -0.19551, 51.02158 ], [ -0.19562, 51.02193 ], [ -0.19573, 51.02229 ], [ -0.19579, 51.02246 ], [ -0.19583, 51.02259 ], [ -0.19596, 51.02313 ], [ -0.19607, 51.0236 ], [ -0.19609, 51.02371 ], [ -0.19612, 51.02389 ], [ -0.19615, 51.02411 ], [ -0.19617, 51.02443 ], [ -0.19617, 51.02444 ], [ -0.1962, 51.02476 ], [ -0.1962, 51.02514 ], [ -0.19622, 51.02535 ], [ -0.19625, 51.02568 ], [ -0.19626, 51.02586 ], [ -0.19626, 51.02593 ], [ -0.19628, 51.02623 ], [ -0.19635, 51.02673 ], [ -0.19635, 51.02676 ], [ -0.19634, 51.02694 ], [ -0.19633, 51.02707 ], [ -0.19633, 51.02712 ], [ -0.19634, 51.02762 ], [ -0.19634, 51.02766 ], [ -0.19635, 51.02784 ], [ -0.19637, 51.0282 ], [ -0.19637, 51.02833 ], [ -0.19637, 51.02838 ], [ -0.19639, 51.02856 ], [ -0.19642, 51.0291 ], [ -0.19644, 51.02946 ], [ -0.19646, 51.02982 ], [ -0.19647, 51.03006 ], [ -0.19647, 51.03024 ], [ -0.19648, 51.03042 ], [ -0.19648, 51.03078 ], [ -0.19648, 51.03085 ], [ -0.19649, 51.03096 ], [ -0.19653, 51.03168 ], [ -0.19654, 51.03186 ], [ -0.19655, 51.03204 ], [ -0.19655, 51.03205 ], [ -0.19656, 51.03219 ], [ -0.19656, 51.03222 ], [ -0.19657, 51.0324 ], [ -0.19657, 51.03241 ], [ -0.19658, 51.03267 ], [ -0.19659, 51.03276 ], [ -0.19659, 51.03285 ], [ -0.1966, 51.03309 ], [ -0.19661, 51.03312 ], [ -0.19661, 51.03313 ], [ -0.19663, 51.03331 ], [ -0.19663, 51.03339 ], [ -0.19666, 51.03366 ], [ -0.19667, 51.03383 ], [ -0.19668, 51.03385 ], [ -0.19668, 51.03393 ], [ -0.19669, 51.03398 ], [ -0.19673, 51.03429 ], [ -0.19674, 51.03437 ], [ -0.19674, 51.03439 ], [ -0.19682, 51.03482 ], [ -0.19682, 51.03485 ], [ -0.19689, 51.03527 ], [ -0.19689, 51.03529 ], [ -0.1969, 51.03536 ], [ -0.19694, 51.03563 ], [ -0.19694, 51.03565 ], [ -0.19695, 51.03566 ], [ -0.19697, 51.0358 ], [ -0.19698, 51.03583 ], [ -0.19701, 51.03598 ], [ -0.19701, 51.03601 ], [ -0.19702, 51.03608 ], [ -0.19707, 51.03634 ], [ -0.19708, 51.03637 ], [ -0.19709, 51.03643 ], [ -0.19712, 51.03661 ], [ -0.19714, 51.0367 ], [ -0.19715, 51.03672 ], [ -0.19716, 51.03679 ], [ -0.19723, 51.03715 ], [ -0.19733, 51.03768 ], [ -0.19743, 51.03817 ], [ -0.19745, 51.03826 ], [ -0.19747, 51.03837 ], [ -0.19754, 51.03863 ], [ -0.19759, 51.03891 ], [ -0.19762, 51.03904 ], [ -0.1977, 51.0393 ], [ -0.19772, 51.03935 ], [ -0.1978, 51.03955 ], [ -0.19789, 51.03979 ], [ -0.19813, 51.04037 ], [ -0.19814, 51.0404 ], [ -0.19823, 51.04057 ], [ -0.19838, 51.04085 ], [ -0.1984, 51.04091 ], [ -0.19853, 51.04119 ], [ -0.19868, 51.04158 ], [ -0.19879, 51.04191 ], [ -0.19884, 51.04214 ], [ -0.19887, 51.04224 ], [ -0.19888, 51.04231 ], [ -0.19891, 51.04249 ], [ -0.19894, 51.04263 ], [ -0.19897, 51.04285 ], [ -0.19897, 51.04288 ], [ -0.19901, 51.04321 ], [ -0.19903, 51.0434 ], [ -0.1991, 51.04373 ], [ -0.19915, 51.04392 ], [ -0.19919, 51.04406 ], [ -0.19929, 51.04434 ], [ -0.19934, 51.04447 ], [ -0.19938, 51.04458 ], [ -0.19941, 51.04462 ], [ -0.19955, 51.04489 ], [ -0.19958, 51.04497 ], [ -0.19963, 51.04506 ], [ -0.19971, 51.04524 ], [ -0.19979, 51.04541 ], [ -0.19988, 51.04558 ], [ -0.19996, 51.04575 ], [ -0.20006, 51.04598 ], [ -0.20011, 51.04609 ], [ -0.2001084, 51.0460916 ], [ -0.19995, 51.0461 ], [ -0.1999462, 51.0460987 ], [ -0.2001, 51.04654 ], [ -0.20012, 51.04663 ], [ -0.2002, 51.04691 ], [ -0.20028, 51.04724 ], [ -0.20035, 51.04767 ], [ -0.20042, 51.04808 ], [ -0.20046, 51.04836 ], [ -0.20047, 51.04841 ], [ -0.20056, 51.04872 ], [ -0.20057, 51.04877 ], [ -0.20061, 51.04893 ], [ -0.20064, 51.04905 ], [ -0.20062, 51.04914 ], [ -0.2006216, 51.0491425 ], [ -0.20068, 51.04916 ], [ -0.20072, 51.04918 ], [ -0.20077, 51.0492 ], [ -0.2007651, 51.0492047 ], [ -0.20079, 51.04936 ], [ -0.20083, 51.04953 ], [ -0.20083, 51.04961 ], [ -0.20083, 51.04991 ], [ -0.20083, 51.05001 ], [ -0.20083, 51.05009 ], [ -0.20083, 51.05017 ], [ -0.20082, 51.05045 ], [ -0.20081, 51.05049 ], [ -0.2008, 51.05053 ], [ -0.20079, 51.05063 ], [ -0.20078, 51.05071 ], [ -0.20075, 51.05088 ], [ -0.20073, 51.05096 ], [ -0.20071, 51.05114 ], [ -0.20068, 51.05133 ], [ -0.20057, 51.05207 ], [ -0.20051, 51.05255 ], [ -0.20049, 51.05262 ], [ -0.20047, 51.05267 ], [ -0.20043, 51.05276 ], [ -0.2004346, 51.0527609 ], [ -0.20046, 51.05284 ], [ -0.20048, 51.05299 ], [ -0.20049, 51.05311 ], [ -0.2005, 51.05315 ], [ -0.2005, 51.0532 ], [ -0.2005, 51.05327 ], [ -0.2005, 51.0533 ], [ -0.20049, 51.05334 ], [ -0.20048, 51.0534 ], [ -0.20045, 51.05345 ], [ -0.20036, 51.05361 ], [ -0.20033, 51.05366 ], [ -0.20014, 51.05392 ], [ -0.19992, 51.05425 ], [ -0.19971, 51.05457 ], [ -0.19944, 51.05496 ], [ -0.19917, 51.05535 ], [ -0.19899, 51.0556 ], [ -0.19889, 51.0558 ], [ -0.19848, 51.05659 ], [ -0.19829, 51.05695 ], [ -0.1982, 51.05714 ], [ -0.19811, 51.05744 ], [ -0.1981, 51.05749 ], [ -0.19811, 51.05749 ], [ -0.19811, 51.0575 ], [ -0.19812, 51.0575 ], [ -0.19813, 51.0575 ], [ -0.19813, 51.05751 ], [ -0.19814, 51.05751 ], [ -0.19814, 51.05752 ], [ -0.19814, 51.05753 ], [ -0.19814, 51.05754 ], [ -0.19813, 51.05755 ], [ -0.19812, 51.05755 ], [ -0.19812, 51.05756 ], [ -0.19817, 51.05764 ], [ -0.19836, 51.05795 ], [ -0.19859, 51.05832 ], [ -0.19871, 51.05853 ], [ -0.19881, 51.05874 ], [ -0.19888, 51.05887 ], [ -0.19893, 51.05896 ], [ -0.19907, 51.05921 ], [ -0.19911, 51.05929 ], [ -0.19919, 51.05945 ], [ -0.19924, 51.05957 ], [ -0.19926, 51.05963 ], [ -0.19928, 51.05974 ], [ -0.19929, 51.05974 ], [ -0.19932, 51.05985 ], [ -0.19937, 51.06012 ], [ -0.1994, 51.06034 ], [ -0.19941, 51.06041 ], [ -0.19943, 51.06046 ], [ -0.19957, 51.06075 ], [ -0.19962, 51.06086 ], [ -0.19987, 51.06148 ], [ -0.19997, 51.06175 ], [ -0.20016, 51.06225 ], [ -0.20017, 51.06227 ], [ -0.20031, 51.06265 ], [ -0.20039, 51.06287 ], [ -0.20046, 51.06311 ], [ -0.2005, 51.06325 ], [ -0.20071, 51.06374 ], [ -0.20085, 51.06411 ], [ -0.20091, 51.06428 ], [ -0.20102, 51.06459 ], [ -0.20108, 51.06472 ], [ -0.20138, 51.06548 ], [ -0.20152, 51.06576 ], [ -0.20199, 51.06669 ], [ -0.20244, 51.0676 ], [ -0.20297, 51.06857 ], [ -0.20335, 51.06926 ], [ -0.20341, 51.06945 ], [ -0.20345, 51.06955 ], [ -0.20344, 51.06958 ], [ -0.20344, 51.06959 ], [ -0.20344, 51.0696 ], [ -0.20344, 51.06961 ], [ -0.20334, 51.06975 ], [ -0.20331, 51.06987 ], [ -0.20328, 51.06993 ], [ -0.20328, 51.06996 ], [ -0.20327, 51.06998 ], [ -0.20327, 51.07 ], [ -0.20328, 51.07002 ], [ -0.20328, 51.07004 ], [ -0.2033, 51.07008 ], [ -0.20335, 51.07019 ], [ -0.20342, 51.07034 ], [ -0.20351, 51.07057 ], [ -0.20355, 51.07068 ], [ -0.20359, 51.07079 ], [ -0.20363, 51.07093 ], [ -0.20365, 51.07103 ], [ -0.20367, 51.07112 ], [ -0.20369, 51.07132 ], [ -0.2037, 51.0714 ], [ -0.20369, 51.07151 ], [ -0.20368, 51.07169 ], [ -0.20362, 51.07208 ], [ -0.20358, 51.07233 ], [ -0.20352, 51.07268 ], [ -0.20347, 51.073 ], [ -0.20342, 51.07338 ], [ -0.20341, 51.07345 ], [ -0.2034, 51.07354 ], [ -0.20334, 51.07407 ], [ -0.20333, 51.0741 ], [ -0.20328, 51.07468 ], [ -0.20327, 51.07501 ], [ -0.20325, 51.07524 ], [ -0.20325, 51.07534 ], [ -0.20325, 51.07541 ], [ -0.20323, 51.07586 ], [ -0.20323, 51.07626 ], [ -0.20323, 51.07682 ], [ -0.20323, 51.07695 ], [ -0.20322, 51.07708 ], [ -0.20322, 51.07719 ], [ -0.2032, 51.07735 ], [ -0.20319, 51.07746 ], [ -0.20318, 51.07752 ], [ -0.20315, 51.07776 ], [ -0.20311, 51.07803 ], [ -0.20303, 51.07837 ], [ -0.203, 51.07848 ], [ -0.20295, 51.07867 ], [ -0.20289, 51.07884 ], [ -0.20287, 51.07888 ], [ -0.20268, 51.0793 ], [ -0.20242, 51.07973 ], [ -0.20217, 51.08008 ], [ -0.20185, 51.08047 ], [ -0.20179, 51.08054 ], [ -0.20162, 51.0807 ], [ -0.2014, 51.08092 ], [ -0.20054, 51.08169 ], [ -0.20051, 51.08172 ], [ -0.20049, 51.08174 ], [ -0.20035, 51.08187 ], [ -0.20018, 51.08201 ], [ -0.19989, 51.08227 ], [ -0.19986, 51.0823 ], [ -0.19969, 51.08246 ], [ -0.1994, 51.08262 ], [ -0.19936, 51.08262 ], [ -0.19934, 51.08262 ], [ -0.19933, 51.08262 ], [ -0.19931, 51.08262 ], [ -0.19928, 51.08263 ], [ -0.19923, 51.08265 ], [ -0.1992, 51.08267 ], [ -0.19919, 51.08268 ], [ -0.19918, 51.08269 ], [ -0.19917, 51.08271 ], [ -0.19916, 51.08274 ], [ -0.19916, 51.08276 ], [ -0.19916, 51.08277 ], [ -0.19916, 51.08278 ], [ -0.19917, 51.0828 ], [ -0.19918, 51.08281 ], [ -0.19909, 51.08296 ], [ -0.19884, 51.08305 ], [ -0.19865, 51.08313 ], [ -0.19851, 51.0832 ], [ -0.19844, 51.08325 ], [ -0.19835, 51.08331 ], [ -0.19833, 51.08333 ], [ -0.19817, 51.08344 ], [ -0.19804, 51.08352 ], [ -0.19793, 51.08358 ], [ -0.19776, 51.08369 ], [ -0.19768, 51.08376 ], [ -0.19761, 51.08384 ], [ -0.19762, 51.08387 ], [ -0.19762, 51.08389 ], [ -0.19763, 51.08391 ], [ -0.19763, 51.08393 ], [ -0.19762, 51.08395 ], [ -0.19761, 51.08398 ], [ -0.1976, 51.08401 ], [ -0.19758, 51.08403 ], [ -0.19757, 51.08405 ], [ -0.19755, 51.08406 ], [ -0.19752, 51.08408 ], [ -0.19748, 51.08411 ], [ -0.19744, 51.08412 ], [ -0.19743, 51.08412 ], [ -0.19741, 51.08413 ], [ -0.1974, 51.08413 ], [ -0.19737, 51.08414 ], [ -0.19731, 51.08416 ], [ -0.19725, 51.08417 ], [ -0.19722, 51.08417 ], [ -0.19718, 51.08417 ], [ -0.19714, 51.08417 ], [ -0.19711, 51.08416 ], [ -0.19706, 51.08415 ], [ -0.19701, 51.08413 ], [ -0.19701, 51.08427 ], [ -0.19699, 51.08439 ], [ -0.19695, 51.08446 ], [ -0.1969, 51.08453 ], [ -0.19685, 51.08458 ], [ -0.19675, 51.08468 ], [ -0.19662, 51.08481 ], [ -0.1965, 51.08494 ], [ -0.19638, 51.08507 ], [ -0.19628, 51.08522 ], [ -0.19624, 51.0853 ], [ -0.1962, 51.08537 ], [ -0.19617, 51.08544 ], [ -0.19615, 51.08547 ], [ -0.19614, 51.0855 ], [ -0.19612, 51.08555 ], [ -0.1961, 51.08561 ], [ -0.19608, 51.08568 ], [ -0.19606, 51.08574 ], [ -0.19606, 51.08579 ], [ -0.19605, 51.08583 ], [ -0.19605, 51.08585 ], [ -0.19605, 51.08588 ], [ -0.19608, 51.08601 ], [ -0.1960817, 51.0860088 ], [ -0.19606, 51.08608 ], [ -0.1961, 51.08616 ], [ -0.19613, 51.08621 ], [ -0.19616, 51.08625 ], [ -0.19622, 51.08632 ], [ -0.19636, 51.08644 ], [ -0.19655, 51.08661 ], [ -0.19658, 51.08664 ], [ -0.19695, 51.08696 ], [ -0.19715, 51.08713 ], [ -0.19719, 51.08717 ], [ -0.19727, 51.08722 ], [ -0.1975, 51.08731 ], [ -0.19761, 51.08738 ], [ -0.19766, 51.08742 ], [ -0.19773, 51.08747 ], [ -0.19775, 51.08749 ], [ -0.19777, 51.08752 ], [ -0.19779, 51.08757 ], [ -0.1978, 51.0876 ], [ -0.19781, 51.08761 ], [ -0.19781, 51.08765 ], [ -0.19781, 51.0877 ], [ -0.19778, 51.08778 ], [ -0.19777, 51.0878 ], [ -0.19768, 51.088 ], [ -0.19763, 51.08813 ], [ -0.19755, 51.08832 ], [ -0.19751, 51.08842 ], [ -0.19741, 51.08867 ], [ -0.19717, 51.08929 ], [ -0.19696, 51.08982 ], [ -0.19694, 51.08987 ], [ -0.19687, 51.09004 ], [ -0.19673, 51.09039 ], [ -0.19654, 51.09086 ], [ -0.19652, 51.09092 ], [ -0.19645, 51.09109 ], [ -0.19638, 51.09126 ], [ -0.19626, 51.09156 ], [ -0.19619, 51.09173 ], [ -0.19617, 51.09179 ], [ -0.19612, 51.09191 ], [ -0.19598, 51.09226 ], [ -0.19589, 51.09249 ], [ -0.19582, 51.09261 ], [ -0.19571, 51.09282 ], [ -0.19562, 51.09299 ], [ -0.19557, 51.09309 ], [ -0.19533, 51.0935 ], [ -0.19518, 51.09377 ], [ -0.19497, 51.09414 ], [ -0.19466, 51.09469 ], [ -0.1946, 51.09479 ], [ -0.19454, 51.0949 ], [ -0.19446, 51.09504 ], [ -0.19433, 51.09527 ], [ -0.19427, 51.09537 ], [ -0.19421, 51.09549 ], [ -0.19398, 51.0959 ], [ -0.19376, 51.09627 ], [ -0.1936, 51.09654 ], [ -0.19357, 51.09661 ], [ -0.19342, 51.09688 ], [ -0.19338, 51.09695 ], [ -0.19332, 51.09707 ], [ -0.19322, 51.09736 ], [ -0.1932, 51.09742 ], [ -0.19316, 51.09759 ], [ -0.1931, 51.09787 ], [ -0.19306, 51.09812 ], [ -0.19306, 51.09831 ], [ -0.19306, 51.09839 ], [ -0.19306, 51.09851 ], [ -0.19308, 51.09872 ], [ -0.19312, 51.09896 ], [ -0.19318, 51.0992 ], [ -0.19331, 51.09959 ], [ -0.19336, 51.09968 ], [ -0.19356, 51.10007 ], [ -0.19375, 51.10035 ], [ -0.1939, 51.10057 ], [ -0.19393, 51.10066 ], [ -0.19396, 51.1008 ], [ -0.1939628, 51.1007983 ], [ -0.19394, 51.10084 ], [ -0.19392, 51.10087 ], [ -0.1939, 51.10091 ], [ -0.19388, 51.10096 ], [ -0.1937, 51.10116 ], [ -0.19346, 51.10124 ], [ -0.19343, 51.10125 ], [ -0.19339, 51.10126 ], [ -0.19316, 51.10134 ], [ -0.19286, 51.10145 ], [ -0.19244, 51.10159 ], [ -0.19183, 51.1018 ], [ -0.19148, 51.10192 ], [ -0.19103, 51.10206 ], [ -0.19047, 51.10224 ], [ -0.18999, 51.10241 ], [ -0.18891, 51.10278 ], [ -0.1864, 51.10366 ], [ -0.18549, 51.10405 ], [ -0.18546, 51.10406 ], [ -0.18531, 51.10414 ], [ -0.18484, 51.10439 ], [ -0.18465, 51.1045 ], [ -0.18452, 51.10458 ], [ -0.1843, 51.10474 ], [ -0.1841, 51.10488 ], [ -0.18389, 51.10505 ], [ -0.18376, 51.10516 ], [ -0.18363, 51.10528 ], [ -0.18348, 51.10542 ], [ -0.18337, 51.10554 ], [ -0.18315, 51.10579 ], [ -0.18297, 51.10602 ], [ -0.18286, 51.10618 ], [ -0.1828, 51.10626 ], [ -0.18273, 51.10639 ], [ -0.18264, 51.10657 ], [ -0.18256, 51.10673 ], [ -0.18246, 51.107 ], [ -0.18246, 51.10701 ], [ -0.18236, 51.10731 ], [ -0.18233, 51.10767 ], [ -0.18232, 51.10786 ], [ -0.18232, 51.10807 ], [ -0.18231, 51.10826 ], [ -0.18231, 51.10827 ], [ -0.1823, 51.10839 ], [ -0.18231, 51.1085 ], [ -0.18231, 51.10851 ], [ -0.18231, 51.10884 ], [ -0.1823, 51.10897 ], [ -0.18233, 51.10917 ], [ -0.18241, 51.10969 ], [ -0.18249, 51.11022 ], [ -0.18254, 51.11056 ], [ -0.1826, 51.11095 ], [ -0.18263, 51.11119 ], [ -0.18274, 51.1118 ], [ -0.18276, 51.11201 ], [ -0.18279, 51.11226 ], [ -0.18281, 51.11237 ], [ -0.18282, 51.11263 ], [ -0.18282, 51.11271 ], [ -0.18283, 51.11272 ], [ -0.18286, 51.11286 ], [ -0.18287, 51.11303 ], [ -0.18289, 51.11311 ], [ -0.18291, 51.11322 ], [ -0.18292, 51.11332 ], [ -0.18293, 51.11336 ], [ -0.18296, 51.11348 ], [ -0.18297, 51.11357 ], [ -0.18298, 51.11374 ], [ -0.18296, 51.11396 ], [ -0.18295, 51.11403 ], [ -0.18292, 51.11414 ], [ -0.1829, 51.1142 ], [ -0.18285, 51.11434 ], [ -0.1828, 51.11447 ], [ -0.18277, 51.11454 ], [ -0.18267, 51.11481 ], [ -0.18263, 51.11491 ], [ -0.18257, 51.11518 ], [ -0.18256, 51.11529 ], [ -0.18254, 51.1155 ], [ -0.18257, 51.11592 ], [ -0.18261, 51.11624 ], [ -0.18263, 51.11641 ], [ -0.18263, 51.11659 ], [ -0.1826289, 51.1165853 ], [ -0.18262, 51.11661 ], [ -0.18262, 51.11663 ], [ -0.18262, 51.11664 ], [ -0.18262, 51.11665 ], [ -0.18263, 51.11667 ], [ -0.18263, 51.11669 ], [ -0.18261, 51.11672 ], [ -0.18257, 51.11675 ], [ -0.18251, 51.11678 ], [ -0.18244, 51.1168 ], [ -0.18238, 51.11681 ], [ -0.18221, 51.11683 ], [ -0.18194, 51.11685 ], [ -0.18166, 51.11689 ], [ -0.18145, 51.11692 ], [ -0.18133, 51.11696 ], [ -0.18109, 51.11703 ], [ -0.18092, 51.11708 ], [ -0.18086, 51.1171 ], [ -0.18058, 51.11723 ], [ -0.18038, 51.11734 ], [ -0.18016, 51.11747 ], [ -0.18004, 51.11754 ], [ -0.17968, 51.1178 ], [ -0.17951, 51.11792 ], [ -0.17934, 51.11803 ], [ -0.17881, 51.11838 ], [ -0.17788, 51.119 ], [ -0.17735, 51.11934 ], [ -0.1773, 51.11938 ], [ -0.17675, 51.11974 ], [ -0.17672, 51.11976 ], [ -0.17615, 51.12015 ], [ -0.17564, 51.12055 ], [ -0.17555, 51.12064 ], [ -0.17533, 51.12084 ], [ -0.17528, 51.12089 ], [ -0.17503, 51.12115 ], [ -0.17489, 51.12131 ], [ -0.17466, 51.12157 ], [ -0.17416, 51.12217 ], [ -0.17393, 51.1224 ], [ -0.17385, 51.12247 ], [ -0.17367, 51.12263 ], [ -0.17343, 51.12282 ], [ -0.17332, 51.12293 ], [ -0.17322, 51.12298 ], [ -0.17271, 51.12329 ], [ -0.17196, 51.12363 ], [ -0.17183, 51.12369 ], [ -0.17152, 51.12386 ], [ -0.17084, 51.12422 ], [ -0.17056, 51.12442 ], [ -0.17049, 51.12448 ], [ -0.17039, 51.12458 ], [ -0.17031, 51.12466 ], [ -0.17027, 51.12471 ], [ -0.17021, 51.12482 ], [ -0.17013, 51.12498 ], [ -0.17006, 51.12522 ], [ -0.17003, 51.12533 ], [ -0.16999, 51.12543 ], [ -0.16994, 51.12556 ], [ -0.16992, 51.12573 ], [ -0.16991, 51.12587 ], [ -0.1699, 51.12591 ], [ -0.16987, 51.126 ], [ -0.16986, 51.12609 ], [ -0.16986, 51.12615 ], [ -0.16987, 51.12619 ], [ -0.1699, 51.12622 ], [ -0.1699039, 51.1262248 ], [ -0.16996, 51.12627 ], [ -0.17001, 51.12635 ], [ -0.17003, 51.12642 ], [ -0.17003, 51.12648 ], [ -0.17, 51.12656 ], [ -0.16992, 51.1267 ], [ -0.16982, 51.12685 ], [ -0.16967, 51.12697 ], [ -0.16963, 51.12716 ], [ -0.16961, 51.12735 ], [ -0.16963, 51.12745 ], [ -0.16966, 51.12758 ], [ -0.16973, 51.12785 ], [ -0.16974, 51.12788 ], [ -0.16982, 51.12821 ], [ -0.16985, 51.12848 ], [ -0.16988, 51.12875 ], [ -0.16991, 51.12889 ], [ -0.16992, 51.12909 ], [ -0.16994, 51.12925 ], [ -0.17013, 51.12996 ], [ -0.17017, 51.13008 ], [ -0.17018, 51.13027 ], [ -0.17016, 51.13029 ], [ -0.17014, 51.13032 ], [ -0.17014, 51.13034 ], [ -0.17014, 51.13037 ], [ -0.17014, 51.1304 ], [ -0.16997, 51.13069 ], [ -0.16964, 51.13089 ], [ -0.16952, 51.13097 ], [ -0.16931, 51.13111 ], [ -0.16927, 51.13114 ], [ -0.16915, 51.13124 ], [ -0.16902, 51.13136 ], [ -0.169, 51.13138 ], [ -0.1689, 51.13148 ], [ -0.16872, 51.13171 ], [ -0.16867, 51.13178 ], [ -0.16858, 51.13192 ], [ -0.1685, 51.13203 ], [ -0.16848, 51.13205 ], [ -0.16846, 51.13208 ], [ -0.1684, 51.13218 ], [ -0.16837, 51.13222 ], [ -0.16803, 51.13268 ], [ -0.16796, 51.13278 ], [ -0.16752, 51.13338 ], [ -0.1674, 51.13355 ], [ -0.16697, 51.13414 ], [ -0.16689, 51.13424 ], [ -0.1668855, 51.1342407 ], [ -0.16682, 51.13427 ], [ -0.16675, 51.13431 ], [ -0.16669, 51.13436 ], [ -0.16664, 51.13441 ], [ -0.16645, 51.13466 ], [ -0.16644, 51.1347 ], [ -0.16645, 51.13474 ], [ -0.16641, 51.13476 ], [ -0.16638, 51.13478 ], [ -0.16631, 51.13484 ], [ -0.16629, 51.13486 ], [ -0.16628, 51.13489 ], [ -0.16617, 51.13497 ], [ -0.16605, 51.13508 ], [ -0.16597, 51.13515 ], [ -0.16593, 51.13519 ], [ -0.16589, 51.13524 ], [ -0.16585, 51.13527 ], [ -0.16578, 51.13535 ], [ -0.16576, 51.13537 ], [ -0.16572, 51.13542 ], [ -0.16561, 51.13555 ], [ -0.16552, 51.13566 ], [ -0.16521, 51.13607 ], [ -0.16517, 51.13614 ], [ -0.16512, 51.13624 ], [ -0.16502, 51.13649 ], [ -0.165, 51.1366 ], [ -0.16489, 51.13708 ], [ -0.16479, 51.13741 ], [ -0.16471, 51.13769 ], [ -0.1647, 51.13771 ], [ -0.16461, 51.13803 ], [ -0.16455, 51.13825 ], [ -0.16451, 51.13843 ], [ -0.1645, 51.13848 ], [ -0.16445, 51.13883 ], [ -0.16444, 51.1389 ], [ -0.16444, 51.13913 ], [ -0.16442, 51.1393 ], [ -0.16439, 51.13963 ], [ -0.16437, 51.13977 ], [ -0.16436, 51.13992 ], [ -0.16432, 51.14019 ], [ -0.16426, 51.14042 ], [ -0.16406, 51.14109 ], [ -0.1640564, 51.1410946 ], [ -0.16408, 51.14118 ], [ -0.16409, 51.1413 ], [ -0.1641, 51.14151 ], [ -0.16418, 51.14154 ], [ -0.16425, 51.14158 ], [ -0.1643, 51.14163 ], [ -0.16432, 51.14168 ], [ -0.16432, 51.14173 ], [ -0.16431, 51.14178 ], [ -0.16428, 51.14184 ], [ -0.16424, 51.14187 ], [ -0.16421, 51.14189 ], [ -0.16411, 51.14192 ], [ -0.16407, 51.1421 ], [ -0.1641, 51.14224 ], [ -0.16415, 51.14241 ], [ -0.16423, 51.14261 ], [ -0.16428, 51.14271 ], [ -0.16454, 51.14308 ], [ -0.16467, 51.14322 ], [ -0.1646724, 51.1432206 ], [ -0.16457, 51.14329 ], [ -0.16422, 51.14342 ], [ -0.16407, 51.14347 ], [ -0.16383, 51.14356 ], [ -0.16364, 51.14363 ], [ -0.16342, 51.1437 ], [ -0.16339, 51.1437 ], [ -0.16324, 51.14374 ], [ -0.1631, 51.14378 ], [ -0.16288, 51.14385 ], [ -0.16272, 51.14392 ], [ -0.16261, 51.144 ], [ -0.16255, 51.14406 ], [ -0.16251, 51.14412 ], [ -0.16249, 51.1442 ], [ -0.16249, 51.14428 ], [ -0.16248, 51.14435 ], [ -0.16244, 51.14448 ], [ -0.16242, 51.14449 ], [ -0.16241, 51.14449 ], [ -0.1624, 51.14449 ], [ -0.16239, 51.1445 ], [ -0.16238, 51.1445 ], [ -0.16237, 51.14451 ], [ -0.16236, 51.14452 ], [ -0.16235, 51.14453 ], [ -0.16234, 51.14455 ], [ -0.16234, 51.14456 ], [ -0.16233, 51.14456 ], [ -0.16233, 51.14457 ], [ -0.16233, 51.14458 ], [ -0.16234, 51.14459 ], [ -0.16234, 51.1446 ], [ -0.16235, 51.14461 ], [ -0.16236, 51.14463 ], [ -0.16237, 51.14463 ], [ -0.16237, 51.14464 ], [ -0.16238, 51.14464 ], [ -0.16238, 51.14465 ], [ -0.16239, 51.14465 ], [ -0.16239, 51.14466 ], [ -0.1624, 51.14466 ], [ -0.16242, 51.14467 ], [ -0.16243, 51.14474 ], [ -0.16243, 51.14547 ], [ -0.16243, 51.14583 ], [ -0.1624304, 51.145826 ], [ -0.16241, 51.14584 ], [ -0.1624, 51.14585 ], [ -0.16239, 51.14586 ], [ -0.16237, 51.14587 ], [ -0.16221, 51.14594 ], [ -0.16172, 51.14592 ], [ -0.16151, 51.14591 ], [ -0.16141, 51.14593 ], [ -0.16137, 51.14594 ], [ -0.16133, 51.14596 ], [ -0.1613, 51.14597 ], [ -0.16126, 51.14605 ], [ -0.16127, 51.1462 ], [ -0.16128, 51.14631 ], [ -0.16128, 51.14647 ], [ -0.16129, 51.14665 ], [ -0.16133, 51.14711 ], [ -0.16135, 51.14718 ], [ -0.16154, 51.14741 ], [ -0.1615402, 51.1474084 ], [ -0.1615, 51.14745 ], [ -0.16141, 51.14749 ], [ -0.16138, 51.14752 ], [ -0.16136, 51.14754 ], [ -0.16137, 51.14763 ], [ -0.16136, 51.14781 ], [ -0.16136, 51.1479 ], [ -0.16137, 51.148 ], [ -0.16146, 51.14804 ], [ -0.16145, 51.14829 ], [ -0.16145, 51.14854 ], [ -0.16145, 51.14894 ], [ -0.16143, 51.1494 ], [ -0.16143, 51.14986 ], [ -0.16142, 51.14998 ], [ -0.16142, 51.15022 ], [ -0.16141, 51.15039 ], [ -0.16142, 51.15106 ], [ -0.1614, 51.15147 ], [ -0.1614, 51.15162 ], [ -0.1614, 51.15165 ], [ -0.16139, 51.15184 ], [ -0.16139, 51.15203 ], [ -0.16139, 51.15205 ], [ -0.16138, 51.15208 ], [ -0.16134, 51.15214 ], [ -0.16134, 51.15218 ], [ -0.16136, 51.15224 ], [ -0.16138, 51.15248 ], [ -0.16138, 51.15255 ], [ -0.16139, 51.15299 ], [ -0.1614, 51.15315 ], [ -0.16138, 51.15333 ], [ -0.16138, 51.15348 ], [ -0.16138, 51.15363 ], [ -0.16138, 51.15371 ], [ -0.16137, 51.15381 ], [ -0.16137, 51.15388 ], [ -0.16135, 51.15402 ], [ -0.16129, 51.15415 ], [ -0.16125, 51.15432 ], [ -0.16126, 51.15438 ], [ -0.16128, 51.15443 ], [ -0.16129, 51.15453 ], [ -0.1613, 51.15469 ], [ -0.1613, 51.15477 ], [ -0.16135, 51.1549 ], [ -0.16138, 51.15505 ], [ -0.16138, 51.1551 ], [ -0.16141, 51.15523 ], [ -0.16142, 51.15526 ], [ -0.16137, 51.15535 ], [ -0.16135, 51.1554 ], [ -0.16135, 51.15541 ], [ -0.16131, 51.15548 ], [ -0.1613, 51.15552 ], [ -0.1613, 51.15557 ], [ -0.1613, 51.15558 ], [ -0.1613, 51.15564 ], [ -0.16131, 51.15575 ], [ -0.16131, 51.15578 ], [ -0.16135, 51.156 ], [ -0.16138, 51.15609 ], [ -0.1614, 51.1562 ], [ -0.16141, 51.15625 ], [ -0.16142, 51.1563 ], [ -0.16145, 51.15646 ], [ -0.16148, 51.15664 ], [ -0.16152, 51.15682 ], [ -0.1615167, 51.1568217 ], [ -0.16174, 51.15681 ], [ -0.16177, 51.15683 ], [ -0.16179, 51.15693 ], [ -0.1618, 51.15705 ], [ -0.16188, 51.15729 ], [ -0.16198, 51.15753 ], [ -0.16202, 51.15764 ], [ -0.16209, 51.15782 ], [ -0.1621, 51.15785 ], [ -0.16218, 51.15808 ], [ -0.16224, 51.15826 ], [ -0.16227, 51.15833 ], [ -0.1623, 51.15842 ], [ -0.16237, 51.15863 ], [ -0.16234, 51.15866 ], [ -0.1623393, 51.1586607 ], [ -0.16217, 51.15863 ], [ -0.16184, 51.15852 ], [ -0.1618, 51.15851 ], [ -0.16173, 51.15851 ], [ -0.16127, 51.15855 ], [ -0.16126, 51.15891 ], [ -0.16126, 51.15899 ], [ -0.16125, 51.15904 ], [ -0.16125, 51.15908 ], [ -0.16124, 51.15909 ], [ -0.16116, 51.15908 ], [ -0.16116, 51.15909 ], [ -0.16115, 51.15911 ], [ -0.16115, 51.15915 ], [ -0.16112, 51.1593 ], [ -0.16111, 51.15934 ], [ -0.16111, 51.15938 ], [ -0.16113, 51.15967 ], [ -0.16113, 51.15971 ], [ -0.16114, 51.15981 ], [ -0.16115, 51.15994 ], [ -0.16116, 51.15994 ], [ -0.16116, 51.15995 ], [ -0.16117, 51.15995 ], [ -0.16124, 51.15994 ], [ -0.16125, 51.15994 ], [ -0.16126, 51.15994 ], [ -0.16127, 51.15995 ], [ -0.16128, 51.15995 ], [ -0.16128, 51.15996 ], [ -0.16128, 51.16014 ], [ -0.16128, 51.1605 ], [ -0.16128, 51.16068 ], [ -0.16128, 51.16086 ], [ -0.16128, 51.16122 ], [ -0.16128, 51.1614 ], [ -0.16128, 51.16171 ], [ -0.1612753, 51.1617108 ], [ -0.1622, 51.16175 ], [ -0.1622025, 51.1617457 ], [ -0.16218, 51.16216 ], [ -0.16219, 51.16226 ], [ -0.1622, 51.1623 ], [ -0.16222, 51.1624 ], [ -0.16226, 51.16249 ], [ -0.16231, 51.16258 ], [ -0.16244, 51.16282 ], [ -0.16252, 51.16295 ], [ -0.16274, 51.16332 ], [ -0.16291, 51.16373 ], [ -0.16302, 51.16396 ], [ -0.16317, 51.16425 ], [ -0.1631652, 51.1642474 ], [ -0.16288, 51.16434 ], [ -0.16232, 51.16449 ], [ -0.16206, 51.16458 ], [ -0.16193, 51.16464 ], [ -0.1619278, 51.1646395 ], [ -0.16187, 51.16469 ], [ -0.16187, 51.16472 ], [ -0.16186, 51.16494 ], [ -0.16184, 51.16527 ], [ -0.16185, 51.16542 ], [ -0.16186, 51.16587 ], [ -0.16186, 51.166 ], [ -0.16188, 51.16625 ], [ -0.16188, 51.16655 ], [ -0.16188, 51.16666 ], [ -0.16187, 51.16693 ], [ -0.16186, 51.16756 ], [ -0.16186, 51.16769 ], [ -0.16187, 51.16789 ], [ -0.16187, 51.16808 ], [ -0.16198, 51.16865 ], [ -0.16203, 51.16893 ], [ -0.16204, 51.16903 ], [ -0.16211, 51.16924 ], [ -0.16214, 51.1694 ], [ -0.16218, 51.16951 ], [ -0.16229, 51.16969 ], [ -0.16246, 51.16991 ], [ -0.16252, 51.16996 ], [ -0.1625217, 51.1699553 ], [ -0.16203, 51.17004 ], [ -0.1620298, 51.1700441 ], [ -0.16203, 51.1701 ], [ -0.16203, 51.17022 ], [ -0.16204, 51.17034 ], [ -0.16205, 51.17039 ], [ -0.16205, 51.1704 ], [ -0.16205, 51.17043 ], [ -0.16208, 51.1705 ], [ -0.16216, 51.17059 ], [ -0.1623, 51.17071 ], [ -0.1622987, 51.1707098 ], [ -0.16194, 51.1709 ], [ -0.16189, 51.17092 ], [ -0.16167, 51.17105 ], [ -0.16159, 51.1711 ], [ -0.16155, 51.17115 ], [ -0.16153, 51.17118 ], [ -0.16151, 51.17122 ], [ -0.16149, 51.17125 ], [ -0.16149, 51.17128 ], [ -0.16148, 51.17132 ], [ -0.16148, 51.17137 ], [ -0.16148, 51.17159 ], [ -0.16149, 51.17193 ], [ -0.16149, 51.17213 ], [ -0.16149, 51.17219 ], [ -0.16147, 51.17234 ], [ -0.16146, 51.17245 ], [ -0.16148, 51.17254 ], [ -0.16151, 51.17261 ], [ -0.16158, 51.17268 ], [ -0.16166, 51.17273 ], [ -0.16178, 51.1728 ], [ -0.1617812, 51.1727969 ], [ -0.16217, 51.17316 ], [ -0.16228, 51.17327 ], [ -0.16253, 51.17352 ], [ -0.16271, 51.17371 ], [ -0.16282, 51.17383 ], [ -0.1634, 51.17446 ], [ -0.16374, 51.17481 ], [ -0.16445, 51.17558 ], [ -0.16526, 51.17641 ], [ -0.16571, 51.1769 ], [ -0.16651, 51.1778 ], [ -0.16673, 51.17808 ], [ -0.1667329, 51.1780772 ], [ -0.16672, 51.1781 ], [ -0.16668, 51.17814 ], [ -0.16621, 51.17862 ], [ -0.16608, 51.17878 ], [ -0.16525, 51.17967 ], [ -0.16496, 51.17999 ], [ -0.16487, 51.18008 ], [ -0.16463, 51.18032 ], [ -0.1645, 51.18043 ], [ -0.16432, 51.1806 ], [ -0.16427, 51.18065 ], [ -0.16423, 51.18071 ], [ -0.1641, 51.18086 ], [ -0.16399, 51.18099 ], [ -0.16392, 51.18106 ], [ -0.16391, 51.18108 ], [ -0.16381, 51.1812 ], [ -0.16371, 51.1814 ], [ -0.16367, 51.18148 ], [ -0.16354, 51.18183 ], [ -0.16353, 51.18195 ], [ -0.16354, 51.18222 ], [ -0.16355, 51.18228 ], [ -0.16368, 51.18362 ], [ -0.16369, 51.18377 ], [ -0.16372, 51.18413 ], [ -0.16372, 51.18431 ], [ -0.16372, 51.18435 ], [ -0.16373, 51.18464 ], [ -0.16376, 51.1853 ], [ -0.16378, 51.18569 ], [ -0.1638, 51.18616 ], [ -0.1638, 51.18641 ], [ -0.16381, 51.18679 ], [ -0.16381, 51.18711 ], [ -0.16379, 51.18731 ], [ -0.16378, 51.18752 ], [ -0.16378, 51.18759 ], [ -0.16377, 51.18776 ], [ -0.16375, 51.18801 ], [ -0.1637, 51.18834 ], [ -0.16366, 51.18891 ], [ -0.16365, 51.18901 ], [ -0.16358, 51.18984 ], [ -0.16354, 51.19034 ], [ -0.16353, 51.19044 ], [ -0.16353, 51.19058 ], [ -0.16353, 51.19072 ], [ -0.16354, 51.19098 ], [ -0.16355, 51.19114 ], [ -0.16354, 51.19134 ], [ -0.16353, 51.19137 ], [ -0.16354, 51.1915 ], [ -0.16357, 51.19186 ], [ -0.16358, 51.19203 ], [ -0.1636, 51.19231 ], [ -0.1636, 51.19236 ], [ -0.1636, 51.1927 ], [ -0.16361, 51.19281 ], [ -0.16359, 51.19294 ], [ -0.16359, 51.1931 ], [ -0.16358, 51.19329 ], [ -0.16355, 51.19354 ], [ -0.16353, 51.19371 ], [ -0.16352, 51.1939 ], [ -0.16351, 51.19397 ], [ -0.1635, 51.19411 ], [ -0.16354, 51.19441 ], [ -0.16356, 51.19464 ], [ -0.16361, 51.19479 ], [ -0.16368, 51.19502 ], [ -0.16374, 51.19528 ], [ -0.16382, 51.19556 ], [ -0.16392, 51.19584 ], [ -0.16421, 51.19642 ], [ -0.16472, 51.19718 ], [ -0.16505, 51.19754 ], [ -0.16519, 51.1977 ], [ -0.16533, 51.19786 ], [ -0.16561, 51.19816 ], [ -0.16582, 51.19835 ], [ -0.16586, 51.19839 ], [ -0.16605, 51.1986 ], [ -0.16618, 51.19877 ], [ -0.16637, 51.19905 ], [ -0.16655, 51.19932 ], [ -0.1665477, 51.1993168 ], [ -0.16656, 51.19945 ], [ -0.16664, 51.1996 ], [ -0.16678, 51.19985 ], [ -0.16684, 51.20003 ], [ -0.16689, 51.20023 ], [ -0.16689, 51.20031 ], [ -0.1669, 51.20038 ], [ -0.1669, 51.20056 ], [ -0.16687, 51.20077 ], [ -0.16682, 51.20114 ], [ -0.16678, 51.20133 ], [ -0.16677, 51.20135 ], [ -0.16674, 51.2015 ], [ -0.16671, 51.20179 ], [ -0.16666, 51.20211 ], [ -0.16671, 51.20245 ], [ -0.16677, 51.20265 ], [ -0.1668, 51.20276 ], [ -0.16684, 51.20285 ], [ -0.16693, 51.20314 ], [ -0.16696, 51.2032 ], [ -0.16704, 51.20345 ], [ -0.16732, 51.20425 ], [ -0.16741, 51.20452 ], [ -0.16749, 51.20461 ], [ -0.16752, 51.20477 ], [ -0.16753, 51.20483 ], [ -0.16767, 51.20536 ], [ -0.16776, 51.20573 ], [ -0.16789, 51.206 ], [ -0.16809, 51.20632 ], [ -0.16826, 51.20654 ], [ -0.16858, 51.20692 ], [ -0.16877, 51.20721 ], [ -0.16891, 51.20745 ], [ -0.16892, 51.20748 ], [ -0.16902, 51.20764 ], [ -0.16911, 51.2079 ], [ -0.16914, 51.20803 ], [ -0.16916, 51.20819 ], [ -0.16921, 51.20843 ], [ -0.16924, 51.20864 ], [ -0.16935, 51.20932 ], [ -0.16943, 51.20986 ], [ -0.16949, 51.21022 ], [ -0.16951, 51.21035 ], [ -0.16963, 51.21089 ], [ -0.16977, 51.2119 ], [ -0.16982, 51.21222 ], [ -0.16986, 51.21246 ], [ -0.16994, 51.213 ], [ -0.16993, 51.21321 ], [ -0.17004, 51.21386 ], [ -0.17005, 51.21391 ], [ -0.17008, 51.21402 ], [ -0.17017, 51.21445 ], [ -0.17024, 51.21481 ], [ -0.17034, 51.2151 ], [ -0.17047, 51.21559 ], [ -0.17072, 51.21627 ], [ -0.17082, 51.21656 ], [ -0.17091, 51.21684 ], [ -0.171, 51.21711 ], [ -0.17105, 51.21725 ], [ -0.17113, 51.21752 ], [ -0.17117, 51.21766 ], [ -0.1712, 51.21776 ], [ -0.17123, 51.21786 ], [ -0.17127, 51.218 ], [ -0.1713, 51.21814 ], [ -0.17137, 51.21838 ], [ -0.17144, 51.21862 ], [ -0.17157, 51.21906 ], [ -0.1716, 51.21915 ], [ -0.17162, 51.21919 ], [ -0.17173, 51.21959 ], [ -0.1718, 51.21984 ], [ -0.17184, 51.21997 ], [ -0.1719, 51.22019 ], [ -0.17221, 51.22123 ], [ -0.17232, 51.22158 ], [ -0.17242, 51.22194 ], [ -0.1726, 51.22254 ], [ -0.17278, 51.22318 ], [ -0.17293, 51.22367 ], [ -0.17303, 51.22403 ], [ -0.17329, 51.22491 ], [ -0.1734, 51.22526 ], [ -0.17356, 51.2258 ], [ -0.17366, 51.22615 ], [ -0.17382, 51.22668 ], [ -0.174, 51.22732 ], [ -0.17411, 51.22761 ], [ -0.17411, 51.22763 ], [ -0.1742, 51.22789 ], [ -0.1741953, 51.2278877 ], [ -0.17439, 51.22804 ], [ -0.17468, 51.22829 ], [ -0.17477, 51.22843 ], [ -0.17489, 51.22861 ], [ -0.17493, 51.22865 ], [ -0.17507, 51.22882 ], [ -0.17518, 51.22898 ], [ -0.17522, 51.22905 ], [ -0.17529, 51.22919 ], [ -0.17536, 51.22936 ], [ -0.17542, 51.22951 ], [ -0.17545, 51.22963 ], [ -0.17546, 51.22969 ], [ -0.17552, 51.22971 ], [ -0.1755201, 51.2297062 ], [ -0.17543, 51.22985 ], [ -0.17538, 51.22995 ], [ -0.17537, 51.22997 ], [ -0.17536, 51.23003 ], [ -0.1753627, 51.2300258 ], [ -0.17532, 51.23004 ], [ -0.17513, 51.23013 ], [ -0.17503, 51.23019 ], [ -0.1749, 51.23027 ], [ -0.17469, 51.23042 ], [ -0.17464, 51.23045 ], [ -0.17447, 51.2306 ], [ -0.1744749, 51.2305961 ], [ -0.17451, 51.23065 ], [ -0.17451, 51.23067 ], [ -0.1745, 51.23068 ], [ -0.17449, 51.2307 ], [ -0.17448, 51.23072 ], [ -0.17442, 51.2308 ], [ -0.17437, 51.23089 ], [ -0.17434, 51.23095 ], [ -0.17432, 51.23102 ], [ -0.1743, 51.2311 ], [ -0.1743, 51.23121 ], [ -0.17431, 51.23129 ], [ -0.17433, 51.2314 ], [ -0.1744, 51.23158 ], [ -0.17442, 51.23163 ], [ -0.17449, 51.23175 ], [ -0.17452, 51.23181 ], [ -0.17481, 51.23217 ], [ -0.17486, 51.23223 ], [ -0.17516, 51.23262 ], [ -0.17527, 51.23284 ], [ -0.17535, 51.23304 ], [ -0.17536, 51.23307 ], [ -0.17549, 51.23347 ], [ -0.17551, 51.23367 ], [ -0.17553, 51.23378 ], [ -0.17555, 51.234 ], [ -0.17555, 51.23432 ], [ -0.1755483, 51.2343215 ], [ -0.17577, 51.23465 ], [ -0.17607, 51.23503 ], [ -0.1760708, 51.2350301 ], [ -0.17625, 51.23517 ], [ -0.17644, 51.2353 ], [ -0.17662, 51.23544 ], [ -0.17667, 51.23547 ], [ -0.17686, 51.2356 ], [ -0.17702, 51.2357 ], [ -0.17728, 51.23582 ], [ -0.17731, 51.23583 ], [ -0.17748, 51.2359 ], [ -0.17793, 51.23602 ], [ -0.17818, 51.23607 ], [ -0.17834, 51.23611 ], [ -0.17856, 51.23616 ], [ -0.17898, 51.23625 ], [ -0.17945, 51.23636 ], [ -0.1799, 51.23647 ], [ -0.1802, 51.23652 ], [ -0.18031, 51.23653 ], [ -0.18047, 51.23654 ], [ -0.18057, 51.23653 ], [ -0.18085, 51.23651 ], [ -0.1808457, 51.2365136 ], [ -0.18086, 51.23687 ], [ -0.18087, 51.23729 ], [ -0.18088, 51.23741 ], [ -0.18088, 51.23776 ], [ -0.18088, 51.23777 ], [ -0.18089, 51.23795 ], [ -0.18089, 51.238 ], [ -0.18092, 51.23813 ], [ -0.18093, 51.23819 ], [ -0.18095, 51.23825 ], [ -0.18096, 51.23827 ], [ -0.18099, 51.2383 ], [ -0.18111, 51.23844 ], [ -0.1811075, 51.2384448 ], [ -0.18095, 51.23858 ], [ -0.18082, 51.23864 ], [ -0.1808161, 51.2386445 ], [ -0.18095, 51.23882 ], [ -0.18104, 51.23895 ], [ -0.18106, 51.23897 ], [ -0.18112, 51.23905 ], [ -0.18141, 51.23947 ], [ -0.18153, 51.23963 ], [ -0.18164, 51.23978 ], [ -0.18174, 51.2399 ], [ -0.1817356, 51.2399041 ], [ -0.18179, 51.23989 ], [ -0.18202, 51.23981 ], [ -0.1821, 51.23981 ], [ -0.18228, 51.23983 ], [ -0.18236, 51.23984 ], [ -0.18287, 51.2399 ], [ -0.18313, 51.23991 ], [ -0.1831291, 51.2399064 ], [ -0.18399, 51.23991 ], [ -0.18401, 51.23991 ], [ -0.18442, 51.23991 ], [ -0.18455, 51.23992 ], [ -0.18461, 51.23994 ], [ -0.18464, 51.23995 ], [ -0.18468, 51.23996 ], [ -0.18474, 51.23999 ], [ -0.18477, 51.24002 ], [ -0.18479, 51.24004 ], [ -0.18482, 51.24008 ], [ -0.18492, 51.24024 ], [ -0.18493, 51.24025 ], [ -0.18499, 51.24035 ], [ -0.18512, 51.2406 ], [ -0.1852, 51.24076 ], [ -0.18526, 51.24088 ], [ -0.1852594, 51.2408807 ], [ -0.18531, 51.24098 ], [ -0.18533, 51.24105 ], [ -0.18542, 51.24129 ], [ -0.18547, 51.2414 ], [ -0.18561, 51.24175 ], [ -0.18562, 51.24176 ], [ -0.18579, 51.24222 ], [ -0.18594, 51.24256 ], [ -0.1861, 51.24291 ], [ -0.18616, 51.24306 ], [ -0.18618, 51.2431 ], [ -0.18618, 51.24313 ], [ -0.18629, 51.24349 ], [ -0.18639, 51.24384 ], [ -0.18665, 51.24473 ], [ -0.18676, 51.24508 ], [ -0.18688, 51.24551 ], [ -0.1868848, 51.2455149 ], [ -0.18699, 51.24558 ], [ -0.1869861, 51.2455768 ], [ -0.18698, 51.24558 ], [ -0.18697, 51.24558 ], [ -0.18697, 51.24559 ], [ -0.18696, 51.24559 ], [ -0.18696, 51.2456 ], [ -0.18696, 51.24561 ], [ -0.18696, 51.24562 ], [ -0.18696, 51.24563 ], [ -0.18697, 51.24564 ], [ -0.18698, 51.24564 ], [ -0.18698, 51.24565 ], [ -0.18699, 51.24565 ], [ -0.187, 51.24565 ], [ -0.187, 51.24566 ], [ -0.18701, 51.24566 ], [ -0.18702, 51.24566 ], [ -0.18703, 51.24566 ], [ -0.18704, 51.24566 ], [ -0.18705, 51.24566 ], [ -0.18711, 51.24576 ], [ -0.18712, 51.24579 ], [ -0.18714, 51.24585 ], [ -0.18714, 51.24587 ], [ -0.18714, 51.2459 ], [ -0.1871, 51.24604 ], [ -0.18683, 51.24685 ], [ -0.18678, 51.24704 ], [ -0.18678, 51.24705 ], [ -0.18668, 51.2475 ], [ -0.18664, 51.24772 ], [ -0.18661, 51.24785 ], [ -0.18659, 51.24793 ], [ -0.18658, 51.24802 ], [ -0.18658, 51.24809 ], [ -0.18658, 51.24814 ], [ -0.1866, 51.24821 ], [ -0.18663, 51.24839 ], [ -0.18664, 51.24842 ], [ -0.1867, 51.24863 ], [ -0.18675, 51.2489 ], [ -0.18675, 51.24892 ], [ -0.18675, 51.249 ], [ -0.18676, 51.2491 ], [ -0.18675, 51.24926 ], [ -0.18673, 51.24943 ], [ -0.18673, 51.24946 ], [ -0.18668, 51.24974 ], [ -0.18667, 51.24982 ], [ -0.18666, 51.2499 ], [ -0.18666, 51.25 ], [ -0.18666, 51.25006 ], [ -0.18668, 51.25018 ], [ -0.1867, 51.25038 ], [ -0.18673, 51.25053 ], [ -0.18673, 51.25054 ], [ -0.18676, 51.25064 ], [ -0.18683, 51.25081 ], [ -0.18694, 51.25103 ], [ -0.18696, 51.25106 ], [ -0.18705, 51.25121 ], [ -0.18717, 51.25139 ], [ -0.18726, 51.25153 ], [ -0.18737, 51.25169 ], [ -0.18744, 51.25177 ], [ -0.18756, 51.25188 ], [ -0.18772, 51.25198 ], [ -0.18786, 51.25205 ], [ -0.18786, 51.25206 ], [ -0.18821, 51.25224 ], [ -0.18849, 51.25241 ], [ -0.18854, 51.25244 ], [ -0.1886, 51.25248 ], [ -0.18869, 51.25256 ], [ -0.18885, 51.25275 ], [ -0.18895, 51.2529 ], [ -0.18901, 51.25309 ], [ -0.18904, 51.25316 ], [ -0.18905, 51.25327 ], [ -0.18905, 51.2533 ], [ -0.18905, 51.25331 ], [ -0.18906, 51.25342 ], [ -0.18907, 51.2536 ], [ -0.18908, 51.25367 ], [ -0.18911, 51.25378 ], [ -0.18913, 51.25387 ], [ -0.18916, 51.25396 ], [ -0.18916, 51.25397 ], [ -0.18919, 51.25405 ], [ -0.18921, 51.25412 ], [ -0.1892, 51.25413 ], [ -0.1892, 51.25418 ], [ -0.1892, 51.25422 ], [ -0.18919, 51.25427 ], [ -0.18919, 51.25431 ], [ -0.18915, 51.25455 ], [ -0.18914, 51.25463 ], [ -0.18913, 51.25467 ], [ -0.18912, 51.25473 ], [ -0.18911, 51.25485 ], [ -0.1891, 51.25491 ], [ -0.1891, 51.25503 ], [ -0.18909, 51.25509 ], [ -0.18911, 51.25517 ], [ -0.18912, 51.2552 ], [ -0.18913, 51.25521 ], [ -0.18916, 51.25526 ], [ -0.18916, 51.25527 ], [ -0.18925, 51.25537 ], [ -0.18929, 51.25542 ], [ -0.18938, 51.25553 ], [ -0.18951, 51.25569 ], [ -0.18955, 51.25574 ], [ -0.18959, 51.25579 ], [ -0.18966, 51.25584 ], [ -0.18977, 51.25593 ], [ -0.18984, 51.25597 ], [ -0.18988, 51.25599 ], [ -0.18991, 51.256 ], [ -0.18993, 51.25601 ], [ -0.19009, 51.25605 ], [ -0.19011, 51.25605 ], [ -0.1902, 51.25607 ], [ -0.19027, 51.25608 ], [ -0.19038, 51.2561 ], [ -0.19046, 51.25613 ], [ -0.19063, 51.25619 ], [ -0.19072, 51.25622 ], [ -0.19089, 51.25628 ], [ -0.19111, 51.25635 ], [ -0.19126, 51.25643 ], [ -0.19151, 51.25652 ], [ -0.19174, 51.25661 ], [ -0.19214, 51.25672 ], [ -0.19239, 51.25672 ], [ -0.1923878, 51.2567203 ], [ -0.19254, 51.25663 ], [ -0.1925383, 51.2566307 ], [ -0.19268, 51.2568 ], [ -0.19282, 51.25692 ], [ -0.19298, 51.25701 ], [ -0.19313, 51.25708 ], [ -0.19328, 51.25714 ], [ -0.19366, 51.25723 ], [ -0.1941, 51.25731 ], [ -0.19468, 51.25737 ], [ -0.19498, 51.2574 ], [ -0.19587, 51.25753 ], [ -0.19607, 51.25756 ], [ -0.19614, 51.25758 ], [ -0.19633, 51.25763 ], [ -0.19643, 51.25767 ], [ -0.19653, 51.25772 ], [ -0.19664, 51.25779 ], [ -0.19675, 51.2579 ], [ -0.19693, 51.25808 ], [ -0.197, 51.25825 ], [ -0.19701, 51.25831 ], [ -0.1971, 51.25848 ], [ -0.19716, 51.25861 ], [ -0.19724, 51.25878 ], [ -0.1973, 51.25889 ], [ -0.19733, 51.25896 ], [ -0.19744, 51.25918 ], [ -0.1975, 51.25928 ], [ -0.19756, 51.25933 ], [ -0.19764, 51.25939 ], [ -0.19773, 51.25944 ], [ -0.19785, 51.25947 ], [ -0.19801, 51.25951 ], [ -0.19818, 51.25953 ], [ -0.19839, 51.25966 ], [ -0.19848, 51.25972 ], [ -0.19854, 51.25981 ], [ -0.19855, 51.25982 ], [ -0.19858, 51.25988 ], [ -0.19864, 51.25998 ], [ -0.19868, 51.26007 ], [ -0.19875, 51.26022 ], [ -0.19887, 51.26039 ], [ -0.19897, 51.26053 ], [ -0.1991, 51.26068 ], [ -0.19927, 51.26089 ], [ -0.19959, 51.26129 ], [ -0.20016, 51.262 ], [ -0.20056, 51.2625 ], [ -0.20082, 51.26283 ], [ -0.20094, 51.26297 ], [ -0.20129, 51.26341 ], [ -0.2015, 51.26367 ], [ -0.2016, 51.2638 ], [ -0.20197, 51.26426 ], [ -0.20215, 51.2645 ], [ -0.20224, 51.2646 ], [ -0.2025, 51.26492 ], [ -0.20261, 51.26507 ], [ -0.20263, 51.26508 ], [ -0.20268, 51.26515 ], [ -0.20274, 51.26523 ], [ -0.20276, 51.26524 ], [ -0.20308, 51.26564 ], [ -0.2032, 51.26578 ], [ -0.20333, 51.26591 ], [ -0.20343, 51.26599 ], [ -0.20345, 51.26601 ], [ -0.20348, 51.26602 ], [ -0.20355, 51.26608 ], [ -0.20367, 51.26616 ], [ -0.20378, 51.26623 ], [ -0.20391, 51.26631 ], [ -0.20405, 51.26637 ], [ -0.2041, 51.26639 ], [ -0.20419, 51.26643 ], [ -0.20435, 51.26649 ], [ -0.20448, 51.26654 ], [ -0.20459, 51.26657 ], [ -0.20461, 51.26659 ], [ -0.20462, 51.2666 ], [ -0.20463, 51.26661 ], [ -0.20464, 51.26662 ], [ -0.20466, 51.26664 ], [ -0.20469, 51.26665 ], [ -0.20473, 51.26668 ], [ -0.20477, 51.26669 ], [ -0.2048, 51.2667 ], [ -0.20484, 51.26671 ], [ -0.20489, 51.26673 ], [ -0.20495, 51.26674 ], [ -0.205, 51.26674 ], [ -0.20508, 51.26674 ], [ -0.20513, 51.26673 ], [ -0.2053, 51.26673 ], [ -0.20541, 51.26674 ], [ -0.2055, 51.26675 ], [ -0.20561, 51.26678 ], [ -0.20577, 51.26682 ], [ -0.20593, 51.26687 ], [ -0.206, 51.26689 ], [ -0.20614, 51.26694 ], [ -0.20642, 51.26704 ], [ -0.20674, 51.26717 ], [ -0.20716, 51.26734 ], [ -0.20722, 51.26737 ], [ -0.20769, 51.26758 ], [ -0.20792, 51.26769 ], [ -0.20852, 51.26796 ], [ -0.20879, 51.26808 ], [ -0.20926, 51.26829 ], [ -0.2098, 51.26853 ], [ -0.2099, 51.26857 ], [ -0.21022, 51.26872 ], [ -0.2104, 51.26882 ], [ -0.21053, 51.2689 ], [ -0.21063, 51.26896 ], [ -0.21071, 51.26902 ], [ -0.21079, 51.26909 ], [ -0.21088, 51.26917 ], [ -0.21098, 51.26927 ], [ -0.21103, 51.26934 ], [ -0.21121, 51.26958 ], [ -0.21132, 51.26975 ], [ -0.21139, 51.26987 ], [ -0.21148, 51.27001 ], [ -0.21177, 51.2705 ], [ -0.21227, 51.27134 ], [ -0.21257, 51.27185 ], [ -0.21273, 51.27213 ], [ -0.21287, 51.27235 ], [ -0.21314, 51.2728 ], [ -0.21347, 51.27336 ], [ -0.21354, 51.27349 ], [ -0.21392, 51.27413 ], [ -0.21433, 51.27482 ], [ -0.21443, 51.27499 ], [ -0.21455, 51.2752 ], [ -0.21472, 51.27549 ], [ -0.21544, 51.27675 ], [ -0.21547, 51.2768 ], [ -0.21564, 51.27709 ], [ -0.21574, 51.27726 ], [ -0.21584, 51.27742 ], [ -0.21597, 51.27766 ], [ -0.21632, 51.27823 ], [ -0.21676, 51.27894 ], [ -0.21687, 51.2791 ], [ -0.21713, 51.27947 ], [ -0.21717, 51.27953 ], [ -0.21719, 51.27958 ], [ -0.2172, 51.27961 ], [ -0.21721, 51.27966 ], [ -0.21723, 51.27973 ], [ -0.21721, 51.27975 ], [ -0.21719, 51.27979 ], [ -0.21718, 51.27983 ], [ -0.21718, 51.27988 ], [ -0.21719, 51.27991 ], [ -0.21721, 51.27995 ], [ -0.21723, 51.27998 ], [ -0.21729, 51.28004 ], [ -0.21734, 51.28006 ], [ -0.21737, 51.28007 ], [ -0.21741, 51.28008 ], [ -0.2175, 51.28013 ], [ -0.21756, 51.28018 ], [ -0.21762, 51.28022 ], [ -0.21767, 51.28027 ], [ -0.21772, 51.28032 ], [ -0.21797, 51.2807 ], [ -0.21817, 51.281 ], [ -0.21843, 51.28147 ], [ -0.21854, 51.28166 ], [ -0.21864, 51.28183 ], [ -0.21883, 51.28217 ], [ -0.21884, 51.28221 ], [ -0.219, 51.28251 ], [ -0.21903, 51.28257 ], [ -0.21912, 51.28274 ], [ -0.21929, 51.28309 ], [ -0.21938, 51.28326 ], [ -0.21947, 51.28344 ], [ -0.21955, 51.2836 ], [ -0.21969, 51.28389 ], [ -0.21987, 51.28425 ], [ -0.21998, 51.28445 ], [ -0.22022, 51.28493 ], [ -0.22048, 51.28545 ], [ -0.22056, 51.28561 ], [ -0.22071, 51.28592 ], [ -0.22091, 51.28634 ], [ -0.22107, 51.28673 ], [ -0.22123, 51.2873 ], [ -0.2213, 51.28756 ], [ -0.22151, 51.28829 ], [ -0.22155, 51.28844 ], [ -0.2216, 51.28862 ], [ -0.22174, 51.28915 ], [ -0.22215, 51.29075 ], [ -0.22225, 51.29111 ], [ -0.22247, 51.29193 ], [ -0.22248, 51.29199 ], [ -0.22255, 51.29235 ], [ -0.22252, 51.2924 ], [ -0.22248, 51.29249 ], [ -0.22247, 51.29253 ], [ -0.22246, 51.29259 ], [ -0.22245, 51.29266 ], [ -0.22244, 51.29276 ], [ -0.22246, 51.29282 ], [ -0.22249, 51.29288 ], [ -0.22252, 51.29293 ], [ -0.22255, 51.29297 ], [ -0.22261, 51.29304 ], [ -0.22278, 51.29323 ], [ -0.22285, 51.29329 ], [ -0.22296, 51.29343 ], [ -0.22299, 51.29348 ], [ -0.22301, 51.29351 ], [ -0.22303, 51.29356 ], [ -0.22305, 51.29361 ], [ -0.22305, 51.29369 ], [ -0.22305, 51.29376 ], [ -0.22304, 51.29381 ], [ -0.22303, 51.29386 ], [ -0.223, 51.29399 ], [ -0.22299, 51.294 ], [ -0.22288, 51.2944 ], [ -0.22285, 51.29452 ], [ -0.22279, 51.2947 ], [ -0.22274, 51.29487 ], [ -0.22266, 51.29514 ], [ -0.22258, 51.2954 ], [ -0.22248, 51.29576 ], [ -0.22236, 51.29612 ], [ -0.22218, 51.29677 ], [ -0.22214, 51.29692 ], [ -0.222, 51.29748 ], [ -0.22191, 51.29784 ], [ -0.22187, 51.29803 ], [ -0.22174, 51.29855 ], [ -0.22171, 51.29872 ], [ -0.22164, 51.29902 ], [ -0.22161, 51.29918 ], [ -0.22155, 51.29942 ], [ -0.2214, 51.2999 ], [ -0.22129, 51.30021 ], [ -0.22129, 51.30022 ], [ -0.22121, 51.30049 ], [ -0.22116, 51.30061 ], [ -0.22106, 51.30094 ], [ -0.221, 51.30114 ], [ -0.22096, 51.30124 ], [ -0.22093, 51.30131 ], [ -0.22086, 51.30149 ], [ -0.22077, 51.30176 ], [ -0.22068, 51.30197 ], [ -0.22047, 51.3025 ], [ -0.22046, 51.30252 ], [ -0.22041, 51.30267 ], [ -0.22028, 51.30302 ], [ -0.22021, 51.3032 ], [ -0.22015, 51.30337 ], [ -0.21998, 51.3039 ], [ -0.21983, 51.30435 ], [ -0.21975, 51.30458 ], [ -0.21971, 51.30475 ], [ -0.21968, 51.30485 ], [ -0.21962, 51.30506 ], [ -0.21947, 51.30549 ], [ -0.21939, 51.30573 ], [ -0.21935, 51.30581 ], [ -0.21932, 51.30587 ], [ -0.21924, 51.30602 ], [ -0.21911, 51.30624 ], [ -0.21893, 51.30649 ], [ -0.21891, 51.30651 ], [ -0.21863, 51.30689 ], [ -0.21856, 51.30698 ], [ -0.21855, 51.307 ], [ -0.21841, 51.30717 ], [ -0.21809, 51.30756 ], [ -0.2179, 51.30779 ], [ -0.21782, 51.30787 ], [ -0.21758, 51.30814 ], [ -0.21753, 51.30818 ], [ -0.21743, 51.30829 ], [ -0.21722, 51.30849 ], [ -0.2167, 51.309 ], [ -0.21666, 51.30903 ], [ -0.2165, 51.30918 ], [ -0.216, 51.30968 ], [ -0.21573, 51.30994 ], [ -0.21558, 51.3101 ], [ -0.21544, 51.31027 ], [ -0.21528, 51.31049 ], [ -0.21504, 51.31084 ], [ -0.21488, 51.31109 ], [ -0.21473, 51.31127 ], [ -0.21465, 51.31136 ], [ -0.21464, 51.31137 ], [ -0.21451, 51.31152 ], [ -0.21449, 51.31154 ], [ -0.21432, 51.31171 ], [ -0.21389, 51.31213 ], [ -0.21357, 51.31246 ], [ -0.21337, 51.31265 ], [ -0.21317, 51.31286 ], [ -0.21315, 51.31289 ], [ -0.21312, 51.31291 ], [ -0.21271, 51.31335 ], [ -0.21265, 51.31341 ], [ -0.21246, 51.31362 ], [ -0.21232, 51.31377 ], [ -0.21219, 51.31394 ], [ -0.21217, 51.31397 ], [ -0.21208, 51.31411 ], [ -0.21199, 51.31425 ], [ -0.21192, 51.31439 ], [ -0.21186, 51.31452 ], [ -0.21181, 51.3147 ], [ -0.21179, 51.31479 ], [ -0.21176, 51.31495 ], [ -0.21175, 51.31504 ], [ -0.21173, 51.31518 ], [ -0.21173, 51.31535 ], [ -0.21173, 51.31551 ], [ -0.21172, 51.31575 ], [ -0.21171, 51.31609 ], [ -0.2117, 51.31639 ], [ -0.21169, 51.31649 ], [ -0.21165, 51.31672 ], [ -0.21161, 51.31688 ], [ -0.21157, 51.31712 ], [ -0.21151, 51.3174 ], [ -0.21138, 51.31804 ], [ -0.21131, 51.3184 ], [ -0.21117, 51.31911 ], [ -0.21113, 51.31929 ], [ -0.21102, 51.31979 ], [ -0.2109, 51.32033 ], [ -0.21083, 51.32072 ], [ -0.21072, 51.32124 ], [ -0.21063, 51.32166 ], [ -0.2106, 51.32183 ], [ -0.21056, 51.3221 ], [ -0.21055, 51.32217 ], [ -0.21054, 51.32235 ], [ -0.21053, 51.32279 ], [ -0.21052, 51.32283 ], [ -0.21052, 51.32292 ], [ -0.21052, 51.32303 ], [ -0.21051, 51.32313 ], [ -0.21051, 51.32319 ], [ -0.2105, 51.32335 ], [ -0.21048, 51.32413 ], [ -0.21047, 51.32437 ], [ -0.21045, 51.32499 ], [ -0.21044, 51.32531 ], [ -0.21041, 51.32578 ], [ -0.2104, 51.32651 ], [ -0.21038, 51.32675 ], [ -0.21036, 51.32695 ], [ -0.21031, 51.32714 ], [ -0.2103149, 51.3271443 ], [ -0.21051, 51.32716 ], [ -0.2105057, 51.327157 ], [ -0.21048, 51.32727 ], [ -0.21046, 51.32732 ], [ -0.21042, 51.32745 ], [ -0.21036, 51.32761 ], [ -0.21022, 51.32784 ], [ -0.21018, 51.32792 ], [ -0.21003, 51.3281 ], [ -0.20989, 51.32831 ], [ -0.2098, 51.32843 ], [ -0.2095, 51.32879 ], [ -0.20948, 51.32881 ], [ -0.20939, 51.32892 ], [ -0.20929, 51.32905 ], [ -0.2091, 51.3293 ], [ -0.20881, 51.32967 ], [ -0.20876, 51.32975 ], [ -0.20865, 51.3299 ], [ -0.20808, 51.33065 ], [ -0.20797, 51.33081 ], [ -0.20785, 51.33097 ], [ -0.20777, 51.33108 ], [ -0.20761, 51.3313 ], [ -0.20719, 51.33187 ], [ -0.20707, 51.33204 ], [ -0.20695, 51.3322 ], [ -0.20671, 51.33253 ], [ -0.20669, 51.33255 ], [ -0.20665, 51.33261 ], [ -0.20632, 51.33305 ], [ -0.20588, 51.33363 ], [ -0.20585, 51.33367 ], [ -0.20583, 51.3337 ], [ -0.20573, 51.33383 ], [ -0.20537, 51.33432 ], [ -0.20525, 51.33449 ], [ -0.20496, 51.33489 ], [ -0.20491, 51.33497 ], [ -0.20466, 51.33532 ], [ -0.20391, 51.33637 ], [ -0.20369, 51.33668 ], [ -0.20345, 51.33701 ], [ -0.20333, 51.33717 ], [ -0.20285, 51.33783 ], [ -0.20273, 51.33799 ], [ -0.2027309, 51.3379858 ], [ -0.20277, 51.33805 ], [ -0.20283, 51.33813 ], [ -0.20292, 51.33827 ], [ -0.20303, 51.33839 ], [ -0.20318, 51.33863 ], [ -0.20319, 51.33865 ], [ -0.20328, 51.33876 ], [ -0.20335, 51.33888 ], [ -0.20343, 51.33897 ], [ -0.20355, 51.33915 ], [ -0.20364, 51.33928 ], [ -0.20369, 51.33935 ], [ -0.20375, 51.33945 ], [ -0.20376, 51.33948 ], [ -0.20375, 51.33952 ], [ -0.20376, 51.33953 ], [ -0.20378, 51.33957 ], [ -0.2038, 51.3396 ], [ -0.20383, 51.33964 ], [ -0.20389, 51.33974 ], [ -0.20397, 51.33988 ], [ -0.20401, 51.33996 ], [ -0.20406, 51.34005 ], [ -0.2041, 51.34014 ], [ -0.20461, 51.34108 ], [ -0.20464, 51.34111 ], [ -0.20468, 51.34118 ], [ -0.20498, 51.3418 ], [ -0.20517, 51.34233 ], [ -0.20525, 51.34258 ], [ -0.20528, 51.34266 ], [ -0.20538, 51.34301 ], [ -0.2055, 51.34337 ], [ -0.20569, 51.34397 ], [ -0.20575, 51.34415 ], [ -0.20581, 51.34434 ], [ -0.2059, 51.34461 ], [ -0.20601, 51.34508 ], [ -0.20606, 51.34521 ], [ -0.20624, 51.3457 ], [ -0.20629, 51.34583 ], [ -0.20639, 51.3461 ], [ -0.20648, 51.34629 ], [ -0.20663, 51.34667 ], [ -0.20668, 51.34681 ], [ -0.20672, 51.34693 ], [ -0.20673, 51.34699 ], [ -0.20683, 51.34734 ], [ -0.20684, 51.3474 ], [ -0.20686, 51.34743 ], [ -0.20687, 51.34743 ], [ -0.20688, 51.34743 ], [ -0.20689, 51.34743 ], [ -0.2069, 51.34743 ], [ -0.20691, 51.34743 ], [ -0.20692, 51.34743 ], [ -0.20692, 51.34744 ], [ -0.20693, 51.34744 ], [ -0.20694, 51.34744 ], [ -0.20695, 51.34744 ], [ -0.20695, 51.34745 ], [ -0.20696, 51.34745 ], [ -0.20697, 51.34746 ], [ -0.20698, 51.34746 ], [ -0.20698, 51.34747 ], [ -0.20699, 51.34748 ], [ -0.20699, 51.34749 ], [ -0.20699, 51.3475 ], [ -0.20699, 51.34751 ], [ -0.20699, 51.34752 ], [ -0.20698, 51.34752 ], [ -0.20698, 51.34753 ], [ -0.20697, 51.34753 ], [ -0.20697, 51.34754 ], [ -0.20696, 51.34754 ], [ -0.20696, 51.34755 ], [ -0.20695, 51.34755 ], [ -0.20694, 51.34755 ], [ -0.20694, 51.34756 ], [ -0.20697, 51.34759 ], [ -0.20705, 51.34765 ], [ -0.2072, 51.34777 ], [ -0.20734, 51.34787 ], [ -0.2074, 51.34793 ], [ -0.20761, 51.34808 ], [ -0.20777, 51.34822 ], [ -0.20804, 51.34851 ], [ -0.20805, 51.34852 ], [ -0.20849, 51.34906 ], [ -0.20864, 51.34921 ], [ -0.20881, 51.34935 ], [ -0.20895, 51.34943 ], [ -0.20915, 51.34956 ], [ -0.20964, 51.34987 ], [ -0.20973, 51.34992 ], [ -0.21004, 51.35024 ], [ -0.21017, 51.35035 ], [ -0.21027, 51.3504 ], [ -0.21045, 51.35048 ], [ -0.21047, 51.35049 ], [ -0.2108, 51.35067 ], [ -0.21122, 51.35098 ], [ -0.2113, 51.35105 ], [ -0.21166, 51.35133 ], [ -0.21202, 51.35161 ], [ -0.21219, 51.35173 ], [ -0.21241, 51.35185 ], [ -0.21262, 51.35194 ], [ -0.21267, 51.35196 ], [ -0.213, 51.35208 ], [ -0.21325, 51.35218 ], [ -0.21347, 51.35228 ], [ -0.21378, 51.35254 ], [ -0.21409, 51.3528 ], [ -0.21444, 51.3531 ], [ -0.21485, 51.35345 ], [ -0.21535, 51.35389 ], [ -0.2155, 51.3539 ], [ -0.21556, 51.35389 ], [ -0.21564, 51.35389 ], [ -0.2156352, 51.3538871 ], [ -0.21568, 51.35406 ], [ -0.2156809, 51.3540559 ], [ -0.21574, 51.35422 ], [ -0.21576, 51.35428 ], [ -0.21587, 51.35467 ], [ -0.21597, 51.35491 ], [ -0.21604, 51.35505 ], [ -0.21612, 51.3552 ], [ -0.21613, 51.35523 ], [ -0.21618, 51.35538 ], [ -0.21621, 51.35551 ], [ -0.2162, 51.35572 ], [ -0.21618, 51.35587 ], [ -0.21617, 51.35602 ], [ -0.21616, 51.35611 ], [ -0.21614, 51.35622 ], [ -0.21613, 51.35626 ], [ -0.21613, 51.3563 ], [ -0.21613, 51.35635 ], [ -0.21614, 51.35639 ], [ -0.21615, 51.35644 ], [ -0.21617, 51.3565 ], [ -0.21618, 51.35656 ], [ -0.21619, 51.35659 ], [ -0.21619, 51.35663 ], [ -0.21619, 51.35668 ], [ -0.2162, 51.35676 ], [ -0.21621, 51.35682 ], [ -0.21622, 51.35691 ], [ -0.21623, 51.35698 ], [ -0.21625, 51.35713 ], [ -0.21628, 51.35724 ], [ -0.2163, 51.35736 ], [ -0.21634, 51.35749 ], [ -0.21635, 51.35755 ], [ -0.21635, 51.3576 ], [ -0.21635, 51.35767 ], [ -0.2163545, 51.3576697 ], [ -0.21635, 51.3578 ], [ -0.21635, 51.35784 ], [ -0.21637, 51.35791 ], [ -0.21643, 51.35809 ], [ -0.2165, 51.35833 ], [ -0.21658, 51.35855 ], [ -0.21659, 51.35858 ], [ -0.21662, 51.35867 ], [ -0.21667, 51.35885 ], [ -0.2167, 51.359 ], [ -0.21671, 51.35904 ], [ -0.2168, 51.35923 ], [ -0.21688, 51.35936 ], [ -0.21694, 51.35943 ], [ -0.217, 51.35951 ], [ -0.21726, 51.35987 ], [ -0.21749, 51.3602 ], [ -0.21761, 51.36037 ], [ -0.21787, 51.36068 ], [ -0.21809, 51.36095 ], [ -0.21829, 51.36118 ], [ -0.21836, 51.36126 ], [ -0.21867, 51.36163 ], [ -0.21885, 51.36184 ], [ -0.21892, 51.36192 ], [ -0.21917, 51.3622 ], [ -0.21934, 51.3624 ], [ -0.21979, 51.36292 ], [ -0.21998, 51.36314 ], [ -0.22003, 51.36321 ], [ -0.22009, 51.36328 ], [ -0.22019, 51.3634 ], [ -0.22036, 51.36365 ], [ -0.22052, 51.36391 ], [ -0.22056, 51.36397 ], [ -0.22061, 51.36403 ], [ -0.22069, 51.3641 ], [ -0.22073, 51.36413 ], [ -0.22078, 51.36416 ], [ -0.22084, 51.3642 ], [ -0.2209, 51.36424 ], [ -0.22094, 51.36426 ], [ -0.22098, 51.36429 ], [ -0.22101, 51.3643 ], [ -0.22105, 51.36433 ], [ -0.22107, 51.36434 ], [ -0.22109, 51.36436 ], [ -0.22111, 51.36437 ], [ -0.22117, 51.36441 ], [ -0.22124, 51.36445 ], [ -0.22132, 51.36451 ], [ -0.22138, 51.36455 ], [ -0.22146, 51.36461 ], [ -0.22156, 51.36468 ], [ -0.22164, 51.36475 ], [ -0.22177, 51.36484 ], [ -0.2219, 51.36493 ], [ -0.22197, 51.36497 ], [ -0.22205, 51.36502 ], [ -0.22217, 51.3651 ], [ -0.22224, 51.36515 ], [ -0.22233, 51.3652 ], [ -0.22238, 51.36523 ], [ -0.2231, 51.36566 ], [ -0.22319, 51.36572 ], [ -0.2233, 51.36579 ], [ -0.22344, 51.36587 ], [ -0.22352, 51.36593 ], [ -0.22354, 51.36596 ], [ -0.22357, 51.36599 ], [ -0.22367, 51.36607 ], [ -0.22372, 51.36611 ], [ -0.22388, 51.36626 ], [ -0.22394, 51.36633 ], [ -0.22428, 51.36669 ], [ -0.2245, 51.36693 ], [ -0.22465, 51.36711 ], [ -0.22483, 51.36734 ], [ -0.22487, 51.36739 ], [ -0.22495, 51.36751 ], [ -0.22499, 51.36759 ], [ -0.22516, 51.36792 ], [ -0.22532, 51.36818 ], [ -0.22538, 51.36829 ], [ -0.22546, 51.36842 ], [ -0.22553, 51.36852 ], [ -0.22555, 51.36855 ], [ -0.22565, 51.36868 ], [ -0.22575, 51.36881 ], [ -0.22584, 51.36892 ], [ -0.22589, 51.36898 ], [ -0.22595, 51.36905 ], [ -0.22635, 51.36946 ], [ -0.22654, 51.36964 ], [ -0.22665, 51.36973 ], [ -0.22673, 51.3698 ], [ -0.22676, 51.36983 ], [ -0.22702, 51.37005 ], [ -0.22707, 51.37009 ], [ -0.22727, 51.37027 ], [ -0.22744, 51.37043 ], [ -0.22756, 51.37052 ], [ -0.22769, 51.37066 ], [ -0.22783, 51.3708 ], [ -0.22791, 51.37088 ], [ -0.22804, 51.371 ], [ -0.22849, 51.37131 ], [ -0.22857, 51.37138 ], [ -0.22888, 51.37156 ], [ -0.22915, 51.37171 ], [ -0.22944, 51.37188 ], [ -0.22961, 51.37197 ], [ -0.22985, 51.3721 ], [ -0.23008, 51.37223 ], [ -0.23028, 51.37231 ], [ -0.23059, 51.37244 ], [ -0.23086, 51.37256 ], [ -0.23106, 51.37263 ], [ -0.23131, 51.37273 ], [ -0.23207, 51.37311 ], [ -0.23235, 51.37327 ], [ -0.23249, 51.37335 ], [ -0.2326, 51.37341 ], [ -0.23281, 51.37354 ], [ -0.23303, 51.37367 ], [ -0.23335, 51.37389 ], [ -0.23347, 51.37397 ], [ -0.2336, 51.37407 ], [ -0.23362, 51.37408 ], [ -0.23387, 51.37427 ], [ -0.23393, 51.37432 ], [ -0.23401, 51.37436 ], [ -0.23407, 51.37441 ], [ -0.23446, 51.37471 ], [ -0.23473, 51.37492 ], [ -0.23496, 51.37511 ], [ -0.23524, 51.37533 ], [ -0.23544, 51.37549 ], [ -0.23576, 51.37574 ], [ -0.23587, 51.37581 ], [ -0.23626, 51.3761 ], [ -0.23663, 51.37642 ], [ -0.23688, 51.37659 ], [ -0.23701, 51.37664 ], [ -0.23706, 51.37665 ], [ -0.23718, 51.37668 ], [ -0.23747, 51.37674 ], [ -0.23763, 51.37676 ], [ -0.23772, 51.37677 ], [ -0.23786, 51.37677 ], [ -0.23818, 51.37678 ], [ -0.23834, 51.37683 ], [ -0.23843, 51.37688 ], [ -0.23864, 51.37703 ], [ -0.23888, 51.37721 ], [ -0.2391, 51.37733 ], [ -0.23915, 51.37736 ], [ -0.23925, 51.37742 ], [ -0.23939, 51.3775 ], [ -0.23959, 51.3776 ], [ -0.23991, 51.37778 ], [ -0.24037, 51.37799 ], [ -0.24038, 51.378 ], [ -0.24053, 51.37806 ], [ -0.24073, 51.37815 ], [ -0.24085, 51.37821 ], [ -0.24089, 51.37822 ], [ -0.24104, 51.37829 ], [ -0.24123, 51.37839 ], [ -0.24138, 51.37845 ], [ -0.24148, 51.37851 ], [ -0.24149, 51.37851 ], [ -0.24168, 51.37861 ], [ -0.24178, 51.37867 ], [ -0.24201, 51.37877 ], [ -0.24222, 51.37887 ], [ -0.24224, 51.37888 ], [ -0.2423, 51.37891 ], [ -0.24245, 51.37898 ], [ -0.2427, 51.3791 ], [ -0.24273, 51.37912 ], [ -0.24284, 51.37917 ], [ -0.2433, 51.37937 ], [ -0.24341, 51.37943 ], [ -0.24346, 51.37946 ], [ -0.24354, 51.37951 ], [ -0.24365, 51.37959 ], [ -0.24373, 51.37965 ], [ -0.24386, 51.37981 ], [ -0.24395, 51.37995 ], [ -0.2439507, 51.3799481 ], [ -0.24403, 51.38002 ], [ -0.24422, 51.38024 ], [ -0.2443, 51.38028 ], [ -0.24438, 51.38033 ], [ -0.24447, 51.38038 ], [ -0.24454, 51.38041 ], [ -0.24475, 51.38052 ], [ -0.24495, 51.38062 ], [ -0.24496, 51.38062 ], [ -0.24512, 51.38069 ], [ -0.24517, 51.38071 ], [ -0.24524, 51.38074 ], [ -0.24533, 51.38079 ], [ -0.24547, 51.38086 ], [ -0.24552, 51.38088 ], [ -0.24594, 51.38109 ], [ -0.24604, 51.38114 ], [ -0.24613, 51.38118 ], [ -0.24638, 51.38133 ], [ -0.24686, 51.38161 ], [ -0.24692, 51.38169 ], [ -0.24709, 51.38181 ], [ -0.24719, 51.38189 ], [ -0.24732, 51.38197 ], [ -0.24767, 51.38217 ], [ -0.2478, 51.38224 ], [ -0.24798, 51.38231 ], [ -0.24817, 51.38239 ], [ -0.24836, 51.38247 ], [ -0.24851, 51.38254 ], [ -0.24862, 51.38259 ], [ -0.24871, 51.38264 ], [ -0.24877, 51.38268 ], [ -0.24879, 51.38269 ], [ -0.2489, 51.38276 ], [ -0.24906, 51.38287 ], [ -0.24964, 51.38334 ], [ -0.24997, 51.38357 ], [ -0.2501, 51.38368 ], [ -0.25029, 51.38381 ], [ -0.25054, 51.38398 ], [ -0.2507, 51.38409 ], [ -0.25119, 51.38442 ], [ -0.25144, 51.38458 ], [ -0.25169, 51.38477 ], [ -0.25181, 51.38484 ], [ -0.25184, 51.38485 ], [ -0.2518364, 51.3848462 ], [ -0.25185, 51.38491 ], [ -0.25198, 51.385 ], [ -0.2523, 51.38519 ], [ -0.25255, 51.38537 ], [ -0.25264, 51.3854 ], [ -0.25272, 51.38544 ], [ -0.25275, 51.38545 ], [ -0.25285, 51.38553 ], [ -0.25309, 51.38572 ], [ -0.25321, 51.38581 ], [ -0.25326, 51.38584 ], [ -0.25343, 51.38596 ], [ -0.2536, 51.38607 ], [ -0.25367, 51.38611 ], [ -0.2538, 51.3862 ], [ -0.25394, 51.3863 ], [ -0.25403, 51.38638 ], [ -0.25409, 51.38645 ], [ -0.25411, 51.38653 ], [ -0.25412, 51.38662 ], [ -0.25411, 51.38667 ], [ -0.25412, 51.38668 ], [ -0.25406, 51.38676 ], [ -0.25402, 51.3868 ], [ -0.254, 51.38684 ], [ -0.25392, 51.38695 ], [ -0.25388, 51.38701 ], [ -0.25372, 51.38719 ], [ -0.25355, 51.38738 ], [ -0.25343, 51.3875 ], [ -0.25339, 51.38755 ], [ -0.25333, 51.38764 ], [ -0.25324, 51.38774 ], [ -0.25316, 51.38785 ], [ -0.25309, 51.38796 ], [ -0.25306, 51.38802 ], [ -0.25302, 51.3881 ], [ -0.25299, 51.38819 ], [ -0.25298, 51.38828 ], [ -0.25297, 51.38834 ], [ -0.25298, 51.38841 ], [ -0.25298, 51.38844 ], [ -0.25299, 51.38853 ], [ -0.253, 51.3886 ], [ -0.2531, 51.38891 ], [ -0.2531, 51.38896 ], [ -0.25312, 51.38907 ], [ -0.25314, 51.38923 ], [ -0.25314, 51.38931 ], [ -0.25314, 51.38939 ], [ -0.25314, 51.38946 ], [ -0.25313, 51.38955 ], [ -0.25312, 51.38966 ], [ -0.2531, 51.38978 ], [ -0.25308, 51.38994 ], [ -0.25305, 51.39013 ], [ -0.25303, 51.39024 ], [ -0.25301, 51.39034 ], [ -0.253, 51.39043 ], [ -0.25297, 51.39061 ], [ -0.25288, 51.39105 ], [ -0.25283, 51.3913 ], [ -0.25282, 51.39139 ], [ -0.25281, 51.39144 ], [ -0.2528, 51.39148 ], [ -0.2528, 51.39152 ], [ -0.2528, 51.39161 ], [ -0.2528, 51.39167 ], [ -0.25281, 51.39181 ], [ -0.25281, 51.39187 ], [ -0.25282, 51.39191 ], [ -0.25283, 51.392 ], [ -0.25291, 51.39232 ], [ -0.25294, 51.39241 ], [ -0.25299, 51.39256 ], [ -0.25302, 51.39266 ], [ -0.25304, 51.39276 ], [ -0.25309, 51.39298 ], [ -0.25312, 51.39321 ], [ -0.25316, 51.39348 ], [ -0.25318, 51.39359 ], [ -0.25321, 51.39373 ], [ -0.25322, 51.39376 ], [ -0.25324, 51.3938 ], [ -0.25326, 51.39389 ], [ -0.25329, 51.39396 ], [ -0.25332, 51.39401 ], [ -0.25334, 51.39405 ], [ -0.25337, 51.39409 ], [ -0.25341, 51.39416 ], [ -0.25342, 51.39419 ], [ -0.25343, 51.39423 ], [ -0.25344, 51.39427 ], [ -0.25346, 51.39432 ], [ -0.25328, 51.39451 ], [ -0.25326, 51.39455 ], [ -0.25326, 51.39458 ], [ -0.25325, 51.3946 ], [ -0.25325, 51.39462 ], [ -0.25326, 51.39463 ], [ -0.25326, 51.39465 ], [ -0.25328, 51.39467 ], [ -0.25329, 51.39469 ], [ -0.25331, 51.39472 ], [ -0.25332, 51.39473 ], [ -0.25336, 51.39475 ], [ -0.25341, 51.39478 ], [ -0.25346, 51.39479 ], [ -0.25355, 51.39481 ], [ -0.25373, 51.39483 ], [ -0.2539, 51.39485 ], [ -0.25394, 51.3949 ], [ -0.254, 51.39495 ], [ -0.25404, 51.39501 ], [ -0.2541, 51.39506 ], [ -0.25409, 51.39514 ], [ -0.25409, 51.39521 ], [ -0.25411, 51.39526 ], [ -0.25413, 51.3953 ], [ -0.25416, 51.39535 ], [ -0.2542, 51.39539 ], [ -0.25425, 51.39543 ], [ -0.25436, 51.39552 ], [ -0.25444, 51.39557 ], [ -0.25448, 51.3956 ], [ -0.25452, 51.39563 ], [ -0.25455, 51.39565 ], [ -0.25458, 51.39568 ], [ -0.25463, 51.39572 ], [ -0.25467, 51.39577 ], [ -0.25476, 51.39588 ], [ -0.25483, 51.39597 ], [ -0.25489, 51.39606 ], [ -0.25494, 51.39613 ], [ -0.25497, 51.39618 ], [ -0.25507, 51.39636 ], [ -0.25518, 51.39654 ], [ -0.25523, 51.39665 ], [ -0.25527, 51.39674 ], [ -0.25529, 51.3968 ], [ -0.25531, 51.39685 ], [ -0.25532, 51.39692 ], [ -0.25533, 51.39699 ], [ -0.25534, 51.39708 ], [ -0.25535, 51.39714 ], [ -0.25536, 51.39717 ], [ -0.2554, 51.39763 ], [ -0.25541, 51.39769 ], [ -0.25541, 51.39781 ], [ -0.25542, 51.39789 ], [ -0.25543, 51.39793 ], [ -0.25544, 51.39801 ], [ -0.25545, 51.39808 ], [ -0.25546, 51.39815 ], [ -0.25546, 51.39819 ], [ -0.25547, 51.39821 ], [ -0.25545, 51.39826 ], [ -0.25544, 51.39831 ], [ -0.25543, 51.39834 ], [ -0.25543, 51.39838 ], [ -0.25543, 51.39841 ], [ -0.25544, 51.39845 ], [ -0.25546, 51.3985 ], [ -0.25549, 51.39855 ], [ -0.2554894, 51.3985515 ], [ -0.25548, 51.39857 ], [ -0.25547, 51.39857 ], [ -0.25546, 51.39858 ], [ -0.25546, 51.39859 ], [ -0.25545, 51.3986 ], [ -0.25544, 51.39864 ], [ -0.25544, 51.39865 ], [ -0.25544, 51.39867 ], [ -0.25544, 51.39868 ], [ -0.25544, 51.39869 ], [ -0.25544, 51.39871 ], [ -0.25545, 51.39872 ], [ -0.25547, 51.39874 ], [ -0.2555, 51.39877 ], [ -0.25552, 51.39878 ], [ -0.25554, 51.39879 ], [ -0.25556, 51.3988 ], [ -0.2556, 51.39882 ], [ -0.25558, 51.39886 ], [ -0.25558, 51.3989 ], [ -0.25557, 51.39895 ], [ -0.25557, 51.39899 ], [ -0.25557, 51.39903 ], [ -0.25556, 51.39913 ], [ -0.25556, 51.39917 ], [ -0.25556, 51.39919 ], [ -0.25556, 51.39926 ], [ -0.25556, 51.39938 ], [ -0.25557, 51.39949 ], [ -0.25557, 51.39952 ], [ -0.25558, 51.39961 ], [ -0.25561, 51.39987 ], [ -0.25563, 51.39994 ], [ -0.25564, 51.40004 ], [ -0.25566, 51.40013 ], [ -0.25567, 51.40018 ], [ -0.25568, 51.40021 ], [ -0.25571, 51.4003 ], [ -0.25577, 51.40051 ], [ -0.25581, 51.40066 ], [ -0.25586, 51.40081 ], [ -0.25588, 51.40088 ], [ -0.25595, 51.4011 ], [ -0.25598, 51.40121 ], [ -0.25608, 51.40149 ], [ -0.25628, 51.4021 ], [ -0.25634, 51.40228 ], [ -0.25642, 51.4025 ], [ -0.25649, 51.40267 ], [ -0.2564872, 51.4026747 ], [ -0.25653, 51.40274 ], [ -0.25655, 51.4028 ], [ -0.2566, 51.40292 ], [ -0.25661, 51.40295 ], [ -0.25662, 51.40295 ], [ -0.25663, 51.40296 ], [ -0.25664, 51.40296 ], [ -0.25665, 51.40296 ], [ -0.25666, 51.40297 ], [ -0.25667, 51.40297 ], [ -0.25667, 51.40298 ], [ -0.25668, 51.40298 ], [ -0.25668, 51.40299 ], [ -0.25669, 51.40299 ], [ -0.25669, 51.403 ], [ -0.2567, 51.403 ], [ -0.2567, 51.40301 ], [ -0.2567, 51.40302 ], [ -0.2567, 51.40303 ], [ -0.25669, 51.40303 ], [ -0.25669, 51.40304 ], [ -0.25669, 51.40305 ], [ -0.25668, 51.40305 ], [ -0.2567, 51.40309 ], [ -0.25673, 51.40319 ], [ -0.25683, 51.40349 ], [ -0.25684, 51.40352 ], [ -0.25682, 51.4036 ], [ -0.25686, 51.40374 ], [ -0.25693, 51.40402 ], [ -0.25695, 51.40407 ], [ -0.25695, 51.4041 ], [ -0.257, 51.40425 ], [ -0.25707, 51.40451 ], [ -0.25708, 51.40453 ], [ -0.25709, 51.40457 ], [ -0.2571, 51.4046 ], [ -0.25711, 51.40465 ], [ -0.25713, 51.40471 ], [ -0.25714, 51.40475 ], [ -0.25719, 51.40491 ], [ -0.25726, 51.40513 ], [ -0.25742, 51.40564 ], [ -0.25747, 51.40577 ], [ -0.25753, 51.40596 ], [ -0.25756, 51.40604 ], [ -0.25767, 51.40637 ], [ -0.25769, 51.40642 ], [ -0.25773, 51.40652 ], [ -0.25802, 51.40741 ], [ -0.25823, 51.40805 ], [ -0.25832, 51.40834 ], [ -0.25844, 51.40872 ], [ -0.25856, 51.40909 ], [ -0.25858, 51.40915 ], [ -0.2587, 51.4095 ], [ -0.25876, 51.4097 ], [ -0.25877, 51.40973 ], [ -0.25883, 51.40989 ], [ -0.25891, 51.41013 ], [ -0.259, 51.41039 ], [ -0.25907, 51.41059 ], [ -0.25913, 51.41075 ], [ -0.25924, 51.41101 ], [ -0.25928, 51.41111 ], [ -0.25947, 51.41153 ], [ -0.25953, 51.41165 ], [ -0.25959, 51.41181 ], [ -0.25964, 51.41196 ], [ -0.2597, 51.41212 ], [ -0.25971, 51.41219 ], [ -0.25974, 51.41226 ], [ -0.25979, 51.41247 ], [ -0.25981, 51.4126 ], [ -0.25985, 51.41276 ], [ -0.25988, 51.41296 ], [ -0.25989, 51.41312 ], [ -0.2599, 51.41316 ], [ -0.25991, 51.41326 ], [ -0.25992, 51.41344 ], [ -0.25994, 51.41367 ], [ -0.25995, 51.41377 ], [ -0.25996, 51.41382 ], [ -0.25998, 51.41388 ], [ -0.26, 51.41395 ], [ -0.26003, 51.41406 ], [ -0.26017, 51.41442 ], [ -0.26043, 51.41494 ], [ -0.26053, 51.41512 ], [ -0.26056, 51.41519 ], [ -0.26073, 51.41546 ], [ -0.26107, 51.41606 ], [ -0.26117, 51.41623 ], [ -0.26126, 51.41639 ], [ -0.2613, 51.41646 ], [ -0.26138, 51.41659 ], [ -0.26146, 51.41673 ], [ -0.2615, 51.4168 ], [ -0.2614985, 51.4167989 ], [ -0.26156, 51.4168 ], [ -0.26164, 51.41681 ], [ -0.26173, 51.41681 ], [ -0.26185, 51.41682 ], [ -0.26197, 51.41682 ], [ -0.26213, 51.41681 ], [ -0.26222, 51.41681 ], [ -0.26232, 51.4168 ], [ -0.26247, 51.41679 ], [ -0.26262, 51.41677 ], [ -0.26277, 51.41675 ], [ -0.26298, 51.41672 ], [ -0.26307, 51.41671 ], [ -0.26318, 51.41668 ], [ -0.26331, 51.41666 ], [ -0.26346, 51.41663 ], [ -0.26367, 51.41658 ], [ -0.26371, 51.41657 ], [ -0.26389, 51.41653 ], [ -0.26407, 51.41648 ], [ -0.26425, 51.41642 ], [ -0.26456, 51.41633 ], [ -0.26467, 51.4163 ], [ -0.26508, 51.41615 ], [ -0.2650756, 51.4161508 ], [ -0.26513, 51.41621 ], [ -0.26519, 51.4163 ], [ -0.26525, 51.41639 ], [ -0.2653, 51.41646 ], [ -0.26538, 51.41658 ], [ -0.26561, 51.41694 ], [ -0.26592, 51.41742 ], [ -0.26595, 51.41746 ], [ -0.26629, 51.41797 ], [ -0.26662, 51.41849 ], [ -0.26668, 51.41859 ], [ -0.26681, 51.41878 ], [ -0.26694, 51.41899 ], [ -0.26717, 51.41934 ], [ -0.26735, 51.41962 ], [ -0.26748, 51.41982 ], [ -0.26763, 51.42003 ], [ -0.26769, 51.42011 ], [ -0.26771, 51.42014 ], [ -0.26776, 51.4202 ], [ -0.26782, 51.42025 ], [ -0.26788, 51.42031 ], [ -0.26796, 51.42036 ], [ -0.26806, 51.42044 ], [ -0.26825, 51.42057 ], [ -0.26847, 51.4207 ], [ -0.26873, 51.42086 ], [ -0.26892, 51.42097 ], [ -0.26907, 51.42107 ], [ -0.26925, 51.42117 ], [ -0.26945, 51.42129 ], [ -0.26961, 51.42138 ], [ -0.26979, 51.42148 ], [ -0.27023, 51.42174 ], [ -0.27089, 51.42214 ], [ -0.27147, 51.42252 ], [ -0.27163, 51.42263 ], [ -0.27197, 51.42287 ], [ -0.27215, 51.42301 ], [ -0.27226, 51.42309 ], [ -0.27238, 51.42318 ], [ -0.27263, 51.42336 ], [ -0.27293, 51.42361 ], [ -0.27307, 51.42373 ], [ -0.27316, 51.42384 ], [ -0.27323, 51.4239 ], [ -0.27334, 51.42403 ], [ -0.27359, 51.42433 ], [ -0.27379, 51.42459 ], [ -0.27392, 51.42475 ], [ -0.27399, 51.42483 ], [ -0.27406, 51.4249 ], [ -0.2741, 51.42494 ], [ -0.27415, 51.42497 ], [ -0.27419, 51.42501 ], [ -0.27426, 51.42505 ], [ -0.27432, 51.42508 ], [ -0.2744, 51.4251 ], [ -0.27447, 51.42512 ], [ -0.2744747, 51.4251215 ], [ -0.27438, 51.42524 ], [ -0.274382, 51.4252388 ], [ -0.27457, 51.42533 ], [ -0.27483, 51.42546 ], [ -0.27499, 51.42554 ], [ -0.27545, 51.42577 ], [ -0.27561, 51.42586 ], [ -0.27595, 51.42603 ], [ -0.27606, 51.42608 ], [ -0.27609, 51.42611 ], [ -0.27614, 51.42615 ], [ -0.27619, 51.4262 ], [ -0.27624, 51.42625 ], [ -0.27627, 51.42629 ], [ -0.276269, 51.4262893 ], [ -0.27632, 51.42629 ], [ -0.27638, 51.42632 ], [ -0.27648, 51.42637 ], [ -0.27672, 51.42656 ], [ -0.27689, 51.42667 ], [ -0.27724, 51.42691 ], [ -0.27743, 51.42705 ], [ -0.27764, 51.42716 ], [ -0.27782, 51.42728 ], [ -0.27797, 51.42743 ], [ -0.27809, 51.42753 ], [ -0.27816, 51.42756 ], [ -0.27829, 51.42763 ], [ -0.27842, 51.42773 ], [ -0.27854, 51.42782 ], [ -0.27876, 51.42799 ], [ -0.27896, 51.42815 ], [ -0.2791, 51.42828 ], [ -0.27927, 51.42837 ], [ -0.27937, 51.42841 ], [ -0.27945, 51.42855 ], [ -0.27945, 51.4286 ], [ -0.27945, 51.42863 ], [ -0.2794455, 51.4286337 ], [ -0.2795, 51.42864 ], [ -0.27961, 51.42867 ], [ -0.27967, 51.42869 ], [ -0.27972, 51.42871 ], [ -0.27978, 51.42874 ], [ -0.27983, 51.42877 ], [ -0.27985, 51.42879 ], [ -0.2799, 51.42881 ], [ -0.28017, 51.42899 ], [ -0.28045, 51.42917 ], [ -0.28077, 51.42938 ], [ -0.28088, 51.42945 ], [ -0.28153, 51.42985 ], [ -0.282, 51.43014 ], [ -0.28327, 51.43093 ], [ -0.28342, 51.43103 ], [ -0.28428, 51.4316 ], [ -0.2844, 51.43169 ], [ -0.28474, 51.43191 ], [ -0.28544, 51.4324 ], [ -0.28564, 51.43253 ], [ -0.2857, 51.43258 ], [ -0.28628, 51.43293 ], [ -0.28645, 51.43305 ], [ -0.28663, 51.43318 ], [ -0.2866324, 51.4331775 ], [ -0.28681, 51.43332 ], [ -0.28686, 51.43335 ], [ -0.287, 51.43346 ], [ -0.28708, 51.43352 ], [ -0.28721, 51.43368 ], [ -0.28728, 51.43377 ], [ -0.2873, 51.43379 ], [ -0.28736, 51.43389 ], [ -0.28739, 51.43394 ], [ -0.28748, 51.43407 ], [ -0.28751, 51.4341 ], [ -0.28763, 51.43422 ], [ -0.28766, 51.43425 ], [ -0.28773, 51.43433 ], [ -0.28788, 51.43456 ], [ -0.28796, 51.43475 ], [ -0.28803, 51.43493 ], [ -0.28807, 51.43502 ], [ -0.28811, 51.4351 ], [ -0.28815, 51.43518 ], [ -0.28819, 51.43523 ], [ -0.28822, 51.43527 ], [ -0.28832, 51.43537 ], [ -0.28845, 51.4355 ], [ -0.28855, 51.43563 ], [ -0.28856, 51.43565 ], [ -0.28862, 51.43577 ], [ -0.28864, 51.43581 ], [ -0.28877, 51.43617 ], [ -0.28879, 51.43623 ], [ -0.28882, 51.43635 ], [ -0.28886, 51.43648 ], [ -0.2889, 51.43667 ], [ -0.2889, 51.43671 ], [ -0.28889, 51.43682 ], [ -0.28887, 51.43688 ], [ -0.28884, 51.43698 ], [ -0.28881, 51.43705 ], [ -0.28881, 51.43706 ], [ -0.28873, 51.43723 ], [ -0.28867, 51.43741 ], [ -0.28865, 51.43745 ], [ -0.28861, 51.43756 ], [ -0.28861, 51.43758 ], [ -0.28858, 51.43772 ], [ -0.28858, 51.43786 ], [ -0.28859, 51.43794 ], [ -0.2886, 51.43808 ], [ -0.28861, 51.43812 ], [ -0.28864, 51.4383 ], [ -0.28864, 51.43832 ], [ -0.28868, 51.43847 ], [ -0.28872, 51.43857 ], [ -0.28877, 51.43865 ], [ -0.2888, 51.43872 ], [ -0.28888, 51.43882 ], [ -0.28901, 51.43897 ], [ -0.28901, 51.43898 ], [ -0.28914, 51.43914 ], [ -0.28919, 51.4392 ], [ -0.28936, 51.43942 ], [ -0.28955, 51.43959 ], [ -0.28967, 51.43972 ], [ -0.28996, 51.44009 ], [ -0.29005, 51.4402 ], [ -0.29008, 51.44025 ], [ -0.29014, 51.44033 ], [ -0.2902, 51.4404 ], [ -0.2902, 51.44041 ], [ -0.29024, 51.44046 ], [ -0.29035, 51.44056 ], [ -0.2906, 51.44079 ], [ -0.29067, 51.44086 ], [ -0.29082, 51.44102 ], [ -0.29084, 51.44103 ], [ -0.29096, 51.44118 ], [ -0.29097, 51.44119 ], [ -0.29109, 51.44134 ], [ -0.29121, 51.4415 ], [ -0.29131, 51.44156 ], [ -0.29141, 51.44163 ], [ -0.29148, 51.44168 ], [ -0.29161, 51.4418 ], [ -0.29165, 51.44188 ], [ -0.29165, 51.44189 ], [ -0.291652, 51.4418903 ], [ -0.29189, 51.44215 ], [ -0.29194, 51.4422 ], [ -0.29199, 51.44229 ], [ -0.29203, 51.4424 ], [ -0.29203, 51.4425 ], [ -0.29199, 51.44267 ], [ -0.29198, 51.44278 ], [ -0.29197, 51.44285 ], [ -0.29196, 51.44291 ], [ -0.29196, 51.44303 ], [ -0.29196, 51.44305 ], [ -0.29194, 51.4431 ], [ -0.29192, 51.44321 ], [ -0.29191, 51.44328 ], [ -0.2919, 51.44339 ], [ -0.2919, 51.44351 ], [ -0.29192, 51.44365 ], [ -0.29197, 51.44374 ], [ -0.29202, 51.44383 ], [ -0.29208, 51.44391 ], [ -0.2922, 51.44408 ], [ -0.29224, 51.44414 ], [ -0.29248, 51.44439 ], [ -0.29249, 51.4444 ], [ -0.29271, 51.44461 ], [ -0.29277, 51.4447 ], [ -0.29286, 51.44484 ], [ -0.29299, 51.44503 ], [ -0.29302, 51.44513 ], [ -0.29307, 51.44525 ], [ -0.2931, 51.44531 ], [ -0.29318, 51.44544 ], [ -0.29335, 51.44561 ], [ -0.29336, 51.44562 ], [ -0.29353, 51.44577 ], [ -0.29358, 51.44581 ], [ -0.29386, 51.44606 ], [ -0.29388, 51.44608 ], [ -0.29407, 51.4463 ], [ -0.29414, 51.44638 ], [ -0.29416, 51.4464 ], [ -0.29421, 51.44653 ], [ -0.29426, 51.44669 ], [ -0.29426, 51.44684 ], [ -0.29425, 51.44691 ], [ -0.29424, 51.447 ], [ -0.29415, 51.44727 ], [ -0.29408, 51.44744 ], [ -0.29402, 51.44757 ], [ -0.29401, 51.44761 ], [ -0.29386, 51.44796 ], [ -0.29387, 51.44809 ], [ -0.29388, 51.44812 ], [ -0.29389, 51.44815 ], [ -0.2939, 51.44823 ], [ -0.29392, 51.44827 ], [ -0.29397, 51.44832 ], [ -0.29403, 51.44837 ], [ -0.29413, 51.44842 ], [ -0.29431, 51.44851 ], [ -0.29435, 51.44854 ], [ -0.29444, 51.4486 ], [ -0.29454, 51.44868 ], [ -0.29457, 51.4487 ], [ -0.29465, 51.44879 ], [ -0.2947, 51.44887 ], [ -0.29477, 51.449 ], [ -0.2948, 51.44908 ], [ -0.29484, 51.44918 ], [ -0.29488, 51.44928 ], [ -0.2949, 51.44936 ], [ -0.29492, 51.44945 ], [ -0.29492, 51.44953 ], [ -0.29493, 51.44967 ], [ -0.29492, 51.44971 ], [ -0.29492, 51.44977 ], [ -0.29491, 51.44984 ], [ -0.29485, 51.45 ], [ -0.29483, 51.45003 ], [ -0.2948314, 51.4500277 ], [ -0.29492, 51.45015 ], [ -0.29495, 51.45019 ], [ -0.29495, 51.45023 ], [ -0.29494, 51.4503 ], [ -0.29496, 51.4504 ], [ -0.29497, 51.45051 ], [ -0.29494, 51.45059 ], [ -0.29491, 51.45066 ], [ -0.29487, 51.4507 ], [ -0.29473, 51.45081 ], [ -0.29458, 51.45091 ], [ -0.29438, 51.45104 ], [ -0.29419, 51.45117 ], [ -0.29411, 51.45123 ], [ -0.29398, 51.4513 ], [ -0.29378, 51.45143 ], [ -0.29336, 51.45168 ], [ -0.2933603, 51.4516764 ], [ -0.2934, 51.45181 ], [ -0.29342, 51.45185 ], [ -0.29343, 51.45189 ], [ -0.29344, 51.45195 ], [ -0.29342, 51.452 ], [ -0.29339, 51.45202 ], [ -0.2933895, 51.4520239 ], [ -0.29352, 51.45215 ], [ -0.2935185, 51.4521488 ], [ -0.29331, 51.45227 ], [ -0.29309, 51.45239 ], [ -0.29305, 51.45242 ], [ -0.29304, 51.45242 ], [ -0.29304, 51.45243 ], [ -0.29303, 51.45243 ], [ -0.29303, 51.45244 ], [ -0.29304, 51.45245 ], [ -0.29305, 51.45245 ], [ -0.29306, 51.45246 ], [ -0.29318, 51.45251 ], [ -0.29408, 51.45291 ], [ -0.29432, 51.45301 ], [ -0.29455, 51.45311 ], [ -0.2945532, 51.4531127 ], [ -0.29426, 51.4535 ], [ -0.294, 51.45384 ], [ -0.2938, 51.45411 ], [ -0.29379, 51.45412 ], [ -0.29356, 51.45445 ], [ -0.2935, 51.45455 ], [ -0.29332, 51.45479 ], [ -0.29312, 51.45501 ], [ -0.29307, 51.45506 ], [ -0.293, 51.45513 ], [ -0.29285, 51.45527 ], [ -0.29279, 51.45534 ], [ -0.29248, 51.45565 ], [ -0.29234, 51.45579 ], [ -0.2923, 51.45584 ], [ -0.29228, 51.45587 ], [ -0.29196, 51.45618 ], [ -0.29187, 51.45627 ], [ -0.29164, 51.45647 ], [ -0.29154, 51.45655 ], [ -0.29146, 51.45661 ], [ -0.29122, 51.45681 ], [ -0.29116, 51.45686 ], [ -0.29073, 51.45726 ], [ -0.2905, 51.45747 ], [ -0.29016, 51.4578 ], [ -0.29003, 51.45791 ], [ -0.28984, 51.45808 ], [ -0.2897, 51.45823 ], [ -0.28966, 51.45827 ], [ -0.28962, 51.45832 ], [ -0.2896, 51.45836 ], [ -0.28957, 51.4584 ], [ -0.28954, 51.45848 ], [ -0.28949, 51.45859 ], [ -0.28944, 51.45875 ], [ -0.28938, 51.45894 ], [ -0.28912, 51.45972 ], [ -0.28911, 51.45974 ], [ -0.28908, 51.45986 ], [ -0.28906, 51.45995 ], [ -0.28905, 51.45999 ], [ -0.28904, 51.46004 ], [ -0.28903, 51.46024 ], [ -0.28903, 51.46027 ], [ -0.28903, 51.46078 ], [ -0.28902, 51.46087 ], [ -0.28902, 51.46099 ], [ -0.28901, 51.46104 ], [ -0.289, 51.46108 ], [ -0.28897, 51.46111 ], [ -0.28894, 51.46115 ], [ -0.28891, 51.46119 ], [ -0.28887, 51.46122 ], [ -0.28876, 51.46132 ], [ -0.28873, 51.46135 ], [ -0.28869, 51.46137 ], [ -0.2884, 51.46152 ], [ -0.28835, 51.46155 ], [ -0.2883, 51.46159 ], [ -0.28828, 51.46163 ], [ -0.28827, 51.46167 ], [ -0.28827, 51.46171 ], [ -0.28827, 51.46184 ], [ -0.28829, 51.46283 ], [ -0.2883, 51.46296 ], [ -0.28842, 51.46415 ], [ -0.28849, 51.46455 ], [ -0.2885, 51.46459 ], [ -0.28853, 51.4647 ], [ -0.28857, 51.4649 ], [ -0.28857, 51.46492 ], [ -0.28857, 51.46502 ], [ -0.28858, 51.46505 ], [ -0.28859, 51.46509 ], [ -0.2886, 51.46521 ], [ -0.28861, 51.46528 ], [ -0.2886, 51.46555 ], [ -0.2886, 51.46601 ], [ -0.28859, 51.46608 ], [ -0.28859, 51.46632 ], [ -0.28859, 51.46638 ], [ -0.28855, 51.46647 ], [ -0.2885, 51.46656 ], [ -0.28845, 51.46666 ], [ -0.28833, 51.46694 ], [ -0.28828, 51.46704 ], [ -0.28825, 51.46718 ], [ -0.28823, 51.46727 ], [ -0.28821, 51.46731 ], [ -0.28817, 51.46738 ], [ -0.28815, 51.46747 ], [ -0.28815, 51.46755 ], [ -0.28812, 51.46756 ], [ -0.28811, 51.46757 ], [ -0.2881, 51.46757 ], [ -0.28809, 51.46758 ], [ -0.28808, 51.46759 ], [ -0.28807, 51.46759 ], [ -0.28806, 51.4676 ], [ -0.28805, 51.46762 ], [ -0.28803, 51.46764 ], [ -0.28803, 51.46765 ], [ -0.28803, 51.46766 ], [ -0.28803, 51.46767 ], [ -0.28803, 51.46768 ], [ -0.28803, 51.46769 ], [ -0.28803, 51.4677 ], [ -0.28804, 51.4677 ], [ -0.28804, 51.46771 ], [ -0.28804, 51.46772 ], [ -0.28805, 51.46772 ], [ -0.28805, 51.46773 ], [ -0.28806, 51.46774 ], [ -0.28807, 51.46774 ], [ -0.28809, 51.46776 ], [ -0.2881, 51.46777 ], [ -0.28816, 51.46779 ], [ -0.2882, 51.4678 ], [ -0.28823, 51.46789 ], [ -0.28831, 51.46797 ], [ -0.28823, 51.46828 ], [ -0.28819, 51.46843 ], [ -0.28817, 51.4685 ], [ -0.28807, 51.46889 ], [ -0.28805, 51.469 ], [ -0.28804, 51.46906 ], [ -0.28803, 51.46911 ], [ -0.28803, 51.46916 ], [ -0.28803, 51.46921 ], [ -0.28802, 51.46929 ], [ -0.28802, 51.46933 ], [ -0.28802, 51.46937 ], [ -0.28801, 51.46941 ], [ -0.288, 51.46946 ], [ -0.28799, 51.46952 ], [ -0.28798, 51.46959 ], [ -0.28797, 51.46964 ], [ -0.28793, 51.46978 ], [ -0.28792, 51.46985 ], [ -0.28781, 51.47027 ], [ -0.28778, 51.47039 ], [ -0.28777, 51.47046 ], [ -0.28775, 51.47053 ], [ -0.28772, 51.4706 ], [ -0.28769, 51.47067 ], [ -0.28768, 51.47071 ], [ -0.28763, 51.47081 ], [ -0.28758, 51.4709 ], [ -0.28753, 51.47099 ], [ -0.2873, 51.47139 ], [ -0.2872, 51.47157 ], [ -0.2871, 51.47179 ], [ -0.28697, 51.47212 ], [ -0.28689, 51.47232 ], [ -0.28683, 51.47252 ], [ -0.28679, 51.47265 ], [ -0.28671, 51.47293 ], [ -0.2867, 51.47297 ], [ -0.28664, 51.47319 ], [ -0.28661, 51.4734 ], [ -0.28661, 51.47368 ], [ -0.28661, 51.47403 ], [ -0.28661, 51.47425 ], [ -0.28661, 51.47443 ], [ -0.28661, 51.47455 ], [ -0.28662, 51.47481 ], [ -0.28662, 51.47499 ], [ -0.28663, 51.47508 ], [ -0.28664, 51.47513 ], [ -0.28667, 51.47552 ], [ -0.28667, 51.47561 ], [ -0.28668, 51.47584 ], [ -0.28668, 51.47587 ], [ -0.28669, 51.47602 ], [ -0.28671, 51.47621 ], [ -0.28672, 51.47625 ], [ -0.28672, 51.47629 ], [ -0.28673, 51.47639 ], [ -0.28673, 51.47654 ], [ -0.28674, 51.47664 ], [ -0.28674, 51.47667 ], [ -0.28675, 51.4767 ], [ -0.28675, 51.47696 ], [ -0.28675, 51.477 ], [ -0.28675, 51.47719 ], [ -0.28675, 51.47732 ], [ -0.28674, 51.47742 ], [ -0.28673, 51.47767 ], [ -0.28673, 51.47774 ], [ -0.28672, 51.47798 ], [ -0.28672, 51.47803 ], [ -0.28672, 51.47814 ], [ -0.28675, 51.47821 ], [ -0.28684, 51.47834 ], [ -0.28689, 51.47844 ], [ -0.28691, 51.47848 ], [ -0.28693, 51.47853 ], [ -0.28695, 51.47858 ], [ -0.28697, 51.47865 ], [ -0.28697, 51.47869 ], [ -0.28698, 51.47874 ], [ -0.28698, 51.47878 ], [ -0.28697, 51.47882 ], [ -0.28697, 51.47887 ], [ -0.28696, 51.47891 ], [ -0.28695, 51.47893 ], [ -0.28693, 51.47899 ], [ -0.28688, 51.47906 ], [ -0.28684, 51.47914 ], [ -0.28681, 51.47918 ], [ -0.2868, 51.4792 ], [ -0.28678, 51.47925 ], [ -0.28677, 51.4793 ], [ -0.28678, 51.47934 ], [ -0.28679, 51.47941 ], [ -0.28682, 51.47946 ], [ -0.28684, 51.4795 ], [ -0.28686, 51.47952 ], [ -0.28688, 51.47954 ], [ -0.28691, 51.47957 ], [ -0.28694, 51.47959 ], [ -0.287, 51.47963 ], [ -0.28705, 51.47965 ], [ -0.28712, 51.47968 ], [ -0.28768, 51.47988 ], [ -0.28788, 51.47995 ], [ -0.28793, 51.47997 ], [ -0.28837, 51.48013 ], [ -0.28896, 51.48035 ], [ -0.2889557, 51.4803485 ], [ -0.28861, 51.48074 ], [ -0.28825, 51.48117 ], [ -0.28821, 51.48122 ], [ -0.28787, 51.4816 ], [ -0.28772, 51.48178 ], [ -0.28742, 51.48208 ], [ -0.2872, 51.4823 ], [ -0.28698, 51.48251 ], [ -0.28691, 51.48258 ], [ -0.2869, 51.48264 ], [ -0.28684, 51.48276 ], [ -0.28686, 51.48288 ], [ -0.28689, 51.48298 ], [ -0.28692, 51.48308 ], [ -0.28695, 51.48317 ], [ -0.28697, 51.48321 ], [ -0.287, 51.48329 ], [ -0.28707, 51.48344 ], [ -0.28706, 51.48348 ], [ -0.28705, 51.48355 ], [ -0.28712, 51.48371 ], [ -0.28722, 51.48405 ], [ -0.28727, 51.48421 ], [ -0.2873, 51.48433 ], [ -0.2873, 51.48436 ], [ -0.28733, 51.48448 ], [ -0.28734, 51.48461 ], [ -0.28734, 51.48466 ], [ -0.28735, 51.48495 ], [ -0.28737, 51.48518 ], [ -0.28737, 51.48528 ], [ -0.28737, 51.48529 ], [ -0.28738, 51.48541 ], [ -0.28738, 51.48558 ], [ -0.2874, 51.48607 ], [ -0.2874, 51.48618 ], [ -0.2874, 51.48624 ], [ -0.28741, 51.48659 ], [ -0.28742, 51.48695 ], [ -0.28743, 51.48726 ], [ -0.28743, 51.48757 ], [ -0.28745, 51.48807 ], [ -0.28745, 51.48811 ], [ -0.28738, 51.48819 ], [ -0.28738, 51.48826 ], [ -0.28738, 51.48831 ], [ -0.28738, 51.48839 ], [ -0.28744, 51.48848 ], [ -0.28741, 51.48859 ], [ -0.28742, 51.4887 ], [ -0.28742, 51.48872 ], [ -0.28744, 51.48883 ], [ -0.28746, 51.48889 ], [ -0.2875, 51.48893 ], [ -0.2874968, 51.4889292 ], [ -0.28744, 51.48899 ], [ -0.28743, 51.48901 ], [ -0.28732, 51.48911 ], [ -0.28728, 51.48916 ], [ -0.28729, 51.48921 ], [ -0.28724, 51.48924 ], [ -0.28722, 51.48925 ], [ -0.28712, 51.48931 ], [ -0.28705, 51.48934 ], [ -0.28696, 51.4894 ], [ -0.28664, 51.48957 ], [ -0.2866, 51.48959 ], [ -0.28648, 51.48965 ], [ -0.28644, 51.48967 ], [ -0.28638, 51.48975 ], [ -0.28628, 51.4898 ], [ -0.28618, 51.48984 ], [ -0.28597, 51.48996 ], [ -0.285967, 51.4899589 ], [ -0.28591, 51.49002 ], [ -0.28572, 51.49011 ], [ -0.2855, 51.49022 ], [ -0.2854, 51.49027 ], [ -0.28528, 51.49033 ], [ -0.2851, 51.49042 ], [ -0.28492, 51.49052 ], [ -0.28472, 51.49063 ], [ -0.28463, 51.49067 ], [ -0.28437, 51.4908 ], [ -0.28417, 51.49088 ], [ -0.2841, 51.49091 ], [ -0.28382, 51.49102 ], [ -0.28358, 51.4911 ], [ -0.28351, 51.49113 ], [ -0.28322, 51.49123 ], [ -0.2832213, 51.491233 ], [ -0.28328, 51.4913 ], [ -0.28331, 51.49136 ], [ -0.2832, 51.49138 ], [ -0.2831965, 51.4913819 ], [ -0.28311, 51.49142 ], [ -0.28298, 51.4915 ], [ -0.28289, 51.49153 ], [ -0.2828, 51.49155 ], [ -0.2828011, 51.4915476 ], [ -0.28281, 51.49156 ], [ -0.28283, 51.49158 ], [ -0.28284, 51.49159 ], [ -0.28286, 51.49159 ], [ -0.28291, 51.49162 ], [ -0.28296, 51.49164 ], [ -0.28287, 51.49171 ], [ -0.2828723, 51.4917138 ], [ -0.28281, 51.49176 ], [ -0.2828, 51.49176 ], [ -0.28269, 51.49171 ], [ -0.28268, 51.49171 ], [ -0.28267, 51.49171 ], [ -0.28259, 51.49178 ], [ -0.28252, 51.49187 ], [ -0.28247, 51.49186 ], [ -0.28243, 51.49186 ], [ -0.2824271, 51.4918611 ], [ -0.28238, 51.49188 ], [ -0.28236, 51.49189 ], [ -0.28233, 51.49193 ], [ -0.28232, 51.49194 ], [ -0.28231, 51.49196 ], [ -0.28228, 51.49199 ], [ -0.28225, 51.492 ], [ -0.28222, 51.49203 ], [ -0.28221, 51.49207 ], [ -0.28221, 51.49209 ], [ -0.28222, 51.49212 ], [ -0.28223, 51.49214 ], [ -0.28224, 51.49217 ], [ -0.28228, 51.49226 ], [ -0.2823, 51.49231 ], [ -0.28232, 51.49237 ], [ -0.28233, 51.49243 ], [ -0.28233, 51.49249 ], [ -0.28234, 51.49252 ], [ -0.28234, 51.4926 ], [ -0.28238, 51.49292 ], [ -0.28243, 51.49335 ], [ -0.28244, 51.49347 ], [ -0.2825, 51.4938 ], [ -0.28252, 51.49401 ], [ -0.28252, 51.49431 ], [ -0.28252, 51.49442 ], [ -0.28252, 51.49457 ], [ -0.28246, 51.49497 ], [ -0.28245, 51.49504 ], [ -0.28241, 51.49536 ], [ -0.28236, 51.49569 ], [ -0.28234, 51.49578 ], [ -0.28215, 51.4965 ], [ -0.28212, 51.49666 ], [ -0.2821, 51.49676 ], [ -0.28209, 51.49685 ], [ -0.28211, 51.49703 ], [ -0.28217, 51.49724 ], [ -0.28222, 51.49735 ], [ -0.28229, 51.4975 ], [ -0.2825, 51.49785 ], [ -0.28254, 51.49792 ], [ -0.28271, 51.49823 ], [ -0.28273, 51.49826 ], [ -0.28285, 51.49847 ], [ -0.28288, 51.49852 ], [ -0.28292, 51.4986 ], [ -0.28295, 51.49865 ], [ -0.28297, 51.49867 ], [ -0.28299, 51.49872 ], [ -0.28302, 51.49876 ], [ -0.28306, 51.49881 ], [ -0.28318, 51.49897 ], [ -0.28338, 51.49925 ], [ -0.28341, 51.49929 ], [ -0.28357, 51.49949 ], [ -0.2837, 51.49963 ], [ -0.28374, 51.49968 ], [ -0.28408, 51.50004 ], [ -0.28423, 51.5002 ], [ -0.28428, 51.50024 ], [ -0.28437, 51.50032 ], [ -0.28458, 51.5005 ], [ -0.28487, 51.50071 ], [ -0.28492, 51.50075 ], [ -0.28511, 51.50087 ], [ -0.2851128, 51.5008712 ], [ -0.28514, 51.50086 ], [ -0.28516, 51.50085 ], [ -0.28544, 51.50086 ], [ -0.28545, 51.50086 ], [ -0.28546, 51.50087 ], [ -0.28547, 51.50088 ], [ -0.2854708, 51.5008833 ], [ -0.28551, 51.50088 ], [ -0.28555, 51.50094 ], [ -0.2855468, 51.5009426 ], [ -0.28551, 51.50095 ], [ -0.28543, 51.50097 ], [ -0.28539, 51.50098 ], [ -0.2853888, 51.5009797 ], [ -0.28549, 51.50106 ], [ -0.28549, 51.50107 ], [ -0.28548, 51.50107 ], [ -0.28546, 51.50109 ], [ -0.2854598, 51.5010861 ], [ -0.2856, 51.50118 ], [ -0.28564, 51.50121 ], [ -0.28577, 51.5013 ], [ -0.28585, 51.50135 ], [ -0.28592, 51.5014 ], [ -0.28596, 51.50148 ], [ -0.28617, 51.50161 ], [ -0.28644, 51.50178 ], [ -0.28678, 51.50198 ], [ -0.28684, 51.50202 ], [ -0.28713, 51.50219 ], [ -0.28717, 51.50221 ], [ -0.28725, 51.50226 ], [ -0.28774, 51.50256 ], [ -0.28804, 51.50274 ], [ -0.28806, 51.50275 ], [ -0.28821, 51.50285 ], [ -0.28831, 51.50291 ], [ -0.2884, 51.50298 ], [ -0.28857, 51.5031 ], [ -0.28865, 51.50317 ], [ -0.28876, 51.50326 ], [ -0.28886, 51.50336 ], [ -0.28898, 51.50348 ], [ -0.28905, 51.50357 ], [ -0.28911, 51.50364 ], [ -0.28913, 51.50368 ], [ -0.28915, 51.50371 ], [ -0.28923, 51.50382 ], [ -0.28931, 51.50394 ], [ -0.28936, 51.50403 ], [ -0.28941, 51.5041 ], [ -0.28947, 51.5042 ], [ -0.28955, 51.50434 ], [ -0.28961, 51.50444 ], [ -0.2898, 51.50477 ], [ -0.29, 51.50512 ], [ -0.29008, 51.50526 ], [ -0.29015, 51.50539 ], [ -0.29018, 51.50544 ], [ -0.29037, 51.50578 ], [ -0.29072, 51.50641 ], [ -0.29078, 51.50651 ], [ -0.29083, 51.5066 ], [ -0.29087, 51.50667 ], [ -0.29091, 51.50674 ], [ -0.29093, 51.50678 ], [ -0.29103, 51.50695 ], [ -0.29108, 51.50705 ], [ -0.29112, 51.50712 ], [ -0.29117, 51.5072 ], [ -0.29119, 51.50724 ], [ -0.29128, 51.50739 ], [ -0.29129, 51.50742 ], [ -0.29139, 51.5076 ], [ -0.29144, 51.50769 ], [ -0.29152, 51.50785 ], [ -0.29153, 51.50788 ], [ -0.29155, 51.50794 ], [ -0.29156, 51.50799 ], [ -0.29158, 51.50804 ], [ -0.2916, 51.50812 ], [ -0.29161, 51.50819 ], [ -0.29165, 51.50837 ], [ -0.29167, 51.50851 ], [ -0.2917, 51.50866 ], [ -0.29172, 51.50874 ], [ -0.29173, 51.50885 ], [ -0.29175, 51.50895 ], [ -0.29178, 51.50913 ], [ -0.29182, 51.50937 ], [ -0.29186, 51.50958 ], [ -0.29189, 51.50982 ], [ -0.29194, 51.51013 ], [ -0.29194, 51.51017 ], [ -0.29195, 51.51024 ], [ -0.29195, 51.51037 ], [ -0.29196, 51.51053 ], [ -0.29197, 51.51082 ], [ -0.29198, 51.51094 ], [ -0.29201, 51.5112 ], [ -0.29203, 51.51134 ], [ -0.29204, 51.51139 ], [ -0.29205, 51.51142 ], [ -0.29206, 51.51153 ], [ -0.29207, 51.51157 ], [ -0.29208, 51.51164 ], [ -0.29208, 51.51201 ], [ -0.29207, 51.51208 ], [ -0.29207, 51.51218 ], [ -0.29206, 51.51224 ], [ -0.29207, 51.51241 ], [ -0.29209, 51.51271 ], [ -0.29211, 51.51293 ], [ -0.29213, 51.51325 ], [ -0.29213, 51.51347 ], [ -0.29213, 51.51356 ], [ -0.29212, 51.51366 ], [ -0.29212, 51.51378 ], [ -0.29212, 51.51385 ], [ -0.29212, 51.51409 ], [ -0.29213, 51.51417 ], [ -0.29214, 51.51426 ], [ -0.29215, 51.51438 ], [ -0.29217, 51.51452 ], [ -0.29218, 51.51467 ], [ -0.29218, 51.51476 ], [ -0.29218, 51.51483 ], [ -0.29217, 51.51494 ], [ -0.29216, 51.515 ], [ -0.29213, 51.51516 ], [ -0.2921, 51.51524 ], [ -0.29202, 51.51546 ], [ -0.29197, 51.51555 ], [ -0.29191, 51.51565 ], [ -0.29186, 51.51572 ], [ -0.2918, 51.51583 ], [ -0.29174, 51.51595 ], [ -0.29168, 51.51607 ], [ -0.29163, 51.5162 ], [ -0.2916, 51.51628 ], [ -0.29157, 51.51638 ], [ -0.29154, 51.51651 ], [ -0.2915, 51.51666 ], [ -0.29146, 51.51685 ], [ -0.29144, 51.51697 ], [ -0.29143, 51.51704 ], [ -0.29142, 51.51714 ], [ -0.2914, 51.51737 ], [ -0.29137, 51.5177 ], [ -0.29138, 51.51787 ], [ -0.29139, 51.51812 ], [ -0.2914, 51.51821 ], [ -0.2914, 51.51828 ], [ -0.29141, 51.51834 ], [ -0.29142, 51.5185 ], [ -0.29145, 51.51869 ], [ -0.29149, 51.51902 ], [ -0.2915, 51.51916 ], [ -0.29152, 51.51929 ], [ -0.29153, 51.5194 ], [ -0.29154, 51.51951 ], [ -0.29155, 51.51956 ], [ -0.29155, 51.51959 ], [ -0.29156, 51.51973 ], [ -0.29156, 51.51986 ], [ -0.29157, 51.52002 ], [ -0.29157, 51.52014 ], [ -0.29157, 51.52094 ], [ -0.29158, 51.52172 ], [ -0.29162, 51.52223 ], [ -0.29162, 51.52224 ], [ -0.29167, 51.52289 ], [ -0.29168, 51.52297 ], [ -0.29169, 51.5231 ], [ -0.2917, 51.52323 ], [ -0.29173, 51.52336 ], [ -0.29175, 51.52347 ], [ -0.29177, 51.52356 ], [ -0.2918, 51.52363 ], [ -0.29182, 51.5237 ], [ -0.29186, 51.52377 ], [ -0.29191, 51.52388 ], [ -0.29197, 51.52398 ], [ -0.29201, 51.52405 ], [ -0.29206, 51.52412 ], [ -0.29215, 51.52424 ], [ -0.2922, 51.52431 ], [ -0.29225, 51.52438 ], [ -0.29228, 51.52443 ], [ -0.29229, 51.52444 ], [ -0.2923, 51.52446 ], [ -0.29234, 51.52452 ], [ -0.29236, 51.52458 ], [ -0.29238, 51.52462 ], [ -0.2924, 51.52469 ], [ -0.29242, 51.52473 ], [ -0.29242, 51.52477 ], [ -0.29243, 51.52481 ], [ -0.29243, 51.52486 ], [ -0.29243, 51.52491 ], [ -0.29243, 51.52495 ], [ -0.29243, 51.52504 ], [ -0.29242, 51.52513 ], [ -0.29241, 51.52519 ], [ -0.29239, 51.52525 ], [ -0.29237, 51.52532 ], [ -0.29237, 51.52535 ], [ -0.29234, 51.52543 ], [ -0.29231, 51.52553 ], [ -0.29229, 51.52565 ], [ -0.29227, 51.52577 ], [ -0.29226, 51.52588 ], [ -0.29226, 51.52593 ], [ -0.29226, 51.526 ], [ -0.29229, 51.52631 ], [ -0.29229, 51.52638 ], [ -0.2923, 51.5265 ], [ -0.2923, 51.52654 ], [ -0.29231, 51.52661 ], [ -0.29231, 51.52663 ], [ -0.29233, 51.52676 ], [ -0.29234, 51.52683 ], [ -0.29239, 51.52751 ], [ -0.29246, 51.52795 ], [ -0.2924571, 51.5279526 ], [ -0.2925, 51.52802 ], [ -0.29252, 51.52805 ], [ -0.29253, 51.52811 ], [ -0.29256, 51.52838 ], [ -0.29259, 51.52866 ], [ -0.29261, 51.5288 ], [ -0.29263, 51.52887 ], [ -0.29265, 51.52904 ], [ -0.29267, 51.52919 ], [ -0.29268, 51.52926 ], [ -0.2926781, 51.5292554 ], [ -0.2927, 51.52926 ], [ -0.29271, 51.52926 ], [ -0.29272, 51.52929 ], [ -0.29273, 51.52935 ], [ -0.29274, 51.52939 ], [ -0.29276, 51.52943 ], [ -0.29277, 51.52946 ], [ -0.29278, 51.52948 ], [ -0.29279, 51.5295 ], [ -0.29282, 51.52952 ], [ -0.2928221, 51.5295217 ], [ -0.2928221, 51.5295217 ], [ -0.29285, 51.52957 ], [ -0.2929, 51.52961 ], [ -0.29294, 51.52964 ], [ -0.2929442, 51.529641 ], [ -0.2929, 51.52968 ], [ -0.29286, 51.52972 ], [ -0.29277, 51.52975 ], [ -0.29267, 51.52978 ], [ -0.2926746, 51.529778 ], [ -0.29278, 51.52985 ], [ -0.29288, 51.52992 ], [ -0.2928765, 51.529918 ], [ -0.29283, 51.52994 ], [ -0.29281, 51.52995 ], [ -0.2928, 51.52996 ], [ -0.29279, 51.52998 ], [ -0.29279, 51.53 ], [ -0.29279, 51.53003 ], [ -0.2928, 51.53008 ], [ -0.2928, 51.53014 ], [ -0.2928, 51.53019 ], [ -0.29282, 51.53041 ], [ -0.29283, 51.53048 ], [ -0.29286, 51.5307 ], [ -0.29287, 51.53084 ], [ -0.29288, 51.53089 ], [ -0.29291, 51.53094 ], [ -0.29296, 51.53099 ], [ -0.29311, 51.53116 ], [ -0.29315, 51.53121 ], [ -0.29318, 51.53123 ], [ -0.29323, 51.53126 ], [ -0.29328, 51.53129 ], [ -0.29331, 51.5313 ], [ -0.29335, 51.5313 ], [ -0.2934, 51.53131 ], [ -0.2933992, 51.5313095 ], [ -0.29339, 51.53133 ], [ -0.29337, 51.53136 ], [ -0.29336, 51.5314 ], [ -0.29338, 51.53152 ], [ -0.2934, 51.53163 ], [ -0.2934016, 51.5316342 ], [ -0.29347, 51.53163 ], [ -0.29355, 51.53163 ], [ -0.29362, 51.53163 ], [ -0.2937, 51.53164 ], [ -0.29378, 51.53166 ], [ -0.29384, 51.53167 ], [ -0.29385, 51.53168 ], [ -0.29386, 51.53168 ], [ -0.29386, 51.53169 ], [ -0.29387, 51.5317 ], [ -0.29387, 51.53171 ], [ -0.29385, 51.53178 ], [ -0.2938458, 51.5317841 ], [ -0.29394, 51.5318 ], [ -0.29408, 51.53184 ], [ -0.29416, 51.53186 ], [ -0.29423, 51.53188 ], [ -0.29433, 51.53191 ], [ -0.29436, 51.53192 ], [ -0.29441, 51.53194 ], [ -0.29448, 51.53198 ], [ -0.29455, 51.53202 ], [ -0.29461, 51.53206 ], [ -0.29465, 51.5321 ], [ -0.29466, 51.5321 ], [ -0.29471, 51.53214 ], [ -0.29479, 51.53218 ], [ -0.29485, 51.53221 ], [ -0.29488, 51.53228 ], [ -0.29492, 51.53237 ], [ -0.29494, 51.53241 ], [ -0.29497, 51.53249 ], [ -0.29499, 51.53254 ], [ -0.29501, 51.53256 ], [ -0.29509, 51.5327 ], [ -0.29512, 51.53278 ], [ -0.29518, 51.53296 ], [ -0.29522, 51.53313 ], [ -0.29523, 51.53316 ], [ -0.29524, 51.53323 ], [ -0.29526, 51.53332 ], [ -0.29529, 51.53351 ], [ -0.29532, 51.53367 ], [ -0.29533, 51.53372 ], [ -0.29534, 51.53378 ], [ -0.29536, 51.53385 ], [ -0.29537, 51.53387 ], [ -0.29541, 51.53394 ], [ -0.29546, 51.534 ], [ -0.2955, 51.53406 ], [ -0.29556, 51.53414 ], [ -0.29562, 51.5342 ], [ -0.29569, 51.53426 ], [ -0.29585, 51.53437 ], [ -0.29601, 51.53452 ], [ -0.2961, 51.5346 ], [ -0.29617, 51.53467 ], [ -0.29636, 51.53485 ], [ -0.29659, 51.53507 ], [ -0.29673, 51.53511 ], [ -0.29681, 51.53518 ], [ -0.2969, 51.53525 ], [ -0.29695, 51.5353 ], [ -0.2969503, 51.5352996 ], [ -0.2971, 51.53544 ], [ -0.29743, 51.53578 ], [ -0.29762, 51.536 ], [ -0.2978, 51.53621 ], [ -0.29831, 51.5368 ], [ -0.29843, 51.53695 ], [ -0.2985, 51.53704 ], [ -0.29864, 51.53724 ], [ -0.29897, 51.53771 ], [ -0.29912, 51.53793 ], [ -0.29915, 51.53796 ], [ -0.29943, 51.53828 ], [ -0.29979, 51.53863 ], [ -0.29987, 51.53869 ], [ -0.29998, 51.53884 ], [ -0.30008, 51.53895 ], [ -0.30024, 51.53917 ], [ -0.30025, 51.53919 ], [ -0.30026, 51.53921 ], [ -0.30031, 51.53923 ], [ -0.30035, 51.53925 ], [ -0.30039, 51.53929 ], [ -0.30048, 51.53941 ], [ -0.30059, 51.53956 ], [ -0.30068, 51.5397 ], [ -0.3007, 51.53973 ], [ -0.30075, 51.53979 ], [ -0.3008, 51.53987 ], [ -0.30085, 51.53994 ], [ -0.30092, 51.54002 ], [ -0.30097, 51.54009 ], [ -0.30103, 51.54015 ], [ -0.30109, 51.5402 ], [ -0.30122, 51.5403 ], [ -0.30135, 51.54039 ], [ -0.30149, 51.54048 ], [ -0.30159, 51.54053 ], [ -0.30177, 51.54059 ], [ -0.30179, 51.54059 ], [ -0.3018, 51.54059 ], [ -0.30181, 51.54059 ], [ -0.30182, 51.54059 ], [ -0.30183, 51.54059 ], [ -0.30184, 51.54059 ], [ -0.30187, 51.5406 ], [ -0.30188, 51.5406 ], [ -0.30189, 51.5406 ], [ -0.3019, 51.5406 ], [ -0.3019, 51.54061 ], [ -0.30191, 51.54061 ], [ -0.30192, 51.54061 ], [ -0.30192, 51.54062 ], [ -0.30193, 51.54062 ], [ -0.30194, 51.54062 ], [ -0.30194, 51.54063 ], [ -0.30195, 51.54064 ], [ -0.30196, 51.54066 ], [ -0.30196, 51.54067 ], [ -0.30196, 51.54068 ], [ -0.30196, 51.54069 ], [ -0.30195, 51.54069 ], [ -0.30195, 51.5407 ], [ -0.30205, 51.54079 ], [ -0.30219, 51.54088 ], [ -0.30246, 51.54101 ], [ -0.30269, 51.54112 ], [ -0.30306, 51.54131 ], [ -0.30316, 51.54136 ], [ -0.3032, 51.54138 ], [ -0.30356, 51.54158 ], [ -0.30391, 51.5418 ], [ -0.30403, 51.54189 ], [ -0.30435, 51.54213 ], [ -0.30441, 51.54218 ], [ -0.30448, 51.54224 ], [ -0.30464, 51.5424 ], [ -0.30478, 51.54254 ], [ -0.30484, 51.5426 ], [ -0.30504, 51.54284 ], [ -0.30508, 51.5429 ], [ -0.30512, 51.54297 ], [ -0.30522, 51.54311 ], [ -0.30533, 51.54328 ], [ -0.30551, 51.54358 ], [ -0.30555, 51.54365 ], [ -0.30559, 51.54372 ], [ -0.30561, 51.54376 ], [ -0.30569, 51.5439 ], [ -0.3057, 51.54392 ], [ -0.30579, 51.54404 ], [ -0.30599, 51.54429 ], [ -0.30614, 51.54449 ], [ -0.30623, 51.5446 ], [ -0.30625, 51.54462 ], [ -0.3063, 51.54469 ], [ -0.30633, 51.54473 ], [ -0.30676, 51.54516 ], [ -0.30683, 51.54524 ], [ -0.30731, 51.54567 ], [ -0.30772, 51.54602 ], [ -0.30783, 51.5461 ], [ -0.30792, 51.54618 ], [ -0.30825, 51.54638 ], [ -0.30836, 51.54645 ], [ -0.30858, 51.54657 ], [ -0.30863, 51.5466 ], [ -0.30889, 51.54673 ], [ -0.3093, 51.54692 ], [ -0.30935, 51.54694 ], [ -0.30968, 51.54706 ], [ -0.30985, 51.54711 ], [ -0.31017, 51.5472 ], [ -0.3105, 51.54729 ], [ -0.31054, 51.5473 ], [ -0.31094, 51.54742 ], [ -0.31112, 51.5475 ], [ -0.31133, 51.54761 ], [ -0.31157, 51.54775 ], [ -0.31189, 51.54804 ], [ -0.31192, 51.54809 ], [ -0.31208, 51.54838 ], [ -0.31223, 51.54871 ], [ -0.31227, 51.54879 ], [ -0.31234, 51.54896 ], [ -0.31236, 51.54904 ], [ -0.31241, 51.54916 ], [ -0.31249, 51.54935 ], [ -0.31258, 51.54957 ], [ -0.31266, 51.54975 ], [ -0.31269, 51.54989 ], [ -0.31273, 51.54998 ], [ -0.31282, 51.55013 ], [ -0.31313, 51.55056 ], [ -0.31335, 51.55084 ], [ -0.31372, 51.55133 ], [ -0.31385, 51.55149 ], [ -0.31391, 51.5516 ], [ -0.31394, 51.55167 ], [ -0.31397, 51.55174 ], [ -0.31398, 51.55181 ], [ -0.31399, 51.55188 ], [ -0.31399, 51.55199 ], [ -0.31399, 51.55205 ], [ -0.31398, 51.55211 ], [ -0.3139, 51.55226 ], [ -0.31388, 51.55231 ], [ -0.31397, 51.55253 ], [ -0.3139711, 51.5525323 ], [ -0.31401, 51.55255 ], [ -0.31404, 51.55257 ], [ -0.31407, 51.55259 ], [ -0.31408, 51.5526 ], [ -0.31411, 51.55263 ], [ -0.31414, 51.55267 ], [ -0.31415, 51.5527 ], [ -0.31415, 51.55271 ], [ -0.31415, 51.55272 ], [ -0.31416, 51.55275 ], [ -0.31415, 51.55278 ], [ -0.31415, 51.5528 ], [ -0.31414, 51.55281 ], [ -0.31414, 51.55282 ], [ -0.31412, 51.55285 ], [ -0.31411, 51.55286 ], [ -0.31413, 51.55297 ], [ -0.31415, 51.55301 ], [ -0.31417, 51.55306 ], [ -0.31419, 51.5531 ], [ -0.31421, 51.55313 ], [ -0.31427, 51.55318 ], [ -0.31439, 51.5533 ], [ -0.31447, 51.55341 ], [ -0.31449, 51.55343 ], [ -0.31451, 51.55346 ], [ -0.31454, 51.55352 ], [ -0.31456, 51.55358 ], [ -0.31456, 51.55363 ], [ -0.31456, 51.55367 ], [ -0.31461, 51.55377 ], [ -0.31466, 51.55388 ], [ -0.31467, 51.55389 ], [ -0.31483, 51.5542 ], [ -0.31499, 51.55442 ], [ -0.31508, 51.55453 ], [ -0.31515, 51.55461 ], [ -0.31525, 51.55471 ], [ -0.31577, 51.5552 ], [ -0.31592, 51.55534 ], [ -0.31606, 51.55546 ], [ -0.31619, 51.55555 ], [ -0.3163, 51.55562 ], [ -0.3165, 51.55573 ], [ -0.31659, 51.55577 ], [ -0.31676, 51.55602 ], [ -0.31675, 51.55603 ], [ -0.31675, 51.55604 ], [ -0.31676, 51.55605 ], [ -0.31676, 51.55606 ], [ -0.31676, 51.55607 ], [ -0.31676, 51.55608 ], [ -0.31677, 51.55609 ], [ -0.31678, 51.5561 ], [ -0.31678, 51.55611 ], [ -0.3168, 51.55613 ], [ -0.31681, 51.55614 ], [ -0.31682, 51.55614 ], [ -0.31684, 51.55615 ], [ -0.31693, 51.55633 ], [ -0.31695, 51.55636 ], [ -0.31699, 51.55643 ], [ -0.3171, 51.55658 ], [ -0.31714, 51.55665 ], [ -0.31748, 51.55717 ], [ -0.31795, 51.55787 ], [ -0.31812, 51.55814 ], [ -0.3183, 51.55842 ], [ -0.31845, 51.55866 ], [ -0.31865, 51.55898 ], [ -0.31885, 51.55929 ], [ -0.31893, 51.55941 ], [ -0.31909, 51.55966 ], [ -0.31919, 51.55979 ], [ -0.31936, 51.56005 ], [ -0.31956, 51.56031 ], [ -0.31965, 51.56047 ], [ -0.31965, 51.56049 ], [ -0.31969, 51.56061 ], [ -0.31969, 51.56071 ], [ -0.31969, 51.56094 ], [ -0.31968, 51.56115 ], [ -0.31965, 51.56135 ], [ -0.31963, 51.56164 ], [ -0.31967, 51.56186 ], [ -0.31977, 51.5622 ], [ -0.32004, 51.5625 ], [ -0.32012, 51.56259 ], [ -0.32036, 51.56284 ], [ -0.32068, 51.5632 ], [ -0.32082, 51.56347 ], [ -0.32093, 51.56373 ], [ -0.32096, 51.56383 ], [ -0.32098, 51.56393 ], [ -0.32101, 51.56415 ], [ -0.32102, 51.56422 ], [ -0.32105, 51.56454 ], [ -0.32107, 51.56475 ], [ -0.32111, 51.56529 ], [ -0.32118, 51.56601 ], [ -0.32121, 51.56636 ], [ -0.32123, 51.56651 ], [ -0.3212328, 51.5665139 ], [ -0.32119, 51.56657 ], [ -0.32107, 51.56682 ], [ -0.32104, 51.56683 ], [ -0.32101, 51.56686 ], [ -0.32097, 51.56691 ], [ -0.32097, 51.56696 ], [ -0.32098, 51.56698 ], [ -0.32099, 51.56702 ], [ -0.32101, 51.56706 ], [ -0.32104, 51.56709 ], [ -0.32106, 51.56711 ], [ -0.3211, 51.56714 ], [ -0.32117, 51.56716 ], [ -0.32125, 51.56717 ], [ -0.32128, 51.56723 ], [ -0.32132, 51.56728 ], [ -0.32138, 51.56735 ], [ -0.32137, 51.56747 ], [ -0.32137, 51.56751 ], [ -0.32136, 51.56765 ], [ -0.32136, 51.5677 ], [ -0.32136, 51.5678 ], [ -0.32138, 51.56797 ], [ -0.32138, 51.568 ], [ -0.32139, 51.56809 ], [ -0.32141, 51.56818 ], [ -0.32143, 51.56828 ], [ -0.32146, 51.56836 ], [ -0.32149, 51.56847 ], [ -0.32156, 51.56867 ], [ -0.3216, 51.56878 ], [ -0.32172, 51.56902 ], [ -0.32177, 51.56911 ], [ -0.32182, 51.56919 ], [ -0.32188, 51.5693 ], [ -0.32203, 51.56951 ], [ -0.32215, 51.56968 ], [ -0.32228, 51.56986 ], [ -0.3224, 51.57001 ], [ -0.32266, 51.57037 ], [ -0.32285, 51.57064 ], [ -0.3228528, 51.5706379 ], [ -0.32293, 51.5707 ], [ -0.3231, 51.57092 ], [ -0.32325, 51.57112 ], [ -0.32354, 51.57152 ], [ -0.32356, 51.57159 ], [ -0.32371, 51.57177 ], [ -0.32399, 51.57216 ], [ -0.324, 51.57218 ], [ -0.32424, 51.5725 ], [ -0.32438, 51.57269 ], [ -0.32449, 51.57283 ], [ -0.32475, 51.57318 ], [ -0.3248, 51.57328 ], [ -0.32485, 51.57338 ], [ -0.32489, 51.5735 ], [ -0.32491, 51.57359 ], [ -0.32497, 51.57395 ], [ -0.32501, 51.57414 ], [ -0.32504, 51.57438 ], [ -0.32507, 51.57464 ], [ -0.32509, 51.5748 ], [ -0.32513, 51.57499 ], [ -0.32514, 51.57504 ], [ -0.32516, 51.57513 ], [ -0.32519, 51.57542 ], [ -0.3251879, 51.5754233 ], [ -0.32522, 51.57544 ], [ -0.32526, 51.57548 ], [ -0.32528, 51.57557 ], [ -0.3253, 51.57566 ], [ -0.32532, 51.57572 ], [ -0.32534, 51.57579 ], [ -0.32539, 51.57593 ], [ -0.32546, 51.5761 ], [ -0.32551, 51.5762 ], [ -0.32555, 51.57629 ], [ -0.32569, 51.57655 ], [ -0.32585, 51.57685 ], [ -0.32598, 51.5771 ], [ -0.32609, 51.57728 ], [ -0.32611, 51.57733 ], [ -0.32613, 51.57738 ], [ -0.32613, 51.57743 ], [ -0.32614, 51.57749 ], [ -0.32624, 51.57755 ], [ -0.3263, 51.57758 ], [ -0.32633, 51.57762 ], [ -0.32634, 51.57764 ], [ -0.3264, 51.57772 ], [ -0.32655, 51.57798 ], [ -0.3266, 51.57807 ], [ -0.3267, 51.57823 ], [ -0.3266961, 51.5782288 ], [ -0.32677, 51.57823 ], [ -0.32685, 51.57823 ], [ -0.32706, 51.57821 ], [ -0.32745, 51.57819 ], [ -0.3274459, 51.5781872 ], [ -0.32745, 51.57823 ], [ -0.32747, 51.57823 ], [ -0.32754, 51.57823 ], [ -0.32756, 51.57823 ], [ -0.32756, 51.57828 ], [ -0.3275, 51.57828 ], [ -0.32729, 51.57828 ], [ -0.32709, 51.57828 ], [ -0.32701, 51.57828 ], [ -0.32694, 51.57828 ], [ -0.32688, 51.57829 ], [ -0.32681, 51.5783 ], [ -0.32678, 51.57831 ], [ -0.32674, 51.57833 ], [ -0.32669, 51.57836 ], [ -0.32661, 51.57845 ], [ -0.3266141, 51.5784538 ], [ -0.32663, 51.57853 ], [ -0.32663, 51.57859 ], [ -0.32669, 51.57869 ], [ -0.32674, 51.57876 ], [ -0.3269, 51.5789 ], [ -0.32692, 51.57893 ], [ -0.32693, 51.57896 ], [ -0.32709, 51.57908 ], [ -0.32737, 51.57929 ], [ -0.32759, 51.57946 ], [ -0.32784, 51.57966 ], [ -0.32798, 51.57978 ], [ -0.32814, 51.57993 ], [ -0.3281389, 51.5799312 ], [ -0.32819, 51.57994 ], [ -0.32825, 51.57997 ], [ -0.32854, 51.58021 ], [ -0.32871, 51.58033 ], [ -0.32911, 51.58068 ], [ -0.32917, 51.58073 ], [ -0.32962, 51.58112 ], [ -0.3298, 51.58127 ], [ -0.32999, 51.5814 ], [ -0.33017, 51.58154 ], [ -0.3304, 51.58174 ], [ -0.33086, 51.58212 ], [ -0.33111, 51.58232 ], [ -0.33123, 51.58242 ], [ -0.33134, 51.58249 ], [ -0.33147, 51.58262 ], [ -0.33158, 51.58275 ], [ -0.33161, 51.5828 ], [ -0.33165, 51.58285 ], [ -0.33168, 51.5829 ], [ -0.33172, 51.58297 ], [ -0.33175, 51.58305 ], [ -0.33178, 51.58316 ], [ -0.33179, 51.58319 ], [ -0.3318, 51.58326 ], [ -0.33181, 51.58334 ], [ -0.33185, 51.58346 ], [ -0.3319, 51.58358 ], [ -0.33192, 51.58366 ], [ -0.33196, 51.58375 ], [ -0.33197, 51.5838 ], [ -0.332, 51.58387 ], [ -0.33203, 51.58401 ], [ -0.33204, 51.58404 ], [ -0.33206, 51.58414 ], [ -0.33209, 51.58423 ], [ -0.33211, 51.58432 ], [ -0.33213, 51.5844 ], [ -0.33218, 51.58458 ], [ -0.33227, 51.58481 ], [ -0.33229, 51.58487 ], [ -0.3323, 51.58491 ], [ -0.33235, 51.58514 ], [ -0.3323485, 51.5851399 ], [ -0.33242, 51.58514 ], [ -0.3325, 51.58515 ], [ -0.33263, 51.58514 ], [ -0.332634, 51.5851399 ], [ -0.33263, 51.58516 ], [ -0.33262, 51.58517 ], [ -0.33258, 51.58517 ], [ -0.33257, 51.58518 ], [ -0.33257, 51.58521 ], [ -0.33237, 51.58522 ], [ -0.3323722, 51.5852232 ], [ -0.33238, 51.58533 ], [ -0.33238, 51.58536 ], [ -0.33236, 51.5854 ], [ -0.33233, 51.58544 ], [ -0.33233, 51.58553 ], [ -0.33233, 51.58558 ], [ -0.33233, 51.58563 ], [ -0.33233, 51.58564 ], [ -0.33233, 51.5858 ], [ -0.33233, 51.58593 ], [ -0.33232, 51.58599 ], [ -0.33231, 51.58613 ], [ -0.33228, 51.58626 ], [ -0.33226, 51.58633 ], [ -0.3322, 51.58654 ], [ -0.33219, 51.58657 ], [ -0.33213, 51.58681 ], [ -0.33212, 51.58688 ], [ -0.3321, 51.58697 ], [ -0.33209, 51.58704 ], [ -0.33208, 51.58712 ], [ -0.33208, 51.58718 ], [ -0.33208, 51.58725 ], [ -0.33208, 51.5873 ], [ -0.33209, 51.58734 ], [ -0.33209, 51.58735 ], [ -0.3321, 51.5874 ], [ -0.33211, 51.58744 ], [ -0.33213, 51.58751 ], [ -0.33217, 51.58764 ], [ -0.3322, 51.58773 ], [ -0.33228, 51.58798 ], [ -0.33233, 51.58813 ], [ -0.33237, 51.58824 ], [ -0.33241, 51.58838 ], [ -0.33244, 51.58845 ], [ -0.33245, 51.58853 ], [ -0.33251, 51.58867 ], [ -0.33253, 51.58872 ], [ -0.33258, 51.58884 ], [ -0.33262, 51.58893 ], [ -0.33264, 51.58897 ], [ -0.3327, 51.5891 ], [ -0.33274, 51.58918 ], [ -0.33276, 51.58922 ], [ -0.33278, 51.58926 ], [ -0.3328, 51.58934 ], [ -0.33281, 51.58941 ], [ -0.33282, 51.58947 ], [ -0.33282, 51.58956 ], [ -0.33282, 51.58964 ], [ -0.3328152, 51.5896368 ], [ -0.33284, 51.58974 ], [ -0.33283, 51.58981 ], [ -0.33283, 51.58987 ], [ -0.33283, 51.5899 ], [ -0.33282, 51.58994 ], [ -0.33282, 51.59 ], [ -0.33282, 51.59004 ], [ -0.33282, 51.59008 ], [ -0.33281, 51.59011 ], [ -0.33279, 51.59013 ], [ -0.3328, 51.59018 ], [ -0.33282, 51.59024 ], [ -0.33285, 51.59032 ], [ -0.33288, 51.5904 ], [ -0.3329, 51.59044 ], [ -0.33294, 51.59051 ], [ -0.33298, 51.59057 ], [ -0.33304, 51.59065 ], [ -0.33309, 51.59073 ], [ -0.33314, 51.5908 ], [ -0.33318, 51.59085 ], [ -0.33321, 51.5909 ], [ -0.33323, 51.59094 ], [ -0.33326, 51.59098 ], [ -0.33328, 51.59103 ], [ -0.3332752, 51.5910293 ], [ -0.3333, 51.59108 ], [ -0.33332, 51.59113 ], [ -0.33334, 51.59118 ], [ -0.33334, 51.59123 ], [ -0.33334, 51.59128 ], [ -0.33334, 51.59138 ], [ -0.33332, 51.59156 ], [ -0.33331, 51.59175 ], [ -0.33335, 51.59178 ], [ -0.33338, 51.59182 ], [ -0.3334, 51.59187 ], [ -0.33344, 51.59193 ], [ -0.33348, 51.59198 ], [ -0.33351, 51.59201 ], [ -0.33353, 51.59204 ], [ -0.33364, 51.59211 ], [ -0.33374, 51.59217 ], [ -0.33387, 51.59224 ], [ -0.33437, 51.59254 ], [ -0.33455, 51.59264 ], [ -0.33466, 51.5927 ], [ -0.33474, 51.59274 ], [ -0.33479, 51.59278 ], [ -0.33485, 51.59289 ], [ -0.3348537, 51.5928898 ], [ -0.33503, 51.59288 ], [ -0.33512, 51.59288 ], [ -0.3352, 51.59287 ], [ -0.3353, 51.59288 ], [ -0.33538, 51.5929 ], [ -0.33545, 51.59292 ], [ -0.33552, 51.59295 ], [ -0.33557, 51.59298 ], [ -0.33564, 51.59303 ], [ -0.33572, 51.5931 ], [ -0.33579, 51.59316 ], [ -0.33582, 51.5932 ], [ -0.33585, 51.59323 ], [ -0.33588, 51.59328 ], [ -0.33594, 51.59336 ], [ -0.33597, 51.59339 ], [ -0.33601, 51.59342 ], [ -0.33608, 51.59347 ], [ -0.33615, 51.59351 ], [ -0.33622, 51.59354 ], [ -0.33629, 51.59358 ], [ -0.33637, 51.59361 ], [ -0.33645, 51.59364 ], [ -0.33657, 51.59369 ], [ -0.33666, 51.59371 ], [ -0.33688, 51.59377 ], [ -0.33701, 51.5938 ], [ -0.33713, 51.59383 ], [ -0.3371269, 51.5938312 ], [ -0.33715, 51.59386 ], [ -0.33721, 51.59388 ], [ -0.33729, 51.5939 ], [ -0.3372864, 51.593897 ], [ -0.33735, 51.59391 ], [ -0.33741, 51.59392 ], [ -0.33747, 51.59393 ], [ -0.33753, 51.59393 ], [ -0.3375252, 51.5939303 ], [ -0.33752, 51.59396 ], [ -0.33752, 51.59398 ], [ -0.33753, 51.59402 ], [ -0.33756, 51.59405 ], [ -0.33762, 51.59408 ], [ -0.33799, 51.59426 ], [ -0.33844, 51.59449 ], [ -0.33941, 51.59494 ], [ -0.3395, 51.59498 ], [ -0.34019, 51.59531 ], [ -0.34038, 51.5954 ], [ -0.3415, 51.59593 ], [ -0.3414968, 51.5959331 ], [ -0.3416, 51.59599 ], [ -0.34204, 51.59621 ], [ -0.34253, 51.59645 ], [ -0.34276, 51.59657 ], [ -0.34288, 51.59663 ], [ -0.34293, 51.59666 ], [ -0.34297, 51.59669 ], [ -0.34302, 51.59674 ], [ -0.34306, 51.59678 ], [ -0.34342, 51.5972 ], [ -0.34371, 51.59752 ], [ -0.34402, 51.59788 ], [ -0.34472, 51.59837 ], [ -0.34518, 51.59872 ], [ -0.34563, 51.59906 ], [ -0.34607, 51.59939 ], [ -0.34618, 51.59947 ], [ -0.34627, 51.59954 ], [ -0.34629, 51.59956 ], [ -0.34634, 51.59962 ], [ -0.3463443, 51.5996225 ], [ -0.34642, 51.59961 ], [ -0.3465, 51.59958 ], [ -0.34656, 51.59955 ], [ -0.34681, 51.59942 ], [ -0.3468072, 51.5994225 ], [ -0.34798, 51.60029 ], [ -0.34803, 51.60035 ], [ -0.34813, 51.60053 ], [ -0.34815, 51.60057 ], [ -0.34889, 51.60213 ], [ -0.34952, 51.60343 ], [ -0.34953, 51.60348 ], [ -0.34954, 51.60351 ], [ -0.34955, 51.60354 ], [ -0.34955, 51.60362 ], [ -0.34958, 51.60399 ], [ -0.3495794, 51.6039937 ], [ -0.34986, 51.60398 ], [ -0.35001, 51.60397 ], [ -0.35013, 51.60396 ], [ -0.35047, 51.60395 ], [ -0.35074, 51.60394 ], [ -0.3511, 51.60392 ], [ -0.35133, 51.60391 ], [ -0.35137, 51.60391 ], [ -0.35164, 51.6039 ], [ -0.35191, 51.60388 ], [ -0.35195, 51.60388 ], [ -0.35215, 51.60388 ], [ -0.35221, 51.60388 ], [ -0.3522145, 51.6038821 ], [ -0.35223, 51.60395 ], [ -0.3522269, 51.6039484 ], [ -0.35223, 51.60397 ], [ -0.35224, 51.60397 ], [ -0.35225, 51.60398 ], [ -0.35227, 51.604 ], [ -0.35239, 51.60405 ], [ -0.35253, 51.6041 ], [ -0.3525331, 51.6040957 ], [ -0.35257, 51.60417 ], [ -0.35259, 51.60423 ], [ -0.35264, 51.60434 ], [ -0.3528, 51.6047 ], [ -0.35296, 51.60505 ], [ -0.35311, 51.60538 ], [ -0.3532, 51.60558 ], [ -0.35329, 51.60578 ], [ -0.35346, 51.60615 ], [ -0.35355, 51.60637 ], [ -0.35357, 51.60638 ], [ -0.35359, 51.60639 ], [ -0.3536, 51.6064 ], [ -0.35361, 51.60642 ], [ -0.35361, 51.60644 ], [ -0.3536, 51.60645 ], [ -0.3536, 51.60646 ], [ -0.35361, 51.60648 ], [ -0.35362, 51.60652 ], [ -0.35367, 51.60662 ], [ -0.3538, 51.60692 ], [ -0.3539, 51.60714 ], [ -0.35395, 51.60724 ], [ -0.35405, 51.60747 ], [ -0.35408, 51.60754 ], [ -0.35413, 51.60765 ], [ -0.35421, 51.60783 ], [ -0.35419, 51.60786 ], [ -0.35412, 51.60792 ], [ -0.35398, 51.60803 ], [ -0.35394, 51.60807 ], [ -0.3539376, 51.6080726 ], [ -0.35392, 51.60819 ], [ -0.35382, 51.60839 ], [ -0.35377, 51.60865 ], [ -0.35381, 51.60868 ], [ -0.35394, 51.60893 ], [ -0.35401, 51.60911 ], [ -0.35395, 51.60933 ], [ -0.35394, 51.60943 ], [ -0.35391, 51.60948 ], [ -0.35389, 51.60952 ], [ -0.35388, 51.60953 ], [ -0.35387, 51.60954 ], [ -0.35386, 51.60954 ], [ -0.35385, 51.60955 ], [ -0.35382, 51.60979 ], [ -0.3538194, 51.6097879 ], [ -0.35386, 51.60979 ], [ -0.35401, 51.60977 ], [ -0.35411, 51.60977 ], [ -0.3541078, 51.6097653 ], [ -0.35409, 51.60981 ], [ -0.35409, 51.60982 ], [ -0.35408, 51.60982 ], [ -0.35407, 51.60983 ], [ -0.35406, 51.60983 ], [ -0.35401, 51.60983 ], [ -0.354, 51.60983 ], [ -0.35399, 51.60983 ], [ -0.35398, 51.60983 ], [ -0.35397, 51.60984 ], [ -0.35396, 51.60985 ], [ -0.35396, 51.60986 ], [ -0.35394, 51.60989 ], [ -0.3542, 51.6099 ], [ -0.3543, 51.6099 ], [ -0.35445, 51.60991 ], [ -0.35457, 51.60991 ], [ -0.35469, 51.60992 ], [ -0.3548, 51.60993 ], [ -0.35498, 51.60995 ], [ -0.3549826, 51.6099461 ], [ -0.35503, 51.60997 ], [ -0.35508, 51.60999 ], [ -0.35511, 51.60999 ], [ -0.35515, 51.61001 ], [ -0.35519, 51.61002 ], [ -0.35524, 51.61003 ], [ -0.35529, 51.61004 ], [ -0.35535, 51.61004 ], [ -0.35545, 51.61007 ], [ -0.3555, 51.61009 ], [ -0.35555, 51.61011 ], [ -0.3556, 51.61013 ], [ -0.35565, 51.61016 ], [ -0.35569, 51.61018 ], [ -0.35573, 51.61021 ], [ -0.35576, 51.61023 ], [ -0.35578, 51.61024 ], [ -0.35581, 51.61026 ], [ -0.35588, 51.61029 ], [ -0.35605, 51.61045 ], [ -0.35638, 51.61081 ], [ -0.35648, 51.61091 ], [ -0.35712, 51.61157 ], [ -0.35739, 51.61185 ], [ -0.35757, 51.61203 ], [ -0.35801, 51.61249 ], [ -0.35831, 51.6128 ], [ -0.35843, 51.61293 ], [ -0.35884, 51.61335 ], [ -0.35901, 51.61352 ], [ -0.35928, 51.61381 ], [ -0.35945, 51.61398 ], [ -0.3595, 51.61403 ], [ -0.3596, 51.61414 ], [ -0.3597, 51.61424 ], [ -0.35979, 51.61434 ], [ -0.35984, 51.61438 ], [ -0.35989, 51.61443 ], [ -0.35995, 51.6145 ], [ -0.35998, 51.61452 ], [ -0.36004, 51.61458 ], [ -0.36011, 51.61466 ], [ -0.3602, 51.61476 ], [ -0.3603, 51.61486 ], [ -0.36036, 51.61492 ], [ -0.36045, 51.61501 ], [ -0.36053, 51.6151 ], [ -0.36055, 51.61511 ], [ -0.36067, 51.61524 ], [ -0.36073, 51.6153 ], [ -0.3608, 51.61537 ], [ -0.36084, 51.6154 ], [ -0.36088, 51.61544 ], [ -0.36095, 51.61549 ], [ -0.36102, 51.61554 ], [ -0.36108, 51.61558 ], [ -0.36118, 51.61565 ], [ -0.36133, 51.61574 ], [ -0.36139, 51.61579 ], [ -0.36145, 51.61583 ], [ -0.36156, 51.6159 ], [ -0.36162, 51.61594 ], [ -0.36167, 51.61598 ], [ -0.36172, 51.61603 ], [ -0.36179, 51.61609 ], [ -0.36186, 51.61616 ], [ -0.36191, 51.61622 ], [ -0.36196, 51.61627 ], [ -0.362, 51.61631 ], [ -0.36204, 51.61636 ], [ -0.3621, 51.61643 ], [ -0.36225, 51.61651 ], [ -0.36229, 51.61657 ], [ -0.36233, 51.61662 ], [ -0.36238, 51.61668 ], [ -0.3627, 51.61702 ], [ -0.36271, 51.61702 ], [ -0.36272, 51.61703 ], [ -0.36273, 51.61703 ], [ -0.36274, 51.61704 ], [ -0.36275, 51.61704 ], [ -0.36275, 51.61705 ], [ -0.36276, 51.61706 ], [ -0.36276, 51.61707 ], [ -0.36276, 51.61708 ], [ -0.36277, 51.61708 ], [ -0.36277, 51.61709 ], [ -0.36284, 51.61713 ], [ -0.36296, 51.6172 ], [ -0.36303, 51.61724 ], [ -0.36311, 51.6173 ], [ -0.3632, 51.61737 ], [ -0.36324, 51.6174 ], [ -0.36328, 51.61743 ], [ -0.36333, 51.61748 ], [ -0.36338, 51.61752 ], [ -0.36344, 51.61756 ], [ -0.36361, 51.61762 ], [ -0.36371, 51.61764 ], [ -0.3638, 51.61767 ], [ -0.36441, 51.61781 ], [ -0.36452, 51.61783 ], [ -0.36462, 51.61786 ], [ -0.36484, 51.6179 ], [ -0.36495, 51.61793 ], [ -0.365, 51.61794 ], [ -0.36507, 51.61796 ], [ -0.36522, 51.61799 ], [ -0.36543, 51.61805 ], [ -0.36549, 51.61807 ], [ -0.36552, 51.61808 ], [ -0.36559, 51.61811 ], [ -0.36567, 51.61814 ], [ -0.36578, 51.61818 ], [ -0.3659, 51.61823 ], [ -0.36597, 51.61827 ], [ -0.36606, 51.61832 ], [ -0.36619, 51.61839 ], [ -0.36621, 51.6184 ], [ -0.36627, 51.61844 ], [ -0.36637, 51.61852 ], [ -0.36651, 51.61862 ], [ -0.36662, 51.61871 ], [ -0.36666, 51.61874 ], [ -0.36669, 51.61876 ], [ -0.36673, 51.6188 ], [ -0.36677, 51.61884 ], [ -0.3668, 51.61887 ], [ -0.36683, 51.61889 ], [ -0.36686, 51.61893 ], [ -0.36688, 51.61896 ], [ -0.36694, 51.61903 ], [ -0.36696, 51.61906 ], [ -0.367, 51.6191 ], [ -0.36705, 51.61917 ], [ -0.36706, 51.61917 ], [ -0.36706, 51.61918 ], [ -0.36708, 51.6192 ], [ -0.3671, 51.61922 ], [ -0.36717, 51.61932 ], [ -0.36726, 51.61943 ], [ -0.36736, 51.61957 ], [ -0.36743, 51.61965 ], [ -0.36743, 51.61966 ], [ -0.36744, 51.61966 ], [ -0.3675, 51.61975 ], [ -0.36754, 51.61981 ], [ -0.36758, 51.61986 ], [ -0.36762, 51.6199 ], [ -0.36765, 51.61995 ], [ -0.36769, 51.61999 ], [ -0.36772, 51.62003 ], [ -0.36775, 51.62007 ], [ -0.36778, 51.62011 ], [ -0.3678, 51.62014 ], [ -0.36782, 51.62017 ], [ -0.36785, 51.6202 ], [ -0.36788, 51.62024 ], [ -0.36791, 51.62027 ], [ -0.36794, 51.62032 ], [ -0.36798, 51.62037 ], [ -0.36804, 51.62045 ], [ -0.36807, 51.62049 ], [ -0.36809, 51.62052 ], [ -0.36813, 51.62057 ], [ -0.36816, 51.62062 ], [ -0.36817, 51.62064 ], [ -0.36818, 51.62066 ], [ -0.3682, 51.62069 ], [ -0.36821, 51.6207 ], [ -0.36822, 51.62072 ], [ -0.36824, 51.62076 ], [ -0.36825, 51.62078 ], [ -0.36825, 51.6208 ], [ -0.36826, 51.62081 ], [ -0.36827, 51.62084 ], [ -0.36828, 51.62087 ], [ -0.36829, 51.62092 ], [ -0.3683, 51.62095 ], [ -0.36831, 51.62098 ], [ -0.36833, 51.62104 ], [ -0.36833, 51.62107 ], [ -0.36835, 51.62113 ], [ -0.36836, 51.62115 ], [ -0.36836, 51.62116 ], [ -0.36841, 51.62133 ], [ -0.36841, 51.62135 ], [ -0.36844, 51.62147 ], [ -0.3685, 51.62167 ], [ -0.3685, 51.62169 ], [ -0.36851, 51.6217 ], [ -0.36854, 51.62184 ], [ -0.36856, 51.62194 ], [ -0.36858, 51.62206 ], [ -0.36859, 51.6221 ], [ -0.3686, 51.62215 ], [ -0.36861, 51.62221 ], [ -0.36861, 51.62226 ], [ -0.36862, 51.6223 ], [ -0.36862, 51.62234 ], [ -0.36863, 51.62238 ], [ -0.36863, 51.62243 ], [ -0.36864, 51.6225 ], [ -0.36864, 51.62257 ], [ -0.36864, 51.62258 ], [ -0.36864, 51.62261 ], [ -0.36866, 51.6229 ], [ -0.36867, 51.62313 ], [ -0.3686737, 51.6231336 ], [ -0.36864, 51.62316 ], [ -0.36863, 51.62318 ], [ -0.36863, 51.62319 ], [ -0.36862, 51.62321 ], [ -0.36862, 51.62322 ], [ -0.36863, 51.62335 ], [ -0.36864, 51.6234 ], [ -0.36864, 51.62347 ], [ -0.36866, 51.62361 ], [ -0.36868, 51.62382 ], [ -0.36869, 51.62396 ], [ -0.3687, 51.624 ], [ -0.36871, 51.62404 ], [ -0.36872, 51.62406 ], [ -0.36873, 51.62409 ], [ -0.36874, 51.62412 ], [ -0.36876, 51.62414 ], [ -0.36877, 51.62417 ], [ -0.36881, 51.62421 ], [ -0.36888, 51.62426 ], [ -0.36896, 51.62435 ], [ -0.36903, 51.62442 ], [ -0.36908, 51.62447 ], [ -0.36911, 51.62451 ], [ -0.36924, 51.62464 ], [ -0.36927, 51.62467 ], [ -0.36937, 51.62477 ], [ -0.36942, 51.62482 ], [ -0.36958, 51.62499 ], [ -0.36973, 51.62514 ], [ -0.37002, 51.62545 ], [ -0.37005, 51.62548 ], [ -0.37049, 51.62594 ], [ -0.37066, 51.62612 ], [ -0.37072, 51.62618 ], [ -0.37073, 51.62618 ], [ -0.37079, 51.62625 ], [ -0.37084, 51.62629 ], [ -0.37088, 51.62633 ], [ -0.37095, 51.62638 ], [ -0.37104, 51.62646 ], [ -0.37108, 51.62649 ], [ -0.37111, 51.62652 ], [ -0.37115, 51.62655 ], [ -0.37121, 51.62659 ], [ -0.37123, 51.62661 ], [ -0.37129, 51.62665 ], [ -0.37138, 51.62672 ], [ -0.37143, 51.62676 ], [ -0.37159, 51.62686 ], [ -0.37161, 51.62687 ], [ -0.37162, 51.62688 ], [ -0.37175, 51.62696 ], [ -0.37193, 51.62708 ], [ -0.37202, 51.62714 ], [ -0.3721, 51.62719 ], [ -0.37222, 51.62727 ], [ -0.37232, 51.62733 ], [ -0.37241, 51.62739 ], [ -0.37244, 51.62741 ], [ -0.37259, 51.6275 ], [ -0.37266, 51.62755 ], [ -0.37281, 51.62765 ], [ -0.3729, 51.62771 ], [ -0.37296, 51.62775 ], [ -0.37301, 51.62778 ], [ -0.37309, 51.62784 ], [ -0.37315, 51.62788 ], [ -0.37318, 51.6279 ], [ -0.37322, 51.62793 ], [ -0.37325, 51.62797 ], [ -0.37329, 51.628 ], [ -0.37332, 51.62803 ], [ -0.37334, 51.62805 ], [ -0.37337, 51.62809 ], [ -0.37339, 51.62811 ], [ -0.37343, 51.62817 ], [ -0.37345, 51.6282 ], [ -0.37347, 51.62823 ], [ -0.37348, 51.62826 ], [ -0.3735, 51.62831 ], [ -0.37352, 51.62836 ], [ -0.37354, 51.62843 ], [ -0.37354, 51.62845 ], [ -0.37356, 51.62852 ], [ -0.37357, 51.62858 ], [ -0.37357, 51.62863 ], [ -0.37357, 51.62867 ], [ -0.37359, 51.62885 ], [ -0.37361, 51.62904 ], [ -0.37361, 51.62909 ], [ -0.37361, 51.62914 ], [ -0.37366, 51.62963 ], [ -0.37366, 51.62966 ], [ -0.37366, 51.62967 ], [ -0.3737, 51.6301 ], [ -0.37371, 51.63017 ], [ -0.37372, 51.63026 ], [ -0.37373, 51.63034 ], [ -0.37375, 51.63048 ], [ -0.37376, 51.63055 ], [ -0.37377, 51.63063 ], [ -0.37379, 51.63079 ], [ -0.37382, 51.63095 ], [ -0.37384, 51.63109 ], [ -0.37386, 51.6312 ], [ -0.37386, 51.63126 ], [ -0.37388, 51.63134 ], [ -0.37389, 51.63145 ], [ -0.37391, 51.63158 ], [ -0.37393, 51.63167 ], [ -0.37394, 51.63175 ], [ -0.37395, 51.63183 ], [ -0.37396, 51.63189 ], [ -0.37398, 51.63195 ], [ -0.37399, 51.63199 ], [ -0.374, 51.63203 ], [ -0.37404, 51.63215 ], [ -0.37405, 51.63218 ], [ -0.37406, 51.63219 ], [ -0.37407, 51.63222 ], [ -0.37408, 51.63224 ], [ -0.37409, 51.63225 ], [ -0.3741, 51.63227 ], [ -0.37412, 51.6323 ], [ -0.37416, 51.63235 ], [ -0.37418, 51.63239 ], [ -0.37422, 51.63243 ], [ -0.37425, 51.63246 ], [ -0.37431, 51.63253 ], [ -0.37441, 51.63263 ], [ -0.37456, 51.63278 ], [ -0.37475, 51.63296 ], [ -0.37496, 51.63317 ], [ -0.375, 51.63321 ], [ -0.37512, 51.63332 ], [ -0.37528, 51.63347 ], [ -0.37539, 51.63356 ], [ -0.37545, 51.63361 ], [ -0.37551, 51.63366 ], [ -0.37557, 51.6337 ], [ -0.37563, 51.63373 ], [ -0.37574, 51.6338 ], [ -0.37577, 51.63382 ], [ -0.37585, 51.63386 ], [ -0.37591, 51.63389 ], [ -0.37598, 51.63393 ], [ -0.37606, 51.63397 ], [ -0.37615, 51.63401 ], [ -0.3762, 51.63403 ], [ -0.37628, 51.63407 ], [ -0.37634, 51.6341 ], [ -0.37638, 51.63412 ], [ -0.37644, 51.63415 ], [ -0.37652, 51.6342 ], [ -0.37657, 51.63423 ], [ -0.37659, 51.63424 ], [ -0.37661, 51.63426 ], [ -0.37665, 51.63429 ], [ -0.37668, 51.63431 ], [ -0.37676, 51.63436 ], [ -0.37682, 51.63441 ], [ -0.37684, 51.63443 ], [ -0.37698, 51.63453 ], [ -0.37713, 51.63466 ], [ -0.37717, 51.63469 ], [ -0.37725, 51.63476 ], [ -0.37737, 51.63485 ], [ -0.37742, 51.63489 ], [ -0.37751, 51.63496 ], [ -0.37758, 51.63501 ], [ -0.37769, 51.6351 ], [ -0.3778, 51.63518 ], [ -0.37788, 51.63525 ], [ -0.37796, 51.63531 ], [ -0.37826, 51.63551 ], [ -0.37839, 51.63559 ], [ -0.37847, 51.63565 ], [ -0.37874, 51.63582 ], [ -0.37886, 51.63589 ], [ -0.37889, 51.6359 ], [ -0.37902, 51.63596 ], [ -0.37916, 51.63602 ], [ -0.37934, 51.63608 ], [ -0.37958, 51.63614 ], [ -0.37982, 51.63619 ], [ -0.37992, 51.63622 ], [ -0.38013, 51.63628 ], [ -0.38037, 51.63634 ], [ -0.3806, 51.63641 ], [ -0.38078, 51.63649 ], [ -0.38091, 51.63658 ], [ -0.38097, 51.63663 ], [ -0.381, 51.63664 ], [ -0.38113, 51.63677 ], [ -0.38126, 51.63689 ], [ -0.38149, 51.63713 ], [ -0.38155, 51.63718 ], [ -0.38182, 51.63744 ], [ -0.38203, 51.63762 ], [ -0.38212, 51.6377 ], [ -0.38225, 51.6378 ], [ -0.38262, 51.63804 ], [ -0.38287, 51.63818 ], [ -0.38305, 51.63828 ], [ -0.38331, 51.63843 ], [ -0.38356, 51.63858 ], [ -0.38368, 51.63868 ], [ -0.38379, 51.63879 ], [ -0.38383, 51.63884 ], [ -0.38386, 51.63887 ], [ -0.38388, 51.63892 ], [ -0.3838818, 51.6389188 ], [ -0.38408, 51.63892 ], [ -0.38431, 51.63894 ], [ -0.38445, 51.63894 ], [ -0.38486, 51.63897 ], [ -0.38522, 51.639 ], [ -0.3854, 51.63902 ], [ -0.38554, 51.63906 ], [ -0.38564, 51.63911 ], [ -0.38577, 51.63921 ], [ -0.38584, 51.63928 ], [ -0.3859, 51.63934 ], [ -0.38611, 51.63947 ], [ -0.38619, 51.63952 ], [ -0.38625, 51.63955 ], [ -0.38633, 51.63958 ], [ -0.38644, 51.6396 ], [ -0.38659, 51.63961 ], [ -0.3869, 51.63964 ], [ -0.38702, 51.63965 ], [ -0.38711, 51.63966 ], [ -0.38718, 51.63967 ], [ -0.3871784, 51.6396727 ], [ -0.3873, 51.63976 ], [ -0.38746, 51.63989 ], [ -0.38758, 51.64 ], [ -0.38779, 51.64022 ], [ -0.38827, 51.64075 ], [ -0.38857, 51.64106 ], [ -0.38867, 51.64114 ], [ -0.38871, 51.64117 ], [ -0.38885, 51.64124 ], [ -0.38939, 51.64145 ], [ -0.38946, 51.64148 ], [ -0.39025, 51.64178 ], [ -0.39081, 51.64199 ], [ -0.39128, 51.6422 ], [ -0.39149, 51.64233 ], [ -0.39159, 51.64241 ], [ -0.3919, 51.64271 ], [ -0.39197, 51.64279 ], [ -0.39205, 51.64286 ], [ -0.39231, 51.64303 ], [ -0.39238, 51.64308 ], [ -0.39298, 51.64341 ], [ -0.3929761, 51.6434094 ], [ -0.39347, 51.64375 ], [ -0.39375, 51.64394 ], [ -0.39393, 51.64406 ], [ -0.39416, 51.6442 ], [ -0.39436, 51.64434 ], [ -0.39442, 51.64438 ], [ -0.39453, 51.64445 ], [ -0.39462, 51.64452 ], [ -0.3948, 51.64464 ], [ -0.39496, 51.64475 ], [ -0.39504, 51.64481 ], [ -0.39507, 51.64483 ], [ -0.3951, 51.64486 ], [ -0.39514, 51.64489 ], [ -0.39517, 51.64492 ], [ -0.39519, 51.64494 ], [ -0.39524, 51.64501 ], [ -0.39532, 51.64514 ], [ -0.39544, 51.6454 ], [ -0.39545, 51.64551 ], [ -0.39545, 51.64564 ], [ -0.39539, 51.64582 ], [ -0.39536, 51.64588 ], [ -0.39515, 51.64622 ], [ -0.39512, 51.64628 ], [ -0.39509, 51.64635 ], [ -0.39504, 51.64649 ], [ -0.395, 51.64665 ], [ -0.39497, 51.64675 ], [ -0.39495, 51.6468 ], [ -0.39489, 51.6471 ], [ -0.39486, 51.6472 ], [ -0.39482, 51.64735 ], [ -0.39475, 51.64754 ], [ -0.39472, 51.64766 ], [ -0.39471, 51.64775 ], [ -0.39473, 51.64798 ], [ -0.39477, 51.64805 ], [ -0.3948, 51.6481 ], [ -0.39488, 51.64825 ], [ -0.39503, 51.64849 ], [ -0.39504, 51.64851 ], [ -0.39522, 51.6488 ], [ -0.39536, 51.64902 ], [ -0.39543, 51.64914 ], [ -0.39551, 51.64926 ], [ -0.39564, 51.64946 ], [ -0.39573, 51.6496 ], [ -0.39582, 51.64973 ], [ -0.39588, 51.64981 ], [ -0.39597, 51.64993 ], [ -0.39604, 51.65002 ], [ -0.39612, 51.65012 ], [ -0.39623, 51.65025 ], [ -0.39641, 51.65045 ], [ -0.39644, 51.65049 ], [ -0.39654, 51.65059 ], [ -0.39662, 51.65067 ], [ -0.39665, 51.6507 ], [ -0.39669, 51.65074 ], [ -0.39675, 51.65079 ], [ -0.39682, 51.65085 ], [ -0.39687, 51.65089 ], [ -0.39693, 51.65094 ], [ -0.39721, 51.65113 ], [ -0.39724, 51.65116 ], [ -0.3974, 51.65127 ], [ -0.39753, 51.65136 ], [ -0.3977, 51.65149 ], [ -0.39775, 51.65152 ], [ -0.39783, 51.65158 ], [ -0.39796, 51.65168 ], [ -0.39814, 51.65182 ], [ -0.39833, 51.652 ], [ -0.39854, 51.65215 ], [ -0.3987, 51.65225 ], [ -0.39881, 51.65231 ], [ -0.39917, 51.65247 ], [ -0.39932, 51.65254 ], [ -0.3995, 51.65261 ], [ -0.39971, 51.65275 ], [ -0.40003, 51.65304 ], [ -0.40028, 51.65326 ], [ -0.40065, 51.65361 ], [ -0.40067, 51.65363 ], [ -0.40071, 51.65367 ], [ -0.4008, 51.65375 ], [ -0.40088, 51.65383 ], [ -0.40095, 51.65391 ], [ -0.40113, 51.65414 ], [ -0.40148, 51.65465 ], [ -0.4017, 51.65508 ], [ -0.40179, 51.65524 ], [ -0.40191, 51.65542 ], [ -0.40194, 51.65546 ], [ -0.402, 51.65552 ], [ -0.40217, 51.65571 ], [ -0.40238, 51.65592 ], [ -0.40245, 51.656 ], [ -0.4024542, 51.655999 ], [ -0.40266, 51.65611 ], [ -0.40277, 51.65618 ], [ -0.40288, 51.65627 ], [ -0.40295, 51.65634 ], [ -0.40304, 51.65641 ], [ -0.40317, 51.65653 ], [ -0.40333, 51.65673 ], [ -0.40342, 51.65687 ], [ -0.40344, 51.65689 ], [ -0.40358, 51.65715 ], [ -0.40367, 51.65733 ], [ -0.403673, 51.6573257 ], [ -0.40371, 51.65731 ], [ -0.40375, 51.65731 ], [ -0.40379, 51.65732 ], [ -0.40386, 51.65733 ], [ -0.40393, 51.65735 ], [ -0.40402, 51.65737 ], [ -0.40411, 51.65738 ], [ -0.40429, 51.6574 ], [ -0.40443, 51.65741 ], [ -0.40462, 51.65743 ], [ -0.40474, 51.65745 ], [ -0.4048, 51.65747 ], [ -0.4047977, 51.6574744 ], [ -0.40486, 51.6575 ], [ -0.40492, 51.65754 ], [ -0.40497, 51.65759 ], [ -0.405, 51.65763 ], [ -0.40504, 51.65768 ], [ -0.40506, 51.65774 ], [ -0.40507, 51.65777 ], [ -0.40508, 51.6578 ], [ -0.40517, 51.65792 ], [ -0.40524, 51.65794 ], [ -0.40541, 51.65807 ], [ -0.4054115, 51.658071 ], [ -0.40558, 51.65799 ], [ -0.4055808, 51.6579912 ], [ -0.40565, 51.65807 ], [ -0.4056541, 51.6580727 ], [ -0.40569, 51.65808 ], [ -0.40572, 51.65809 ], [ -0.40578, 51.65811 ], [ -0.40587, 51.65815 ], [ -0.40596, 51.65819 ], [ -0.4063, 51.6583 ], [ -0.40658, 51.65839 ], [ -0.40683, 51.6585 ], [ -0.40704, 51.65862 ], [ -0.4072, 51.65872 ], [ -0.40816, 51.65947 ], [ -0.4087, 51.65989 ], [ -0.40924, 51.66029 ], [ -0.4092356, 51.6602894 ], [ -0.40918, 51.66033 ], [ -0.40917, 51.66035 ], [ -0.40916, 51.66038 ], [ -0.40915, 51.66055 ], [ -0.40912, 51.66106 ], [ -0.40912, 51.66112 ], [ -0.40914, 51.66117 ], [ -0.40919, 51.66126 ], [ -0.40927, 51.66135 ], [ -0.40943, 51.66155 ], [ -0.40983, 51.66211 ], [ -0.41, 51.66233 ], [ -0.41014, 51.66253 ], [ -0.41044, 51.6629 ], [ -0.4105, 51.66307 ], [ -0.41054, 51.66324 ], [ -0.41058, 51.66342 ], [ -0.41062, 51.66356 ], [ -0.41067, 51.66365 ], [ -0.411, 51.66415 ], [ -0.41136, 51.66461 ], [ -0.41172, 51.66508 ], [ -0.4117172, 51.665081 ], [ -0.41131, 51.6652 ], [ -0.41022, 51.66554 ], [ -0.4102188, 51.665537 ], [ -0.41043, 51.66581 ], [ -0.41053, 51.66594 ], [ -0.41074, 51.66623 ], [ -0.41105, 51.66664 ], [ -0.41123, 51.66689 ], [ -0.41202, 51.66782 ], [ -0.41208, 51.6679 ], [ -0.41221, 51.66808 ], [ -0.41264, 51.66872 ], [ -0.41288, 51.66908 ], [ -0.41292, 51.66914 ], [ -0.41324, 51.6695 ], [ -0.41385, 51.66985 ], [ -0.41424, 51.67003 ], [ -0.41447, 51.67013 ], [ -0.41473, 51.67029 ], [ -0.41492, 51.6704 ], [ -0.4151, 51.67047 ], [ -0.41531, 51.67059 ], [ -0.41555, 51.67079 ], [ -0.41566, 51.67089 ], [ -0.4157, 51.67093 ], [ -0.41573, 51.67097 ], [ -0.41578, 51.67103 ], [ -0.41627, 51.67165 ], [ -0.41629, 51.67168 ], [ -0.41636, 51.67179 ], [ -0.4164, 51.67185 ], [ -0.4167, 51.67222 ], [ -0.41676, 51.6723 ], [ -0.41697, 51.67254 ], [ -0.417, 51.67258 ], [ -0.41709, 51.67267 ], [ -0.41716, 51.67276 ], [ -0.41718, 51.67277 ], [ -0.41738, 51.67296 ], [ -0.41771, 51.67326 ], [ -0.41799, 51.67349 ], [ -0.4183, 51.67378 ], [ -0.41856, 51.67402 ], [ -0.41869, 51.67412 ], [ -0.41887, 51.67423 ], [ -0.41901, 51.67432 ], [ -0.41908, 51.67436 ], [ -0.41933, 51.67453 ], [ -0.41942, 51.67459 ], [ -0.41955, 51.67469 ], [ -0.41991, 51.67497 ], [ -0.42004, 51.67508 ], [ -0.42025, 51.67526 ], [ -0.42029, 51.6753 ], [ -0.42055, 51.67551 ], [ -0.42065, 51.67559 ], [ -0.42075, 51.67567 ], [ -0.42087, 51.67576 ], [ -0.42095, 51.67583 ], [ -0.42115, 51.67595 ], [ -0.42144, 51.67611 ], [ -0.42177, 51.67619 ], [ -0.42208, 51.67629 ], [ -0.42237, 51.67639 ], [ -0.4228, 51.67654 ], [ -0.42313, 51.67668 ], [ -0.42343, 51.67682 ], [ -0.42354, 51.67688 ], [ -0.42361, 51.67691 ], [ -0.42383, 51.67703 ], [ -0.42397, 51.67713 ], [ -0.42418, 51.67726 ], [ -0.42433, 51.67735 ], [ -0.42442, 51.67741 ], [ -0.42456, 51.67751 ], [ -0.42469, 51.67759 ], [ -0.42472, 51.67764 ], [ -0.42476, 51.67767 ], [ -0.42478, 51.67768 ], [ -0.4248, 51.6777 ], [ -0.42484, 51.67775 ], [ -0.42501, 51.67786 ], [ -0.42508, 51.6779 ], [ -0.42516, 51.67795 ], [ -0.42526, 51.67801 ], [ -0.42534, 51.67806 ], [ -0.42538, 51.67808 ], [ -0.42559, 51.67823 ], [ -0.42567, 51.67828 ], [ -0.42594, 51.6785 ], [ -0.42596, 51.67852 ], [ -0.42619, 51.6787 ], [ -0.42638, 51.67884 ], [ -0.42676, 51.67911 ], [ -0.42677, 51.67911 ], [ -0.42708, 51.67933 ], [ -0.42708, 51.67934 ], [ -0.42725, 51.67945 ], [ -0.42733, 51.67952 ], [ -0.42745, 51.67962 ], [ -0.42753, 51.67969 ], [ -0.4276, 51.67974 ], [ -0.42763, 51.67976 ], [ -0.42781, 51.67992 ], [ -0.4279, 51.67999 ], [ -0.42796, 51.68006 ], [ -0.42797, 51.68007 ], [ -0.42805, 51.68016 ], [ -0.4281, 51.68022 ], [ -0.42817, 51.68031 ], [ -0.42823, 51.6804 ], [ -0.42835, 51.68054 ], [ -0.42844, 51.68065 ], [ -0.4285, 51.68072 ], [ -0.42863, 51.68094 ], [ -0.42866, 51.68098 ], [ -0.42887, 51.68137 ], [ -0.42891, 51.68144 ], [ -0.42899, 51.68157 ], [ -0.42908, 51.68171 ], [ -0.42915, 51.68182 ], [ -0.42918, 51.68188 ], [ -0.4292, 51.68189 ], [ -0.4293, 51.68203 ], [ -0.42952, 51.68233 ], [ -0.4295198, 51.6823283 ], [ -0.42964, 51.68231 ], [ -0.4296419, 51.6823123 ], [ -0.43, 51.6828 ], [ -0.43007, 51.68289 ], [ -0.43012, 51.68297 ], [ -0.43036, 51.68327 ], [ -0.4304, 51.68333 ], [ -0.43048, 51.68343 ], [ -0.43056, 51.68352 ], [ -0.43057, 51.68355 ], [ -0.43074, 51.68389 ], [ -0.43083, 51.68406 ], [ -0.43092, 51.68423 ], [ -0.43101, 51.6844 ], [ -0.43134, 51.68503 ], [ -0.43135, 51.68504 ], [ -0.43144, 51.68525 ], [ -0.43152, 51.68546 ], [ -0.43169, 51.68581 ], [ -0.43169, 51.68582 ], [ -0.4317, 51.68583 ], [ -0.4317, 51.68589 ], [ -0.4317, 51.68595 ], [ -0.43169, 51.68597 ], [ -0.43168, 51.68599 ], [ -0.43162, 51.68604 ], [ -0.43155, 51.68609 ], [ -0.4315501, 51.6860901 ], [ -0.43169, 51.68627 ], [ -0.43183, 51.68646 ], [ -0.43191, 51.68656 ], [ -0.43204, 51.68671 ], [ -0.43215, 51.68682 ], [ -0.43232, 51.687 ], [ -0.43262, 51.68725 ], [ -0.43275, 51.68737 ], [ -0.43282, 51.68745 ], [ -0.43293, 51.68752 ], [ -0.43303, 51.68757 ], [ -0.43311, 51.68761 ], [ -0.43318, 51.68764 ], [ -0.43338, 51.68773 ], [ -0.43349, 51.68778 ], [ -0.43355, 51.68781 ], [ -0.43365, 51.68786 ], [ -0.43374, 51.68791 ], [ -0.43381, 51.68795 ], [ -0.4339, 51.68802 ], [ -0.43402, 51.68811 ], [ -0.43412, 51.6882 ], [ -0.43419, 51.68828 ], [ -0.43423, 51.68832 ], [ -0.43434, 51.68845 ], [ -0.43435, 51.68847 ], [ -0.43446, 51.68859 ], [ -0.43458, 51.68876 ], [ -0.43477, 51.68904 ], [ -0.43482, 51.6891 ], [ -0.43499, 51.68936 ], [ -0.4352, 51.68971 ], [ -0.4351996, 51.6897064 ], [ -0.43519, 51.68978 ], [ -0.43521, 51.68984 ], [ -0.4353, 51.69007 ], [ -0.43536, 51.69023 ], [ -0.43541, 51.69033 ], [ -0.43552, 51.6906 ], [ -0.43566, 51.69094 ], [ -0.43572, 51.69107 ], [ -0.43582, 51.69132 ], [ -0.43593, 51.69156 ], [ -0.43608, 51.69185 ], [ -0.43625, 51.69211 ], [ -0.43636, 51.69227 ], [ -0.43648, 51.69244 ], [ -0.43682, 51.69296 ], [ -0.43696, 51.69313 ], [ -0.43705, 51.69331 ], [ -0.43729, 51.6936 ], [ -0.43743, 51.69377 ], [ -0.43758, 51.69392 ], [ -0.43759, 51.69392 ], [ -0.43785, 51.69416 ], [ -0.43805, 51.69433 ], [ -0.43834, 51.69458 ], [ -0.43861, 51.6948 ], [ -0.43866, 51.69484 ], [ -0.43876, 51.69494 ], [ -0.43892, 51.69509 ], [ -0.43893, 51.69509 ], [ -0.43906, 51.69523 ], [ -0.43919, 51.69537 ], [ -0.43929, 51.6955 ], [ -0.4394, 51.69563 ], [ -0.43948, 51.69573 ], [ -0.43958, 51.69587 ], [ -0.43959, 51.69588 ], [ -0.43968, 51.69602 ], [ -0.43975, 51.69614 ], [ -0.43986, 51.69632 ], [ -0.43993, 51.69646 ], [ -0.44003, 51.69663 ], [ -0.44008, 51.69673 ], [ -0.4401, 51.69677 ], [ -0.44018, 51.6969 ], [ -0.44019, 51.69693 ], [ -0.44027, 51.69707 ], [ -0.44035, 51.69722 ], [ -0.44041, 51.69735 ], [ -0.44049, 51.69753 ], [ -0.44061, 51.69781 ], [ -0.44069, 51.69799 ], [ -0.44074, 51.6981 ], [ -0.4408, 51.69822 ], [ -0.44082, 51.69828 ], [ -0.44091, 51.69846 ], [ -0.44099, 51.69861 ], [ -0.44099, 51.69862 ], [ -0.44108, 51.69877 ], [ -0.44116, 51.69889 ], [ -0.44129, 51.69905 ], [ -0.44141, 51.69916 ], [ -0.44152, 51.69927 ], [ -0.44163, 51.69935 ], [ -0.44176, 51.69945 ], [ -0.44181, 51.69949 ], [ -0.4419, 51.69955 ], [ -0.44209, 51.69967 ], [ -0.44223, 51.69976 ], [ -0.44228, 51.69979 ], [ -0.44235, 51.69984 ], [ -0.44246, 51.69992 ], [ -0.44254, 51.69999 ], [ -0.44268, 51.70009 ], [ -0.4427, 51.70016 ], [ -0.44272, 51.7002 ], [ -0.44276, 51.70026 ], [ -0.44294, 51.70041 ], [ -0.44306, 51.70051 ], [ -0.44324, 51.70067 ], [ -0.44328, 51.70069 ], [ -0.44345, 51.70079 ], [ -0.44356, 51.70086 ], [ -0.44377, 51.701 ], [ -0.44399, 51.70113 ], [ -0.44404, 51.70114 ], [ -0.44408, 51.70115 ], [ -0.44416, 51.70123 ], [ -0.44421, 51.70129 ], [ -0.44425, 51.70135 ], [ -0.44429, 51.70141 ], [ -0.44431, 51.70149 ], [ -0.44425, 51.70184 ], [ -0.44417, 51.70228 ], [ -0.44419, 51.70282 ], [ -0.44421, 51.703 ], [ -0.44425, 51.70312 ], [ -0.44428, 51.70327 ], [ -0.44431, 51.70336 ], [ -0.44437, 51.70351 ], [ -0.44438, 51.70353 ], [ -0.44448, 51.70377 ], [ -0.44453, 51.70387 ], [ -0.44453, 51.70388 ], [ -0.44462, 51.70405 ], [ -0.44471, 51.70422 ], [ -0.44474, 51.70428 ], [ -0.44497, 51.70474 ], [ -0.445, 51.7048 ], [ -0.44521, 51.70521 ], [ -0.44523, 51.70525 ], [ -0.44525, 51.7053 ], [ -0.44528, 51.70535 ], [ -0.44539, 51.70555 ], [ -0.44545, 51.70566 ], [ -0.44548, 51.70572 ], [ -0.4454751, 51.7057158 ], [ -0.44558, 51.70581 ], [ -0.44574, 51.70594 ], [ -0.44576, 51.70593 ], [ -0.44577, 51.70593 ], [ -0.44578, 51.70593 ], [ -0.4458, 51.70593 ], [ -0.44581, 51.70593 ], [ -0.44582, 51.70593 ], [ -0.44583, 51.70592 ], [ -0.44584, 51.70593 ], [ -0.44585, 51.70593 ], [ -0.44586, 51.70593 ], [ -0.44587, 51.70593 ], [ -0.44588, 51.70593 ], [ -0.44589, 51.70593 ], [ -0.4459, 51.70593 ], [ -0.44591, 51.70594 ], [ -0.44592, 51.70594 ], [ -0.44593, 51.70594 ], [ -0.44594, 51.70595 ], [ -0.44595, 51.70595 ], [ -0.44596, 51.70596 ], [ -0.44597, 51.70596 ], [ -0.44598, 51.70597 ], [ -0.44599, 51.70598 ], [ -0.446, 51.70598 ], [ -0.446, 51.70599 ], [ -0.44601, 51.706 ], [ -0.44601, 51.70601 ], [ -0.44602, 51.70601 ], [ -0.44602, 51.70602 ], [ -0.44602, 51.70603 ], [ -0.44602, 51.70604 ], [ -0.44602, 51.70605 ], [ -0.44602, 51.70606 ], [ -0.44602, 51.70607 ], [ -0.44601, 51.70608 ], [ -0.44601, 51.70609 ], [ -0.446, 51.7061 ], [ -0.446, 51.70611 ], [ -0.44599, 51.70611 ], [ -0.44599, 51.70612 ], [ -0.44598, 51.70612 ], [ -0.44597, 51.70613 ], [ -0.44596, 51.70613 ], [ -0.44596, 51.70614 ], [ -0.44595, 51.70614 ], [ -0.44594, 51.70615 ], [ -0.44592, 51.70615 ], [ -0.44591, 51.70625 ], [ -0.44595, 51.70635 ], [ -0.44599, 51.70647 ], [ -0.44609, 51.70668 ], [ -0.44621, 51.70691 ], [ -0.44639, 51.70717 ], [ -0.4464, 51.70718 ], [ -0.44648, 51.70731 ], [ -0.44664, 51.70755 ], [ -0.44672, 51.70767 ], [ -0.44706, 51.70817 ], [ -0.44759, 51.70897 ], [ -0.44773, 51.7092 ], [ -0.44782, 51.70933 ], [ -0.44812, 51.70974 ], [ -0.44848, 51.71023 ], [ -0.44872, 51.71056 ], [ -0.44904, 51.71103 ], [ -0.44913, 51.71119 ], [ -0.44921, 51.71137 ], [ -0.44956, 51.71213 ], [ -0.44962, 51.71225 ], [ -0.44973, 51.71249 ], [ -0.44978, 51.7126 ], [ -0.44987, 51.71279 ], [ -0.44997, 51.71306 ], [ -0.45002, 51.71316 ], [ -0.45026, 51.71371 ], [ -0.45029, 51.71377 ], [ -0.45037, 51.71397 ], [ -0.45041, 51.71406 ], [ -0.45046, 51.71423 ], [ -0.45049, 51.71442 ], [ -0.45053, 51.71457 ], [ -0.45055, 51.71471 ], [ -0.45056, 51.7149 ], [ -0.45052, 51.71508 ], [ -0.4504, 51.71546 ], [ -0.45021, 51.71596 ], [ -0.4502, 51.71598 ], [ -0.45007, 51.7164 ], [ -0.45003, 51.71699 ], [ -0.45001, 51.71727 ], [ -0.45003, 51.71758 ], [ -0.45003, 51.71764 ], [ -0.45005, 51.71777 ], [ -0.45009, 51.71793 ], [ -0.45011, 51.71798 ], [ -0.45021, 51.7182 ], [ -0.4503, 51.71837 ], [ -0.45051, 51.71871 ], [ -0.45072, 51.71911 ], [ -0.45083, 51.71939 ], [ -0.4509, 51.71962 ], [ -0.45097, 51.71989 ], [ -0.451, 51.71997 ], [ -0.45116, 51.72063 ], [ -0.45119, 51.72073 ], [ -0.45131, 51.72113 ], [ -0.45142, 51.72149 ], [ -0.4515, 51.72169 ], [ -0.45189, 51.7227 ], [ -0.45191, 51.72277 ], [ -0.45219, 51.72362 ], [ -0.45233, 51.72401 ], [ -0.45237, 51.72411 ], [ -0.45247, 51.72435 ], [ -0.45256, 51.72456 ], [ -0.45261, 51.72468 ], [ -0.45275, 51.72495 ], [ -0.45292, 51.72525 ], [ -0.45302, 51.72539 ], [ -0.45316, 51.7256 ], [ -0.45339, 51.72585 ], [ -0.45378, 51.72626 ], [ -0.45385, 51.72635 ], [ -0.45409, 51.72667 ], [ -0.45417, 51.72684 ], [ -0.45422, 51.72703 ], [ -0.4542, 51.72724 ], [ -0.45424, 51.72739 ], [ -0.45431, 51.72752 ], [ -0.45442, 51.72767 ], [ -0.45453, 51.72778 ], [ -0.45462, 51.72785 ], [ -0.45477, 51.72795 ], [ -0.45514, 51.72824 ], [ -0.45518, 51.72827 ], [ -0.45608, 51.72896 ], [ -0.45675, 51.72952 ], [ -0.4568, 51.72956 ], [ -0.45694, 51.72969 ], [ -0.45704, 51.72981 ], [ -0.45717, 51.72996 ], [ -0.4571717, 51.7299553 ], [ -0.45725, 51.72995 ], [ -0.45729, 51.72995 ], [ -0.45732, 51.72996 ], [ -0.45737, 51.72997 ], [ -0.45789, 51.73023 ], [ -0.45801, 51.73029 ], [ -0.45815, 51.73036 ], [ -0.45816, 51.73037 ], [ -0.45817, 51.73038 ], [ -0.45817, 51.73045 ], [ -0.45837, 51.7305 ], [ -0.45873, 51.73063 ], [ -0.45895, 51.73073 ], [ -0.45911, 51.7308 ], [ -0.45949, 51.73098 ], [ -0.45968, 51.73109 ], [ -0.45972, 51.73112 ], [ -0.45978, 51.73115 ], [ -0.45982, 51.73118 ], [ -0.4599, 51.73125 ], [ -0.4601, 51.73139 ], [ -0.4603, 51.73157 ], [ -0.4607, 51.73187 ], [ -0.46084, 51.73197 ], [ -0.46104, 51.73211 ], [ -0.46106, 51.73212 ], [ -0.46135, 51.73231 ], [ -0.46158, 51.73247 ], [ -0.46173, 51.73257 ], [ -0.4621, 51.73282 ], [ -0.4623, 51.73295 ], [ -0.46244, 51.73303 ], [ -0.46281, 51.73326 ], [ -0.46296, 51.73334 ], [ -0.46311, 51.73341 ], [ -0.46348, 51.7336 ], [ -0.46387, 51.73381 ], [ -0.46406, 51.73393 ], [ -0.46432, 51.73413 ], [ -0.46464, 51.73436 ], [ -0.46481, 51.73448 ], [ -0.46484, 51.73446 ], [ -0.46485, 51.73445 ], [ -0.46487, 51.73445 ], [ -0.46489, 51.73444 ], [ -0.4649, 51.73444 ], [ -0.46492, 51.73444 ], [ -0.46494, 51.73444 ], [ -0.46496, 51.73444 ], [ -0.46498, 51.73444 ], [ -0.46499, 51.73444 ], [ -0.46501, 51.73444 ], [ -0.46505, 51.73446 ], [ -0.46508, 51.73448 ], [ -0.4651, 51.73449 ], [ -0.46511, 51.7345 ], [ -0.46512, 51.73451 ], [ -0.46512, 51.73452 ], [ -0.46513, 51.73453 ], [ -0.46513, 51.73454 ], [ -0.46513, 51.73455 ], [ -0.46513, 51.73456 ], [ -0.46513, 51.73458 ], [ -0.46511, 51.7346 ], [ -0.46532, 51.73466 ], [ -0.46539, 51.73468 ], [ -0.46547, 51.73471 ], [ -0.46555, 51.73475 ], [ -0.46584, 51.7349 ], [ -0.46615, 51.7351 ], [ -0.46631, 51.7352 ], [ -0.46642, 51.73529 ], [ -0.46665, 51.73548 ], [ -0.467, 51.73577 ], [ -0.46715, 51.73588 ], [ -0.46723, 51.73597 ], [ -0.46736, 51.73612 ], [ -0.46743, 51.73622 ], [ -0.46748, 51.73628 ], [ -0.46752, 51.73635 ], [ -0.46765, 51.73659 ], [ -0.46774, 51.73675 ], [ -0.46782, 51.73683 ], [ -0.46794, 51.73695 ], [ -0.46807, 51.73705 ], [ -0.4682, 51.73713 ], [ -0.46834, 51.73721 ], [ -0.46854, 51.73732 ], [ -0.46878, 51.73743 ], [ -0.4689, 51.73748 ], [ -0.46899, 51.73752 ], [ -0.46916, 51.73757 ], [ -0.46934, 51.73762 ], [ -0.46957, 51.73767 ], [ -0.46971, 51.7377 ], [ -0.46974, 51.7377 ], [ -0.46975, 51.73771 ], [ -0.46991, 51.73773 ], [ -0.46995, 51.73774 ], [ -0.47003, 51.73777 ], [ -0.47012, 51.73781 ], [ -0.47018, 51.73784 ], [ -0.47049, 51.7381 ], [ -0.47059, 51.73818 ], [ -0.47117, 51.73861 ], [ -0.47127, 51.73868 ], [ -0.47204, 51.73924 ], [ -0.47213, 51.73931 ], [ -0.47217, 51.73934 ], [ -0.4723, 51.73942 ], [ -0.47239, 51.7395 ], [ -0.47245, 51.73954 ], [ -0.4724465, 51.7395441 ], [ -0.47243, 51.73958 ], [ -0.47245, 51.73962 ], [ -0.47247, 51.73964 ], [ -0.4725, 51.73967 ], [ -0.47255, 51.73971 ], [ -0.47261, 51.73975 ], [ -0.47266, 51.73979 ], [ -0.47268, 51.73982 ], [ -0.47271, 51.73987 ], [ -0.47274, 51.73994 ], [ -0.47287, 51.74013 ], [ -0.47297, 51.7403 ], [ -0.47302, 51.7404 ], [ -0.47309, 51.74049 ], [ -0.47314, 51.74053 ], [ -0.4731364, 51.7405299 ], [ -0.47312, 51.74091 ], [ -0.47311, 51.74099 ], [ -0.47312, 51.74104 ], [ -0.47312, 51.74107 ], [ -0.47314, 51.74114 ], [ -0.47341, 51.74151 ], [ -0.47342, 51.74153 ], [ -0.47362, 51.7417 ], [ -0.47369, 51.74178 ], [ -0.47372, 51.74181 ], [ -0.47373, 51.74183 ], [ -0.47374, 51.74186 ], [ -0.47373, 51.74189 ], [ -0.47373, 51.7419 ], [ -0.4737, 51.74193 ], [ -0.4737, 51.74195 ], [ -0.47369, 51.74197 ], [ -0.47369, 51.74198 ], [ -0.47369, 51.74199 ], [ -0.47372, 51.74201 ], [ -0.4737226, 51.7420114 ], [ -0.47381, 51.74201 ], [ -0.47395, 51.74203 ], [ -0.4739493, 51.7420283 ], [ -0.47388, 51.74224 ], [ -0.47385, 51.74233 ], [ -0.47385, 51.74259 ], [ -0.47383, 51.74272 ], [ -0.47382, 51.74284 ], [ -0.47377, 51.74312 ], [ -0.47375, 51.74321 ], [ -0.4737, 51.74343 ], [ -0.47367, 51.74357 ], [ -0.47359, 51.74397 ], [ -0.47339, 51.74464 ], [ -0.47334, 51.74481 ], [ -0.47334, 51.74484 ], [ -0.47331, 51.745 ], [ -0.47331, 51.74516 ], [ -0.47331, 51.74532 ], [ -0.4733, 51.74563 ], [ -0.4733, 51.74576 ], [ -0.4732954, 51.7457614 ], [ -0.47331, 51.74576 ], [ -0.47332, 51.74576 ], [ -0.47333, 51.74577 ], [ -0.47334, 51.74577 ], [ -0.47335, 51.74577 ], [ -0.47336, 51.74578 ], [ -0.47337, 51.74578 ], [ -0.47337, 51.74579 ], [ -0.47338, 51.74579 ], [ -0.47338, 51.7458 ], [ -0.47339, 51.7458 ], [ -0.47339, 51.74581 ], [ -0.47339, 51.74582 ], [ -0.4734, 51.74582 ], [ -0.4734, 51.74583 ], [ -0.4734, 51.74584 ], [ -0.47339, 51.74584 ], [ -0.47339, 51.74585 ], [ -0.47354, 51.7459 ], [ -0.47357, 51.74591 ], [ -0.47365, 51.74594 ], [ -0.47377, 51.74598 ], [ -0.47377, 51.74599 ], [ -0.47377, 51.746 ], [ -0.47376, 51.746 ], [ -0.47376, 51.74601 ], [ -0.47376, 51.74602 ], [ -0.47377, 51.74602 ], [ -0.47377, 51.74603 ], [ -0.47377, 51.74604 ], [ -0.47378, 51.74604 ], [ -0.47378, 51.74605 ], [ -0.47379, 51.74605 ], [ -0.4738, 51.74605 ], [ -0.4738, 51.74606 ], [ -0.47381, 51.74606 ], [ -0.47382, 51.74606 ], [ -0.47382, 51.74607 ], [ -0.47383, 51.74607 ], [ -0.47384, 51.74607 ], [ -0.47385, 51.74607 ], [ -0.47386, 51.74607 ], [ -0.47387, 51.74607 ], [ -0.47388, 51.74627 ], [ -0.47389, 51.7464 ], [ -0.4738927, 51.7464047 ], [ -0.47391, 51.74641 ], [ -0.47392, 51.74641 ], [ -0.47393, 51.74641 ], [ -0.47393, 51.74642 ], [ -0.47394, 51.74642 ], [ -0.47395, 51.74642 ], [ -0.47395, 51.74643 ], [ -0.47396, 51.74643 ], [ -0.47396, 51.74644 ], [ -0.47397, 51.74644 ], [ -0.47397, 51.74645 ], [ -0.47398, 51.74645 ], [ -0.47398, 51.74646 ], [ -0.47399, 51.74647 ], [ -0.47418, 51.74653 ], [ -0.4743, 51.74658 ], [ -0.47443, 51.74665 ], [ -0.47457, 51.74674 ], [ -0.47464, 51.74679 ], [ -0.4747, 51.74684 ], [ -0.47475, 51.74689 ], [ -0.4748, 51.74693 ], [ -0.47484, 51.74698 ], [ -0.47492, 51.74708 ], [ -0.47497, 51.74715 ], [ -0.47505, 51.74723 ], [ -0.47511, 51.74734 ], [ -0.47514, 51.74742 ], [ -0.47517, 51.7475 ], [ -0.47519, 51.74758 ], [ -0.47519, 51.74766 ], [ -0.47519, 51.74777 ], [ -0.47519, 51.74787 ], [ -0.47517, 51.748 ], [ -0.47517, 51.74809 ], [ -0.47516, 51.7482 ], [ -0.47513, 51.74859 ], [ -0.47507, 51.74874 ], [ -0.47508, 51.74891 ], [ -0.47507, 51.74912 ], [ -0.47508, 51.74943 ], [ -0.47509, 51.74969 ], [ -0.47508, 51.75042 ], [ -0.4751, 51.75091 ], [ -0.4751, 51.75098 ], [ -0.47512, 51.75121 ], [ -0.47514, 51.75151 ], [ -0.47522, 51.75232 ], [ -0.47525, 51.75254 ], [ -0.47526, 51.75279 ], [ -0.47526, 51.753 ], [ -0.47523, 51.75325 ], [ -0.47522, 51.75336 ], [ -0.4752, 51.75349 ], [ -0.47519, 51.75358 ], [ -0.47516, 51.75364 ], [ -0.47517, 51.75364 ], [ -0.47518, 51.75364 ], [ -0.47518, 51.75365 ], [ -0.47519, 51.75365 ], [ -0.4752, 51.75365 ], [ -0.47521, 51.75366 ], [ -0.47522, 51.75366 ], [ -0.47522, 51.75367 ], [ -0.47523, 51.75367 ], [ -0.47523, 51.75368 ], [ -0.47523, 51.75369 ], [ -0.47523, 51.7537 ], [ -0.47523, 51.75371 ], [ -0.47523, 51.75372 ], [ -0.47522, 51.75372 ], [ -0.47522, 51.75373 ], [ -0.47521, 51.75373 ], [ -0.4752, 51.75373 ], [ -0.4752, 51.75374 ], [ -0.47519, 51.75374 ], [ -0.47518, 51.75374 ], [ -0.47517, 51.75375 ], [ -0.47519, 51.75388 ], [ -0.4752, 51.75395 ], [ -0.47518, 51.75406 ], [ -0.47518, 51.75417 ], [ -0.47516, 51.75433 ], [ -0.47516, 51.75443 ], [ -0.47517, 51.75478 ], [ -0.4752, 51.75516 ], [ -0.47522, 51.75527 ], [ -0.47524, 51.75538 ], [ -0.47533, 51.75579 ], [ -0.47547, 51.75639 ], [ -0.47553, 51.75669 ], [ -0.47553, 51.75673 ], [ -0.47562, 51.75684 ], [ -0.47567, 51.7569 ], [ -0.47575, 51.75701 ], [ -0.47578, 51.75702 ], [ -0.47579, 51.75703 ], [ -0.4758, 51.75704 ], [ -0.47581, 51.75705 ], [ -0.47583, 51.75706 ], [ -0.47586, 51.7571 ], [ -0.47588, 51.75713 ], [ -0.47588, 51.75716 ], [ -0.47589, 51.75718 ], [ -0.47589, 51.75721 ], [ -0.47589, 51.75724 ], [ -0.47587, 51.75726 ], [ -0.47586, 51.75727 ], [ -0.47585, 51.75728 ], [ -0.47583, 51.75729 ], [ -0.47581, 51.7573 ], [ -0.47579, 51.75731 ], [ -0.47573, 51.75751 ], [ -0.47587, 51.75785 ], [ -0.47602, 51.7582 ], [ -0.47607, 51.75832 ], [ -0.47644, 51.75903 ], [ -0.47682, 51.75978 ], [ -0.47694, 51.76 ], [ -0.47747, 51.76101 ], [ -0.4777, 51.76146 ], [ -0.4779, 51.76186 ], [ -0.47818, 51.76236 ], [ -0.47821, 51.76241 ], [ -0.47831, 51.76259 ], [ -0.47837, 51.76267 ], [ -0.47862, 51.76303 ], [ -0.47863, 51.76304 ], [ -0.47894, 51.76348 ], [ -0.4791, 51.76374 ], [ -0.4792, 51.76389 ], [ -0.47926, 51.76404 ], [ -0.4793, 51.76416 ], [ -0.47938, 51.76446 ], [ -0.47944, 51.76469 ], [ -0.47949, 51.76506 ], [ -0.47952, 51.7653 ], [ -0.47958, 51.7654 ], [ -0.4796, 51.76553 ], [ -0.4795992, 51.7655268 ], [ -0.47962, 51.76554 ], [ -0.47966, 51.76557 ], [ -0.47968, 51.76559 ], [ -0.47968, 51.76562 ], [ -0.47967, 51.76566 ], [ -0.47965, 51.76568 ], [ -0.4796, 51.76571 ], [ -0.47956, 51.76572 ], [ -0.47955, 51.76581 ], [ -0.47948, 51.766 ], [ -0.47941, 51.7661 ], [ -0.4794, 51.76618 ], [ -0.47933, 51.76637 ], [ -0.47927, 51.76654 ], [ -0.47923, 51.76666 ], [ -0.47912, 51.76693 ], [ -0.47884, 51.76767 ], [ -0.47874, 51.76813 ], [ -0.47873, 51.76822 ], [ -0.47872, 51.76849 ], [ -0.47874, 51.76867 ], [ -0.47874, 51.76871 ], [ -0.47875, 51.76882 ], [ -0.47875, 51.76885 ], [ -0.47876, 51.76889 ], [ -0.4788, 51.76909 ], [ -0.47885, 51.76923 ], [ -0.4789, 51.76941 ], [ -0.47899, 51.76962 ], [ -0.47908, 51.76981 ], [ -0.47913, 51.7699 ], [ -0.47916, 51.76994 ], [ -0.47924, 51.77006 ], [ -0.47936, 51.77024 ], [ -0.47952, 51.77047 ], [ -0.47987, 51.77093 ], [ -0.47995, 51.77103 ], [ -0.4803, 51.77148 ], [ -0.48039, 51.77159 ], [ -0.48088, 51.77223 ], [ -0.48093, 51.77229 ], [ -0.48115, 51.77258 ], [ -0.4813, 51.7728 ], [ -0.48173, 51.77333 ], [ -0.48186, 51.77347 ], [ -0.4819, 51.77352 ], [ -0.48243, 51.77407 ], [ -0.48247, 51.77412 ], [ -0.48267, 51.7743 ], [ -0.48313, 51.77472 ], [ -0.48332, 51.77488 ], [ -0.48337, 51.77492 ], [ -0.4838, 51.77529 ], [ -0.4842, 51.77559 ], [ -0.48478, 51.77607 ], [ -0.48515, 51.7764 ], [ -0.48525, 51.7765 ], [ -0.48537, 51.77661 ], [ -0.48553, 51.77677 ], [ -0.48561, 51.77686 ], [ -0.48579, 51.77704 ], [ -0.48584, 51.7771 ], [ -0.48605, 51.77732 ], [ -0.48608, 51.77735 ], [ -0.48678, 51.7781 ], [ -0.48686, 51.77819 ], [ -0.48702, 51.77834 ], [ -0.48706, 51.77837 ], [ -0.48733, 51.77857 ], [ -0.48737, 51.7786 ], [ -0.48749, 51.77868 ], [ -0.48774, 51.77881 ], [ -0.48789, 51.77888 ], [ -0.48802, 51.77894 ], [ -0.48834, 51.77905 ], [ -0.48865, 51.77915 ], [ -0.48879, 51.77918 ], [ -0.48887, 51.77921 ], [ -0.48939, 51.77938 ], [ -0.48958, 51.77945 ], [ -0.48972, 51.7795 ], [ -0.48988, 51.77957 ], [ -0.48992, 51.77959 ], [ -0.4901, 51.77968 ], [ -0.49033, 51.77982 ], [ -0.49054, 51.77996 ], [ -0.49125, 51.78045 ], [ -0.49158, 51.78066 ], [ -0.49175, 51.78079 ], [ -0.49194, 51.78094 ], [ -0.4921, 51.78109 ], [ -0.49218, 51.78116 ], [ -0.49231, 51.78126 ], [ -0.49242, 51.78134 ], [ -0.49255, 51.78142 ], [ -0.49278, 51.78156 ], [ -0.49289, 51.78162 ], [ -0.49312, 51.78175 ], [ -0.49333, 51.78186 ], [ -0.49338, 51.78188 ], [ -0.49365, 51.782 ], [ -0.49405, 51.78216 ], [ -0.49508, 51.7826 ], [ -0.49551, 51.78278 ], [ -0.49576, 51.78287 ], [ -0.49598, 51.78296 ], [ -0.49612, 51.78301 ], [ -0.49648, 51.78314 ], [ -0.49669, 51.78321 ], [ -0.49677, 51.78323 ], [ -0.49699, 51.78329 ], [ -0.49729, 51.78335 ], [ -0.49779, 51.78346 ], [ -0.49815, 51.78353 ], [ -0.49829, 51.78357 ], [ -0.49841, 51.7836 ], [ -0.49851, 51.78363 ], [ -0.49859, 51.78367 ], [ -0.4986, 51.78367 ], [ -0.49867, 51.7837 ], [ -0.49872, 51.78374 ], [ -0.49875, 51.78379 ], [ -0.49875, 51.78381 ], [ -0.49876, 51.78384 ], [ -0.49877, 51.78389 ], [ -0.49876, 51.78394 ], [ -0.49876, 51.78399 ], [ -0.49876, 51.78411 ], [ -0.49877, 51.78423 ], [ -0.49882, 51.78434 ], [ -0.49886, 51.78443 ], [ -0.49892, 51.78451 ], [ -0.49895, 51.78456 ], [ -0.49903, 51.78465 ], [ -0.49909, 51.7847 ], [ -0.49917, 51.78475 ], [ -0.49927, 51.78479 ], [ -0.49933, 51.78481 ], [ -0.49953, 51.78487 ], [ -0.50009, 51.78497 ], [ -0.50033, 51.785 ], [ -0.50064, 51.78506 ], [ -0.50087, 51.78512 ], [ -0.50104, 51.78519 ], [ -0.50109, 51.78521 ], [ -0.50119, 51.78526 ], [ -0.50127, 51.78529 ], [ -0.5014, 51.78536 ], [ -0.50144, 51.78538 ], [ -0.50148, 51.78541 ], [ -0.50153, 51.78544 ], [ -0.5017, 51.78561 ], [ -0.50174, 51.78564 ], [ -0.50203, 51.78594 ], [ -0.50242, 51.78635 ], [ -0.50292, 51.78688 ], [ -0.50296, 51.78693 ], [ -0.50337, 51.78737 ], [ -0.50364, 51.78766 ], [ -0.50366, 51.78768 ], [ -0.50385, 51.78787 ], [ -0.50388, 51.7879 ], [ -0.50402, 51.78805 ], [ -0.50416, 51.78822 ], [ -0.50424, 51.78836 ], [ -0.50425, 51.78838 ], [ -0.50433, 51.78856 ], [ -0.50439, 51.78888 ], [ -0.5044, 51.78905 ], [ -0.50446, 51.78963 ], [ -0.50448, 51.7898 ], [ -0.50448, 51.78981 ], [ -0.5045, 51.78999 ], [ -0.50453, 51.79019 ], [ -0.50458, 51.79056 ], [ -0.50461, 51.79067 ], [ -0.50465, 51.79083 ], [ -0.50468, 51.79088 ], [ -0.5047, 51.79094 ], [ -0.50474, 51.79101 ], [ -0.50479, 51.79111 ], [ -0.50486, 51.79122 ], [ -0.50501, 51.79149 ], [ -0.50507, 51.79162 ], [ -0.50513, 51.79174 ], [ -0.50517, 51.7919 ], [ -0.50519, 51.79198 ], [ -0.50521, 51.79201 ], [ -0.50524, 51.79207 ], [ -0.50527, 51.79211 ], [ -0.50534, 51.79218 ], [ -0.50552, 51.79234 ], [ -0.5058, 51.79259 ], [ -0.50604, 51.79277 ], [ -0.50623, 51.79291 ], [ -0.50644, 51.79307 ], [ -0.50664, 51.79319 ], [ -0.50705, 51.79341 ], [ -0.50771, 51.79375 ], [ -0.50793, 51.79388 ], [ -0.50801, 51.79393 ], [ -0.50827, 51.79412 ], [ -0.50846, 51.79431 ], [ -0.50862, 51.79447 ], [ -0.50875, 51.79459 ], [ -0.50877, 51.79461 ], [ -0.5089, 51.79474 ], [ -0.50909, 51.79493 ], [ -0.50916, 51.79501 ], [ -0.5095, 51.79531 ], [ -0.51006, 51.79573 ], [ -0.51072, 51.79625 ], [ -0.51117, 51.79664 ], [ -0.51146, 51.79692 ], [ -0.51185, 51.7973 ], [ -0.51211, 51.79752 ], [ -0.51229, 51.79767 ], [ -0.51265, 51.79791 ], [ -0.51284, 51.79803 ], [ -0.5131, 51.79818 ], [ -0.5137, 51.79851 ], [ -0.51374, 51.79853 ], [ -0.51387, 51.7986 ], [ -0.51409, 51.79871 ], [ -0.51433, 51.79884 ], [ -0.51477, 51.79905 ], [ -0.51482, 51.79908 ], [ -0.51506, 51.79919 ], [ -0.51522, 51.79928 ], [ -0.51527, 51.79931 ], [ -0.51551, 51.79944 ], [ -0.51581, 51.79963 ], [ -0.51588, 51.79969 ], [ -0.51627, 51.80001 ], [ -0.51659, 51.80026 ], [ -0.51672, 51.80037 ], [ -0.51694, 51.80054 ], [ -0.51694, 51.80055 ], [ -0.51713, 51.80068 ], [ -0.51734, 51.80084 ], [ -0.51769, 51.80108 ], [ -0.51792, 51.80121 ], [ -0.518, 51.80126 ], [ -0.51809, 51.8013 ], [ -0.51832, 51.80141 ], [ -0.51838, 51.80144 ], [ -0.51853, 51.80151 ], [ -0.51923, 51.80179 ], [ -0.51953, 51.80191 ], [ -0.51959, 51.80193 ], [ -0.52017, 51.80216 ], [ -0.52076, 51.80239 ], [ -0.52082, 51.80242 ], [ -0.52122, 51.80261 ], [ -0.52149, 51.80279 ], [ -0.52171, 51.80301 ], [ -0.52183, 51.80317 ], [ -0.522, 51.80346 ], [ -0.52207, 51.80363 ], [ -0.52215, 51.80384 ], [ -0.52234, 51.80431 ], [ -0.52249, 51.80462 ], [ -0.52252, 51.80467 ], [ -0.52264, 51.80483 ], [ -0.52266, 51.80485 ], [ -0.5228, 51.80499 ], [ -0.52282, 51.80501 ], [ -0.52305, 51.80518 ], [ -0.52374, 51.80562 ], [ -0.52408, 51.80578 ], [ -0.52442, 51.80591 ], [ -0.52467, 51.80604 ], [ -0.52487, 51.80612 ], [ -0.52498, 51.80617 ], [ -0.52505, 51.80621 ], [ -0.52514, 51.80626 ], [ -0.52519, 51.8063 ], [ -0.52526, 51.80634 ], [ -0.52542, 51.80646 ], [ -0.52555, 51.80655 ], [ -0.52564, 51.80661 ], [ -0.52569, 51.80664 ], [ -0.52578, 51.8067 ], [ -0.52585, 51.80673 ], [ -0.52593, 51.80677 ], [ -0.52597, 51.80679 ], [ -0.52604, 51.80682 ], [ -0.5262, 51.80688 ], [ -0.52627, 51.8069 ], [ -0.52634, 51.80692 ], [ -0.52643, 51.80694 ], [ -0.52652, 51.80697 ], [ -0.52667, 51.80701 ], [ -0.52676, 51.80703 ], [ -0.52684, 51.80705 ], [ -0.52693, 51.80708 ], [ -0.52703, 51.80711 ], [ -0.52711, 51.80713 ], [ -0.52723, 51.80718 ], [ -0.52732, 51.80722 ], [ -0.52739, 51.80726 ], [ -0.52756, 51.80735 ], [ -0.52777, 51.80748 ], [ -0.52793, 51.80758 ], [ -0.52798, 51.80761 ], [ -0.52814, 51.80769 ], [ -0.52815, 51.8077 ], [ -0.52824, 51.80774 ], [ -0.52835, 51.80778 ], [ -0.52855, 51.80787 ], [ -0.52873, 51.80794 ], [ -0.52897, 51.80804 ], [ -0.52913, 51.80812 ], [ -0.52926, 51.80818 ], [ -0.52943, 51.80827 ], [ -0.52959, 51.80837 ], [ -0.52964, 51.8084 ], [ -0.52974, 51.80848 ], [ -0.52988, 51.8086 ], [ -0.52995, 51.80867 ], [ -0.53004, 51.80877 ], [ -0.5301, 51.80884 ], [ -0.53019, 51.80897 ], [ -0.5303, 51.80912 ], [ -0.53036, 51.80922 ], [ -0.53046, 51.80935 ], [ -0.53052, 51.80944 ], [ -0.53073, 51.8097 ], [ -0.53085, 51.80986 ], [ -0.53091, 51.80994 ], [ -0.53093, 51.80998 ], [ -0.53096, 51.81002 ], [ -0.53098, 51.81006 ], [ -0.53102, 51.81015 ], [ -0.53104, 51.81021 ], [ -0.53106, 51.81027 ], [ -0.53109, 51.81037 ], [ -0.53116, 51.81053 ], [ -0.5313, 51.8109 ], [ -0.53148, 51.81138 ], [ -0.53158, 51.81162 ], [ -0.53165, 51.81179 ], [ -0.53167, 51.81183 ], [ -0.53179, 51.81217 ], [ -0.53194, 51.81253 ], [ -0.53197, 51.8126 ], [ -0.532, 51.81269 ], [ -0.53205, 51.81279 ], [ -0.53212, 51.81292 ], [ -0.53222, 51.81307 ], [ -0.53235, 51.81322 ], [ -0.5325, 51.81337 ], [ -0.53269, 51.81355 ], [ -0.53287, 51.81372 ], [ -0.53308, 51.8139 ], [ -0.53323, 51.81403 ], [ -0.53337, 51.81415 ], [ -0.53373, 51.81443 ], [ -0.53412, 51.81472 ], [ -0.53464, 51.81512 ], [ -0.53476, 51.81522 ], [ -0.53505, 51.81547 ], [ -0.53529, 51.81565 ], [ -0.5355, 51.81581 ], [ -0.5357, 51.81596 ], [ -0.53591, 51.8161 ], [ -0.53608, 51.81622 ], [ -0.53623, 51.81633 ], [ -0.53646, 51.81647 ], [ -0.53671, 51.81661 ], [ -0.53693, 51.81673 ], [ -0.53715, 51.81687 ], [ -0.53736, 51.81699 ], [ -0.53756, 51.8171 ], [ -0.53771, 51.81718 ], [ -0.53787, 51.81724 ], [ -0.53824, 51.81737 ], [ -0.53867, 51.8175 ], [ -0.53871, 51.81751 ], [ -0.53915, 51.81765 ], [ -0.53918, 51.81765 ], [ -0.53985, 51.81785 ], [ -0.54053, 51.81804 ], [ -0.54091, 51.81816 ], [ -0.54094, 51.81817 ], [ -0.54123, 51.81828 ], [ -0.54165, 51.81848 ], [ -0.54169, 51.81851 ], [ -0.54177, 51.81855 ], [ -0.54191, 51.81863 ], [ -0.54199, 51.81867 ], [ -0.54233, 51.81887 ], [ -0.54264, 51.81907 ], [ -0.543, 51.81932 ], [ -0.54311, 51.81941 ], [ -0.54343, 51.81966 ], [ -0.54459, 51.82052 ], [ -0.54487, 51.82072 ], [ -0.54503, 51.82084 ], [ -0.54517, 51.82096 ], [ -0.54535, 51.82117 ], [ -0.54553, 51.82141 ], [ -0.54555, 51.82143 ], [ -0.54582, 51.82177 ], [ -0.54588, 51.82185 ], [ -0.54599, 51.822 ], [ -0.54619, 51.82221 ], [ -0.54643, 51.82245 ], [ -0.54677, 51.82278 ], [ -0.54693, 51.82294 ], [ -0.54727, 51.82323 ], [ -0.54768, 51.82357 ], [ -0.54813, 51.82395 ], [ -0.54842, 51.82417 ], [ -0.54861, 51.82432 ], [ -0.54888, 51.8245 ], [ -0.5491, 51.82465 ], [ -0.54931, 51.82477 ], [ -0.54984, 51.82508 ], [ -0.55025, 51.82526 ], [ -0.55026, 51.82527 ], [ -0.55068, 51.82545 ], [ -0.55087, 51.82554 ], [ -0.55103, 51.82561 ], [ -0.55111, 51.82563 ], [ -0.5515, 51.82578 ], [ -0.55197, 51.82594 ], [ -0.55228, 51.82605 ], [ -0.55259, 51.82617 ], [ -0.55286, 51.82629 ], [ -0.55293, 51.82633 ], [ -0.55313, 51.82644 ], [ -0.55326, 51.82654 ], [ -0.5534, 51.82663 ], [ -0.55373, 51.82686 ], [ -0.55406, 51.82712 ], [ -0.55456, 51.82759 ], [ -0.55457, 51.8276 ], [ -0.55496, 51.828 ], [ -0.55528, 51.82835 ], [ -0.55537, 51.82846 ], [ -0.55542, 51.82853 ], [ -0.55549, 51.82863 ], [ -0.55565, 51.82883 ], [ -0.55643, 51.82983 ], [ -0.55659, 51.83004 ], [ -0.55677, 51.8303 ], [ -0.55686, 51.83048 ], [ -0.55692, 51.83063 ], [ -0.55699, 51.83085 ], [ -0.55711, 51.83118 ], [ -0.55792, 51.83278 ], [ -0.55821, 51.83337 ], [ -0.55833, 51.83363 ], [ -0.55834, 51.83366 ], [ -0.55848, 51.83394 ], [ -0.55858, 51.83413 ], [ -0.5587, 51.83428 ], [ -0.55881, 51.83441 ], [ -0.55897, 51.83457 ], [ -0.55922, 51.83474 ], [ -0.55966, 51.83501 ], [ -0.56014, 51.83531 ], [ -0.56017, 51.83533 ], [ -0.56048, 51.83549 ], [ -0.56061, 51.83557 ], [ -0.56092, 51.83577 ], [ -0.56114, 51.83591 ], [ -0.56127, 51.836 ], [ -0.56129, 51.83601 ], [ -0.56142, 51.83611 ], [ -0.56178, 51.83641 ], [ -0.56183, 51.83645 ], [ -0.56202, 51.83657 ], [ -0.5621, 51.83663 ], [ -0.56211, 51.83662 ], [ -0.56212, 51.83662 ], [ -0.56213, 51.83662 ], [ -0.56214, 51.83662 ], [ -0.56215, 51.83662 ], [ -0.56216, 51.83662 ], [ -0.56217, 51.83662 ], [ -0.56218, 51.83662 ], [ -0.56219, 51.83662 ], [ -0.5622, 51.83662 ], [ -0.56221, 51.83662 ], [ -0.56222, 51.83663 ], [ -0.56223, 51.83663 ], [ -0.56223, 51.83664 ], [ -0.56224, 51.83664 ], [ -0.56225, 51.83665 ], [ -0.56225, 51.83666 ], [ -0.56226, 51.83666 ], [ -0.56226, 51.83667 ], [ -0.56226, 51.83668 ], [ -0.56226, 51.83669 ], [ -0.56226, 51.8367 ], [ -0.56226, 51.83671 ], [ -0.56225, 51.83671 ], [ -0.56225, 51.83672 ], [ -0.56224, 51.83672 ], [ -0.56224, 51.83673 ], [ -0.56223, 51.83673 ], [ -0.56235, 51.83682 ], [ -0.56246, 51.8369 ], [ -0.56257, 51.83697 ], [ -0.56274, 51.83706 ], [ -0.56308, 51.83721 ], [ -0.56329, 51.8373 ], [ -0.56341, 51.83734 ], [ -0.56351, 51.83738 ], [ -0.56376, 51.83745 ], [ -0.56389, 51.83748 ], [ -0.56401, 51.83751 ], [ -0.56426, 51.83755 ], [ -0.56444, 51.83758 ], [ -0.5647, 51.83761 ], [ -0.56498, 51.83765 ], [ -0.56525, 51.83768 ], [ -0.56544, 51.83769 ], [ -0.5657, 51.83773 ], [ -0.56587, 51.83776 ], [ -0.56603, 51.8378 ], [ -0.56618, 51.83784 ], [ -0.56626, 51.83787 ], [ -0.56648, 51.83795 ], [ -0.56664, 51.83802 ], [ -0.56665, 51.83803 ], [ -0.56677, 51.83809 ], [ -0.56689, 51.83816 ], [ -0.56702, 51.83824 ], [ -0.56712, 51.83831 ], [ -0.5673, 51.8385 ], [ -0.56743, 51.83863 ], [ -0.56748, 51.83868 ], [ -0.56762, 51.8388 ], [ -0.56777, 51.83891 ], [ -0.56792, 51.839 ], [ -0.56803, 51.83905 ], [ -0.56821, 51.83915 ], [ -0.56841, 51.83923 ], [ -0.56877, 51.83939 ], [ -0.56918, 51.83958 ], [ -0.5692, 51.83959 ], [ -0.56942, 51.83971 ], [ -0.57006, 51.84007 ], [ -0.57034, 51.84023 ], [ -0.57092, 51.84056 ], [ -0.57097, 51.84058 ], [ -0.57135, 51.8408 ], [ -0.5714, 51.84084 ], [ -0.57209, 51.84126 ], [ -0.57211, 51.84127 ], [ -0.57267, 51.8416 ], [ -0.57303, 51.84185 ], [ -0.57304, 51.84185 ], [ -0.57334, 51.84206 ], [ -0.57413, 51.84258 ], [ -0.57418, 51.84262 ], [ -0.57482, 51.84306 ], [ -0.57501, 51.84319 ], [ -0.5756, 51.8436 ], [ -0.57613, 51.84404 ], [ -0.57652, 51.84444 ], [ -0.57673, 51.84465 ], [ -0.57713, 51.84506 ], [ -0.57716, 51.84509 ], [ -0.57739, 51.84537 ], [ -0.57745, 51.84543 ], [ -0.57759, 51.84564 ], [ -0.5777, 51.84581 ], [ -0.57782, 51.84603 ], [ -0.57784, 51.84609 ], [ -0.57801, 51.84662 ], [ -0.57811, 51.84693 ], [ -0.57827, 51.84736 ], [ -0.57835, 51.8475 ], [ -0.57845, 51.84768 ], [ -0.57862, 51.84795 ], [ -0.57866, 51.848 ], [ -0.57878, 51.84816 ], [ -0.57914, 51.84864 ], [ -0.57937, 51.84894 ], [ -0.57938, 51.84897 ], [ -0.5795, 51.84913 ], [ -0.57951, 51.84914 ], [ -0.57952, 51.84916 ], [ -0.57961, 51.8493 ], [ -0.57964, 51.84934 ], [ -0.57974, 51.84956 ], [ -0.57977, 51.84964 ], [ -0.57981, 51.84973 ], [ -0.57987, 51.84996 ], [ -0.57991, 51.85013 ], [ -0.57997, 51.85037 ], [ -0.57997, 51.8503661 ], [ -0.57998, 51.85037 ], [ -0.57999, 51.85037 ], [ -0.58, 51.85037 ], [ -0.58001, 51.85037 ], [ -0.58002, 51.85037 ], [ -0.58002, 51.85038 ], [ -0.58003, 51.85038 ], [ -0.58004, 51.85038 ], [ -0.58004, 51.85039 ], [ -0.58005, 51.85039 ], [ -0.58005, 51.8504 ], [ -0.58006, 51.85041 ], [ -0.58037, 51.85042 ], [ -0.58038, 51.85043 ], [ -0.5803836, 51.8504255 ], [ -0.58039, 51.85043 ], [ -0.58039, 51.85044 ], [ -0.5804, 51.85044 ], [ -0.58041, 51.85044 ], [ -0.58041, 51.85045 ], [ -0.58042, 51.85045 ], [ -0.58043, 51.85045 ], [ -0.58044, 51.85045 ], [ -0.58045, 51.85045 ], [ -0.58046, 51.85045 ], [ -0.58054, 51.85067 ], [ -0.58058, 51.8508 ], [ -0.58061, 51.85093 ], [ -0.58063, 51.85101 ], [ -0.58069, 51.85116 ], [ -0.58075, 51.85126 ], [ -0.58081, 51.85133 ], [ -0.58094, 51.85147 ], [ -0.58103, 51.85156 ], [ -0.58134, 51.85181 ], [ -0.58165, 51.85206 ], [ -0.58178, 51.85214 ], [ -0.58193, 51.85226 ], [ -0.58202, 51.85234 ], [ -0.58216, 51.85248 ], [ -0.5822, 51.85251 ], [ -0.58233, 51.85264 ], [ -0.58239, 51.85271 ], [ -0.58266, 51.85304 ], [ -0.58283, 51.85324 ], [ -0.58319, 51.85366 ], [ -0.58333, 51.85383 ], [ -0.5836, 51.85415 ], [ -0.5837, 51.85426 ], [ -0.58375, 51.85432 ], [ -0.5838, 51.85438 ], [ -0.58381, 51.8544 ], [ -0.58408, 51.85472 ], [ -0.58411, 51.85477 ], [ -0.58429, 51.85497 ], [ -0.58439, 51.85509 ], [ -0.58447, 51.85518 ], [ -0.58458, 51.85527 ], [ -0.58493, 51.85562 ], [ -0.58499, 51.85569 ], [ -0.58525, 51.85599 ], [ -0.58533, 51.85607 ], [ -0.58551, 51.85626 ], [ -0.58571, 51.8565 ], [ -0.58572, 51.8565 ], [ -0.58574, 51.85653 ], [ -0.58602, 51.85694 ], [ -0.58608, 51.85703 ], [ -0.58618, 51.85716 ], [ -0.5862, 51.85719 ], [ -0.58633, 51.85736 ], [ -0.58643, 51.85749 ], [ -0.58645, 51.85752 ], [ -0.58647, 51.85755 ], [ -0.58656, 51.85765 ], [ -0.58659, 51.85768 ], [ -0.58687, 51.85798 ], [ -0.58699, 51.85812 ], [ -0.587, 51.85814 ], [ -0.58702, 51.85815 ], [ -0.58716, 51.85826 ], [ -0.58747, 51.8585 ], [ -0.58811, 51.85903 ], [ -0.5882, 51.85913 ], [ -0.58838, 51.85931 ], [ -0.58864, 51.85959 ], [ -0.58912, 51.86009 ], [ -0.58914, 51.86011 ], [ -0.58924, 51.86021 ], [ -0.58959, 51.86054 ], [ -0.58987, 51.86082 ], [ -0.58995, 51.8609 ], [ -0.59022, 51.86115 ], [ -0.59025, 51.86117 ], [ -0.59054, 51.86139 ], [ -0.59078, 51.86153 ], [ -0.59082, 51.86154 ], [ -0.59105, 51.86165 ], [ -0.59161, 51.86191 ], [ -0.59174, 51.86198 ], [ -0.59181, 51.86202 ], [ -0.59199, 51.86214 ], [ -0.59222, 51.86228 ], [ -0.59228, 51.86232 ], [ -0.59253, 51.86245 ], [ -0.5928, 51.86256 ], [ -0.59312, 51.86268 ], [ -0.59318, 51.8627 ], [ -0.59355, 51.8628 ], [ -0.59398, 51.8629 ], [ -0.59411, 51.86293 ], [ -0.59463, 51.86303 ], [ -0.59481, 51.86308 ], [ -0.5949, 51.8631 ], [ -0.59514, 51.86317 ], [ -0.59551, 51.86328 ], [ -0.59559, 51.86331 ], [ -0.59579, 51.8634 ], [ -0.59606, 51.86353 ], [ -0.59625, 51.86363 ], [ -0.59629, 51.86366 ], [ -0.59649, 51.86378 ], [ -0.59683, 51.86403 ], [ -0.59695, 51.86414 ], [ -0.5972, 51.86434 ], [ -0.59763, 51.86471 ], [ -0.59806, 51.86506 ], [ -0.59812, 51.86511 ], [ -0.59839, 51.86534 ], [ -0.5987, 51.8656 ], [ -0.59892, 51.86579 ], [ -0.59895, 51.86581 ], [ -0.59898, 51.86584 ], [ -0.5993, 51.8661 ], [ -0.5994, 51.86618 ], [ -0.59958, 51.8663 ], [ -0.59978, 51.86644 ], [ -0.60033, 51.86679 ], [ -0.60075, 51.86703 ], [ -0.60081, 51.86706 ], [ -0.60123, 51.86727 ], [ -0.60163, 51.86745 ], [ -0.60168, 51.86747 ], [ -0.60183, 51.86754 ], [ -0.60231, 51.86774 ], [ -0.60254, 51.86784 ], [ -0.60282, 51.86796 ], [ -0.60285, 51.86798 ], [ -0.60351, 51.86826 ], [ -0.60375, 51.86836 ], [ -0.60419, 51.86854 ], [ -0.60492, 51.86889 ], [ -0.60518, 51.86902 ], [ -0.60581, 51.86931 ], [ -0.60645, 51.8696 ], [ -0.60686, 51.8698 ], [ -0.60721, 51.86997 ], [ -0.60753, 51.87019 ], [ -0.60779, 51.87038 ], [ -0.60785, 51.87042 ], [ -0.60809, 51.87057 ], [ -0.60832, 51.87071 ], [ -0.60842, 51.87075 ], [ -0.60869, 51.87089 ], [ -0.60901, 51.87103 ], [ -0.60918, 51.87111 ], [ -0.60924, 51.87113 ], [ -0.60959, 51.8713 ], [ -0.60975, 51.87137 ], [ -0.60981, 51.87139 ], [ -0.60986, 51.87142 ], [ -0.61027, 51.8716 ], [ -0.61043, 51.87168 ], [ -0.61071, 51.87182 ], [ -0.61107, 51.87199 ], [ -0.61137, 51.87216 ], [ -0.6117, 51.87232 ], [ -0.61204, 51.87247 ], [ -0.61237, 51.87261 ], [ -0.61277, 51.87277 ], [ -0.61286, 51.8728 ], [ -0.61327, 51.87295 ], [ -0.6136, 51.87306 ], [ -0.61369, 51.87309 ], [ -0.61408, 51.8732 ], [ -0.6144, 51.87328 ], [ -0.61464, 51.87334 ], [ -0.61479, 51.87338 ], [ -0.6151, 51.87344 ], [ -0.61514, 51.87345 ], [ -0.61559, 51.87358 ], [ -0.61604, 51.87375 ], [ -0.61635, 51.87389 ], [ -0.6167, 51.87408 ], [ -0.61683, 51.87417 ], [ -0.61687, 51.8742 ], [ -0.61705, 51.87434 ], [ -0.61714, 51.87441 ], [ -0.6173, 51.87453 ], [ -0.61745, 51.87465 ], [ -0.61768, 51.87484 ], [ -0.61781, 51.87496 ], [ -0.61796, 51.8751 ], [ -0.6182, 51.87532 ], [ -0.61842, 51.87553 ], [ -0.61866, 51.87579 ], [ -0.61885, 51.87601 ], [ -0.61935, 51.87655 ], [ -0.61985, 51.877 ], [ -0.62025, 51.8773 ], [ -0.62066, 51.87762 ], [ -0.62071, 51.87765 ], [ -0.62104, 51.87789 ], [ -0.62147, 51.87822 ], [ -0.62163, 51.87834 ], [ -0.62186, 51.87851 ], [ -0.62203, 51.87861 ], [ -0.62257, 51.87897 ], [ -0.62367, 51.87966 ], [ -0.62408, 51.87991 ], [ -0.62453, 51.88017 ], [ -0.6246, 51.88021 ], [ -0.62473, 51.8803 ], [ -0.62522, 51.88062 ], [ -0.62583, 51.88097 ], [ -0.62597, 51.88106 ], [ -0.62639, 51.88131 ], [ -0.62643, 51.88134 ], [ -0.62656, 51.88143 ], [ -0.62659, 51.88144 ], [ -0.62672, 51.88153 ], [ -0.62703, 51.88179 ], [ -0.62709, 51.88186 ], [ -0.62733, 51.88211 ], [ -0.62779, 51.88264 ], [ -0.62781, 51.88266 ], [ -0.62802, 51.8829 ], [ -0.62863, 51.88359 ], [ -0.62865, 51.88361 ], [ -0.62878, 51.88377 ], [ -0.62923, 51.88425 ], [ -0.62957, 51.88461 ], [ -0.62983, 51.88491 ], [ -0.62992, 51.88505 ], [ -0.62994, 51.88507 ], [ -0.62999, 51.88513 ], [ -0.63013, 51.88533 ], [ -0.63021, 51.8855 ], [ -0.63029, 51.88572 ], [ -0.6303, 51.88576 ], [ -0.63036, 51.88598 ], [ -0.63039, 51.88618 ], [ -0.63042, 51.88635 ], [ -0.63043, 51.88656 ], [ -0.63042, 51.88679 ], [ -0.63042, 51.88681 ], [ -0.63042, 51.88688 ], [ -0.63041, 51.88697 ], [ -0.63037, 51.88755 ], [ -0.63037, 51.8876 ], [ -0.63031, 51.88855 ], [ -0.63031, 51.88859 ], [ -0.6303, 51.88868 ], [ -0.6303, 51.88877 ], [ -0.63027, 51.88932 ], [ -0.63031, 51.88985 ], [ -0.63034, 51.89003 ], [ -0.63038, 51.89025 ], [ -0.63039, 51.89029 ], [ -0.63047, 51.89062 ], [ -0.63064, 51.89111 ], [ -0.63067, 51.89118 ], [ -0.63069, 51.89123 ], [ -0.6307, 51.89125 ], [ -0.63082, 51.89154 ], [ -0.63084, 51.8916 ], [ -0.63088, 51.89169 ], [ -0.63091, 51.89178 ], [ -0.63095, 51.89187 ], [ -0.63098, 51.89193 ], [ -0.63107, 51.8921 ], [ -0.63121, 51.8923 ], [ -0.63129, 51.8924 ], [ -0.63157, 51.89274 ], [ -0.63178, 51.89292 ], [ -0.63197, 51.89309 ], [ -0.63223, 51.89327 ], [ -0.63232, 51.89332 ], [ -0.63245, 51.89339 ], [ -0.63263, 51.89347 ], [ -0.63278, 51.89354 ], [ -0.63289, 51.89359 ], [ -0.63292, 51.89361 ], [ -0.63313, 51.89373 ], [ -0.63332, 51.89387 ], [ -0.63344, 51.894 ], [ -0.63346, 51.89401 ], [ -0.63348, 51.89403 ], [ -0.63359, 51.89414 ], [ -0.63361, 51.89417 ], [ -0.63363, 51.89418 ], [ -0.63375, 51.89432 ], [ -0.63377, 51.89434 ], [ -0.63378, 51.89436 ], [ -0.63389, 51.8945 ], [ -0.6339, 51.89451 ], [ -0.63406, 51.89476 ], [ -0.63423, 51.89506 ], [ -0.6343, 51.89518 ], [ -0.63433, 51.89523 ], [ -0.63441, 51.89534 ], [ -0.63444, 51.89539 ], [ -0.63445, 51.8954 ], [ -0.63454, 51.8955 ], [ -0.63457, 51.89554 ], [ -0.63468, 51.89564 ], [ -0.63481, 51.89573 ], [ -0.63489, 51.89578 ], [ -0.63499, 51.89586 ], [ -0.63507, 51.89591 ], [ -0.63517, 51.89597 ], [ -0.63544, 51.89617 ], [ -0.63563, 51.8963 ], [ -0.6359, 51.89648 ], [ -0.63594, 51.89651 ], [ -0.63603, 51.89657 ], [ -0.63624, 51.89672 ], [ -0.63645, 51.89686 ], [ -0.63673, 51.89703 ], [ -0.63696, 51.89714 ], [ -0.63733, 51.89729 ], [ -0.63772, 51.89743 ], [ -0.63805, 51.89752 ], [ -0.63824, 51.89756 ], [ -0.63856, 51.89761 ], [ -0.63905, 51.89767 ], [ -0.63941, 51.89769 ], [ -0.63982, 51.8977 ], [ -0.64041, 51.89768 ], [ -0.64084, 51.89767 ], [ -0.64097, 51.89766 ], [ -0.64123, 51.89766 ], [ -0.64156, 51.89766 ], [ -0.6419, 51.89768 ], [ -0.64204, 51.89769 ], [ -0.6423, 51.8977 ], [ -0.6426, 51.89775 ], [ -0.64283, 51.89779 ], [ -0.6434, 51.89795 ], [ -0.64362, 51.89804 ], [ -0.64385, 51.89814 ], [ -0.64411, 51.89828 ], [ -0.64413, 51.89829 ], [ -0.64435, 51.89842 ], [ -0.64459, 51.89857 ], [ -0.64479, 51.89872 ], [ -0.64482, 51.89874 ], [ -0.6453, 51.89911 ], [ -0.64553, 51.89929 ], [ -0.6459, 51.89961 ], [ -0.64611, 51.89976 ], [ -0.64634, 51.89992 ], [ -0.64669, 51.90015 ], [ -0.64715, 51.90043 ], [ -0.64752, 51.90068 ], [ -0.64776, 51.90083 ], [ -0.64797, 51.90096 ], [ -0.64799, 51.90098 ], [ -0.64834, 51.9012 ], [ -0.6483405, 51.901203 ], [ -0.64837, 51.90119 ], [ -0.64838, 51.90119 ], [ -0.6484, 51.90119 ], [ -0.64841, 51.90119 ], [ -0.64842, 51.90119 ], [ -0.64843, 51.90119 ], [ -0.64844, 51.90119 ], [ -0.64845, 51.90119 ], [ -0.64847, 51.90119 ], [ -0.64848, 51.90119 ], [ -0.64849, 51.90119 ], [ -0.6485, 51.90119 ], [ -0.64851, 51.90119 ], [ -0.64852, 51.90119 ], [ -0.64853, 51.9012 ], [ -0.64854, 51.9012 ], [ -0.64855, 51.9012 ], [ -0.64856, 51.90121 ], [ -0.64857, 51.90121 ], [ -0.64858, 51.90122 ], [ -0.64859, 51.90122 ], [ -0.64861, 51.90124 ], [ -0.64863, 51.90126 ], [ -0.64864, 51.90126 ], [ -0.64864, 51.90127 ], [ -0.64864, 51.90128 ], [ -0.64865, 51.90128 ], [ -0.64865, 51.90129 ], [ -0.64865, 51.9013 ], [ -0.64865, 51.90131 ], [ -0.64865, 51.90132 ], [ -0.64865, 51.90133 ], [ -0.64865, 51.90134 ], [ -0.64865, 51.90135 ], [ -0.64864, 51.90135 ], [ -0.64864, 51.90136 ], [ -0.64863, 51.90137 ], [ -0.64862, 51.90138 ], [ -0.64862, 51.90139 ], [ -0.64859, 51.90141 ], [ -0.64873, 51.90152 ], [ -0.6488, 51.90158 ], [ -0.64892, 51.90172 ], [ -0.64904, 51.90189 ], [ -0.64904, 51.90191 ], [ -0.64916, 51.90214 ], [ -0.64938, 51.90253 ], [ -0.64949, 51.90273 ], [ -0.64957, 51.90285 ], [ -0.64971, 51.90303 ], [ -0.64974, 51.90307 ], [ -0.65, 51.90339 ], [ -0.65033, 51.90388 ], [ -0.65054, 51.90421 ], [ -0.65067, 51.90441 ], [ -0.65081, 51.90459 ], [ -0.65088, 51.90472 ], [ -0.65095, 51.90486 ], [ -0.65097, 51.90492 ], [ -0.65103, 51.90516 ], [ -0.65104, 51.90521 ], [ -0.65106, 51.90528 ], [ -0.65115, 51.90579 ], [ -0.65117, 51.90584 ], [ -0.65119, 51.90589 ], [ -0.65143, 51.90609 ], [ -0.6514326, 51.9060862 ], [ -0.65155, 51.90607 ], [ -0.65162, 51.90608 ], [ -0.65167, 51.90609 ], [ -0.65171, 51.9061 ], [ -0.65175, 51.90613 ], [ -0.65178, 51.90617 ], [ -0.6522, 51.90609 ], [ -0.65239, 51.90606 ], [ -0.65265, 51.90605 ], [ -0.65279, 51.90605 ], [ -0.65284, 51.90605 ], [ -0.65332, 51.90608 ], [ -0.65361, 51.90609 ], [ -0.65382, 51.90609 ], [ -0.65397, 51.90608 ], [ -0.65405, 51.90607 ], [ -0.65413, 51.90606 ], [ -0.65466, 51.90594 ], [ -0.6551, 51.90586 ], [ -0.65543, 51.90583 ], [ -0.65578, 51.90583 ], [ -0.65602, 51.90584 ], [ -0.65628, 51.90588 ], [ -0.65654, 51.90593 ], [ -0.65684, 51.90602 ], [ -0.65712, 51.90614 ], [ -0.6572, 51.90617 ], [ -0.65817, 51.90671 ], [ -0.65858, 51.90693 ], [ -0.6586, 51.90695 ], [ -0.65908, 51.90722 ], [ -0.65939, 51.90741 ], [ -0.65965, 51.90758 ], [ -0.65982, 51.90772 ], [ -0.65999, 51.90785 ], [ -0.66027, 51.9081 ], [ -0.66054, 51.90829 ], [ -0.66084, 51.90847 ], [ -0.66091, 51.90852 ], [ -0.6611, 51.90864 ], [ -0.6611047, 51.9086413 ], [ -0.66112, 51.90863 ], [ -0.66113, 51.90863 ], [ -0.66114, 51.90862 ], [ -0.66115, 51.90862 ], [ -0.66116, 51.90862 ], [ -0.66117, 51.90862 ], [ -0.66117, 51.90861 ], [ -0.66118, 51.90861 ], [ -0.66119, 51.90861 ], [ -0.6612, 51.90861 ], [ -0.66121, 51.90861 ], [ -0.66122, 51.90861 ], [ -0.66123, 51.90861 ], [ -0.66124, 51.90861 ], [ -0.66125, 51.90861 ], [ -0.66125, 51.90862 ], [ -0.66126, 51.90862 ], [ -0.66127, 51.90862 ], [ -0.66128, 51.90862 ], [ -0.66129, 51.90863 ], [ -0.6613, 51.90864 ], [ -0.6614, 51.90856 ], [ -0.6614035, 51.9085594 ], [ -0.66157, 51.90856 ], [ -0.66261, 51.90872 ], [ -0.6629, 51.90877 ], [ -0.66403, 51.90894 ], [ -0.66516, 51.90912 ], [ -0.66565, 51.90919 ], [ -0.66629, 51.9093 ], [ -0.66741, 51.90948 ], [ -0.66826, 51.90962 ], [ -0.66871, 51.9098 ], [ -0.6687148, 51.9097971 ], [ -0.66866, 51.90985 ], [ -0.66853, 51.91022 ], [ -0.66858, 51.91045 ], [ -0.66876, 51.91089 ], [ -0.66883, 51.91102 ], [ -0.66891, 51.91117 ], [ -0.66923, 51.91184 ], [ -0.66945, 51.91226 ], [ -0.66958, 51.91257 ], [ -0.66968, 51.91281 ], [ -0.66988, 51.91345 ], [ -0.66988, 51.91346 ], [ -0.67, 51.91387 ], [ -0.66998, 51.91419 ], [ -0.66993, 51.91434 ], [ -0.66987, 51.9145 ], [ -0.66973, 51.91489 ], [ -0.66961, 51.91512 ], [ -0.66958, 51.91529 ], [ -0.66961, 51.91539 ], [ -0.66963, 51.91554 ], [ -0.66965, 51.91556 ], [ -0.66974, 51.91568 ], [ -0.66998, 51.91586 ], [ -0.67019, 51.91602 ], [ -0.67031, 51.9161 ], [ -0.67033, 51.91614 ], [ -0.67035, 51.91618 ], [ -0.67033, 51.91632 ], [ -0.67032, 51.9165 ], [ -0.67028, 51.91659 ], [ -0.67025, 51.91667 ], [ -0.6702508, 51.9166717 ], [ -0.67023, 51.91657 ], [ -0.67022, 51.91649 ], [ -0.67021, 51.91635 ], [ -0.6702122, 51.9163471 ], [ -0.67038, 51.91638 ], [ -0.67055, 51.91641 ], [ -0.67072, 51.91644 ], [ -0.67095, 51.91649 ], [ -0.6709503, 51.9164886 ], [ -0.67095, 51.9165 ], [ -0.67094, 51.9165 ], [ -0.67094, 51.91651 ], [ -0.67095, 51.91651 ], [ -0.67095, 51.91652 ], [ -0.67095, 51.91653 ], [ -0.67096, 51.91654 ], [ -0.67097, 51.91655 ], [ -0.67098, 51.91655 ], [ -0.67098, 51.91656 ], [ -0.67099, 51.91656 ], [ -0.671, 51.91656 ], [ -0.67101, 51.91656 ], [ -0.67101, 51.91657 ], [ -0.67102, 51.91657 ], [ -0.67103, 51.91657 ], [ -0.67104, 51.91657 ], [ -0.67105, 51.91657 ], [ -0.67106, 51.91657 ], [ -0.67107, 51.91657 ], [ -0.67107, 51.91656 ], [ -0.67108, 51.91656 ], [ -0.67109, 51.91656 ], [ -0.6711, 51.91656 ], [ -0.6711, 51.91655 ], [ -0.67111, 51.91655 ], [ -0.67124, 51.91662 ], [ -0.67132, 51.91662 ], [ -0.67143, 51.91666 ], [ -0.6714338, 51.9166611 ], [ -0.67167, 51.9168 ], [ -0.67176, 51.91685 ], [ -0.67182, 51.9169 ], [ -0.67192, 51.91699 ], [ -0.67206, 51.91712 ], [ -0.67219, 51.9173 ], [ -0.67234, 51.91758 ], [ -0.67251, 51.91793 ], [ -0.67258, 51.91806 ], [ -0.67263, 51.91817 ], [ -0.67267, 51.91828 ], [ -0.67271, 51.91839 ], [ -0.67271, 51.91845 ], [ -0.67272, 51.91851 ], [ -0.67275, 51.91876 ], [ -0.67276, 51.91899 ], [ -0.67277, 51.9193 ], [ -0.67276, 51.91968 ], [ -0.67274, 51.92027 ], [ -0.67275, 51.92087 ], [ -0.67275, 51.92097 ], [ -0.67276, 51.92154 ], [ -0.67276, 51.92205 ], [ -0.67287, 51.92298 ], [ -0.67292, 51.92323 ], [ -0.67295, 51.92354 ], [ -0.673, 51.92373 ], [ -0.67301, 51.92376 ], [ -0.67307, 51.92393 ], [ -0.67315, 51.92412 ], [ -0.67318, 51.92416 ], [ -0.67327, 51.92428 ], [ -0.67339, 51.92444 ], [ -0.67345, 51.92453 ], [ -0.67352, 51.9246 ], [ -0.67363, 51.92473 ], [ -0.6738, 51.92488 ], [ -0.67396, 51.92503 ], [ -0.67412, 51.92518 ], [ -0.67425, 51.92531 ], [ -0.67428, 51.92533 ], [ -0.67438, 51.92543 ], [ -0.67469, 51.92575 ], [ -0.67502, 51.92608 ], [ -0.67544, 51.92645 ], [ -0.67547, 51.92647 ], [ -0.67566, 51.9266 ], [ -0.67581, 51.92671 ], [ -0.67589, 51.92677 ], [ -0.67622, 51.92694 ], [ -0.67662, 51.92708 ], [ -0.67682, 51.92712 ], [ -0.6773, 51.92723 ], [ -0.67737, 51.92725 ], [ -0.67777, 51.92734 ], [ -0.67799, 51.92739 ], [ -0.67861, 51.92748 ], [ -0.67878, 51.92751 ], [ -0.67918, 51.92756 ], [ -0.67941, 51.92759 ], [ -0.67975, 51.92763 ], [ -0.68021, 51.92769 ], [ -0.68081, 51.92783 ], [ -0.68087, 51.92784 ], [ -0.6813, 51.92794 ], [ -0.68136, 51.92796 ], [ -0.68141, 51.92797 ], [ -0.68162, 51.92804 ], [ -0.68167, 51.92805 ], [ -0.68188, 51.92812 ], [ -0.68193, 51.92813 ], [ -0.68225, 51.92823 ], [ -0.68283, 51.92842 ], [ -0.68294, 51.92845 ], [ -0.68356, 51.92871 ], [ -0.68364, 51.92874 ], [ -0.68418, 51.9291 ], [ -0.68421, 51.92912 ], [ -0.68452, 51.92934 ], [ -0.68472, 51.92948 ], [ -0.6853, 51.92988 ], [ -0.68533, 51.92991 ], [ -0.68587, 51.93029 ], [ -0.68625, 51.93056 ], [ -0.68627, 51.93057 ], [ -0.68677, 51.93089 ], [ -0.6871, 51.93106 ], [ -0.68755, 51.93129 ], [ -0.68794, 51.93149 ], [ -0.688, 51.93151 ], [ -0.68846, 51.93173 ], [ -0.68872, 51.93185 ], [ -0.68894, 51.93194 ], [ -0.68919, 51.93204 ], [ -0.68941, 51.93212 ], [ -0.68965, 51.93225 ], [ -0.68998, 51.93242 ], [ -0.69009, 51.93249 ], [ -0.69049, 51.93275 ], [ -0.69076, 51.9329 ], [ -0.69079, 51.93292 ], [ -0.6909, 51.93299 ], [ -0.69102, 51.93305 ], [ -0.69137, 51.93322 ], [ -0.69142, 51.93325 ], [ -0.69146, 51.93327 ], [ -0.69154, 51.93331 ], [ -0.69168, 51.93338 ], [ -0.69185, 51.93347 ], [ -0.69191, 51.9335 ], [ -0.69205, 51.93356 ], [ -0.69214, 51.9336 ], [ -0.6922, 51.93363 ], [ -0.69243, 51.93373 ], [ -0.69262, 51.93381 ], [ -0.69267, 51.93383 ], [ -0.69292, 51.93392 ], [ -0.69324, 51.93402 ], [ -0.6934, 51.93407 ], [ -0.69362, 51.93414 ], [ -0.69365, 51.93415 ], [ -0.69381, 51.9342 ], [ -0.69389, 51.93422 ], [ -0.69391, 51.93423 ], [ -0.69405, 51.93427 ], [ -0.69418, 51.93431 ], [ -0.69444, 51.93438 ], [ -0.69455, 51.9344 ], [ -0.69477, 51.93445 ], [ -0.69496, 51.93451 ], [ -0.69511, 51.93453 ], [ -0.69558, 51.93461 ], [ -0.69583, 51.93464 ], [ -0.6961, 51.93468 ], [ -0.69629, 51.9347 ], [ -0.69672, 51.93475 ], [ -0.69702, 51.93477 ], [ -0.69765, 51.9348 ], [ -0.6976541, 51.934804 ], [ -0.6977, 51.93482 ], [ -0.69775, 51.93482 ], [ -0.69778, 51.93483 ], [ -0.69782, 51.93483 ], [ -0.69787, 51.93482 ], [ -0.69792, 51.93482 ], [ -0.69807, 51.93486 ], [ -0.69816, 51.9349 ], [ -0.69825, 51.93495 ], [ -0.6983, 51.93501 ], [ -0.69844, 51.93517 ], [ -0.69869, 51.93547 ], [ -0.6989, 51.93573 ], [ -0.69933, 51.93632 ], [ -0.69981, 51.93696 ], [ -0.69994, 51.93712 ], [ -0.70004, 51.93725 ], [ -0.7003, 51.93761 ], [ -0.70042, 51.93778 ], [ -0.70055, 51.93794 ], [ -0.70076, 51.93821 ], [ -0.70079, 51.93826 ], [ -0.70092, 51.93843 ], [ -0.70097, 51.9385 ], [ -0.70117, 51.93873 ], [ -0.70132, 51.93891 ], [ -0.70138, 51.93898 ], [ -0.70146, 51.93906 ], [ -0.70182, 51.93943 ], [ -0.70208, 51.93967 ], [ -0.70218, 51.93977 ], [ -0.70242, 51.93997 ], [ -0.70243, 51.93998 ], [ -0.70291, 51.94035 ], [ -0.70296, 51.94039 ], [ -0.70317, 51.94054 ], [ -0.70353, 51.94079 ], [ -0.70383, 51.94098 ], [ -0.70422, 51.94122 ], [ -0.7047, 51.94149 ], [ -0.70504, 51.94167 ], [ -0.70531, 51.94179 ], [ -0.70549, 51.94188 ], [ -0.70576, 51.94201 ], [ -0.70668, 51.94245 ], [ -0.70721, 51.94271 ], [ -0.70778, 51.94299 ], [ -0.70801, 51.9431 ], [ -0.70805, 51.94312 ], [ -0.70833, 51.94325 ], [ -0.70839, 51.94328 ], [ -0.70913, 51.94363 ], [ -0.7101, 51.9441 ], [ -0.71146, 51.94476 ], [ -0.7116, 51.94483 ], [ -0.71169, 51.94487 ], [ -0.71215, 51.94512 ], [ -0.71264, 51.94538 ], [ -0.71321, 51.94571 ], [ -0.71338, 51.94581 ], [ -0.71342, 51.94584 ], [ -0.71386, 51.9461 ], [ -0.71445, 51.94648 ], [ -0.71448, 51.9465 ], [ -0.71504, 51.94687 ], [ -0.71509, 51.9469 ], [ -0.71533, 51.94707 ], [ -0.71571, 51.94734 ], [ -0.71604, 51.94759 ], [ -0.71645, 51.94792 ], [ -0.71669, 51.94813 ], [ -0.71675, 51.94817 ], [ -0.7172, 51.94857 ], [ -0.71723, 51.9486 ], [ -0.71736, 51.94872 ], [ -0.71769, 51.94903 ], [ -0.71835, 51.94964 ], [ -0.71839, 51.94967 ], [ -0.71851, 51.94978 ], [ -0.71864, 51.94989 ], [ -0.71865, 51.9499 ], [ -0.71893, 51.95014 ], [ -0.71981, 51.95091 ], [ -0.72017, 51.95122 ], [ -0.72033, 51.95138 ], [ -0.72037, 51.95142 ], [ -0.72064, 51.95167 ], [ -0.72077, 51.9518 ], [ -0.7211, 51.95214 ], [ -0.7213, 51.95234 ], [ -0.72142, 51.95248 ], [ -0.72167, 51.95275 ], [ -0.72199, 51.9531 ], [ -0.72211, 51.95324 ], [ -0.72223, 51.95338 ], [ -0.72241, 51.95358 ], [ -0.72252, 51.95371 ], [ -0.72252, 51.95372 ], [ -0.7228, 51.95406 ], [ -0.72291, 51.9542 ], [ -0.72303, 51.95435 ], [ -0.72303, 51.95436 ], [ -0.72316, 51.95452 ], [ -0.72325, 51.95463 ], [ -0.72336, 51.95478 ], [ -0.7234, 51.95485 ], [ -0.72346, 51.95492 ], [ -0.72361, 51.95514 ], [ -0.72371, 51.95528 ], [ -0.72385, 51.95549 ], [ -0.72395, 51.95564 ], [ -0.72409, 51.95586 ], [ -0.72423, 51.95608 ], [ -0.72428, 51.95618 ], [ -0.72436, 51.9563 ], [ -0.72458, 51.95668 ], [ -0.72486, 51.95719 ], [ -0.72498, 51.95741 ], [ -0.72513, 51.95771 ], [ -0.72522, 51.9579 ], [ -0.72533, 51.95811 ], [ -0.72539, 51.95823 ], [ -0.72551, 51.95849 ], [ -0.72555, 51.95857 ], [ -0.72558, 51.95864 ], [ -0.72571, 51.95892 ], [ -0.72573, 51.95897 ], [ -0.7258, 51.95915 ], [ -0.72589, 51.95937 ], [ -0.72595, 51.95952 ], [ -0.72601, 51.95968 ], [ -0.72607, 51.95984 ], [ -0.72615, 51.96006 ], [ -0.72618, 51.96014 ], [ -0.72624, 51.96034 ], [ -0.7263, 51.9605 ], [ -0.7263, 51.96052 ], [ -0.72636, 51.96071 ], [ -0.72644, 51.96094 ], [ -0.72654, 51.96125 ], [ -0.72659, 51.9614 ], [ -0.72664, 51.96155 ], [ -0.72667, 51.96164 ], [ -0.7267, 51.96173 ], [ -0.72671, 51.96178 ], [ -0.72676, 51.96193 ], [ -0.72682, 51.96213 ], [ -0.7269, 51.96236 ], [ -0.72699, 51.96267 ], [ -0.72712, 51.96306 ], [ -0.72725, 51.9635 ], [ -0.72742, 51.96405 ], [ -0.72747, 51.9642 ], [ -0.72752, 51.96438 ], [ -0.72756, 51.96452 ], [ -0.72763, 51.96473 ], [ -0.72764, 51.96476 ], [ -0.72773, 51.96507 ], [ -0.72783, 51.96538 ], [ -0.72785, 51.96544 ], [ -0.7279, 51.96561 ], [ -0.7279, 51.96562 ], [ -0.728, 51.96592 ], [ -0.72804, 51.96603 ], [ -0.72808, 51.96615 ], [ -0.72816, 51.96643 ], [ -0.72824, 51.96668 ], [ -0.72826, 51.96675 ], [ -0.72829, 51.96685 ], [ -0.72848, 51.96744 ], [ -0.72853, 51.9676 ], [ -0.7286, 51.96783 ], [ -0.72874, 51.96827 ], [ -0.72879, 51.96841 ], [ -0.72883, 51.96854 ], [ -0.72895, 51.96892 ], [ -0.72916, 51.96954 ], [ -0.7292, 51.96965 ], [ -0.72929, 51.96992 ], [ -0.72943, 51.97035 ], [ -0.72946, 51.97045 ], [ -0.72959, 51.97084 ], [ -0.72969, 51.97115 ], [ -0.72971, 51.97123 ], [ -0.72975, 51.97138 ], [ -0.7298, 51.97156 ], [ -0.729797, 51.9715614 ], [ -0.72977, 51.97159 ], [ -0.72974, 51.97162 ], [ -0.72973, 51.97166 ], [ -0.72972, 51.97169 ], [ -0.72971, 51.97173 ], [ -0.72972, 51.97176 ], [ -0.72973, 51.9718 ], [ -0.72977, 51.97185 ], [ -0.7298, 51.97188 ], [ -0.72983, 51.97191 ], [ -0.72987, 51.97194 ], [ -0.72992, 51.97196 ], [ -0.72997, 51.97198 ], [ -0.73002, 51.97199 ], [ -0.73007, 51.972 ], [ -0.73015, 51.97201 ], [ -0.73019, 51.97201 ], [ -0.73022, 51.97201 ], [ -0.73024, 51.97201 ], [ -0.73027, 51.97201 ], [ -0.7303, 51.972 ], [ -0.73039, 51.97204 ], [ -0.73046, 51.97207 ], [ -0.7306, 51.97215 ], [ -0.7306, 51.9721469 ], [ -0.73058, 51.97225 ], [ -0.73053, 51.97237 ], [ -0.7305, 51.9724 ], [ -0.73047, 51.97243 ], [ -0.73044, 51.97246 ], [ -0.73036, 51.97254 ], [ -0.7303, 51.97259 ], [ -0.7302, 51.97268 ], [ -0.73015, 51.97274 ], [ -0.73008, 51.97281 ], [ -0.73002, 51.97288 ], [ -0.72993, 51.97299 ], [ -0.7299, 51.97312 ], [ -0.7299, 51.97324 ], [ -0.72991, 51.97336 ], [ -0.72992, 51.97356 ], [ -0.72995, 51.97366 ], [ -0.73006, 51.97379 ], [ -0.7300597, 51.9737907 ], [ -0.7298, 51.97394 ], [ -0.72959, 51.9741 ], [ -0.72937, 51.97428 ], [ -0.72923, 51.9744 ], [ -0.72914, 51.9745 ], [ -0.72909, 51.97458 ], [ -0.72905, 51.97463 ], [ -0.72901, 51.97469 ], [ -0.72898, 51.97479 ], [ -0.72896, 51.97488 ], [ -0.72892, 51.97503 ], [ -0.7289, 51.97516 ], [ -0.72889, 51.97526 ], [ -0.72891, 51.97537 ], [ -0.72897, 51.97558 ], [ -0.72898, 51.97559 ], [ -0.72902, 51.97567 ], [ -0.72906, 51.97575 ], [ -0.72917, 51.97591 ], [ -0.72922, 51.97598 ], [ -0.7293, 51.97608 ], [ -0.7295, 51.97632 ], [ -0.72956, 51.9764 ], [ -0.72974, 51.97662 ], [ -0.7298, 51.97671 ], [ -0.72993, 51.97691 ], [ -0.72998, 51.97699 ], [ -0.73007, 51.97714 ], [ -0.73015, 51.97732 ], [ -0.73017, 51.97737 ], [ -0.7302, 51.97742 ], [ -0.73025, 51.97758 ], [ -0.73028, 51.97767 ], [ -0.7304, 51.97807 ], [ -0.73063, 51.97885 ], [ -0.7308, 51.97942 ], [ -0.73097, 51.97996 ], [ -0.73114, 51.98055 ], [ -0.73132, 51.98114 ], [ -0.73141, 51.98145 ], [ -0.73149, 51.98171 ], [ -0.73168, 51.98238 ], [ -0.73178, 51.9827 ], [ -0.73178, 51.98275 ], [ -0.73179, 51.9828 ], [ -0.7318, 51.98288 ], [ -0.7318, 51.98291 ], [ -0.73181, 51.98295 ], [ -0.73181, 51.98302 ], [ -0.7318, 51.98309 ], [ -0.73178, 51.98319 ], [ -0.73176, 51.98328 ], [ -0.7317, 51.98342 ], [ -0.73164, 51.98352 ], [ -0.73158, 51.9836 ], [ -0.73153, 51.98366 ], [ -0.73144, 51.98375 ], [ -0.73135, 51.98383 ], [ -0.73127, 51.98389 ], [ -0.73119, 51.98395 ], [ -0.73115, 51.98398 ], [ -0.73111, 51.98401 ], [ -0.731, 51.98407 ], [ -0.73089, 51.98413 ], [ -0.73079, 51.98417 ], [ -0.73069, 51.98421 ], [ -0.73066, 51.98422 ], [ -0.73054, 51.98426 ], [ -0.73039, 51.98432 ], [ -0.73023, 51.98436 ], [ -0.73001, 51.98441 ], [ -0.72979, 51.98445 ], [ -0.72961, 51.98446 ], [ -0.729613, 51.9844627 ], [ -0.72964, 51.98455 ], [ -0.7297, 51.98473 ], [ -0.72987, 51.98526 ], [ -0.729868, 51.9852553 ], [ -0.73049, 51.98518 ], [ -0.73135, 51.98508 ], [ -0.73164, 51.98504 ], [ -0.73224, 51.98497 ], [ -0.7322437, 51.984971 ], [ -0.73253, 51.98583 ], [ -0.7325279, 51.9858288 ], [ -0.73283, 51.9858 ], [ -0.73357, 51.98573 ], [ -0.73366, 51.98571 ], [ -0.73373, 51.9857 ], [ -0.73382, 51.9857 ], [ -0.73391, 51.98572 ], [ -0.73395, 51.98573 ], [ -0.73401, 51.98577 ], [ -0.73405, 51.98582 ], [ -0.73405, 51.98583 ], [ -0.73407, 51.98586 ], [ -0.73407, 51.98588 ], [ -0.7341, 51.98591 ], [ -0.73411, 51.98593 ], [ -0.73421, 51.98625 ], [ -0.73435, 51.98669 ], [ -0.7344, 51.98687 ], [ -0.73443, 51.98694 ], [ -0.73452, 51.98707 ], [ -0.73456, 51.98712 ], [ -0.73482, 51.98748 ], [ -0.73498, 51.9877 ], [ -0.73502, 51.98777 ], [ -0.73506, 51.98805 ], [ -0.73513, 51.9882 ], [ -0.73519, 51.98834 ], [ -0.73532, 51.9885 ], [ -0.73544, 51.98864 ], [ -0.73556, 51.98877 ], [ -0.7356, 51.98881 ], [ -0.73561, 51.98883 ], [ -0.73562, 51.98884 ], [ -0.73562, 51.98885 ], [ -0.73562, 51.98887 ], [ -0.73557, 51.98895 ], [ -0.7355, 51.98904 ], [ -0.73516, 51.98935 ], [ -0.7351, 51.98941 ], [ -0.73508, 51.98944 ], [ -0.735, 51.98958 ], [ -0.73499, 51.98969 ], [ -0.73499, 51.98979 ], [ -0.73499, 51.9898 ], [ -0.73522, 51.99031 ], [ -0.7353, 51.99052 ], [ -0.73537, 51.99077 ], [ -0.73546, 51.99103 ], [ -0.73545, 51.99115 ], [ -0.73545, 51.99119 ], [ -0.73543, 51.99127 ], [ -0.7354253, 51.9912699 ], [ -0.73556, 51.99134 ], [ -0.73564, 51.99138 ], [ -0.73583, 51.99149 ], [ -0.73586, 51.99151 ], [ -0.73628, 51.99175 ], [ -0.73629, 51.99175 ], [ -0.73691, 51.9921 ], [ -0.73699, 51.99214 ], [ -0.7375, 51.99245 ], [ -0.73759, 51.9925 ], [ -0.73767, 51.99255 ], [ -0.73774, 51.99261 ], [ -0.73782, 51.99269 ], [ -0.73785, 51.99272 ], [ -0.73791, 51.99278 ], [ -0.73802, 51.99293 ], [ -0.73809, 51.99304 ], [ -0.73817, 51.99314 ], [ -0.73824, 51.99325 ], [ -0.7382358, 51.9932541 ], [ -0.73825, 51.99325 ], [ -0.73826, 51.99325 ], [ -0.73827, 51.99325 ], [ -0.73828, 51.99325 ], [ -0.73828, 51.99326 ], [ -0.73829, 51.99326 ], [ -0.7383, 51.99326 ], [ -0.73831, 51.99326 ], [ -0.73832, 51.99326 ], [ -0.73832, 51.99327 ], [ -0.73833, 51.99327 ], [ -0.73835, 51.99328 ], [ -0.73836, 51.99329 ], [ -0.73837, 51.99329 ], [ -0.73837, 51.9933 ], [ -0.73837, 51.99331 ], [ -0.73838, 51.99331 ], [ -0.73838, 51.99332 ], [ -0.73838, 51.99333 ], [ -0.73838, 51.99334 ], [ -0.73838, 51.99335 ], [ -0.73837, 51.99335 ], [ -0.73837, 51.99336 ], [ -0.73836, 51.99337 ], [ -0.73835, 51.99338 ], [ -0.73834, 51.99338 ], [ -0.73834, 51.99339 ], [ -0.73833, 51.99339 ], [ -0.73832, 51.9934 ], [ -0.73836, 51.99345 ], [ -0.73839, 51.99349 ], [ -0.73842, 51.99354 ], [ -0.73844, 51.99356 ], [ -0.73845, 51.99359 ], [ -0.73845, 51.99362 ], [ -0.73845, 51.99363 ], [ -0.73844, 51.99371 ], [ -0.73841, 51.99379 ], [ -0.73817, 51.99414 ], [ -0.73813, 51.99421 ], [ -0.73811, 51.9943 ], [ -0.73807, 51.99458 ], [ -0.73802, 51.99484 ], [ -0.73792, 51.99509 ], [ -0.73782, 51.99533 ], [ -0.73779, 51.99542 ], [ -0.73777, 51.9955 ], [ -0.73776, 51.99554 ], [ -0.73776, 51.99558 ], [ -0.73775, 51.99565 ], [ -0.73776, 51.99577 ], [ -0.73776, 51.99582 ], [ -0.73776, 51.99584 ], [ -0.73777, 51.99588 ], [ -0.7378, 51.99605 ], [ -0.7379, 51.9964 ], [ -0.73798, 51.99666 ], [ -0.73806, 51.99691 ], [ -0.73811, 51.99704 ], [ -0.7382, 51.9973 ], [ -0.73827, 51.99751 ], [ -0.73828, 51.99761 ], [ -0.73829, 51.99762 ], [ -0.7383, 51.99771 ], [ -0.7383, 51.99783 ], [ -0.7383, 51.99792 ], [ -0.73829, 51.99799 ], [ -0.73828, 51.99805 ], [ -0.73827, 51.99812 ], [ -0.73825, 51.9982 ], [ -0.73816, 51.99855 ], [ -0.73815, 51.99865 ], [ -0.73814, 51.99869 ], [ -0.73814, 51.99872 ], [ -0.73813, 51.99881 ], [ -0.73814, 51.99889 ], [ -0.73815, 51.99896 ], [ -0.73816, 51.99904 ], [ -0.73819, 51.99914 ], [ -0.73823, 51.99924 ], [ -0.73827, 51.99937 ], [ -0.73837, 51.99964 ], [ -0.73845, 51.99991 ], [ -0.73848, 51.99999 ], [ -0.73862, 52.00034 ], [ -0.73885, 52.00093 ], [ -0.73896, 52.00122 ], [ -0.73898, 52.00127 ], [ -0.73906, 52.00147 ], [ -0.7391, 52.00154 ], [ -0.73914, 52.0016 ], [ -0.7392, 52.00169 ], [ -0.73926, 52.00177 ], [ -0.73938, 52.00189 ], [ -0.73947, 52.002 ], [ -0.73954, 52.00205 ], [ -0.73964, 52.00213 ], [ -0.73973, 52.0022 ], [ -0.7399, 52.00232 ], [ -0.74001, 52.00239 ], [ -0.74009, 52.00243 ], [ -0.7402, 52.00249 ], [ -0.74026, 52.00251 ], [ -0.74069, 52.0027 ], [ -0.74107, 52.00285 ], [ -0.74169, 52.00305 ], [ -0.7416855, 52.003051 ], [ -0.74163, 52.00313 ], [ -0.74155, 52.00327 ], [ -0.74147, 52.00346 ], [ -0.74143, 52.00361 ], [ -0.74142, 52.00372 ], [ -0.7414, 52.00389 ], [ -0.74141, 52.00408 ], [ -0.74141, 52.00416 ], [ -0.74145, 52.0044 ], [ -0.74148, 52.00449 ], [ -0.74158, 52.00473 ], [ -0.74161, 52.00481 ], [ -0.74168, 52.0049 ], [ -0.74175, 52.00499 ], [ -0.74183, 52.0051 ], [ -0.74193, 52.00522 ], [ -0.74202, 52.00531 ], [ -0.74238, 52.00574 ], [ -0.74253, 52.00597 ], [ -0.74261, 52.00607 ], [ -0.7427, 52.00617 ], [ -0.74278, 52.00626 ], [ -0.74287, 52.00634 ], [ -0.74294, 52.00641 ], [ -0.74301, 52.00647 ], [ -0.74314, 52.00658 ], [ -0.74324, 52.00664 ], [ -0.7434, 52.00673 ], [ -0.74363, 52.00682 ], [ -0.74364, 52.00683 ], [ -0.74375, 52.00688 ], [ -0.74388, 52.00694 ], [ -0.74402, 52.007 ], [ -0.7441, 52.00703 ], [ -0.74417, 52.00705 ], [ -0.74434, 52.00709 ], [ -0.74447, 52.00712 ], [ -0.74464, 52.00717 ], [ -0.74497, 52.00723 ], [ -0.74532, 52.00728 ], [ -0.74554, 52.00732 ], [ -0.74581, 52.00739 ], [ -0.7458082, 52.007386 ], [ -0.7458, 52.0074 ], [ -0.7458, 52.00741 ], [ -0.7458, 52.00742 ], [ -0.74579, 52.00742 ], [ -0.74579, 52.00743 ], [ -0.74579, 52.00744 ], [ -0.7458, 52.00745 ], [ -0.7458, 52.00746 ], [ -0.74581, 52.00747 ], [ -0.74581, 52.00748 ], [ -0.74582, 52.00748 ], [ -0.74582, 52.00749 ], [ -0.74583, 52.0075 ], [ -0.74584, 52.0075 ], [ -0.74584, 52.00751 ], [ -0.74585, 52.00751 ], [ -0.74586, 52.00752 ], [ -0.74587, 52.00752 ], [ -0.74588, 52.00753 ], [ -0.7459, 52.00753 ], [ -0.7458, 52.00764 ], [ -0.74556, 52.00787 ], [ -0.7454, 52.00804 ], [ -0.74525, 52.0082 ], [ -0.74513, 52.0083 ], [ -0.745, 52.00839 ], [ -0.74482, 52.0085 ], [ -0.7447, 52.00855 ], [ -0.74452, 52.00862 ], [ -0.74432, 52.00868 ], [ -0.7443196, 52.0086755 ], [ -0.74434, 52.00874 ], [ -0.74435, 52.00878 ], [ -0.74433, 52.00882 ], [ -0.74431, 52.00885 ], [ -0.74427, 52.00889 ], [ -0.74411, 52.00903 ], [ -0.7441, 52.00909 ], [ -0.74409, 52.00912 ], [ -0.74407, 52.00913 ], [ -0.74385, 52.00931 ], [ -0.74384, 52.00933 ], [ -0.74382, 52.00934 ], [ -0.74382, 52.00936 ], [ -0.74382, 52.00938 ], [ -0.74382, 52.0094 ], [ -0.74384, 52.00942 ], [ -0.74385, 52.00944 ], [ -0.74388, 52.00947 ], [ -0.74412, 52.00964 ], [ -0.74413, 52.00964 ], [ -0.74413, 52.00966 ], [ -0.74414, 52.00967 ], [ -0.74414, 52.00969 ], [ -0.74415, 52.00978 ], [ -0.7441478, 52.0097809 ], [ -0.7452, 52.01024 ], [ -0.74577, 52.01048 ], [ -0.7457653, 52.0104832 ], [ -0.74585, 52.01054 ], [ -0.74594, 52.01059 ], [ -0.74608, 52.01066 ], [ -0.74622, 52.01073 ], [ -0.7469, 52.01103 ], [ -0.74711, 52.01112 ], [ -0.74731, 52.0112 ], [ -0.74752, 52.01129 ], [ -0.74793, 52.01145 ], [ -0.7481, 52.01152 ], [ -0.74819, 52.01155 ], [ -0.74831, 52.01158 ], [ -0.74913, 52.01189 ], [ -0.7491269, 52.0118865 ], [ -0.74901, 52.01202 ], [ -0.74895, 52.01209 ], [ -0.74886, 52.01223 ], [ -0.7488561, 52.012229 ], [ -0.74964, 52.01255 ], [ -0.74979, 52.01261 ], [ -0.75023, 52.01279 ], [ -0.75028, 52.0128 ], [ -0.75055, 52.01287 ], [ -0.75082, 52.01294 ], [ -0.75095, 52.01298 ], [ -0.75126, 52.01304 ], [ -0.75132, 52.01305 ], [ -0.75142, 52.01308 ], [ -0.75159, 52.01311 ], [ -0.75171, 52.01313 ], [ -0.7518, 52.01315 ], [ -0.75187, 52.01316 ], [ -0.75201, 52.01318 ], [ -0.75203, 52.01319 ], [ -0.75205, 52.01319 ], [ -0.75208, 52.01318 ], [ -0.7521, 52.01318 ], [ -0.75212, 52.01317 ], [ -0.75214, 52.01316 ], [ -0.75216, 52.01315 ], [ -0.75219, 52.01312 ], [ -0.7522, 52.01309 ], [ -0.75223, 52.01304 ], [ -0.7522304, 52.0130449 ], [ -0.75314, 52.01338 ], [ -0.7543, 52.0138 ], [ -0.75525, 52.01414 ], [ -0.7561, 52.01444 ], [ -0.75642, 52.01455 ], [ -0.75658, 52.01461 ], [ -0.75661, 52.01462 ], [ -0.75685, 52.01471 ], [ -0.75756, 52.01496 ], [ -0.75839, 52.01527 ], [ -0.75892, 52.01548 ], [ -0.75952, 52.01571 ], [ -0.76018, 52.01597 ], [ -0.76104, 52.01631 ], [ -0.76141, 52.01645 ], [ -0.76203, 52.01671 ], [ -0.76292, 52.01708 ], [ -0.76346, 52.0173 ], [ -0.76382, 52.01745 ], [ -0.76422, 52.01761 ], [ -0.76455, 52.01775 ], [ -0.76481, 52.01785 ], [ -0.76501, 52.01794 ], [ -0.76536, 52.01808 ], [ -0.76609, 52.01838 ], [ -0.76626, 52.01845 ], [ -0.76644, 52.01853 ], [ -0.767, 52.01877 ], [ -0.76732, 52.01906 ], [ -0.76733, 52.01908 ], [ -0.76734, 52.01909 ], [ -0.76734, 52.0191 ], [ -0.76736, 52.01912 ], [ -0.7674, 52.01916 ], [ -0.76745, 52.0192 ], [ -0.76749, 52.01922 ], [ -0.76753, 52.01923 ], [ -0.76759, 52.01926 ], [ -0.76766, 52.01927 ], [ -0.76771, 52.01927 ], [ -0.76774, 52.01927 ], [ -0.76776, 52.01927 ], [ -0.76779, 52.01926 ], [ -0.76783, 52.01925 ], [ -0.76786, 52.01924 ], [ -0.76799, 52.01926 ], [ -0.7682, 52.01929 ], [ -0.76837, 52.01931 ], [ -0.76881, 52.0195 ], [ -0.76981, 52.01992 ], [ -0.77014, 52.02006 ], [ -0.77023, 52.0201 ], [ -0.77048, 52.02019 ], [ -0.77058, 52.02024 ], [ -0.77065, 52.02027 ], [ -0.77089, 52.02036 ], [ -0.77105, 52.02042 ], [ -0.77123, 52.0205 ], [ -0.77143, 52.02058 ], [ -0.77214, 52.02086 ], [ -0.77263, 52.02106 ], [ -0.77279, 52.02111 ], [ -0.77358, 52.02143 ], [ -0.77413, 52.02161 ], [ -0.77515, 52.02198 ], [ -0.7759, 52.02226 ], [ -0.7761, 52.02233 ], [ -0.7761, 52.02234 ], [ -0.7763, 52.02241 ], [ -0.77647, 52.02247 ], [ -0.77654, 52.02252 ], [ -0.77686, 52.0227 ], [ -0.77685, 52.02272 ], [ -0.77685, 52.02275 ], [ -0.77685, 52.02277 ], [ -0.77686, 52.02279 ], [ -0.77687, 52.02281 ], [ -0.77689, 52.02285 ], [ -0.77693, 52.02288 ], [ -0.77695, 52.0229 ], [ -0.77698, 52.02291 ], [ -0.77701, 52.02293 ], [ -0.77704, 52.02294 ], [ -0.77707, 52.02295 ], [ -0.77711, 52.02295 ], [ -0.77716, 52.02297 ], [ -0.77725, 52.02297 ], [ -0.77729, 52.02297 ], [ -0.77732, 52.02297 ], [ -0.77735, 52.02296 ], [ -0.77738, 52.02295 ], [ -0.77743, 52.02294 ], [ -0.7776, 52.02295 ], [ -0.77768, 52.02295 ], [ -0.77782, 52.02297 ], [ -0.77789, 52.02299 ], [ -0.77799, 52.02303 ], [ -0.77812, 52.02307 ], [ -0.77848, 52.0232 ], [ -0.77861, 52.02325 ], [ -0.77908, 52.02342 ], [ -0.77982, 52.02371 ], [ -0.78057, 52.02399 ], [ -0.78183, 52.02444 ], [ -0.78239, 52.02465 ], [ -0.78274, 52.02478 ], [ -0.78324, 52.02496 ], [ -0.78349, 52.02506 ], [ -0.78433, 52.02536 ], [ -0.78434, 52.02536 ], [ -0.78449, 52.02541 ], [ -0.78483, 52.02553 ], [ -0.78547, 52.02578 ], [ -0.7857, 52.02587 ], [ -0.786, 52.02598 ], [ -0.78676, 52.02632 ], [ -0.78689, 52.02639 ], [ -0.78698, 52.02643 ], [ -0.78705, 52.02646 ], [ -0.7871, 52.02649 ], [ -0.78722, 52.02655 ], [ -0.78728, 52.02658 ], [ -0.78743, 52.02664 ], [ -0.78788, 52.02687 ], [ -0.78799, 52.02693 ], [ -0.78812, 52.027 ], [ -0.78836, 52.02713 ], [ -0.78862, 52.02728 ], [ -0.78932, 52.02768 ], [ -0.78941, 52.02773 ], [ -0.79002, 52.02806 ], [ -0.79032, 52.02821 ], [ -0.79048, 52.02828 ], [ -0.79059, 52.02834 ], [ -0.7907, 52.02839 ], [ -0.79089, 52.02848 ], [ -0.79133, 52.02869 ], [ -0.79151, 52.02877 ], [ -0.79171, 52.02886 ], [ -0.79184, 52.02892 ], [ -0.79249, 52.02922 ], [ -0.79319, 52.02954 ], [ -0.79359, 52.02972 ], [ -0.79363, 52.02975 ], [ -0.79383, 52.0298 ], [ -0.79412, 52.02984 ], [ -0.79416, 52.02983 ], [ -0.79419, 52.02983 ], [ -0.79421, 52.02983 ], [ -0.79423, 52.02983 ], [ -0.79428, 52.02983 ], [ -0.79435, 52.02984 ], [ -0.7944, 52.02986 ], [ -0.79443, 52.02987 ], [ -0.79446, 52.02988 ], [ -0.79448, 52.0299 ], [ -0.79451, 52.02991 ], [ -0.79454, 52.02994 ], [ -0.79458, 52.03 ], [ -0.79459, 52.03003 ], [ -0.79459, 52.03005 ], [ -0.79459, 52.03007 ], [ -0.79484, 52.03019 ], [ -0.79495, 52.03028 ], [ -0.79501, 52.0303 ], [ -0.79529, 52.03041 ], [ -0.79544, 52.03048 ], [ -0.79575, 52.03061 ], [ -0.79624, 52.03082 ], [ -0.79674, 52.03103 ], [ -0.79683, 52.03107 ], [ -0.79713, 52.0312 ], [ -0.79732, 52.03128 ], [ -0.79807, 52.0316 ], [ -0.79816, 52.03163 ], [ -0.79888, 52.03193 ], [ -0.79937, 52.03214 ], [ -0.80011, 52.03244 ], [ -0.80066, 52.03266 ], [ -0.80097, 52.0328 ], [ -0.80141, 52.03298 ], [ -0.80278, 52.03357 ], [ -0.80294, 52.03363 ], [ -0.80295, 52.03363 ], [ -0.80311, 52.0337 ], [ -0.80326, 52.03382 ], [ -0.80336, 52.03387 ], [ -0.80359, 52.03402 ], [ -0.80359, 52.03405 ], [ -0.80359, 52.03407 ], [ -0.8036, 52.03409 ], [ -0.8036, 52.0341 ], [ -0.80362, 52.03413 ], [ -0.80364, 52.03414 ], [ -0.80365, 52.03417 ], [ -0.80369, 52.03419 ], [ -0.80371, 52.0342 ], [ -0.80373, 52.03421 ], [ -0.80377, 52.03423 ], [ -0.80381, 52.03424 ], [ -0.80388, 52.03426 ], [ -0.80394, 52.03426 ], [ -0.80397, 52.03426 ], [ -0.80401, 52.03426 ], [ -0.80404, 52.03425 ], [ -0.80408, 52.03424 ], [ -0.80414, 52.03423 ], [ -0.80427, 52.03424 ], [ -0.80444, 52.03428 ], [ -0.80446, 52.03428 ], [ -0.80466, 52.03434 ], [ -0.80514, 52.03455 ], [ -0.80518, 52.03456 ], [ -0.80657, 52.03517 ], [ -0.80712, 52.0354 ], [ -0.80825, 52.03589 ], [ -0.80893, 52.03619 ], [ -0.80912, 52.03624 ], [ -0.80926, 52.03625 ], [ -0.80925, 52.03627 ], [ -0.80925, 52.0363 ], [ -0.80926, 52.03633 ], [ -0.80928, 52.03636 ], [ -0.80931, 52.0364 ], [ -0.80936, 52.03642 ], [ -0.80946, 52.03645 ], [ -0.80953, 52.03645 ], [ -0.80959, 52.03644 ], [ -0.80965, 52.03643 ], [ -0.80968, 52.03642 ], [ -0.80977, 52.03652 ], [ -0.80981, 52.03655 ], [ -0.80998, 52.03663 ], [ -0.81056, 52.03687 ], [ -0.8108, 52.03698 ], [ -0.81129, 52.03718 ], [ -0.81153, 52.03728 ], [ -0.81177, 52.03738 ], [ -0.81346, 52.03809 ], [ -0.81395, 52.03829 ], [ -0.81437, 52.03846 ], [ -0.81501, 52.03874 ], [ -0.81531, 52.03886 ], [ -0.81535, 52.03888 ], [ -0.81544, 52.03892 ], [ -0.81564, 52.039 ], [ -0.81568, 52.03902 ], [ -0.81669, 52.03946 ], [ -0.81724, 52.0397 ], [ -0.81823, 52.04012 ], [ -0.81845, 52.04022 ], [ -0.81857, 52.04031 ], [ -0.81878, 52.04046 ], [ -0.81878, 52.04048 ], [ -0.81879, 52.04049 ], [ -0.8188, 52.04051 ], [ -0.81881, 52.04053 ], [ -0.81882, 52.04054 ], [ -0.81882, 52.04055 ], [ -0.81883, 52.04056 ], [ -0.81885, 52.04056 ], [ -0.81886, 52.04057 ], [ -0.81887, 52.04058 ], [ -0.81888, 52.04059 ], [ -0.8189, 52.0406 ], [ -0.81891, 52.0406 ], [ -0.81893, 52.04061 ], [ -0.81894, 52.04062 ], [ -0.81896, 52.04062 ], [ -0.81898, 52.04063 ], [ -0.81899, 52.04063 ], [ -0.81901, 52.04063 ], [ -0.81903, 52.04064 ], [ -0.81905, 52.04064 ], [ -0.81908, 52.04064 ], [ -0.81911, 52.04064 ], [ -0.81915, 52.04064 ], [ -0.81917, 52.04063 ], [ -0.81918, 52.04063 ], [ -0.8192, 52.04062 ], [ -0.81923, 52.04062 ], [ -0.81925, 52.04061 ], [ -0.81951, 52.04069 ], [ -0.81985, 52.0408 ], [ -0.82028, 52.04099 ], [ -0.82067, 52.04116 ], [ -0.82173, 52.04159 ], [ -0.82204, 52.04172 ], [ -0.82287, 52.04205 ], [ -0.82308, 52.04213 ], [ -0.8233, 52.04222 ], [ -0.82428, 52.04262 ], [ -0.82453, 52.04272 ], [ -0.82477, 52.04282 ], [ -0.82569, 52.04319 ], [ -0.82575, 52.04321 ], [ -0.82648, 52.04351 ], [ -0.82689, 52.04368 ], [ -0.82721, 52.04381 ], [ -0.82744, 52.04389 ], [ -0.82797, 52.04412 ], [ -0.82813, 52.04419 ], [ -0.82938, 52.04476 ], [ -0.82942, 52.04477 ], [ -0.82985, 52.04497 ], [ -0.83079, 52.04541 ], [ -0.83129, 52.04564 ], [ -0.83161, 52.04579 ], [ -0.83192, 52.04596 ], [ -0.83205, 52.04601 ], [ -0.83211, 52.04604 ], [ -0.83216, 52.04606 ], [ -0.83229, 52.04611 ], [ -0.83242, 52.04617 ], [ -0.83245, 52.04617 ], [ -0.83247, 52.04617 ], [ -0.83249, 52.04617 ], [ -0.83251, 52.04617 ], [ -0.83253, 52.04617 ], [ -0.83254, 52.04617 ], [ -0.83256, 52.04618 ], [ -0.83258, 52.04618 ], [ -0.83259, 52.04618 ], [ -0.83261, 52.04619 ], [ -0.83262, 52.04619 ], [ -0.83266, 52.04621 ], [ -0.83269, 52.04623 ], [ -0.83271, 52.04625 ], [ -0.83271, 52.04626 ], [ -0.83272, 52.04627 ], [ -0.83273, 52.04628 ], [ -0.83273, 52.04629 ], [ -0.83274, 52.04631 ], [ -0.83274, 52.04632 ], [ -0.83294, 52.04644 ], [ -0.83307, 52.04654 ], [ -0.83358, 52.04679 ], [ -0.83392, 52.04697 ], [ -0.83403, 52.04702 ], [ -0.83426, 52.04714 ], [ -0.83438, 52.0472 ], [ -0.83473, 52.04737 ], [ -0.83495, 52.04748 ], [ -0.8355, 52.04776 ], [ -0.83552, 52.04779 ], [ -0.83554, 52.0478 ], [ -0.83555, 52.04782 ], [ -0.83557, 52.04783 ], [ -0.83559, 52.04784 ], [ -0.83561, 52.04785 ], [ -0.83564, 52.04786 ], [ -0.83566, 52.04787 ], [ -0.83569, 52.04788 ], [ -0.83572, 52.04789 ], [ -0.83575, 52.04789 ], [ -0.83577, 52.04789 ], [ -0.8358, 52.04789 ], [ -0.83583, 52.04789 ], [ -0.83586, 52.04789 ], [ -0.83589, 52.04789 ], [ -0.83593, 52.04788 ], [ -0.83596, 52.04787 ], [ -0.83628, 52.048 ], [ -0.83729, 52.04865 ], [ -0.83927, 52.04992 ], [ -0.83944, 52.04997 ], [ -0.83966, 52.05006 ], [ -0.8396555, 52.0500592 ], [ -0.83971, 52.05004 ], [ -0.83976, 52.05004 ], [ -0.83989, 52.05004 ], [ -0.83997, 52.05005 ], [ -0.84003, 52.05006 ], [ -0.84008, 52.05008 ], [ -0.84014, 52.05011 ], [ -0.84018, 52.05014 ], [ -0.84021, 52.0502 ], [ -0.84023, 52.05028 ], [ -0.84036, 52.05043 ], [ -0.84041, 52.05053 ], [ -0.84072, 52.05069 ], [ -0.8411, 52.05088 ], [ -0.8414, 52.05103 ], [ -0.84169, 52.05119 ], [ -0.84196, 52.05136 ], [ -0.84199, 52.05139 ], [ -0.8419921, 52.051388 ], [ -0.84215, 52.05142 ], [ -0.84225, 52.05146 ], [ -0.84238, 52.05152 ], [ -0.8424, 52.05153 ], [ -0.84246, 52.05156 ], [ -0.84253, 52.05159 ], [ -0.84276, 52.05171 ], [ -0.84309, 52.05188 ], [ -0.84326, 52.05198 ], [ -0.8434, 52.05207 ], [ -0.84349, 52.05214 ], [ -0.84362, 52.05229 ], [ -0.84376, 52.05231 ], [ -0.84383, 52.05233 ], [ -0.84396, 52.05239 ], [ -0.844, 52.05244 ], [ -0.84408, 52.05248 ], [ -0.84481, 52.05283 ], [ -0.84514, 52.053 ], [ -0.84529, 52.05306 ], [ -0.84566, 52.05323 ], [ -0.846, 52.05338 ], [ -0.84633, 52.05352 ], [ -0.84666, 52.05366 ], [ -0.84666, 52.05367 ], [ -0.84666, 52.05368 ], [ -0.84666, 52.05369 ], [ -0.84667, 52.05369 ], [ -0.84667, 52.0537 ], [ -0.84668, 52.0537 ], [ -0.84669, 52.0537 ], [ -0.84669, 52.05371 ], [ -0.8467, 52.05371 ], [ -0.84671, 52.05371 ], [ -0.84672, 52.05371 ], [ -0.84673, 52.05371 ], [ -0.84763, 52.05413 ], [ -0.84763, 52.05414 ], [ -0.84763, 52.05415 ], [ -0.84763, 52.05416 ], [ -0.84764, 52.05416 ], [ -0.84764, 52.05417 ], [ -0.84765, 52.05417 ], [ -0.84766, 52.05418 ], [ -0.84767, 52.05418 ], [ -0.84768, 52.05418 ], [ -0.84769, 52.05419 ], [ -0.8477, 52.05419 ], [ -0.84771, 52.05419 ], [ -0.84772, 52.05419 ], [ -0.84773, 52.05419 ], [ -0.84773, 52.05418 ], [ -0.84818, 52.05438 ], [ -0.8483, 52.05442 ], [ -0.84879, 52.05466 ], [ -0.84886, 52.05471 ], [ -0.84894, 52.05475 ], [ -0.8494, 52.05497 ], [ -0.84943, 52.05499 ], [ -0.84974, 52.05514 ], [ -0.84984, 52.05519 ], [ -0.84986, 52.0552 ], [ -0.85004, 52.05528 ], [ -0.85027, 52.05541 ], [ -0.85044, 52.05551 ], [ -0.85043, 52.05551 ], [ -0.85043, 52.05552 ], [ -0.85043, 52.05553 ], [ -0.85043, 52.05554 ], [ -0.85043, 52.05555 ], [ -0.85044, 52.05555 ], [ -0.85044, 52.05556 ], [ -0.85045, 52.05556 ], [ -0.85045, 52.05557 ], [ -0.85046, 52.05557 ], [ -0.85047, 52.05557 ], [ -0.85048, 52.05557 ], [ -0.85049, 52.05557 ], [ -0.85049, 52.05558 ], [ -0.8505, 52.05558 ], [ -0.8505, 52.05557 ], [ -0.85051, 52.05557 ], [ -0.85052, 52.05557 ], [ -0.85053, 52.05557 ], [ -0.85067, 52.0557 ], [ -0.85074, 52.05579 ], [ -0.8507385, 52.0557894 ], [ -0.85075, 52.05579 ], [ -0.85075, 52.05578 ], [ -0.85076, 52.05578 ], [ -0.85077, 52.05578 ], [ -0.85078, 52.05578 ], [ -0.85079, 52.05578 ], [ -0.8508, 52.05578 ], [ -0.85081, 52.05578 ], [ -0.85082, 52.05578 ], [ -0.85083, 52.05578 ], [ -0.85083, 52.05579 ], [ -0.85084, 52.05579 ], [ -0.85085, 52.05579 ], [ -0.85085, 52.0558 ], [ -0.85086, 52.0558 ], [ -0.85087, 52.05581 ], [ -0.85087, 52.05582 ], [ -0.85088, 52.05582 ], [ -0.85088, 52.05583 ], [ -0.85088, 52.05584 ], [ -0.85088, 52.05585 ], [ -0.85087, 52.05585 ], [ -0.85087, 52.05586 ], [ -0.85087, 52.05587 ], [ -0.85086, 52.05587 ], [ -0.85095, 52.05593 ], [ -0.85097, 52.05594 ], [ -0.85136, 52.05612 ], [ -0.85153, 52.05621 ], [ -0.85197, 52.05643 ], [ -0.85237, 52.05665 ], [ -0.8526, 52.05677 ], [ -0.8529, 52.05694 ], [ -0.85312, 52.05706 ], [ -0.85353, 52.05729 ], [ -0.85401, 52.05754 ], [ -0.85433, 52.0577 ], [ -0.85466, 52.05787 ], [ -0.85505, 52.05807 ], [ -0.85532, 52.05821 ], [ -0.85555, 52.05832 ], [ -0.85583, 52.05847 ], [ -0.85599, 52.05856 ], [ -0.85603, 52.05859 ], [ -0.85646, 52.05881 ], [ -0.85687, 52.05904 ], [ -0.857, 52.05911 ], [ -0.85725, 52.05924 ], [ -0.85807, 52.05967 ], [ -0.85827, 52.05978 ], [ -0.85862, 52.05997 ], [ -0.85908, 52.06027 ], [ -0.8590809, 52.0602719 ], [ -0.85917, 52.06028 ], [ -0.85922, 52.06029 ], [ -0.85927, 52.0603 ], [ -0.85932, 52.06033 ], [ -0.8595, 52.06042 ], [ -0.85963, 52.06049 ], [ -0.86019, 52.06076 ], [ -0.86062, 52.06103 ], [ -0.8606151, 52.0610319 ], [ -0.86053, 52.0611 ], [ -0.8605338, 52.0611022 ], [ -0.86076, 52.06117 ], [ -0.86086, 52.06121 ], [ -0.86101, 52.06126 ], [ -0.8610082, 52.0612646 ], [ -0.86138, 52.06145 ], [ -0.8613804, 52.0614461 ], [ -0.86172, 52.06162 ], [ -0.86225, 52.0619 ], [ -0.86262, 52.06208 ], [ -0.8629, 52.06223 ], [ -0.86326, 52.06241 ], [ -0.86359, 52.06259 ], [ -0.86371, 52.06265 ], [ -0.86401, 52.0628 ], [ -0.8646, 52.06311 ], [ -0.86481, 52.06322 ], [ -0.8648137, 52.0632209 ], [ -0.86511, 52.06338 ], [ -0.86524, 52.06345 ], [ -0.86567, 52.06369 ], [ -0.86638, 52.06408 ], [ -0.86653, 52.06416 ], [ -0.86722, 52.06453 ], [ -0.86769, 52.0648 ], [ -0.86804, 52.065 ], [ -0.86823, 52.06511 ], [ -0.86833, 52.06516 ], [ -0.86863, 52.06532 ], [ -0.86871, 52.06536 ], [ -0.86886, 52.06544 ], [ -0.86892, 52.06547 ], [ -0.86906, 52.06556 ], [ -0.86924, 52.06568 ], [ -0.86931, 52.06573 ], [ -0.86933, 52.06574 ], [ -0.86939, 52.06577 ], [ -0.86947, 52.06582 ], [ -0.86957, 52.06586 ], [ -0.86978, 52.06593 ], [ -0.8697821, 52.065932 ], [ -0.86983, 52.06593 ], [ -0.86988, 52.06593 ], [ -0.86992, 52.06593 ], [ -0.86995, 52.06593 ], [ -0.87, 52.06594 ], [ -0.87005, 52.06594 ], [ -0.87016, 52.06596 ], [ -0.87027, 52.06599 ], [ -0.87037, 52.06602 ], [ -0.87046, 52.06606 ], [ -0.87055, 52.06611 ], [ -0.87063, 52.06616 ], [ -0.8707, 52.06621 ], [ -0.87076, 52.06628 ], [ -0.87077, 52.06631 ], [ -0.87077, 52.06632 ], [ -0.87078, 52.06634 ], [ -0.87078, 52.06636 ], [ -0.87079, 52.06638 ], [ -0.87079, 52.06641 ], [ -0.871, 52.06659 ], [ -0.87112, 52.06667 ], [ -0.87133, 52.06678 ], [ -0.87146, 52.06688 ], [ -0.87197, 52.06717 ], [ -0.87232, 52.06735 ], [ -0.87267, 52.06753 ], [ -0.87285, 52.06762 ], [ -0.8732, 52.06782 ], [ -0.87448, 52.06852 ], [ -0.87484, 52.06872 ], [ -0.87502, 52.06882 ], [ -0.87525, 52.06894 ], [ -0.8755, 52.06907 ], [ -0.87577, 52.06922 ], [ -0.87601, 52.06934 ], [ -0.87622, 52.06945 ], [ -0.87645, 52.06956 ], [ -0.87659, 52.06963 ], [ -0.877, 52.06984 ], [ -0.87773, 52.07019 ], [ -0.87805, 52.07035 ], [ -0.87818, 52.07042 ], [ -0.87856, 52.07062 ], [ -0.87875, 52.07072 ], [ -0.87885, 52.07077 ], [ -0.87955, 52.07115 ], [ -0.87994, 52.07136 ], [ -0.88023, 52.07153 ], [ -0.88037, 52.07161 ], [ -0.88065, 52.07177 ], [ -0.88106, 52.07202 ], [ -0.88164, 52.0724 ], [ -0.88181, 52.0725 ], [ -0.88202, 52.07263 ], [ -0.88239, 52.07284 ], [ -0.88246, 52.07288 ], [ -0.88297, 52.07317 ], [ -0.88333, 52.07337 ], [ -0.88393, 52.0737 ], [ -0.88486, 52.07421 ], [ -0.88571, 52.07468 ], [ -0.88596, 52.07482 ], [ -0.88605, 52.07487 ], [ -0.88618, 52.07494 ], [ -0.88626, 52.07498 ], [ -0.88649, 52.07511 ], [ -0.88749, 52.07566 ], [ -0.88763, 52.07574 ], [ -0.88771, 52.07578 ], [ -0.88884, 52.07637 ], [ -0.88892, 52.07641 ], [ -0.88921, 52.07656 ], [ -0.88934, 52.07663 ], [ -0.88958, 52.07674 ], [ -0.88992, 52.07692 ], [ -0.89081, 52.07737 ], [ -0.89089, 52.07742 ], [ -0.89153, 52.07776 ], [ -0.89225, 52.07814 ], [ -0.89302, 52.07856 ], [ -0.89311, 52.07861 ], [ -0.89395, 52.07905 ], [ -0.89485, 52.07954 ], [ -0.89521, 52.07974 ], [ -0.8955, 52.0799 ], [ -0.89605, 52.0802 ], [ -0.89638, 52.08038 ], [ -0.89653, 52.08046 ], [ -0.89666, 52.08053 ], [ -0.89668, 52.08054 ], [ -0.89719, 52.08081 ], [ -0.8973, 52.08087 ], [ -0.89766, 52.08107 ], [ -0.89788, 52.0812 ], [ -0.89863, 52.08164 ], [ -0.89874, 52.0817 ], [ -0.89896, 52.08182 ], [ -0.8993, 52.08201 ], [ -0.89948, 52.08212 ], [ -0.8998, 52.0823 ], [ -0.90023, 52.08255 ], [ -0.90038, 52.08263 ], [ -0.90109, 52.08306 ], [ -0.9014, 52.08324 ], [ -0.90152, 52.08332 ], [ -0.90162, 52.08338 ], [ -0.90171, 52.08343 ], [ -0.90213, 52.08367 ], [ -0.90254, 52.0839 ], [ -0.90264, 52.08396 ], [ -0.90349, 52.08446 ], [ -0.90367, 52.08456 ], [ -0.90407, 52.0848 ], [ -0.9045, 52.08505 ], [ -0.90471, 52.08518 ], [ -0.90514, 52.08544 ], [ -0.90619, 52.08607 ], [ -0.90716, 52.08664 ], [ -0.90741, 52.08679 ], [ -0.90828, 52.0873 ], [ -0.90885, 52.08763 ], [ -0.90935, 52.08792 ], [ -0.90938, 52.08795 ], [ -0.90982, 52.0882 ], [ -0.91012, 52.08838 ], [ -0.91074, 52.08874 ], [ -0.91104, 52.08892 ], [ -0.91112, 52.08897 ], [ -0.91171, 52.08932 ], [ -0.91264, 52.08985 ], [ -0.91274, 52.08991 ], [ -0.91356, 52.09037 ], [ -0.91444, 52.09086 ], [ -0.91457, 52.09094 ], [ -0.91501, 52.09118 ], [ -0.91538, 52.09139 ], [ -0.9155, 52.09146 ], [ -0.91596, 52.09171 ], [ -0.91655, 52.09204 ], [ -0.91666, 52.0921 ], [ -0.91692, 52.09225 ], [ -0.9175, 52.09257 ], [ -0.91806, 52.09289 ], [ -0.91837, 52.09306 ], [ -0.91868, 52.09323 ], [ -0.91905, 52.09344 ], [ -0.91938, 52.09362 ], [ -0.91939, 52.09363 ], [ -0.91961, 52.09375 ], [ -0.91985, 52.09388 ], [ -0.92023, 52.0941 ], [ -0.92133, 52.09472 ], [ -0.92163, 52.0949 ], [ -0.92186, 52.09503 ], [ -0.92218, 52.09521 ], [ -0.92222, 52.09524 ], [ -0.92252, 52.0954 ], [ -0.92276, 52.09555 ], [ -0.92283, 52.09558 ], [ -0.92308, 52.09573 ], [ -0.92338, 52.0959 ], [ -0.92381, 52.09615 ], [ -0.92419, 52.09636 ], [ -0.92446, 52.09651 ], [ -0.92461, 52.0966 ], [ -0.92467, 52.09664 ], [ -0.92493, 52.09679 ], [ -0.92529, 52.09699 ], [ -0.92531, 52.09701 ], [ -0.92553, 52.09713 ], [ -0.92588, 52.09733 ], [ -0.92595, 52.09737 ], [ -0.92617, 52.0975 ], [ -0.92644, 52.09765 ], [ -0.92698, 52.09797 ], [ -0.92723, 52.09811 ], [ -0.92729, 52.09815 ], [ -0.92745, 52.09824 ], [ -0.9277, 52.09838 ], [ -0.92787, 52.09848 ], [ -0.92798, 52.09854 ], [ -0.92809, 52.09861 ], [ -0.92828, 52.09871 ], [ -0.92873, 52.09897 ], [ -0.92876, 52.09898 ], [ -0.92896, 52.0991 ], [ -0.92916, 52.0992 ], [ -0.92946, 52.09937 ], [ -0.92982, 52.09957 ], [ -0.9299, 52.09962 ], [ -0.93021, 52.09979 ], [ -0.93045, 52.09992 ], [ -0.93089, 52.10016 ], [ -0.93122, 52.10035 ], [ -0.93159, 52.10056 ], [ -0.93196, 52.10076 ], [ -0.93225, 52.10093 ], [ -0.93243, 52.10102 ], [ -0.9326, 52.1011 ], [ -0.93283, 52.10124 ], [ -0.93302, 52.10133 ], [ -0.93333, 52.10151 ], [ -0.93346, 52.10157 ], [ -0.93353, 52.10161 ], [ -0.93393, 52.10183 ], [ -0.93397, 52.10185 ], [ -0.93424, 52.102 ], [ -0.93458, 52.10218 ], [ -0.93479, 52.1023 ], [ -0.93504, 52.10243 ], [ -0.93539, 52.10262 ], [ -0.93554, 52.1027 ], [ -0.93575, 52.10282 ], [ -0.93689, 52.10342 ], [ -0.9372, 52.1036 ], [ -0.93763, 52.10384 ], [ -0.9382, 52.10416 ], [ -0.93905, 52.10463 ], [ -0.93907, 52.10464 ], [ -0.94046, 52.10541 ], [ -0.94069, 52.10554 ], [ -0.94087, 52.10564 ], [ -0.94147, 52.10596 ], [ -0.94174, 52.10611 ], [ -0.94191, 52.1062 ], [ -0.94214, 52.10632 ], [ -0.94287, 52.10669 ], [ -0.94332, 52.10692 ], [ -0.94355, 52.10704 ], [ -0.94446, 52.10749 ], [ -0.94452, 52.10752 ], [ -0.94468, 52.10761 ], [ -0.94476, 52.10765 ], [ -0.94514, 52.10785 ], [ -0.94627, 52.10847 ], [ -0.94689, 52.10881 ], [ -0.94692, 52.10883 ], [ -0.9477, 52.10925 ], [ -0.94773, 52.10927 ], [ -0.94839, 52.10962 ], [ -0.94931, 52.11009 ], [ -0.94951, 52.1102 ], [ -0.95025, 52.11059 ], [ -0.95087, 52.11092 ], [ -0.95113, 52.11106 ], [ -0.95142, 52.11124 ], [ -0.95158, 52.11134 ], [ -0.95168, 52.11141 ], [ -0.9518, 52.11149 ], [ -0.95207, 52.11169 ], [ -0.95246, 52.11197 ], [ -0.95249, 52.112 ], [ -0.95265, 52.11211 ], [ -0.95269, 52.11214 ], [ -0.95285, 52.11224 ], [ -0.9529, 52.11227 ], [ -0.95309, 52.11238 ], [ -0.95328, 52.11249 ], [ -0.95392, 52.11283 ], [ -0.95426, 52.11301 ], [ -0.95438, 52.11307 ], [ -0.95511, 52.11341 ], [ -0.95548, 52.11358 ], [ -0.9562, 52.11388 ], [ -0.95752, 52.11442 ], [ -0.95779, 52.11454 ], [ -0.95824, 52.11473 ], [ -0.95882, 52.11502 ], [ -0.95909, 52.11516 ], [ -0.95915, 52.11519 ], [ -0.95931, 52.11527 ], [ -0.95938, 52.11531 ], [ -0.96066, 52.11597 ], [ -0.96109, 52.1162 ], [ -0.96177, 52.11655 ], [ -0.96199, 52.11666 ], [ -0.96311, 52.11724 ], [ -0.96334, 52.11735 ], [ -0.96343, 52.1174 ], [ -0.96408, 52.11774 ], [ -0.9641, 52.11776 ], [ -0.96485, 52.11817 ], [ -0.96533, 52.11844 ], [ -0.96549, 52.11852 ], [ -0.96586, 52.11871 ], [ -0.96597, 52.11877 ], [ -0.96616, 52.11887 ], [ -0.96703, 52.11929 ], [ -0.9677, 52.11963 ], [ -0.96851, 52.12005 ], [ -0.9717, 52.12169 ], [ -0.97222, 52.12194 ], [ -0.97254, 52.12211 ], [ -0.97273, 52.12221 ], [ -0.97311, 52.12233 ], [ -0.97313, 52.12235 ], [ -0.97314, 52.12235 ], [ -0.97314, 52.12236 ], [ -0.97315, 52.12237 ], [ -0.97316, 52.12237 ], [ -0.97316, 52.12238 ], [ -0.97317, 52.12238 ], [ -0.97318, 52.12238 ], [ -0.97319, 52.12239 ], [ -0.9732, 52.12239 ], [ -0.97321, 52.1224 ], [ -0.97322, 52.1224 ], [ -0.97323, 52.1224 ], [ -0.97324, 52.1224 ], [ -0.97325, 52.12241 ], [ -0.97326, 52.12241 ], [ -0.97328, 52.12241 ], [ -0.97329, 52.12241 ], [ -0.9733, 52.12241 ], [ -0.97333, 52.12241 ], [ -0.97339, 52.12244 ], [ -0.97345, 52.12248 ], [ -0.97354, 52.12251 ], [ -0.97362, 52.12254 ], [ -0.97376, 52.1227 ], [ -0.97391, 52.12288 ], [ -0.974, 52.12293 ], [ -0.97437, 52.12313 ], [ -0.97544, 52.12372 ], [ -0.97581, 52.12393 ], [ -0.97624, 52.12417 ], [ -0.9764, 52.12426 ], [ -0.97689, 52.12453 ], [ -0.977, 52.12459 ], [ -0.97711, 52.12465 ], [ -0.97724, 52.12472 ], [ -0.97731, 52.12477 ], [ -0.97745, 52.12485 ], [ -0.97787, 52.1251 ], [ -0.97815, 52.12524 ], [ -0.97871, 52.12556 ], [ -0.98034, 52.12649 ], [ -0.98054, 52.1266 ], [ -0.98089, 52.1268 ], [ -0.98118, 52.12696 ], [ -0.98169, 52.12723 ], [ -0.982, 52.1274 ], [ -0.98245, 52.12765 ], [ -0.98252, 52.12769 ], [ -0.98301, 52.12799 ], [ -0.98348, 52.12829 ], [ -0.98415, 52.12872 ], [ -0.98438, 52.12886 ], [ -0.98441, 52.12888 ], [ -0.98462, 52.12902 ], [ -0.985, 52.12925 ], [ -0.98563, 52.12965 ], [ -0.98573, 52.12971 ], [ -0.9859, 52.12982 ], [ -0.98609, 52.12994 ], [ -0.98641, 52.13013 ], [ -0.98653, 52.1302 ], [ -0.98686, 52.13036 ], [ -0.98701, 52.13047 ], [ -0.98704, 52.13049 ], [ -0.98712, 52.13055 ], [ -0.98716, 52.13059 ], [ -0.9873, 52.13071 ], [ -0.98766, 52.13107 ], [ -0.98776, 52.13117 ], [ -0.98778, 52.13119 ], [ -0.98797, 52.13134 ], [ -0.98816, 52.13151 ], [ -0.98833, 52.13169 ], [ -0.98852, 52.1319 ], [ -0.98879, 52.13216 ], [ -0.98912, 52.13243 ], [ -0.98933, 52.1326 ], [ -0.98984, 52.13302 ], [ -0.98995, 52.13311 ], [ -0.99021, 52.1333 ], [ -0.99068, 52.13357 ], [ -0.9909, 52.13374 ], [ -0.99108, 52.13394 ], [ -0.99119, 52.13406 ], [ -0.99139, 52.1343 ], [ -0.99155, 52.13447 ], [ -0.99166, 52.13457 ], [ -0.99174, 52.13463 ], [ -0.99204, 52.13487 ], [ -0.99226, 52.13506 ], [ -0.9924, 52.13518 ], [ -0.99266, 52.13541 ], [ -0.99301, 52.13571 ], [ -0.99313, 52.13581 ], [ -0.99347, 52.13609 ], [ -0.99392, 52.13644 ], [ -0.99434, 52.1368 ], [ -0.99436, 52.13682 ], [ -0.9947, 52.13716 ], [ -0.99486, 52.13733 ], [ -0.99505, 52.13752 ], [ -0.99518, 52.13769 ], [ -0.99542, 52.13796 ], [ -0.99559, 52.13816 ], [ -0.99562, 52.13819 ], [ -0.99588, 52.13853 ], [ -0.99599, 52.13868 ], [ -0.99612, 52.13885 ], [ -0.99617, 52.13892 ], [ -0.99636, 52.13921 ], [ -0.99636, 52.13928 ], [ -0.99638, 52.13944 ], [ -0.9964, 52.13954 ], [ -0.99636, 52.13959 ], [ -0.99634, 52.13964 ], [ -0.99633, 52.13967 ], [ -0.99633, 52.1397 ], [ -0.99633, 52.13973 ], [ -0.99634, 52.13976 ], [ -0.99637, 52.13982 ], [ -0.9964, 52.13986 ], [ -0.99642, 52.13989 ], [ -0.99646, 52.13991 ], [ -0.99649, 52.13993 ], [ -0.99655, 52.13996 ], [ -0.99664, 52.13998 ], [ -0.99668, 52.13999 ], [ -0.99671, 52.13999 ], [ -0.99673, 52.13999 ], [ -0.99676, 52.13999 ], [ -0.9968, 52.13999 ], [ -0.99684, 52.13999 ], [ -0.99696, 52.14007 ], [ -0.99701, 52.14011 ], [ -0.99705, 52.14016 ], [ -0.99709, 52.14021 ], [ -0.99717, 52.14027 ], [ -0.99726, 52.14039 ], [ -0.99755, 52.14083 ], [ -0.9978, 52.14124 ], [ -0.99792, 52.14144 ], [ -0.99797, 52.14151 ], [ -0.99808, 52.14172 ], [ -0.99832, 52.14212 ], [ -0.99838, 52.14221 ], [ -0.99855, 52.1425 ], [ -0.9987, 52.14276 ], [ -0.99872, 52.14279 ], [ -0.99885, 52.14302 ], [ -0.99892, 52.14313 ], [ -0.99923, 52.14364 ], [ -0.99933, 52.14381 ], [ -0.99959, 52.14424 ], [ -0.99977, 52.14446 ], [ -0.9998, 52.14451 ], [ -0.99991, 52.14464 ], [ -1.00036, 52.14516 ], [ -1.0004, 52.1452 ], [ -1.00086, 52.14571 ], [ -1.00096, 52.14583 ], [ -1.00115, 52.14607 ], [ -1.00118, 52.14611 ], [ -1.0013, 52.14628 ], [ -1.0014, 52.14642 ], [ -1.0016, 52.14672 ], [ -1.00174, 52.14696 ], [ -1.00187, 52.14721 ], [ -1.00203, 52.14747 ], [ -1.00213, 52.14762 ], [ -1.00229, 52.14785 ], [ -1.00276, 52.14853 ], [ -1.00282, 52.14862 ], [ -1.00293, 52.14876 ], [ -1.00313, 52.14903 ], [ -1.00325, 52.14921 ], [ -1.0037, 52.14984 ], [ -1.00375, 52.14992 ], [ -1.00384, 52.15005 ], [ -1.00414, 52.15048 ], [ -1.00417, 52.15052 ], [ -1.00426, 52.15065 ], [ -1.00478, 52.15134 ], [ -1.00487, 52.15146 ], [ -1.005, 52.15163 ], [ -1.00512, 52.15179 ], [ -1.00524, 52.15195 ], [ -1.00536, 52.15212 ], [ -1.00586, 52.15277 ], [ -1.00598, 52.15293 ], [ -1.00605, 52.15303 ], [ -1.0064, 52.15348 ], [ -1.00684, 52.15407 ], [ -1.0077, 52.15522 ], [ -1.00789, 52.15546 ], [ -1.00812, 52.15582 ], [ -1.00818, 52.15592 ], [ -1.00833, 52.15613 ], [ -1.00857, 52.15648 ], [ -1.00882, 52.15686 ], [ -1.00897, 52.15707 ], [ -1.00915, 52.15731 ], [ -1.00928, 52.15747 ], [ -1.00966, 52.15796 ], [ -1.00976, 52.15808 ], [ -1.01007, 52.1585 ], [ -1.01015, 52.15861 ], [ -1.01027, 52.15877 ], [ -1.01099, 52.15976 ], [ -1.01111, 52.15992 ], [ -1.0112, 52.16006 ], [ -1.01134, 52.16025 ], [ -1.01146, 52.16042 ], [ -1.01182, 52.16091 ], [ -1.0123, 52.16157 ], [ -1.01282, 52.16229 ], [ -1.01306, 52.16261 ], [ -1.01318, 52.16277 ], [ -1.0133, 52.16294 ], [ -1.01342, 52.1631 ], [ -1.01367, 52.16343 ], [ -1.01379, 52.16359 ], [ -1.01403, 52.16392 ], [ -1.0144, 52.16441 ], [ -1.01452, 52.16457 ], [ -1.01499, 52.1652 ], [ -1.01501, 52.16523 ], [ -1.016, 52.16659 ], [ -1.0162, 52.16687 ], [ -1.01674, 52.16761 ], [ -1.01696, 52.16792 ], [ -1.01707, 52.16808 ], [ -1.01719, 52.16825 ], [ -1.01731, 52.16841 ], [ -1.01746, 52.16863 ], [ -1.01754, 52.16874 ], [ -1.01766, 52.16891 ], [ -1.01858, 52.17022 ], [ -1.01859, 52.17023 ], [ -1.01882, 52.17056 ], [ -1.01894, 52.17072 ], [ -1.01905, 52.17089 ], [ -1.01975, 52.17188 ], [ -1.01986, 52.17205 ], [ -1.01998, 52.17221 ], [ -1.02103, 52.1737 ], [ -1.02161, 52.17452 ], [ -1.02167, 52.17461 ], [ -1.02172, 52.17469 ], [ -1.02188, 52.1749 ], [ -1.0221, 52.17521 ], [ -1.02219, 52.17535 ], [ -1.02249, 52.17575 ], [ -1.02261, 52.1759 ], [ -1.02301, 52.17639 ], [ -1.02312, 52.17653 ], [ -1.02356, 52.17702 ], [ -1.02369, 52.17719 ], [ -1.02383, 52.17735 ], [ -1.02395, 52.17751 ], [ -1.02408, 52.17767 ], [ -1.02413, 52.17773 ], [ -1.02445, 52.17816 ], [ -1.02471, 52.17847 ], [ -1.02473, 52.17849 ], [ -1.02504, 52.17882 ], [ -1.02529, 52.1791 ], [ -1.02543, 52.17924 ], [ -1.02558, 52.17941 ], [ -1.02566, 52.17949 ], [ -1.02579, 52.17963 ], [ -1.0258, 52.17965 ], [ -1.02595, 52.17981 ], [ -1.02603, 52.17989 ], [ -1.02626, 52.18016 ], [ -1.02636, 52.18028 ], [ -1.02674, 52.18074 ], [ -1.02727, 52.18138 ], [ -1.02738, 52.18152 ], [ -1.02784, 52.18216 ], [ -1.02819, 52.18265 ], [ -1.02837, 52.1829 ], [ -1.02867, 52.18332 ], [ -1.02874, 52.18341 ], [ -1.02908, 52.18396 ], [ -1.0292, 52.18416 ], [ -1.0294, 52.1845 ], [ -1.0294, 52.18451 ], [ -1.02966, 52.18494 ], [ -1.0299, 52.18534 ], [ -1.03001, 52.18551 ], [ -1.03013, 52.18567 ], [ -1.03026, 52.18586 ], [ -1.03058, 52.18624 ], [ -1.03073, 52.18642 ], [ -1.03113, 52.18688 ], [ -1.03116, 52.18692 ], [ -1.03144, 52.18728 ], [ -1.0315, 52.18737 ], [ -1.03165, 52.18762 ], [ -1.03182, 52.18794 ], [ -1.03189, 52.18807 ], [ -1.032, 52.18828 ], [ -1.032, 52.18831 ], [ -1.03207, 52.18844 ], [ -1.03221, 52.18864 ], [ -1.03239, 52.18887 ], [ -1.03253, 52.18902 ], [ -1.03294, 52.18945 ], [ -1.03329, 52.18981 ], [ -1.03355, 52.19006 ], [ -1.03365, 52.19017 ], [ -1.03406, 52.19051 ], [ -1.03417, 52.1906 ], [ -1.03448, 52.19085 ], [ -1.03465, 52.19103 ], [ -1.03482, 52.1912 ], [ -1.03507, 52.19151 ], [ -1.03508, 52.19152 ], [ -1.0353, 52.19184 ], [ -1.03548, 52.19212 ], [ -1.0357, 52.19244 ], [ -1.03583, 52.19262 ], [ -1.0359, 52.19272 ], [ -1.0361, 52.193 ], [ -1.03614, 52.19306 ], [ -1.03639, 52.19336 ], [ -1.03679, 52.19383 ], [ -1.03708, 52.19417 ], [ -1.03758, 52.19473 ], [ -1.03763, 52.19479 ], [ -1.03806, 52.19525 ], [ -1.03836, 52.19557 ], [ -1.0386, 52.19583 ], [ -1.03902, 52.19629 ], [ -1.03923, 52.19652 ], [ -1.03929, 52.19659 ], [ -1.03964, 52.19697 ], [ -1.03966, 52.19699 ], [ -1.03985, 52.1972 ], [ -1.04001, 52.19745 ], [ -1.04003, 52.19748 ], [ -1.04016, 52.19768 ], [ -1.04027, 52.19792 ], [ -1.04038, 52.19817 ], [ -1.04041, 52.19832 ], [ -1.04045, 52.19851 ], [ -1.04047, 52.19868 ], [ -1.04049, 52.19886 ], [ -1.04053, 52.19922 ], [ -1.04056, 52.19953 ], [ -1.04062, 52.19995 ], [ -1.0407, 52.20021 ], [ -1.04081, 52.20046 ], [ -1.04082, 52.20049 ], [ -1.0409, 52.20064 ], [ -1.04094, 52.20072 ], [ -1.04107, 52.20093 ], [ -1.04121, 52.20112 ], [ -1.04136, 52.20131 ], [ -1.04163, 52.20157 ], [ -1.04167, 52.20161 ], [ -1.04184, 52.20175 ], [ -1.04188, 52.20179 ], [ -1.0421, 52.20195 ], [ -1.04236, 52.20213 ], [ -1.0427, 52.20234 ], [ -1.04296, 52.20249 ], [ -1.04304, 52.20254 ], [ -1.04318, 52.20263 ], [ -1.04334, 52.20273 ], [ -1.04357, 52.2029 ], [ -1.04364, 52.20296 ], [ -1.04388, 52.20315 ], [ -1.04398, 52.20325 ], [ -1.04414, 52.2034 ], [ -1.04417, 52.20343 ], [ -1.04439, 52.20366 ], [ -1.04473, 52.20402 ], [ -1.04487, 52.20418 ], [ -1.04541, 52.20477 ], [ -1.04555, 52.20492 ], [ -1.04613, 52.20555 ], [ -1.04637, 52.20581 ], [ -1.0466, 52.20602 ], [ -1.04665, 52.20607 ], [ -1.04725, 52.20663 ], [ -1.04761, 52.20698 ], [ -1.04762, 52.20698 ], [ -1.04774, 52.20714 ], [ -1.04787, 52.20728 ], [ -1.04814, 52.20762 ], [ -1.04843, 52.20797 ], [ -1.04847, 52.20803 ], [ -1.04893, 52.20858 ], [ -1.049, 52.20867 ], [ -1.04907, 52.20875 ], [ -1.04926, 52.20895 ], [ -1.04946, 52.20913 ], [ -1.04959, 52.20924 ], [ -1.0497, 52.20933 ], [ -1.05008, 52.20959 ], [ -1.05043, 52.20983 ], [ -1.05103, 52.21022 ], [ -1.05106, 52.21024 ], [ -1.05123, 52.21035 ], [ -1.05163, 52.21062 ], [ -1.05166, 52.21064 ], [ -1.05207, 52.21094 ], [ -1.05249, 52.21127 ], [ -1.05255, 52.21132 ], [ -1.05272, 52.21147 ], [ -1.0529, 52.21163 ], [ -1.05305, 52.21176 ], [ -1.05322, 52.21191 ], [ -1.05338, 52.21206 ], [ -1.05346, 52.21213 ], [ -1.05369, 52.21236 ], [ -1.05384, 52.21252 ], [ -1.05385, 52.21253 ], [ -1.05418, 52.2129 ], [ -1.05449, 52.21329 ], [ -1.05471, 52.21358 ], [ -1.05476, 52.21365 ], [ -1.05483, 52.21375 ], [ -1.05508, 52.21415 ], [ -1.05516, 52.21428 ], [ -1.05518, 52.21432 ], [ -1.05547, 52.21483 ], [ -1.05555, 52.215 ], [ -1.05564, 52.21522 ], [ -1.05582, 52.21568 ], [ -1.05586, 52.21578 ], [ -1.05597, 52.21609 ], [ -1.05609, 52.21645 ], [ -1.0562, 52.21673 ], [ -1.05624, 52.21685 ], [ -1.05642, 52.21721 ], [ -1.05655, 52.21742 ], [ -1.05659, 52.21748 ], [ -1.05666, 52.21758 ], [ -1.05674, 52.21769 ], [ -1.05692, 52.21791 ], [ -1.05711, 52.21812 ], [ -1.05721, 52.21822 ], [ -1.05761, 52.2186 ], [ -1.05771, 52.21869 ], [ -1.05801, 52.21897 ], [ -1.05836, 52.21929 ], [ -1.05882, 52.21971 ], [ -1.05927, 52.22012 ], [ -1.05931, 52.22015 ], [ -1.0598, 52.2206 ], [ -1.06001, 52.22079 ], [ -1.06028, 52.22105 ], [ -1.06053, 52.2213 ], [ -1.06074, 52.22151 ], [ -1.06089, 52.22167 ], [ -1.06111, 52.22189 ], [ -1.06134, 52.22213 ], [ -1.06166, 52.22247 ], [ -1.06221, 52.22308 ], [ -1.06276, 52.2237 ], [ -1.06282, 52.22377 ], [ -1.06319, 52.22419 ], [ -1.0637, 52.22473 ], [ -1.06381, 52.22484 ], [ -1.06392, 52.22495 ], [ -1.06417, 52.22523 ], [ -1.06454, 52.22561 ], [ -1.06518, 52.22628 ], [ -1.06541, 52.2265 ], [ -1.06573, 52.22683 ], [ -1.06615, 52.22722 ], [ -1.06631, 52.22734 ], [ -1.06662, 52.22757 ], [ -1.06692, 52.22777 ], [ -1.06693, 52.22777 ], [ -1.06711, 52.22789 ], [ -1.06712, 52.2279 ], [ -1.06733, 52.22802 ], [ -1.06744, 52.22809 ], [ -1.06904, 52.22903 ], [ -1.06966, 52.22939 ], [ -1.07017, 52.2297 ], [ -1.0703, 52.22977 ], [ -1.07114, 52.23026 ], [ -1.07136, 52.23039 ], [ -1.07183, 52.23067 ], [ -1.07284, 52.23121 ], [ -1.07288, 52.23123 ], [ -1.07304, 52.23132 ], [ -1.07335, 52.2315 ], [ -1.07368, 52.23169 ], [ -1.07393, 52.23184 ], [ -1.07398, 52.23187 ], [ -1.07418, 52.232 ], [ -1.07444, 52.23217 ], [ -1.07467, 52.23234 ], [ -1.07486, 52.23247 ], [ -1.07524, 52.23275 ], [ -1.07542, 52.23291 ], [ -1.0757, 52.23315 ], [ -1.07582, 52.23326 ], [ -1.07601, 52.23346 ], [ -1.0763, 52.23375 ], [ -1.07655, 52.23401 ], [ -1.07676, 52.23423 ], [ -1.07723, 52.23468 ], [ -1.07766, 52.23513 ], [ -1.07794, 52.23537 ], [ -1.07815, 52.23558 ], [ -1.07883, 52.23625 ], [ -1.07898, 52.2364 ], [ -1.07913, 52.23655 ], [ -1.07922, 52.23664 ], [ -1.07955, 52.23695 ], [ -1.0797, 52.23709 ], [ -1.08029, 52.23764 ], [ -1.08073, 52.23785 ], [ -1.08076, 52.23785 ], [ -1.08079, 52.23785 ], [ -1.08082, 52.23785 ], [ -1.08084, 52.23786 ], [ -1.08087, 52.23786 ], [ -1.08091, 52.23787 ], [ -1.08094, 52.23788 ], [ -1.08098, 52.2379 ], [ -1.08102, 52.23793 ], [ -1.08105, 52.23795 ], [ -1.08107, 52.23796 ], [ -1.08108, 52.23799 ], [ -1.0811, 52.23801 ], [ -1.08111, 52.23804 ], [ -1.08111, 52.23808 ], [ -1.08111, 52.23811 ], [ -1.08111, 52.23812 ], [ -1.0811, 52.23813 ], [ -1.08109, 52.23815 ], [ -1.08108, 52.23816 ], [ -1.08115, 52.23834 ], [ -1.08122, 52.2385 ], [ -1.08163, 52.23887 ], [ -1.08196, 52.23916 ], [ -1.08218, 52.2394 ], [ -1.0823, 52.23953 ], [ -1.08234, 52.23957 ], [ -1.08267, 52.23994 ], [ -1.08288, 52.24031 ], [ -1.08296, 52.24049 ], [ -1.08303, 52.24065 ], [ -1.0831, 52.24086 ], [ -1.08315, 52.24104 ], [ -1.08317, 52.24127 ], [ -1.08316, 52.24147 ], [ -1.08312, 52.24177 ], [ -1.08304, 52.24213 ], [ -1.08303, 52.24218 ], [ -1.08299, 52.2423 ], [ -1.08288, 52.24273 ], [ -1.08276, 52.2432 ], [ -1.08261, 52.24376 ], [ -1.08258, 52.2439 ], [ -1.08257, 52.24396 ], [ -1.08254, 52.24412 ], [ -1.08252, 52.24429 ], [ -1.0825, 52.24444 ], [ -1.08251, 52.2446 ], [ -1.08252, 52.24473 ], [ -1.08254, 52.24487 ], [ -1.08257, 52.24501 ], [ -1.0826, 52.24513 ], [ -1.08264, 52.24525 ], [ -1.08268, 52.24537 ], [ -1.08276, 52.24551 ], [ -1.08283, 52.24565 ], [ -1.0829, 52.24577 ], [ -1.08298, 52.24588 ], [ -1.08308, 52.24603 ], [ -1.08321, 52.24621 ], [ -1.08322, 52.24622 ], [ -1.08339, 52.24643 ], [ -1.08347, 52.24653 ], [ -1.08358, 52.24667 ], [ -1.08381, 52.24696 ], [ -1.08401, 52.2472 ], [ -1.08411, 52.24731 ], [ -1.08422, 52.24742 ], [ -1.08478, 52.24806 ], [ -1.08517, 52.24849 ], [ -1.08558, 52.24895 ], [ -1.08576, 52.24915 ], [ -1.08599, 52.24942 ], [ -1.08612, 52.24958 ], [ -1.08624, 52.24973 ], [ -1.08637, 52.2499 ], [ -1.08645, 52.25 ], [ -1.0866, 52.25019 ], [ -1.08674, 52.25038 ], [ -1.08689, 52.2506 ], [ -1.08719, 52.25104 ], [ -1.0875, 52.25152 ], [ -1.08751, 52.25155 ], [ -1.08769, 52.25181 ], [ -1.08784, 52.25205 ], [ -1.0879, 52.25214 ], [ -1.08806, 52.25238 ], [ -1.08811, 52.25246 ], [ -1.08829, 52.25271 ], [ -1.0885, 52.25297 ], [ -1.08855, 52.25304 ], [ -1.08864, 52.25314 ], [ -1.08876, 52.25328 ], [ -1.08888, 52.25341 ], [ -1.08899, 52.25352 ], [ -1.08927, 52.2538 ], [ -1.08938, 52.25391 ], [ -1.08954, 52.25407 ], [ -1.08956, 52.25409 ], [ -1.08997, 52.2545 ], [ -1.09014, 52.25468 ], [ -1.09025, 52.2548 ], [ -1.09028, 52.25484 ], [ -1.09042, 52.255 ], [ -1.09044, 52.25502 ], [ -1.09055, 52.25516 ], [ -1.09061, 52.25522 ], [ -1.09078, 52.25545 ], [ -1.09092, 52.25565 ], [ -1.09116, 52.25597 ], [ -1.09152, 52.25647 ], [ -1.09154, 52.2565 ], [ -1.09177, 52.2568 ], [ -1.09201, 52.25712 ], [ -1.09231, 52.2575 ], [ -1.09269, 52.258 ], [ -1.09321, 52.25869 ], [ -1.0933, 52.25881 ], [ -1.09342, 52.25897 ], [ -1.09354, 52.25913 ], [ -1.0939, 52.2596 ], [ -1.09392, 52.25962 ], [ -1.09404, 52.25979 ], [ -1.09416, 52.25995 ], [ -1.09428, 52.26011 ], [ -1.09429, 52.26013 ], [ -1.09451, 52.26044 ], [ -1.09463, 52.26061 ], [ -1.09469, 52.2607 ], [ -1.09474, 52.26078 ], [ -1.09499, 52.26118 ], [ -1.09506, 52.26128 ], [ -1.09515, 52.26143 ], [ -1.09531, 52.26165 ], [ -1.09548, 52.26188 ], [ -1.09557, 52.262 ], [ -1.09569, 52.26216 ], [ -1.0961, 52.2627 ], [ -1.09619, 52.26281 ], [ -1.09644, 52.26314 ], [ -1.09648, 52.26319 ], [ -1.09669, 52.26347 ], [ -1.09681, 52.26363 ], [ -1.09685, 52.26367 ], [ -1.09761, 52.26466 ], [ -1.09781, 52.26493 ], [ -1.09784, 52.26498 ], [ -1.09793, 52.2651 ], [ -1.09809, 52.26531 ], [ -1.09821, 52.26547 ], [ -1.09829, 52.26559 ], [ -1.09843, 52.26577 ], [ -1.09877, 52.26624 ], [ -1.09877, 52.26625 ], [ -1.09881, 52.26629 ], [ -1.09889, 52.26641 ], [ -1.09921, 52.26686 ], [ -1.09953, 52.2673 ], [ -1.09973, 52.2676 ], [ -1.09986, 52.2678 ], [ -1.09994, 52.26795 ], [ -1.10001, 52.26809 ], [ -1.10008, 52.26825 ], [ -1.10015, 52.26844 ], [ -1.1002, 52.2686 ], [ -1.10024, 52.26878 ], [ -1.10027, 52.26897 ], [ -1.10029, 52.26913 ], [ -1.1003, 52.26937 ], [ -1.10031, 52.26965 ], [ -1.1003, 52.26983 ], [ -1.1003, 52.26989 ], [ -1.10029, 52.27006 ], [ -1.10026, 52.27043 ], [ -1.10024, 52.27079 ], [ -1.10024, 52.27102 ], [ -1.10025, 52.27124 ], [ -1.10025, 52.2713 ], [ -1.10026, 52.2714 ], [ -1.10031, 52.27173 ], [ -1.10033, 52.27178 ], [ -1.10036, 52.27192 ], [ -1.10042, 52.27208 ], [ -1.10044, 52.27213 ], [ -1.10051, 52.27231 ], [ -1.10052, 52.27233 ], [ -1.10059, 52.27247 ], [ -1.1006, 52.27248 ], [ -1.10068, 52.27264 ], [ -1.10076, 52.27276 ], [ -1.10092, 52.27298 ], [ -1.10094, 52.27301 ], [ -1.1011, 52.27321 ], [ -1.10118, 52.2733 ], [ -1.10128, 52.27341 ], [ -1.10133, 52.27346 ], [ -1.10147, 52.27359 ], [ -1.10149, 52.27361 ], [ -1.10181, 52.27388 ], [ -1.10183, 52.2739 ], [ -1.10202, 52.27404 ], [ -1.10215, 52.27414 ], [ -1.1024, 52.27431 ], [ -1.10258, 52.27442 ], [ -1.1028, 52.27455 ], [ -1.10352, 52.27499 ], [ -1.10373, 52.27512 ], [ -1.10379, 52.27516 ], [ -1.10446, 52.27558 ], [ -1.10492, 52.27589 ], [ -1.10514, 52.27603 ], [ -1.10521, 52.27609 ], [ -1.10557, 52.27633 ], [ -1.10594, 52.2766 ], [ -1.10629, 52.27685 ], [ -1.10662, 52.2771 ], [ -1.10719, 52.27756 ], [ -1.10734, 52.27769 ], [ -1.10744, 52.27778 ], [ -1.10763, 52.27797 ], [ -1.1078, 52.27817 ], [ -1.10787, 52.27827 ], [ -1.1079, 52.2783 ], [ -1.10848, 52.27909 ], [ -1.1087, 52.27942 ], [ -1.10898, 52.27979 ], [ -1.10918, 52.28005 ], [ -1.10933, 52.28025 ], [ -1.10945, 52.2804 ], [ -1.10949, 52.28044 ], [ -1.10975, 52.28078 ], [ -1.10983, 52.28087 ], [ -1.11047, 52.28166 ], [ -1.11055, 52.28177 ], [ -1.11058, 52.28181 ], [ -1.11098, 52.28229 ], [ -1.11113, 52.28248 ], [ -1.11153, 52.28293 ], [ -1.11162, 52.28304 ], [ -1.11201, 52.28354 ], [ -1.11203, 52.28356 ], [ -1.11219, 52.28378 ], [ -1.11224, 52.28385 ], [ -1.11239, 52.28406 ], [ -1.11251, 52.28424 ], [ -1.11254, 52.28428 ], [ -1.11261, 52.28439 ], [ -1.11264, 52.28444 ], [ -1.11304, 52.28506 ], [ -1.11332, 52.28551 ], [ -1.11338, 52.28561 ], [ -1.11339, 52.28563 ], [ -1.11347, 52.28575 ], [ -1.11348, 52.28577 ], [ -1.11366, 52.28604 ], [ -1.11408, 52.28669 ], [ -1.11478, 52.2877 ], [ -1.11511, 52.28818 ], [ -1.11525, 52.28839 ], [ -1.11545, 52.2887 ], [ -1.11554, 52.28885 ], [ -1.11565, 52.28903 ], [ -1.11595, 52.28953 ], [ -1.11605, 52.28969 ], [ -1.11618, 52.2899 ], [ -1.11634, 52.29016 ], [ -1.11665, 52.29062 ], [ -1.11684, 52.29089 ], [ -1.11738, 52.2916 ], [ -1.11798, 52.29237 ], [ -1.11822, 52.29269 ], [ -1.11896, 52.2937 ], [ -1.11903, 52.29379 ], [ -1.1197, 52.29473 ], [ -1.12022, 52.29545 ], [ -1.12034, 52.29562 ], [ -1.12046, 52.29578 ], [ -1.12084, 52.2963 ], [ -1.12106, 52.2966 ], [ -1.1213, 52.29693 ], [ -1.12169, 52.29746 ], [ -1.12191, 52.29775 ], [ -1.1225, 52.29856 ], [ -1.12269, 52.29882 ], [ -1.12281, 52.29899 ], [ -1.12293, 52.29915 ], [ -1.12329, 52.29964 ], [ -1.12332, 52.29968 ], [ -1.12341, 52.29981 ], [ -1.12377, 52.3003 ], [ -1.12404, 52.30067 ], [ -1.12413, 52.30079 ], [ -1.12473, 52.30162 ], [ -1.12486, 52.30178 ], [ -1.12498, 52.30194 ], [ -1.1253, 52.30237 ], [ -1.12588, 52.3032 ], [ -1.12589, 52.30322 ], [ -1.12613, 52.30353 ], [ -1.12662, 52.30418 ], [ -1.12684, 52.30447 ], [ -1.12742, 52.30524 ], [ -1.12795, 52.30595 ], [ -1.12825, 52.30636 ], [ -1.12841, 52.30659 ], [ -1.12864, 52.30691 ], [ -1.12914, 52.30758 ], [ -1.12938, 52.3079 ], [ -1.1295, 52.30806 ], [ -1.1295, 52.30807 ], [ -1.12973, 52.30837 ], [ -1.12975, 52.3084 ], [ -1.12988, 52.30857 ], [ -1.13005, 52.3088 ], [ -1.13028, 52.30911 ], [ -1.13051, 52.30944 ], [ -1.13087, 52.30993 ], [ -1.13094, 52.31002 ], [ -1.13097, 52.31007 ], [ -1.13101, 52.31013 ], [ -1.13108, 52.31022 ], [ -1.13129, 52.31053 ], [ -1.13167, 52.31105 ], [ -1.13209, 52.31164 ], [ -1.13231, 52.31195 ], [ -1.13245, 52.31214 ], [ -1.13256, 52.3123 ], [ -1.1328, 52.31263 ], [ -1.13289, 52.31275 ], [ -1.13311, 52.31306 ], [ -1.13322, 52.31323 ], [ -1.13334, 52.31339 ], [ -1.13345, 52.31356 ], [ -1.13346, 52.31357 ], [ -1.13357, 52.31372 ], [ -1.13376, 52.314 ], [ -1.13384, 52.31412 ], [ -1.13395, 52.31426 ], [ -1.13405, 52.31438 ], [ -1.13423, 52.31459 ], [ -1.13447, 52.31485 ], [ -1.13468, 52.31509 ], [ -1.13481, 52.31526 ], [ -1.13487, 52.31534 ], [ -1.1354, 52.31608 ], [ -1.13551, 52.31624 ], [ -1.13554, 52.31628 ], [ -1.13575, 52.31657 ], [ -1.13586, 52.31674 ], [ -1.1361, 52.31707 ], [ -1.13633, 52.3174 ], [ -1.13657, 52.31773 ], [ -1.13681, 52.31806 ], [ -1.13716, 52.31855 ], [ -1.13729, 52.31871 ], [ -1.13741, 52.31888 ], [ -1.13774, 52.31932 ], [ -1.13778, 52.31937 ], [ -1.1379, 52.31953 ], [ -1.13812, 52.31984 ], [ -1.13834, 52.32012 ], [ -1.13839, 52.32018 ], [ -1.13865, 52.3205 ], [ -1.13895, 52.32086 ], [ -1.13947, 52.32147 ], [ -1.13961, 52.32163 ], [ -1.13987, 52.32195 ], [ -1.14, 52.32211 ], [ -1.14029, 52.32243 ], [ -1.14054, 52.32273 ], [ -1.14068, 52.32293 ], [ -1.14077, 52.32308 ], [ -1.14087, 52.32325 ], [ -1.14098, 52.32343 ], [ -1.14106, 52.32359 ], [ -1.14117, 52.32377 ], [ -1.14125, 52.32392 ], [ -1.14126, 52.32393 ], [ -1.14138, 52.32412 ], [ -1.14155, 52.32433 ], [ -1.14164, 52.32441 ], [ -1.14172, 52.3245 ], [ -1.1418, 52.32456 ], [ -1.14197, 52.32471 ], [ -1.14198, 52.32471 ], [ -1.14217, 52.32484 ], [ -1.1422, 52.32486 ], [ -1.14245, 52.32502 ], [ -1.14259, 52.32508 ], [ -1.14273, 52.32515 ], [ -1.14299, 52.32526 ], [ -1.14308, 52.32529 ], [ -1.14322, 52.32534 ], [ -1.14334, 52.32538 ], [ -1.14344, 52.32541 ], [ -1.14369, 52.32549 ], [ -1.14399, 52.32557 ], [ -1.14425, 52.32564 ], [ -1.14441, 52.32568 ], [ -1.14448, 52.3257 ], [ -1.14468, 52.32575 ], [ -1.1449, 52.3258 ], [ -1.14513, 52.32588 ], [ -1.14521, 52.3259 ], [ -1.14547, 52.32599 ], [ -1.14556, 52.32602 ], [ -1.1458, 52.32612 ], [ -1.14596, 52.32618 ], [ -1.14621, 52.32628 ], [ -1.14622, 52.32628 ], [ -1.1467, 52.32648 ], [ -1.14719, 52.32668 ], [ -1.14729, 52.32671 ], [ -1.14801, 52.32701 ], [ -1.14823, 52.32711 ], [ -1.14837, 52.32717 ], [ -1.14855, 52.32726 ], [ -1.14873, 52.32734 ], [ -1.14896, 52.32744 ], [ -1.14926, 52.32757 ], [ -1.14926, 52.3275714 ], [ -1.14919, 52.32766 ], [ -1.1488, 52.32821 ], [ -1.14866, 52.32838 ], [ -1.14836, 52.32861 ], [ -1.14819, 52.32874 ], [ -1.14818, 52.32875 ], [ -1.14713, 52.32938 ], [ -1.14703, 52.32944 ], [ -1.14693, 52.32951 ], [ -1.14674, 52.32965 ], [ -1.14668, 52.3297 ], [ -1.14656, 52.32979 ], [ -1.146, 52.33021 ], [ -1.1459984, 52.3302091 ], [ -1.14611, 52.33038 ], [ -1.14622, 52.33054 ], [ -1.14633, 52.33071 ], [ -1.14644, 52.33088 ], [ -1.14655, 52.33104 ], [ -1.14677, 52.33138 ], [ -1.14689, 52.33154 ], [ -1.14726, 52.33204 ], [ -1.14785, 52.33285 ], [ -1.1479, 52.33292 ], [ -1.14796, 52.33302 ], [ -1.14807, 52.33319 ], [ -1.14827, 52.33353 ], [ -1.14848, 52.33386 ], [ -1.14851, 52.33391 ], [ -1.14859, 52.33417 ], [ -1.14861, 52.33421 ], [ -1.14889, 52.33472 ], [ -1.14889, 52.33473 ], [ -1.14904, 52.33507 ], [ -1.14908, 52.33525 ], [ -1.14911, 52.33538 ], [ -1.14931, 52.33557 ], [ -1.14939, 52.33565 ], [ -1.14971, 52.33584 ], [ -1.14973, 52.33585 ], [ -1.15016, 52.33607 ], [ -1.15032, 52.33616 ], [ -1.15038, 52.33619 ], [ -1.15071, 52.33637 ], [ -1.15079, 52.33644 ], [ -1.15091, 52.33654 ], [ -1.15094, 52.3366 ], [ -1.15099, 52.33671 ], [ -1.15104, 52.33676 ], [ -1.15118, 52.33692 ], [ -1.15146, 52.33724 ], [ -1.15159, 52.3374 ], [ -1.15208, 52.33795 ], [ -1.15287, 52.3389 ], [ -1.15315, 52.33918 ], [ -1.15338, 52.33947 ], [ -1.15362, 52.33977 ], [ -1.15393, 52.3401 ], [ -1.15418, 52.34037 ], [ -1.15445, 52.34074 ], [ -1.15471, 52.3411 ], [ -1.15487, 52.34132 ], [ -1.15489, 52.34135 ], [ -1.1549, 52.34137 ], [ -1.1549, 52.3414 ], [ -1.1549, 52.34142 ], [ -1.15487, 52.34145 ], [ -1.15512, 52.34173 ], [ -1.15518, 52.3418 ], [ -1.15571, 52.34242 ], [ -1.15581, 52.34252 ], [ -1.1561, 52.34284 ], [ -1.15632, 52.34307 ], [ -1.15689, 52.34376 ], [ -1.15731, 52.34428 ], [ -1.15733, 52.34431 ], [ -1.15776, 52.34485 ], [ -1.15823, 52.34539 ], [ -1.15824, 52.3454 ], [ -1.15837, 52.34556 ], [ -1.15862, 52.34589 ], [ -1.1587, 52.34599 ], [ -1.1589, 52.34621 ], [ -1.15915, 52.34649 ], [ -1.15956, 52.34701 ], [ -1.15969, 52.34717 ], [ -1.15983, 52.34733 ], [ -1.16013, 52.34761 ], [ -1.16024, 52.34781 ], [ -1.16046, 52.34806 ], [ -1.16076, 52.34839 ], [ -1.16095, 52.34859 ], [ -1.16102, 52.34866 ], [ -1.16126, 52.3489 ], [ -1.1613, 52.34894 ], [ -1.16142, 52.34905 ], [ -1.16159, 52.34921 ], [ -1.16185, 52.34947 ], [ -1.16188, 52.34951 ], [ -1.1621, 52.34978 ], [ -1.16214, 52.34983 ], [ -1.1623, 52.35005 ], [ -1.16242, 52.35015 ], [ -1.16262, 52.35033 ], [ -1.1629, 52.35063 ], [ -1.16299, 52.35078 ], [ -1.16308, 52.35091 ], [ -1.1634, 52.35122 ], [ -1.1637, 52.35156 ], [ -1.16372, 52.35166 ], [ -1.16378, 52.3518 ], [ -1.16392, 52.35193 ], [ -1.16407, 52.35212 ], [ -1.16432, 52.35239 ], [ -1.16449, 52.35261 ], [ -1.16465, 52.3527 ], [ -1.16476, 52.35277 ], [ -1.16486, 52.3529 ], [ -1.16498, 52.35313 ], [ -1.16512, 52.3533 ], [ -1.16521, 52.35338 ], [ -1.16584, 52.35398 ], [ -1.16585, 52.35398 ], [ -1.16602, 52.35419 ], [ -1.16624, 52.35445 ], [ -1.1664, 52.35462 ], [ -1.16644, 52.35465 ], [ -1.16662, 52.35489 ], [ -1.16699, 52.35532 ], [ -1.16708, 52.35541 ], [ -1.16734, 52.35568 ], [ -1.16765, 52.35604 ], [ -1.16776, 52.35618 ], [ -1.16822, 52.35662 ], [ -1.16825, 52.35666 ], [ -1.16854, 52.35701 ], [ -1.16857, 52.35705 ], [ -1.16857, 52.35708 ], [ -1.16856, 52.35711 ], [ -1.16851, 52.35719 ], [ -1.1685148, 52.3571915 ], [ -1.16871, 52.35734 ], [ -1.16887, 52.35746 ], [ -1.16899, 52.35755 ], [ -1.16911, 52.35763 ], [ -1.16923, 52.35771 ], [ -1.16934, 52.35778 ], [ -1.16938, 52.3578 ], [ -1.16943, 52.35783 ], [ -1.16947, 52.35785 ], [ -1.16952, 52.35786 ], [ -1.16955, 52.35788 ], [ -1.16958, 52.35788 ], [ -1.16959, 52.35789 ], [ -1.1696, 52.35789 ], [ -1.16961, 52.35789 ], [ -1.16962, 52.35789 ], [ -1.16973, 52.35788 ], [ -1.16966, 52.35791 ], [ -1.1696, 52.35794 ], [ -1.16957, 52.35797 ], [ -1.16953, 52.35799 ], [ -1.16952, 52.35801 ], [ -1.16949, 52.35804 ], [ -1.16947, 52.35809 ], [ -1.16946, 52.35811 ], [ -1.16946, 52.35813 ], [ -1.16946, 52.35815 ], [ -1.16946, 52.35816 ], [ -1.16946, 52.35819 ], [ -1.16947, 52.35823 ], [ -1.1695, 52.35826 ], [ -1.16952, 52.35829 ], [ -1.16954, 52.35831 ], [ -1.16957, 52.35833 ], [ -1.16962, 52.35836 ], [ -1.16968, 52.35839 ], [ -1.16973, 52.3584 ], [ -1.16976, 52.35841 ], [ -1.16979, 52.35841 ], [ -1.16983, 52.35842 ], [ -1.16987, 52.35842 ], [ -1.16992, 52.35842 ], [ -1.16995, 52.35849 ], [ -1.17001, 52.35858 ], [ -1.17006, 52.35864 ], [ -1.17013, 52.35869 ], [ -1.17013, 52.35877 ], [ -1.17014, 52.35885 ], [ -1.17017, 52.35895 ], [ -1.17023, 52.35907 ], [ -1.17028, 52.35915 ], [ -1.17032, 52.3592 ], [ -1.17037, 52.35926 ], [ -1.17045, 52.35935 ], [ -1.17051, 52.35941 ], [ -1.17064, 52.35955 ], [ -1.17078, 52.3597 ], [ -1.17085, 52.35978 ], [ -1.17103, 52.36001 ], [ -1.17121, 52.36025 ], [ -1.17142, 52.36054 ], [ -1.1716, 52.36076 ], [ -1.17178, 52.36097 ], [ -1.17195, 52.36117 ], [ -1.17215, 52.36139 ], [ -1.17229, 52.36156 ], [ -1.17245, 52.36173 ], [ -1.17261, 52.36192 ], [ -1.17279, 52.36211 ], [ -1.17293, 52.36228 ], [ -1.17309, 52.36246 ], [ -1.17324, 52.36264 ], [ -1.17376, 52.36324 ], [ -1.1745, 52.36409 ], [ -1.17475, 52.36439 ], [ -1.1753, 52.36498 ], [ -1.17892, 52.36916 ], [ -1.17916, 52.36944 ], [ -1.17929, 52.36958 ], [ -1.17943, 52.36974 ], [ -1.18011, 52.37052 ], [ -1.18707, 52.3786 ], [ -1.18728, 52.37887 ], [ -1.18742, 52.37903 ], [ -1.18795, 52.37967 ], [ -1.1885, 52.3803 ], [ -1.18864, 52.38047 ], [ -1.1889, 52.38078 ], [ -1.18895, 52.38084 ], [ -1.18911, 52.3811 ], [ -1.18948, 52.38154 ], [ -1.18979, 52.38188 ], [ -1.18989, 52.382 ], [ -1.19023, 52.38238 ], [ -1.19049, 52.38269 ], [ -1.19075, 52.383 ], [ -1.19102, 52.3833 ], [ -1.19116, 52.38346 ], [ -1.19123, 52.38353 ], [ -1.19148, 52.38381 ], [ -1.19163, 52.38398 ], [ -1.19165, 52.38401 ], [ -1.19193, 52.38432 ], [ -1.19194, 52.38433 ], [ -1.19211, 52.38451 ], [ -1.19242, 52.38486 ], [ -1.19245, 52.38489 ], [ -1.19256, 52.38502 ], [ -1.19268, 52.38516 ], [ -1.19288, 52.38539 ], [ -1.193, 52.38552 ], [ -1.19307, 52.38557 ], [ -1.1933, 52.38582 ], [ -1.19353, 52.38609 ], [ -1.19376, 52.38634 ], [ -1.19396, 52.38657 ], [ -1.19397, 52.38657 ], [ -1.19418, 52.38681 ], [ -1.19421, 52.38684 ], [ -1.19432, 52.38696 ], [ -1.19449, 52.38715 ], [ -1.19456, 52.38723 ], [ -1.19468, 52.38738 ], [ -1.19489, 52.38763 ], [ -1.1951, 52.38787 ], [ -1.19516, 52.38795 ], [ -1.19521, 52.38801 ], [ -1.19541, 52.38825 ], [ -1.1955, 52.38837 ], [ -1.19583, 52.38877 ], [ -1.19623, 52.38926 ], [ -1.19625, 52.38928 ], [ -1.19637, 52.38942 ], [ -1.19638, 52.38943 ], [ -1.19661, 52.38971 ], [ -1.19677, 52.38989 ], [ -1.197, 52.39016 ], [ -1.19746, 52.39068 ], [ -1.19747, 52.39069 ], [ -1.19761, 52.39085 ], [ -1.19775, 52.391 ], [ -1.19776, 52.39101 ], [ -1.1979, 52.39116 ], [ -1.19804, 52.39132 ], [ -1.19812, 52.3914 ], [ -1.19818, 52.39147 ], [ -1.19843, 52.39174 ], [ -1.19847, 52.39179 ], [ -1.19861, 52.39195 ], [ -1.19876, 52.3921 ], [ -1.19878, 52.39213 ], [ -1.1989, 52.39226 ], [ -1.19892, 52.39228 ], [ -1.19905, 52.39242 ], [ -1.19907, 52.39244 ], [ -1.19919, 52.39257 ], [ -1.19933, 52.39273 ], [ -1.19934, 52.39275 ], [ -1.19988, 52.39336 ], [ -1.20012, 52.39364 ], [ -1.2003, 52.39385 ], [ -1.20056, 52.39415 ], [ -1.20081, 52.39446 ], [ -1.20093, 52.3946 ], [ -1.20097, 52.39464 ], [ -1.20109, 52.39478 ], [ -1.20122, 52.39493 ], [ -1.20133, 52.39504 ], [ -1.20163, 52.39537 ], [ -1.20188, 52.39561 ], [ -1.20201, 52.39573 ], [ -1.20243, 52.3961 ], [ -1.20252, 52.39617 ], [ -1.20262, 52.39626 ], [ -1.20274, 52.39636 ], [ -1.20279, 52.39641 ], [ -1.20313, 52.39669 ], [ -1.20326, 52.39682 ], [ -1.20345, 52.39699 ], [ -1.20349, 52.39703 ], [ -1.20361, 52.39715 ], [ -1.20367, 52.39721 ], [ -1.20394, 52.39749 ], [ -1.2042, 52.3978 ], [ -1.20456, 52.39825 ], [ -1.20475, 52.39851 ], [ -1.20498, 52.39885 ], [ -1.20524, 52.3992 ], [ -1.20535, 52.39937 ], [ -1.20552, 52.39963 ], [ -1.20582, 52.40004 ], [ -1.2058238, 52.4000356 ], [ -1.20597, 52.40011 ], [ -1.20612, 52.40032 ], [ -1.20629, 52.40056 ], [ -1.20637, 52.40066 ], [ -1.20646, 52.40078 ], [ -1.20662, 52.40098 ], [ -1.20675, 52.40115 ], [ -1.20697, 52.40144 ], [ -1.20728, 52.40185 ], [ -1.20736, 52.40195 ], [ -1.20752, 52.40217 ], [ -1.20765, 52.40232 ], [ -1.2077, 52.40238 ], [ -1.20813, 52.40292 ], [ -1.20826, 52.40307 ], [ -1.20836, 52.40319 ], [ -1.20859, 52.40346 ], [ -1.20875, 52.40366 ], [ -1.20908, 52.40405 ], [ -1.20921, 52.40419 ], [ -1.2097, 52.40477 ], [ -1.2099, 52.405 ], [ -1.21004, 52.40516 ], [ -1.21061, 52.40582 ], [ -1.21105, 52.40633 ], [ -1.21123, 52.40652 ], [ -1.21143, 52.40673 ], [ -1.21167, 52.40698 ], [ -1.21194, 52.40723 ], [ -1.21246, 52.40773 ], [ -1.21273, 52.40801 ], [ -1.21282, 52.40816 ], [ -1.21307, 52.40842 ], [ -1.21328, 52.40867 ], [ -1.21351, 52.40897 ], [ -1.21367, 52.40917 ], [ -1.21376, 52.4093 ], [ -1.21388, 52.40946 ], [ -1.21413, 52.40979 ], [ -1.21421, 52.4099 ], [ -1.21438, 52.41011 ], [ -1.21451, 52.41027 ], [ -1.21467, 52.41048 ], [ -1.21477, 52.41059 ], [ -1.21496, 52.4108 ], [ -1.21506, 52.41091 ], [ -1.21521, 52.41106 ], [ -1.21527, 52.41112 ], [ -1.21537, 52.41121 ], [ -1.21553, 52.41136 ], [ -1.21554, 52.41137 ], [ -1.21569, 52.41152 ], [ -1.216, 52.41181 ], [ -1.21616, 52.41197 ], [ -1.21628, 52.4121 ], [ -1.21631, 52.41213 ], [ -1.21666, 52.41251 ], [ -1.21673, 52.4126 ], [ -1.21678, 52.41267 ], [ -1.21685, 52.41277 ], [ -1.21694, 52.41289 ], [ -1.21716, 52.41324 ], [ -1.21718, 52.41327 ], [ -1.2173, 52.41343 ], [ -1.21741, 52.4136 ], [ -1.2175, 52.41373 ], [ -1.21752, 52.41377 ], [ -1.21762, 52.4139 ], [ -1.21764, 52.41393 ], [ -1.21776, 52.41407 ], [ -1.21778, 52.41409 ], [ -1.21816, 52.41453 ], [ -1.21819, 52.41457 ], [ -1.21856, 52.41497 ], [ -1.21886, 52.41532 ], [ -1.21903, 52.41551 ], [ -1.21917, 52.41567 ], [ -1.21931, 52.41583 ], [ -1.21973, 52.41629 ], [ -1.21973, 52.4163 ], [ -1.21987, 52.41646 ], [ -1.22043, 52.4171 ], [ -1.22056, 52.41725 ], [ -1.2207, 52.41741 ], [ -1.22139, 52.41821 ], [ -1.2214, 52.41822 ], [ -1.22181, 52.41869 ], [ -1.222, 52.4189 ], [ -1.22213, 52.41904 ], [ -1.22249, 52.41946 ], [ -1.22269, 52.41969 ], [ -1.22331, 52.4204 ], [ -1.2235, 52.42062 ], [ -1.2238, 52.42095 ], [ -1.22395, 52.42112 ], [ -1.22404, 52.42124 ], [ -1.22451, 52.42181 ], [ -1.22494, 52.42201 ], [ -1.22501, 52.42201 ], [ -1.22508, 52.42201 ], [ -1.22519, 52.42205 ], [ -1.22525, 52.42208 ], [ -1.22532, 52.42213 ], [ -1.22536, 52.42221 ], [ -1.22538, 52.42227 ], [ -1.22538, 52.42235 ], [ -1.22537, 52.42242 ], [ -1.2256, 52.42293 ], [ -1.22586, 52.42324 ], [ -1.22615, 52.42356 ], [ -1.22644, 52.42388 ], [ -1.22676, 52.42422 ], [ -1.22693, 52.4244 ], [ -1.22719, 52.42469 ], [ -1.22734, 52.42485 ], [ -1.22765, 52.42519 ], [ -1.22794, 52.4255 ], [ -1.2281, 52.42567 ], [ -1.22838, 52.42597 ], [ -1.22866, 52.42627 ], [ -1.2291, 52.42674 ], [ -1.22911, 52.42675 ], [ -1.22926, 52.4269 ], [ -1.22927, 52.42692 ], [ -1.22955, 52.42721 ], [ -1.22968, 52.42736 ], [ -1.22978, 52.42746 ], [ -1.22995, 52.42764 ], [ -1.23014, 52.42784 ], [ -1.23026, 52.42797 ], [ -1.23029, 52.428 ], [ -1.23043, 52.42815 ], [ -1.23054, 52.42827 ], [ -1.2309, 52.42865 ], [ -1.23102, 52.42877 ], [ -1.23108, 52.42883 ], [ -1.23117, 52.42893 ], [ -1.23129, 52.42905 ], [ -1.23144, 52.42921 ], [ -1.23171, 52.4295 ], [ -1.23189, 52.42968 ], [ -1.23254, 52.43036 ], [ -1.23268, 52.43051 ], [ -1.23283, 52.43068 ], [ -1.23328, 52.43113 ], [ -1.23371, 52.43157 ], [ -1.23375, 52.43167 ], [ -1.23379, 52.43172 ], [ -1.23386, 52.4318 ], [ -1.23407, 52.43201 ], [ -1.2341, 52.43205 ], [ -1.23453, 52.43249 ], [ -1.23455, 52.43251 ], [ -1.23485, 52.43282 ], [ -1.23491, 52.43288 ], [ -1.23539, 52.4334 ], [ -1.23541, 52.43343 ], [ -1.23553, 52.43356 ], [ -1.23581, 52.43388 ], [ -1.23588, 52.43395 ], [ -1.23599, 52.43407 ], [ -1.23632, 52.4344 ], [ -1.23657, 52.43465 ], [ -1.23679, 52.43486 ], [ -1.23698, 52.43506 ], [ -1.23721, 52.43528 ], [ -1.23758, 52.43566 ], [ -1.23765, 52.43573 ], [ -1.23825, 52.43636 ], [ -1.2384, 52.43652 ], [ -1.23843, 52.43654 ], [ -1.2387, 52.43683 ], [ -1.23885, 52.43698 ], [ -1.239, 52.43714 ], [ -1.23929, 52.43745 ], [ -1.23938, 52.43753 ], [ -1.23944, 52.4376 ], [ -1.23975, 52.43792 ], [ -1.23998, 52.43816 ], [ -1.24019, 52.43837 ], [ -1.24067, 52.43883 ], [ -1.24069, 52.43886 ], [ -1.24088, 52.43904 ], [ -1.24114, 52.43929 ], [ -1.24141, 52.43955 ], [ -1.24162, 52.43974 ], [ -1.24178, 52.4399 ], [ -1.2419, 52.44002 ], [ -1.24235, 52.44044 ], [ -1.24264, 52.44072 ], [ -1.24294, 52.44101 ], [ -1.243, 52.44107 ], [ -1.24336, 52.44141 ], [ -1.24342, 52.44147 ], [ -1.24358, 52.44162 ], [ -1.24372, 52.44175 ], [ -1.24374, 52.44177 ], [ -1.2439, 52.44192 ], [ -1.24401, 52.44203 ], [ -1.24405, 52.44207 ], [ -1.24437, 52.44237 ], [ -1.24459, 52.44258 ], [ -1.24485, 52.44283 ], [ -1.24495, 52.44293 ], [ -1.24501, 52.44298 ], [ -1.24516, 52.44313 ], [ -1.24524, 52.44321 ], [ -1.2456, 52.44355 ], [ -1.24589, 52.44382 ], [ -1.24611, 52.44403 ], [ -1.24628, 52.44419 ], [ -1.2466, 52.4445 ], [ -1.24675, 52.44465 ], [ -1.24723, 52.44511 ], [ -1.24739, 52.44526 ], [ -1.24769, 52.44555 ], [ -1.24786, 52.44571 ], [ -1.24802, 52.44586 ], [ -1.24805, 52.44589 ], [ -1.24828, 52.4461 ], [ -1.24855, 52.4463 ], [ -1.24877, 52.44649 ], [ -1.24906, 52.44679 ], [ -1.24922, 52.44695 ], [ -1.24939, 52.44713 ], [ -1.24952, 52.44726 ], [ -1.24968, 52.44741 ], [ -1.24984, 52.44756 ], [ -1.25, 52.44771 ], [ -1.25057, 52.44827 ], [ -1.2511, 52.44878 ], [ -1.25158, 52.44923 ], [ -1.25206, 52.44968 ], [ -1.25307, 52.45057 ], [ -1.25321, 52.45089 ], [ -1.25319, 52.45091 ], [ -1.25318, 52.45095 ], [ -1.25318, 52.45099 ], [ -1.25318, 52.45104 ], [ -1.2532, 52.45109 ], [ -1.25324, 52.45113 ], [ -1.25329, 52.4512 ], [ -1.25332, 52.45124 ], [ -1.25348, 52.45135 ], [ -1.25356, 52.45139 ], [ -1.25362, 52.4514 ], [ -1.25376, 52.45143 ], [ -1.25419, 52.45167 ], [ -1.25441, 52.45189 ], [ -1.2548, 52.45226 ], [ -1.25482, 52.45227 ], [ -1.25485, 52.4523 ], [ -1.25496, 52.45241 ], [ -1.25502, 52.45247 ], [ -1.25512, 52.45256 ], [ -1.25607, 52.45344 ], [ -1.25709, 52.4544 ], [ -1.25756, 52.45481 ], [ -1.25773, 52.45496 ], [ -1.25784, 52.45505 ], [ -1.25787, 52.45508 ], [ -1.25799, 52.45519 ], [ -1.25841, 52.45555 ], [ -1.25901, 52.45605 ], [ -1.25914, 52.45618 ], [ -1.25955, 52.45653 ], [ -1.25986, 52.4568 ], [ -1.2606, 52.45746 ], [ -1.2607, 52.45751 ], [ -1.2609, 52.45765 ], [ -1.26094, 52.45765 ], [ -1.26095, 52.45765 ], [ -1.26097, 52.45766 ], [ -1.26099, 52.45766 ], [ -1.26101, 52.45766 ], [ -1.26103, 52.45766 ], [ -1.26105, 52.45767 ], [ -1.26106, 52.45767 ], [ -1.26108, 52.45768 ], [ -1.2611, 52.45769 ], [ -1.26111, 52.4577 ], [ -1.26112, 52.4577 ], [ -1.26114, 52.45771 ], [ -1.26115, 52.45772 ], [ -1.26116, 52.45773 ], [ -1.26117, 52.45774 ], [ -1.26118, 52.45775 ], [ -1.26118, 52.45776 ], [ -1.26119, 52.45777 ], [ -1.26119, 52.45778 ], [ -1.2612, 52.4578 ], [ -1.2612, 52.45781 ], [ -1.2612, 52.45782 ], [ -1.2612, 52.45783 ], [ -1.26119, 52.45785 ], [ -1.26118, 52.45787 ], [ -1.2613, 52.45801 ], [ -1.2614, 52.45812 ], [ -1.26193, 52.45863 ], [ -1.26252, 52.45917 ], [ -1.26261, 52.45924 ], [ -1.26288, 52.45948 ], [ -1.2636, 52.46009 ], [ -1.26416, 52.46052 ], [ -1.26418, 52.46054 ], [ -1.26494, 52.46118 ], [ -1.2654, 52.46158 ], [ -1.26556, 52.46171 ], [ -1.26558, 52.46174 ], [ -1.26573, 52.46186 ], [ -1.26604, 52.46213 ], [ -1.26611, 52.46219 ], [ -1.26629, 52.46234 ], [ -1.26658, 52.46259 ], [ -1.26674, 52.46273 ], [ -1.26682, 52.4628 ], [ -1.26699, 52.46296 ], [ -1.2676, 52.46349 ], [ -1.26781, 52.46368 ], [ -1.26822, 52.46403 ], [ -1.26853, 52.46431 ], [ -1.26856, 52.46433 ], [ -1.2686, 52.46437 ], [ -1.26874, 52.46449 ], [ -1.26884, 52.46458 ], [ -1.26947, 52.46513 ], [ -1.26961, 52.46526 ], [ -1.26969, 52.46532 ], [ -1.26993, 52.46553 ], [ -1.27025, 52.4658 ], [ -1.27031, 52.46585 ], [ -1.27071, 52.46618 ], [ -1.27078, 52.46623 ], [ -1.2711, 52.4665 ], [ -1.27134, 52.46669 ], [ -1.27148, 52.46681 ], [ -1.27166, 52.46695 ], [ -1.27198, 52.46721 ], [ -1.27229, 52.46746 ], [ -1.27283, 52.46791 ], [ -1.27307, 52.4681 ], [ -1.27331, 52.4683 ], [ -1.27355, 52.46849 ], [ -1.27378, 52.46868 ], [ -1.27378, 52.46869 ], [ -1.27418, 52.46901 ], [ -1.27448, 52.46926 ], [ -1.27457, 52.46933 ], [ -1.27496, 52.46965 ], [ -1.27536, 52.46998 ], [ -1.27536, 52.46999 ], [ -1.27566, 52.47024 ], [ -1.27612, 52.47062 ], [ -1.27644, 52.47089 ], [ -1.27657, 52.471 ], [ -1.27692, 52.47129 ], [ -1.27697, 52.47133 ], [ -1.27728, 52.47159 ], [ -1.27774, 52.47198 ], [ -1.27796, 52.47216 ], [ -1.27805, 52.47223 ], [ -1.27855, 52.47265 ], [ -1.2788, 52.47286 ], [ -1.27905, 52.47307 ], [ -1.27967, 52.47359 ], [ -1.27976, 52.47366 ], [ -1.28013, 52.47395 ], [ -1.28053, 52.47427 ], [ -1.28085, 52.47452 ], [ -1.28117, 52.47477 ], [ -1.28164, 52.47516 ], [ -1.28213, 52.47557 ], [ -1.28228, 52.47578 ], [ -1.28251, 52.47597 ], [ -1.28298, 52.47636 ], [ -1.28304, 52.47642 ], [ -1.28334, 52.47668 ], [ -1.2835, 52.4768 ], [ -1.28378, 52.47704 ], [ -1.28405, 52.47726 ], [ -1.28422, 52.47739 ], [ -1.28431, 52.47747 ], [ -1.28465, 52.47774 ], [ -1.2851, 52.47809 ], [ -1.28511, 52.47811 ], [ -1.28568, 52.47857 ], [ -1.28582, 52.47868 ], [ -1.28614, 52.47897 ], [ -1.28649, 52.47928 ], [ -1.28696, 52.4797 ], [ -1.28706, 52.47979 ], [ -1.28722, 52.47992 ], [ -1.28741, 52.48007 ], [ -1.28745, 52.4801 ], [ -1.28786, 52.48041 ], [ -1.28897, 52.48125 ], [ -1.28923, 52.48145 ], [ -1.28987, 52.48191 ], [ -1.29042, 52.4823 ], [ -1.29068, 52.48249 ], [ -1.29084, 52.4826 ], [ -1.29122, 52.48291 ], [ -1.29139, 52.48306 ], [ -1.29163, 52.48331 ], [ -1.29183, 52.48353 ], [ -1.29192, 52.48363 ], [ -1.29212, 52.48384 ], [ -1.29227, 52.484 ], [ -1.29234, 52.48407 ], [ -1.29267, 52.48439 ], [ -1.29279, 52.48449 ], [ -1.29303, 52.48469 ], [ -1.29331, 52.48491 ], [ -1.29355, 52.48509 ], [ -1.29369, 52.48519 ], [ -1.29382, 52.48527 ], [ -1.29393, 52.48533 ], [ -1.29406, 52.4854 ], [ -1.29432, 52.48551 ], [ -1.29449, 52.48559 ], [ -1.29482, 52.48574 ], [ -1.29502, 52.48583 ], [ -1.29521, 52.48593 ], [ -1.29541, 52.48604 ], [ -1.29561, 52.48617 ], [ -1.29586, 52.48634 ], [ -1.29588, 52.48636 ], [ -1.29603, 52.48648 ], [ -1.29619, 52.48661 ], [ -1.29624, 52.48665 ], [ -1.29648, 52.48688 ], [ -1.29654, 52.48693 ], [ -1.29686, 52.48725 ], [ -1.2972, 52.48757 ], [ -1.29748, 52.48783 ], [ -1.29774, 52.48805 ], [ -1.29795, 52.48814 ], [ -1.29797, 52.48816 ], [ -1.29804, 52.48821 ], [ -1.29815, 52.4883 ], [ -1.29836, 52.48848 ], [ -1.29851, 52.48859 ], [ -1.29869, 52.48873 ], [ -1.29892, 52.48892 ], [ -1.29965, 52.48951 ], [ -1.29976, 52.48959 ], [ -1.3003, 52.49002 ], [ -1.30039, 52.49009 ], [ -1.30048, 52.49016 ], [ -1.30084, 52.49045 ], [ -1.30163, 52.49106 ], [ -1.30195, 52.49129 ], [ -1.30213, 52.49143 ], [ -1.30222, 52.4915 ], [ -1.30258, 52.49174 ], [ -1.30292, 52.49197 ], [ -1.30312, 52.4921 ], [ -1.30365, 52.49244 ], [ -1.30407, 52.49271 ], [ -1.30412, 52.49274 ], [ -1.30458, 52.49301 ], [ -1.30506, 52.4933 ], [ -1.3054, 52.49349 ], [ -1.30572, 52.49368 ], [ -1.30574, 52.49369 ], [ -1.30625, 52.49399 ], [ -1.30662, 52.49419 ], [ -1.30691, 52.49435 ], [ -1.30715, 52.49449 ], [ -1.30776, 52.49481 ], [ -1.30847, 52.49517 ], [ -1.3089, 52.49538 ], [ -1.30939, 52.49562 ], [ -1.30951, 52.49568 ], [ -1.31027, 52.49602 ], [ -1.3118, 52.49665 ], [ -1.31231, 52.49685 ], [ -1.31293, 52.49708 ], [ -1.31357, 52.49731 ], [ -1.31484, 52.49777 ], [ -1.31511, 52.49787 ], [ -1.31738, 52.49869 ], [ -1.31855, 52.49911 ], [ -1.31865, 52.49915 ], [ -1.31991, 52.49959 ], [ -1.32047, 52.49979 ], [ -1.32066, 52.49986 ], [ -1.32217, 52.50043 ], [ -1.32285, 52.50068 ], [ -1.32292, 52.50071 ], [ -1.32313, 52.50079 ], [ -1.32364, 52.50097 ], [ -1.32378, 52.50102 ], [ -1.32414, 52.50116 ], [ -1.32424, 52.5012 ], [ -1.32464, 52.50136 ], [ -1.3253, 52.50163 ], [ -1.32547, 52.5017 ], [ -1.32617, 52.50201 ], [ -1.3266, 52.50221 ], [ -1.32674, 52.50232 ], [ -1.32731, 52.50258 ], [ -1.32783, 52.5028 ], [ -1.32837, 52.50302 ], [ -1.3285, 52.50307 ], [ -1.32906, 52.50327 ], [ -1.32926, 52.50335 ], [ -1.32997, 52.50361 ], [ -1.33008, 52.50365 ], [ -1.33061, 52.50385 ], [ -1.33101, 52.504 ], [ -1.33143, 52.50416 ], [ -1.33215, 52.50442 ], [ -1.33257, 52.50455 ], [ -1.33315, 52.50473 ], [ -1.33342, 52.50481 ], [ -1.33386, 52.50494 ], [ -1.33395, 52.50496 ], [ -1.33424, 52.50506 ], [ -1.33446, 52.50513 ], [ -1.33468, 52.5052 ], [ -1.33494, 52.50529 ], [ -1.33571, 52.50559 ], [ -1.33585, 52.50563 ], [ -1.33682, 52.50599 ], [ -1.33704, 52.50606 ], [ -1.33733, 52.50616 ], [ -1.33756, 52.50624 ], [ -1.338, 52.50641 ], [ -1.33837, 52.50656 ], [ -1.3392, 52.50694 ], [ -1.3395, 52.50708 ], [ -1.34038, 52.50748 ], [ -1.341, 52.50776 ], [ -1.34126, 52.50792 ], [ -1.34136, 52.50802 ], [ -1.3413574, 52.5080205 ], [ -1.3416, 52.50812 ], [ -1.3417, 52.50814 ], [ -1.34194, 52.50818 ], [ -1.34199, 52.50818 ], [ -1.34203, 52.50818 ], [ -1.34205, 52.50818 ], [ -1.34208, 52.50819 ], [ -1.3421, 52.50819 ], [ -1.34212, 52.5082 ], [ -1.34215, 52.50821 ], [ -1.34217, 52.50822 ], [ -1.34219, 52.50823 ], [ -1.3422, 52.50824 ], [ -1.34222, 52.50825 ], [ -1.34223, 52.50827 ], [ -1.34225, 52.50828 ], [ -1.34226, 52.5083 ], [ -1.34226, 52.50831 ], [ -1.34228, 52.50834 ], [ -1.34278, 52.50849 ], [ -1.34298, 52.50854 ], [ -1.34318, 52.5086 ], [ -1.3435, 52.50871 ], [ -1.34481, 52.5092 ], [ -1.34728, 52.51009 ], [ -1.34896, 52.51071 ], [ -1.35034, 52.51123 ], [ -1.35153, 52.51169 ], [ -1.3522, 52.51194 ], [ -1.353, 52.51224 ], [ -1.35386, 52.51254 ], [ -1.3553, 52.51305 ], [ -1.35606, 52.5133 ], [ -1.35642, 52.51343 ], [ -1.3564168, 52.5134272 ], [ -1.35668, 52.51345 ], [ -1.35711, 52.51355 ], [ -1.35735, 52.5136 ], [ -1.35755, 52.51365 ], [ -1.35791, 52.51372 ], [ -1.35821, 52.51377 ], [ -1.35915, 52.51397 ], [ -1.35922, 52.51398 ], [ -1.36006, 52.51417 ], [ -1.3602, 52.5142 ], [ -1.36055, 52.51427 ], [ -1.3609, 52.51433 ], [ -1.36102, 52.51429 ], [ -1.36138, 52.51421 ], [ -1.36152, 52.51419 ], [ -1.36166, 52.51418 ], [ -1.36185, 52.51417 ], [ -1.36199, 52.51418 ], [ -1.36212, 52.5142 ], [ -1.36232, 52.51423 ], [ -1.36245, 52.51424 ], [ -1.36258, 52.51428 ], [ -1.36271, 52.51432 ], [ -1.36278, 52.51435 ], [ -1.36283, 52.51438 ], [ -1.36292, 52.51444 ], [ -1.36298, 52.5145 ], [ -1.36305, 52.51457 ], [ -1.36314, 52.51468 ], [ -1.36319, 52.51476 ], [ -1.36322, 52.51485 ], [ -1.36323, 52.51489 ], [ -1.36324, 52.51493 ], [ -1.36324, 52.51498 ], [ -1.36323, 52.51505 ], [ -1.36321, 52.51513 ], [ -1.36313, 52.51526 ], [ -1.36316, 52.5154 ], [ -1.36316, 52.51548 ], [ -1.36317, 52.51557 ], [ -1.3632, 52.51565 ], [ -1.36323, 52.51571 ], [ -1.36329, 52.51578 ], [ -1.36334, 52.51582 ], [ -1.36374, 52.51605 ], [ -1.364, 52.51621 ], [ -1.36424, 52.51631 ], [ -1.36464, 52.51649 ], [ -1.36487, 52.51658 ], [ -1.36518, 52.51671 ], [ -1.36561, 52.51689 ], [ -1.36591, 52.51702 ], [ -1.36604, 52.51708 ], [ -1.36638, 52.51722 ], [ -1.36668, 52.51734 ], [ -1.36678, 52.51738 ], [ -1.36705, 52.51748 ], [ -1.3673, 52.51757 ], [ -1.36743, 52.51761 ], [ -1.36762, 52.51767 ], [ -1.36808, 52.5178 ], [ -1.36862, 52.51794 ], [ -1.3687, 52.51796 ], [ -1.36926, 52.5181 ], [ -1.36971, 52.51821 ], [ -1.37009, 52.5183 ], [ -1.3704, 52.51841 ], [ -1.37065, 52.5185 ], [ -1.37081, 52.51858 ], [ -1.37084, 52.51859 ], [ -1.37108, 52.51871 ], [ -1.37131, 52.51882 ], [ -1.37144, 52.5189 ], [ -1.3715, 52.51894 ], [ -1.37165, 52.51904 ], [ -1.3719, 52.5192 ], [ -1.37216, 52.51937 ], [ -1.3724, 52.51951 ], [ -1.3726, 52.5196 ], [ -1.37274, 52.51965 ], [ -1.37278, 52.51967 ], [ -1.37297, 52.51972 ], [ -1.37322, 52.51979 ], [ -1.37326, 52.5198 ], [ -1.37359, 52.51988 ], [ -1.3738, 52.51992 ], [ -1.37408, 52.51999 ], [ -1.37427, 52.52005 ], [ -1.3744, 52.52009 ], [ -1.37457, 52.52016 ], [ -1.37484, 52.52029 ], [ -1.37508, 52.52038 ], [ -1.37536, 52.52049 ], [ -1.37591, 52.5207 ], [ -1.37669, 52.52101 ], [ -1.3773, 52.52124 ], [ -1.37733, 52.52125 ], [ -1.37758, 52.52134 ], [ -1.37771, 52.52138 ], [ -1.37808, 52.5215 ], [ -1.37903, 52.52179 ], [ -1.37916, 52.52183 ], [ -1.37942, 52.52191 ], [ -1.37952, 52.52194 ], [ -1.38001, 52.52208 ], [ -1.38042, 52.52222 ], [ -1.3809, 52.52241 ], [ -1.38097, 52.52244 ], [ -1.38123, 52.52256 ], [ -1.38132, 52.5226 ], [ -1.38164, 52.52275 ], [ -1.38212, 52.52296 ], [ -1.3823, 52.52304 ], [ -1.38268, 52.5232 ], [ -1.38325, 52.52343 ], [ -1.38385, 52.52366 ], [ -1.3842, 52.52379 ], [ -1.38428, 52.52382 ], [ -1.38482, 52.52402 ], [ -1.38523, 52.52416 ], [ -1.38526, 52.52418 ], [ -1.38547, 52.52427 ], [ -1.38576, 52.52439 ], [ -1.38617, 52.52458 ], [ -1.3861704, 52.5245832 ], [ -1.38634, 52.52461 ], [ -1.38646, 52.52469 ], [ -1.38695, 52.52498 ], [ -1.38708, 52.52496 ], [ -1.38716, 52.52496 ], [ -1.38722, 52.52496 ], [ -1.38727, 52.52497 ], [ -1.38733, 52.52498 ], [ -1.38737, 52.52499 ], [ -1.38745, 52.52503 ], [ -1.38792, 52.52514 ], [ -1.38838, 52.52525 ], [ -1.3886, 52.52531 ], [ -1.38866, 52.52539 ], [ -1.38969, 52.52573 ], [ -1.39017, 52.52591 ], [ -1.39105, 52.52624 ], [ -1.39149, 52.5264 ], [ -1.39221, 52.52666 ], [ -1.39277, 52.52687 ], [ -1.39297, 52.52694 ], [ -1.39334, 52.52707 ], [ -1.3937, 52.5272 ], [ -1.39381, 52.52725 ], [ -1.39427, 52.52742 ], [ -1.39441, 52.52747 ], [ -1.39445, 52.52749 ], [ -1.39459, 52.52754 ], [ -1.39485, 52.52763 ], [ -1.39508, 52.52772 ], [ -1.39536, 52.52783 ], [ -1.39553, 52.52792 ], [ -1.39581, 52.52805 ], [ -1.39608, 52.52816 ], [ -1.39622, 52.52823 ], [ -1.396217, 52.5282288 ], [ -1.39627, 52.52829 ], [ -1.39632, 52.52833 ], [ -1.39638, 52.52837 ], [ -1.39643, 52.52842 ], [ -1.39664, 52.52856 ], [ -1.3966433, 52.5285599 ], [ -1.39666, 52.52859 ], [ -1.39667, 52.52861 ], [ -1.39669, 52.52863 ], [ -1.39671, 52.52864 ], [ -1.39673, 52.52866 ], [ -1.39677, 52.52868 ], [ -1.39678, 52.52903 ], [ -1.39675, 52.52914 ], [ -1.39666, 52.52934 ], [ -1.39652, 52.52951 ], [ -1.39648, 52.52954 ], [ -1.3964808, 52.5295446 ], [ -1.39732, 52.52978 ], [ -1.3973229, 52.5297845 ], [ -1.39733, 52.52987 ], [ -1.39736, 52.53001 ], [ -1.39736, 52.53008 ], [ -1.39729, 52.53047 ], [ -1.39725, 52.53066 ], [ -1.39721, 52.53083 ], [ -1.39715, 52.53104 ], [ -1.39707, 52.53121 ], [ -1.3969, 52.53172 ], [ -1.39678, 52.53207 ], [ -1.39677, 52.5321 ], [ -1.39665, 52.53242 ], [ -1.396648, 52.5324221 ], [ -1.39687, 52.53246 ], [ -1.39691, 52.53246 ], [ -1.39696, 52.53247 ], [ -1.39711, 52.5325 ], [ -1.39727, 52.5325 ], [ -1.39749, 52.53251 ], [ -1.39758, 52.53252 ], [ -1.3976, 52.53252 ], [ -1.39761, 52.53252 ], [ -1.39763, 52.53253 ], [ -1.39764, 52.53254 ], [ -1.39765, 52.53255 ], [ -1.39765, 52.53256 ], [ -1.39766, 52.53257 ], [ -1.39766, 52.53258 ], [ -1.39766, 52.53259 ], [ -1.39766, 52.5326 ], [ -1.39766, 52.53265 ], [ -1.3976599, 52.5326513 ], [ -1.39762, 52.53283 ], [ -1.3976, 52.533 ], [ -1.3976, 52.53306 ], [ -1.3976, 52.53309 ], [ -1.3976, 52.5331 ], [ -1.39761, 52.53311 ], [ -1.39762, 52.53311 ], [ -1.39763, 52.53312 ], [ -1.39765, 52.53312 ], [ -1.39767, 52.53312 ], [ -1.3977, 52.53313 ], [ -1.39774, 52.53313 ], [ -1.39783, 52.53313 ], [ -1.39862, 52.53317 ], [ -1.3992, 52.53319 ], [ -1.39928, 52.53319 ], [ -1.39934, 52.53318 ], [ -1.39936, 52.53316 ], [ -1.3993572, 52.5331626 ], [ -1.39938, 52.5332 ], [ -1.39939, 52.53322 ], [ -1.3994, 52.53325 ], [ -1.39942, 52.53326 ], [ -1.39943, 52.53327 ], [ -1.39945, 52.53328 ], [ -1.39948, 52.53329 ], [ -1.39951, 52.5333 ], [ -1.39952, 52.53331 ], [ -1.39954, 52.53332 ], [ -1.39958, 52.53333 ], [ -1.39961, 52.53334 ], [ -1.39962, 52.53335 ], [ -1.39964, 52.53337 ], [ -1.39966, 52.53339 ], [ -1.39966, 52.5334 ], [ -1.39966, 52.53341 ], [ -1.39966, 52.53342 ], [ -1.39965, 52.53344 ], [ -1.39963, 52.53348 ], [ -1.3996308, 52.5334803 ], [ -1.39969, 52.5335 ], [ -1.3998, 52.53353 ], [ -1.3999, 52.53357 ], [ -1.40003, 52.53364 ], [ -1.40011, 52.53369 ], [ -1.40013, 52.5337 ], [ -1.40017, 52.53373 ], [ -1.40021, 52.53378 ], [ -1.40025, 52.53384 ], [ -1.40028, 52.53393 ], [ -1.40029, 52.53398 ], [ -1.40029, 52.53402 ], [ -1.40028, 52.53418 ], [ -1.40027, 52.5342 ], [ -1.40024, 52.53452 ], [ -1.40024, 52.53456 ], [ -1.40022, 52.53474 ], [ -1.40021, 52.53479 ], [ -1.40022, 52.53491 ], [ -1.40022, 52.53492 ], [ -1.40023, 52.5351 ], [ -1.40024, 52.53528 ], [ -1.40023, 52.53543 ], [ -1.40023, 52.53546 ], [ -1.40021, 52.53557 ], [ -1.40018, 52.53562 ], [ -1.40017, 52.53563 ], [ -1.40016, 52.53566 ], [ -1.40015, 52.53567 ], [ -1.40015, 52.53569 ], [ -1.40015, 52.53573 ], [ -1.40016, 52.53584 ], [ -1.40022, 52.5359 ], [ -1.40029, 52.53605 ], [ -1.40038, 52.53623 ], [ -1.40063, 52.53674 ], [ -1.4008, 52.53709 ], [ -1.40174, 52.53898 ], [ -1.40204, 52.5396 ], [ -1.40215, 52.53985 ], [ -1.40226, 52.53997 ], [ -1.40247, 52.54015 ], [ -1.40289, 52.54037 ], [ -1.40292, 52.54038 ], [ -1.40364, 52.5407 ], [ -1.40412, 52.54091 ], [ -1.40455, 52.5411 ], [ -1.40486, 52.5412 ], [ -1.40499, 52.54124 ], [ -1.4052, 52.54131 ], [ -1.40525, 52.54132 ], [ -1.40542, 52.54138 ], [ -1.40548, 52.54139 ], [ -1.40576, 52.54145 ], [ -1.40604, 52.54152 ], [ -1.40631, 52.54158 ], [ -1.40798, 52.54196 ], [ -1.40804, 52.54197 ], [ -1.4086, 52.54211 ], [ -1.40904, 52.54214 ], [ -1.40911, 52.54214 ], [ -1.4094, 52.54211 ], [ -1.40979, 52.54212 ], [ -1.41004, 52.54218 ], [ -1.41024, 52.54224 ], [ -1.41025, 52.54224 ], [ -1.41043, 52.54232 ], [ -1.41055, 52.54234 ], [ -1.41079, 52.54234 ], [ -1.41094, 52.54235 ], [ -1.41111, 52.54238 ], [ -1.41129, 52.54244 ], [ -1.41155, 52.54258 ], [ -1.41182, 52.54274 ], [ -1.41215, 52.543 ], [ -1.41226, 52.54315 ], [ -1.41236, 52.54327 ], [ -1.41251, 52.54367 ], [ -1.41253, 52.54384 ], [ -1.41257, 52.5442 ], [ -1.41258, 52.54427 ], [ -1.41256, 52.54453 ], [ -1.41251, 52.5448 ], [ -1.41251, 52.54497 ], [ -1.41251, 52.54528 ], [ -1.41253, 52.54636 ], [ -1.41253, 52.54678 ], [ -1.41262, 52.547 ], [ -1.4127, 52.54716 ], [ -1.4128, 52.54746 ], [ -1.41299, 52.54794 ], [ -1.41341, 52.54899 ], [ -1.41353, 52.54931 ], [ -1.41406, 52.55056 ], [ -1.41417, 52.55083 ], [ -1.41454, 52.5516 ], [ -1.41513, 52.55281 ], [ -1.41522, 52.553 ], [ -1.41539, 52.55332 ], [ -1.41557, 52.55367 ], [ -1.41566, 52.55384 ], [ -1.41575, 52.55401 ], [ -1.41593, 52.55435 ], [ -1.41602, 52.55452 ], [ -1.41605, 52.55458 ], [ -1.41606, 52.5546 ], [ -1.4161, 52.55467 ], [ -1.41618, 52.55479 ], [ -1.41628, 52.55496 ], [ -1.41633, 52.55503 ], [ -1.41639, 52.55512 ], [ -1.41651, 52.55529 ], [ -1.41663, 52.55545 ], [ -1.4167, 52.55555 ], [ -1.41715, 52.55597 ], [ -1.4174, 52.55622 ], [ -1.41749, 52.5563 ], [ -1.41793, 52.55665 ], [ -1.41808, 52.55674 ], [ -1.41852, 52.55698 ], [ -1.41856, 52.557 ], [ -1.41918, 52.55737 ], [ -1.41949, 52.55757 ], [ -1.41956, 52.55762 ], [ -1.41972, 52.55775 ], [ -1.41991, 52.55795 ], [ -1.42007, 52.55823 ], [ -1.42008, 52.55826 ], [ -1.42048, 52.55912 ], [ -1.42063, 52.55946 ], [ -1.42078, 52.55974 ], [ -1.42083, 52.55981 ], [ -1.42095, 52.55998 ], [ -1.42096, 52.55999 ], [ -1.42106, 52.56014 ], [ -1.42117, 52.56031 ], [ -1.42139, 52.56064 ], [ -1.42147, 52.56076 ], [ -1.42149, 52.56081 ], [ -1.42154, 52.56091 ], [ -1.42156, 52.56093 ], [ -1.42165, 52.56101 ], [ -1.4216478, 52.5610139 ], [ -1.42166, 52.561 ], [ -1.42168, 52.56095 ], [ -1.42165, 52.56091 ], [ -1.4216531, 52.5609073 ], [ -1.42169, 52.5609 ], [ -1.42193, 52.56085 ], [ -1.42213, 52.5608 ], [ -1.42221, 52.56079 ], [ -1.4224, 52.56075 ], [ -1.4225, 52.56074 ], [ -1.42254, 52.56073 ], [ -1.42259, 52.56073 ], [ -1.42266, 52.56073 ], [ -1.42271, 52.56073 ], [ -1.42278, 52.56074 ], [ -1.42291, 52.56076 ], [ -1.42328, 52.5609 ], [ -1.42331, 52.56091 ], [ -1.42353, 52.56103 ], [ -1.42375, 52.56114 ], [ -1.42398, 52.56126 ], [ -1.4242, 52.56138 ], [ -1.42435, 52.56146 ], [ -1.42443, 52.56149 ], [ -1.42491, 52.56171 ], [ -1.42515, 52.56181 ], [ -1.42532, 52.56189 ], [ -1.42608, 52.56225 ], [ -1.42619, 52.5623 ], [ -1.42631, 52.56236 ], [ -1.42695, 52.56268 ], [ -1.42726, 52.56289 ], [ -1.42753, 52.56307 ], [ -1.42776, 52.56326 ], [ -1.42792, 52.56338 ], [ -1.42794, 52.5634 ], [ -1.42847, 52.56384 ], [ -1.4288, 52.56413 ], [ -1.42898, 52.56428 ], [ -1.4289753, 52.5642753 ], [ -1.42929, 52.56447 ], [ -1.42964, 52.56469 ], [ -1.42971, 52.56472 ], [ -1.42994, 52.56484 ], [ -1.43009, 52.56491 ], [ -1.43016, 52.56495 ], [ -1.43039, 52.56507 ], [ -1.43067, 52.56521 ], [ -1.43086, 52.56529 ], [ -1.43109, 52.5654 ], [ -1.4311, 52.5654 ], [ -1.43134, 52.5655 ], [ -1.43158, 52.5656 ], [ -1.43166, 52.56563 ], [ -1.43218, 52.56582 ], [ -1.43263, 52.566 ], [ -1.43282, 52.56609 ], [ -1.43299, 52.56617 ], [ -1.43374, 52.56658 ], [ -1.43416, 52.56682 ], [ -1.43429, 52.56688 ], [ -1.43474, 52.56708 ], [ -1.43553, 52.56744 ], [ -1.4362, 52.56773 ], [ -1.4366, 52.56791 ], [ -1.4372, 52.56812 ], [ -1.43729, 52.56815 ], [ -1.43769, 52.56828 ], [ -1.4379, 52.56836 ], [ -1.4383, 52.56855 ], [ -1.43863, 52.56873 ], [ -1.43914, 52.56902 ], [ -1.43995, 52.56947 ], [ -1.4405, 52.56978 ], [ -1.44081, 52.56996 ], [ -1.44105, 52.57015 ], [ -1.44116, 52.57033 ], [ -1.44117, 52.5704 ], [ -1.44117, 52.57044 ], [ -1.4411661, 52.5704384 ], [ -1.44129, 52.57044 ], [ -1.4415, 52.57049 ], [ -1.442, 52.5707 ], [ -1.44272, 52.57101 ], [ -1.44319, 52.57124 ], [ -1.44434, 52.5718 ], [ -1.44462, 52.57193 ], [ -1.44585, 52.57256 ], [ -1.44618, 52.57271 ], [ -1.44632, 52.57277 ], [ -1.44665, 52.5729 ], [ -1.44703, 52.57303 ], [ -1.44729, 52.57312 ], [ -1.44742, 52.57319 ], [ -1.44757, 52.57326 ], [ -1.44767, 52.57332 ], [ -1.44777, 52.5734 ], [ -1.44784, 52.57353 ], [ -1.44789, 52.57363 ], [ -1.44791, 52.57368 ], [ -1.44796, 52.57381 ], [ -1.44806, 52.57395 ], [ -1.44817, 52.57409 ], [ -1.44832, 52.57422 ], [ -1.4484, 52.57427 ], [ -1.44853, 52.57436 ], [ -1.44872, 52.57447 ], [ -1.44893, 52.57461 ], [ -1.44921, 52.57479 ], [ -1.44948, 52.57497 ], [ -1.45038, 52.57555 ], [ -1.45097, 52.57593 ], [ -1.4514, 52.57619 ], [ -1.45168, 52.57633 ], [ -1.4518, 52.5764 ], [ -1.45182, 52.57643 ], [ -1.45185, 52.57648 ], [ -1.4518498, 52.5764816 ], [ -1.4521, 52.57647 ], [ -1.45239, 52.57649 ], [ -1.45316, 52.57654 ], [ -1.45356, 52.57655 ], [ -1.45384, 52.57655 ], [ -1.45396, 52.57653 ], [ -1.4539564, 52.5765285 ], [ -1.45403, 52.57668 ], [ -1.45452, 52.57735 ], [ -1.45466, 52.57757 ], [ -1.45514, 52.57829 ], [ -1.4552, 52.57837 ], [ -1.45526, 52.57846 ], [ -1.45534, 52.57858 ], [ -1.45537, 52.57863 ], [ -1.4556, 52.57896 ], [ -1.45572, 52.57912 ], [ -1.45594, 52.57943 ], [ -1.45595, 52.57945 ], [ -1.45607, 52.57962 ], [ -1.4562, 52.57981 ], [ -1.45645, 52.5803 ], [ -1.45653, 52.58045 ], [ -1.45653, 52.58047 ], [ -1.45695, 52.58114 ], [ -1.45696, 52.58114 ], [ -1.45752, 52.58176 ], [ -1.45784, 52.58208 ], [ -1.45799, 52.58223 ], [ -1.45821, 52.58245 ], [ -1.45854, 52.58272 ], [ -1.459, 52.58297 ], [ -1.45968, 52.58328 ], [ -1.46029, 52.58357 ], [ -1.46032, 52.58359 ], [ -1.46054, 52.58373 ], [ -1.46114, 52.58409 ], [ -1.46158, 52.58435 ], [ -1.46171, 52.58442 ], [ -1.4618, 52.58447 ], [ -1.46234, 52.58478 ], [ -1.46272, 52.58502 ], [ -1.46302, 52.58527 ], [ -1.46351, 52.5857 ], [ -1.46367, 52.58585 ], [ -1.46395, 52.58612 ], [ -1.46462, 52.58676 ], [ -1.46478, 52.58692 ], [ -1.46518, 52.58732 ], [ -1.46536, 52.58753 ], [ -1.46555, 52.58781 ], [ -1.46572, 52.58812 ], [ -1.46578, 52.58822 ], [ -1.46581, 52.58827 ], [ -1.46592, 52.58838 ], [ -1.46607, 52.58848 ], [ -1.46632, 52.58859 ], [ -1.46678, 52.58872 ], [ -1.4669, 52.58875 ], [ -1.46718, 52.58881 ], [ -1.46743, 52.58887 ], [ -1.46746, 52.58888 ], [ -1.46774, 52.58893 ], [ -1.46792, 52.58901 ], [ -1.46797, 52.58904 ], [ -1.46804, 52.58909 ], [ -1.46813, 52.5892 ], [ -1.46816, 52.58924 ], [ -1.4681649, 52.5892419 ], [ -1.46814, 52.58941 ], [ -1.46803, 52.58971 ], [ -1.46785, 52.59023 ], [ -1.46756, 52.59082 ], [ -1.46747, 52.59101 ], [ -1.46719, 52.59164 ], [ -1.467, 52.59183 ], [ -1.46695, 52.59187 ], [ -1.46653, 52.59212 ], [ -1.46627, 52.59227 ], [ -1.46616, 52.59234 ], [ -1.46561, 52.59263 ], [ -1.46551, 52.59268 ], [ -1.46531, 52.59279 ], [ -1.4651, 52.59293 ], [ -1.46497, 52.59304 ], [ -1.4649, 52.5931 ], [ -1.46478, 52.59324 ], [ -1.46469, 52.59336 ], [ -1.46462, 52.59345 ], [ -1.46371, 52.59443 ], [ -1.46366, 52.5945 ], [ -1.46366, 52.59455 ], [ -1.4636601, 52.5945511 ], [ -1.46386, 52.59469 ], [ -1.46503, 52.59525 ], [ -1.46586, 52.59566 ], [ -1.46606, 52.59576 ], [ -1.46652, 52.59605 ], [ -1.46673, 52.59615 ], [ -1.46696, 52.59626 ], [ -1.46703, 52.59629 ], [ -1.46821, 52.59681 ], [ -1.46877, 52.59718 ], [ -1.46937, 52.59756 ], [ -1.47013, 52.59805 ], [ -1.47048, 52.5983 ], [ -1.47068, 52.59857 ], [ -1.47079, 52.59871 ], [ -1.47097, 52.59893 ], [ -1.47135, 52.59946 ], [ -1.47175, 52.59993 ], [ -1.47205, 52.6002 ], [ -1.47215, 52.6003 ], [ -1.4721481, 52.6003029 ], [ -1.47229, 52.60026 ], [ -1.47299, 52.60013 ], [ -1.47305, 52.60012 ], [ -1.47375, 52.60001 ], [ -1.47414, 52.59995 ], [ -1.47436, 52.59992 ], [ -1.47457, 52.59993 ], [ -1.47486, 52.59995 ], [ -1.47513, 52.59998 ], [ -1.47548, 52.60004 ], [ -1.47559, 52.60006 ], [ -1.47623, 52.60013 ], [ -1.47684, 52.60025 ], [ -1.47699, 52.60028 ], [ -1.4772, 52.6003 ], [ -1.4771963, 52.6003013 ], [ -1.47717, 52.60041 ], [ -1.47694, 52.60131 ], [ -1.47693, 52.60134 ], [ -1.47687, 52.60161 ], [ -1.47682, 52.60182 ], [ -1.47671, 52.60232 ], [ -1.47666, 52.60256 ], [ -1.4766, 52.60295 ], [ -1.47659, 52.60304 ], [ -1.47655, 52.60337 ], [ -1.47654, 52.60364 ], [ -1.47655, 52.60375 ], [ -1.47656, 52.60385 ], [ -1.4766, 52.60405 ], [ -1.47664, 52.60414 ], [ -1.47668, 52.60423 ], [ -1.47697, 52.60489 ], [ -1.47701, 52.605 ], [ -1.47704, 52.60509 ], [ -1.47708, 52.60526 ], [ -1.4771, 52.6053 ], [ -1.47711, 52.60538 ], [ -1.47713, 52.60548 ], [ -1.47717, 52.60573 ], [ -1.47718, 52.60577 ], [ -1.47721, 52.60604 ], [ -1.47721, 52.60632 ], [ -1.47719, 52.60661 ], [ -1.47715, 52.6068 ], [ -1.47715, 52.60681 ], [ -1.47714, 52.60689 ], [ -1.47703, 52.60729 ], [ -1.47688, 52.60784 ], [ -1.47687, 52.60788 ], [ -1.47681, 52.60808 ], [ -1.47676, 52.60823 ], [ -1.47673, 52.60831 ], [ -1.47669, 52.60841 ], [ -1.47665, 52.60851 ], [ -1.47662, 52.60856 ], [ -1.47657, 52.60867 ], [ -1.47647, 52.60886 ], [ -1.4764, 52.60899 ], [ -1.47621, 52.60935 ], [ -1.47615, 52.60947 ], [ -1.47609, 52.6096 ], [ -1.47607, 52.60964 ], [ -1.47603, 52.60973 ], [ -1.476, 52.60981 ], [ -1.476, 52.60983 ], [ -1.476, 52.60984 ], [ -1.47593, 52.61004 ], [ -1.47589, 52.61017 ], [ -1.47588, 52.6102 ], [ -1.4758, 52.61044 ], [ -1.47576, 52.61056 ], [ -1.47572, 52.61068 ], [ -1.47569, 52.61075 ], [ -1.47567, 52.61079 ], [ -1.47563, 52.61089 ], [ -1.47556, 52.61103 ], [ -1.4755, 52.61113 ], [ -1.47543, 52.61125 ], [ -1.47541, 52.61129 ], [ -1.47528, 52.6115 ], [ -1.47524, 52.61157 ], [ -1.47519, 52.61166 ], [ -1.47512, 52.6118 ], [ -1.47512, 52.61181 ], [ -1.47506, 52.61194 ], [ -1.47501, 52.61207 ], [ -1.47494, 52.61227 ], [ -1.47487, 52.61245 ], [ -1.4748, 52.61261 ], [ -1.47478, 52.61265 ], [ -1.47475, 52.6127 ], [ -1.47471, 52.61276 ], [ -1.47467, 52.61282 ], [ -1.47462, 52.61288 ], [ -1.47457, 52.61295 ], [ -1.47449, 52.61304 ], [ -1.47441, 52.61314 ], [ -1.47439, 52.61316 ], [ -1.47431, 52.61329 ], [ -1.47426, 52.61337 ], [ -1.47424, 52.61342 ], [ -1.47418, 52.61354 ], [ -1.47413, 52.61371 ], [ -1.47408, 52.61388 ], [ -1.47404, 52.61403 ], [ -1.47398, 52.61428 ], [ -1.47393, 52.6145 ], [ -1.47389, 52.61469 ], [ -1.47389, 52.61471 ], [ -1.47388, 52.61485 ], [ -1.47386, 52.61499 ], [ -1.47386, 52.61512 ], [ -1.47387, 52.61527 ], [ -1.47388, 52.61535 ], [ -1.47389, 52.61542 ], [ -1.47391, 52.61555 ], [ -1.47395, 52.61575 ], [ -1.47404, 52.61601 ], [ -1.47408, 52.61612 ], [ -1.47413, 52.61623 ], [ -1.4742, 52.61637 ], [ -1.47426, 52.61649 ], [ -1.47433, 52.61662 ], [ -1.47442, 52.61677 ], [ -1.47459, 52.61699 ], [ -1.47468, 52.6171 ], [ -1.4747, 52.61712 ], [ -1.4748, 52.61723 ], [ -1.47483, 52.61726 ], [ -1.47485, 52.61728 ], [ -1.47504, 52.61746 ], [ -1.47515, 52.61756 ], [ -1.47519, 52.61759 ], [ -1.47529, 52.61768 ], [ -1.47533, 52.61771 ], [ -1.47542, 52.61778 ], [ -1.47554, 52.61787 ], [ -1.47555, 52.61788 ], [ -1.47569, 52.61797 ], [ -1.47593, 52.61814 ], [ -1.47596, 52.61815 ], [ -1.47603, 52.6182 ], [ -1.47614, 52.61827 ], [ -1.47631, 52.61838 ], [ -1.47655, 52.61853 ], [ -1.47666, 52.6186 ], [ -1.47695, 52.61879 ], [ -1.47696, 52.61879 ], [ -1.47725, 52.61897 ], [ -1.47736, 52.61905 ], [ -1.47744, 52.61909 ], [ -1.47757, 52.61917 ], [ -1.47786, 52.61937 ], [ -1.47792, 52.61941 ], [ -1.47814, 52.61956 ], [ -1.4783, 52.61968 ], [ -1.47833, 52.6197 ], [ -1.47855, 52.61986 ], [ -1.47868, 52.61996 ], [ -1.47887, 52.6201 ], [ -1.47916, 52.62032 ], [ -1.47943, 52.62052 ], [ -1.47969, 52.62072 ], [ -1.48036, 52.62122 ], [ -1.48054, 52.62136 ], [ -1.48076, 52.62152 ], [ -1.48113, 52.62182 ], [ -1.48126, 52.62193 ], [ -1.48135, 52.62201 ], [ -1.48146, 52.62211 ], [ -1.48154, 52.6222 ], [ -1.48165, 52.62232 ], [ -1.48171, 52.62239 ], [ -1.48178, 52.62248 ], [ -1.4819, 52.62266 ], [ -1.48197, 52.62277 ], [ -1.48209, 52.62302 ], [ -1.48211, 52.62307 ], [ -1.48215, 52.62318 ], [ -1.48217, 52.62325 ], [ -1.4822, 52.62333 ], [ -1.48222, 52.62342 ], [ -1.48225, 52.62351 ], [ -1.48227, 52.62363 ], [ -1.4823, 52.62378 ], [ -1.48239, 52.62432 ], [ -1.48245, 52.62458 ], [ -1.48249, 52.62467 ], [ -1.48255, 52.62485 ], [ -1.48259, 52.62497 ], [ -1.4827, 52.62517 ], [ -1.48275, 52.62525 ], [ -1.4828, 52.62534 ], [ -1.48291, 52.6255 ], [ -1.48303, 52.62565 ], [ -1.48316, 52.62579 ], [ -1.48334, 52.62597 ], [ -1.48345, 52.62606 ], [ -1.48354, 52.62613 ], [ -1.48371, 52.62627 ], [ -1.48388, 52.62639 ], [ -1.48408, 52.62652 ], [ -1.4843, 52.62664 ], [ -1.48451, 52.62675 ], [ -1.4852, 52.62708 ], [ -1.48523, 52.62709 ], [ -1.48615, 52.62751 ], [ -1.48675, 52.62778 ], [ -1.48684, 52.62783 ], [ -1.48703, 52.62792 ], [ -1.4877, 52.62822 ], [ -1.48776, 52.62825 ], [ -1.48824, 52.62849 ], [ -1.48855, 52.62867 ], [ -1.48866, 52.62874 ], [ -1.48872, 52.62878 ], [ -1.48902, 52.62899 ], [ -1.48925, 52.62916 ], [ -1.48963, 52.62947 ], [ -1.48975, 52.62959 ], [ -1.48991, 52.62974 ], [ -1.48992, 52.62975 ], [ -1.49016, 52.63002 ], [ -1.49029, 52.63017 ], [ -1.49038, 52.63029 ], [ -1.49045, 52.63038 ], [ -1.49054, 52.6305 ], [ -1.49057, 52.63055 ], [ -1.49065, 52.63067 ], [ -1.49089, 52.63105 ], [ -1.491, 52.63122 ], [ -1.49111, 52.63138 ], [ -1.49111, 52.63139 ], [ -1.49143, 52.63189 ], [ -1.49154, 52.63206 ], [ -1.49165, 52.63222 ], [ -1.49167, 52.63225 ], [ -1.49187, 52.63256 ], [ -1.49196, 52.6327 ], [ -1.49198, 52.63273 ], [ -1.49208, 52.63289 ], [ -1.4923, 52.63323 ], [ -1.49241, 52.6334 ], [ -1.49248, 52.63351 ], [ -1.49251, 52.63356 ], [ -1.49262, 52.63373 ], [ -1.49324, 52.6347 ], [ -1.49326, 52.63474 ], [ -1.49334, 52.63486 ], [ -1.49399, 52.63586 ], [ -1.49405, 52.63595 ], [ -1.49425, 52.63624 ], [ -1.49434, 52.63637 ], [ -1.49453, 52.63662 ], [ -1.49461, 52.63672 ], [ -1.49476, 52.63688 ], [ -1.49496, 52.63707 ], [ -1.49505, 52.63714 ], [ -1.4951, 52.63719 ], [ -1.49511, 52.6372 ], [ -1.49527, 52.63733 ], [ -1.49528, 52.63733 ], [ -1.49549, 52.63749 ], [ -1.49567, 52.6376 ], [ -1.49578, 52.63768 ], [ -1.49621, 52.63794 ], [ -1.49713, 52.63849 ], [ -1.49762, 52.63878 ], [ -1.49777, 52.63887 ], [ -1.49789, 52.63894 ], [ -1.49817, 52.63909 ], [ -1.49883, 52.63943 ], [ -1.49925, 52.63965 ], [ -1.49931, 52.63968 ], [ -1.49934, 52.6397 ], [ -1.49955, 52.63981 ], [ -1.49968, 52.63989 ], [ -1.4999, 52.64006 ], [ -1.50003, 52.64015 ], [ -1.50006, 52.64017 ], [ -1.50011, 52.64021 ], [ -1.50015, 52.64023 ], [ -1.50023, 52.64027 ], [ -1.5003, 52.6403 ], [ -1.50032, 52.64031 ], [ -1.50045, 52.64037 ], [ -1.50057, 52.64042 ], [ -1.5007, 52.64047 ], [ -1.50079, 52.6405 ], [ -1.50088, 52.64053 ], [ -1.501, 52.64056 ], [ -1.50106, 52.64058 ], [ -1.50111, 52.64059 ], [ -1.50117, 52.64061 ], [ -1.50144, 52.64066 ], [ -1.50159, 52.64069 ], [ -1.5018, 52.64072 ], [ -1.50206, 52.64077 ], [ -1.50235, 52.64082 ], [ -1.50291, 52.64093 ], [ -1.50304, 52.64098 ], [ -1.50311, 52.64101 ], [ -1.50317, 52.64104 ], [ -1.50328, 52.64109 ], [ -1.50344, 52.64116 ], [ -1.50358, 52.64123 ], [ -1.50368, 52.6413 ], [ -1.50385, 52.64141 ], [ -1.50394, 52.64147 ], [ -1.50463, 52.64189 ], [ -1.50507, 52.64214 ], [ -1.50525, 52.64226 ], [ -1.50587, 52.64273 ], [ -1.50588, 52.64273 ], [ -1.50589, 52.64273 ], [ -1.5059, 52.64273 ], [ -1.50591, 52.64273 ], [ -1.50592, 52.64273 ], [ -1.50593, 52.64273 ], [ -1.50594, 52.64273 ], [ -1.50595, 52.64274 ], [ -1.50596, 52.64274 ], [ -1.50597, 52.64274 ], [ -1.50597, 52.64275 ], [ -1.50598, 52.64275 ], [ -1.50598, 52.64276 ], [ -1.50599, 52.64276 ], [ -1.50599, 52.64277 ], [ -1.506, 52.64277 ], [ -1.506, 52.64278 ], [ -1.506, 52.64279 ], [ -1.506, 52.6428 ], [ -1.50632, 52.64308 ], [ -1.50646, 52.64326 ], [ -1.5065, 52.64332 ], [ -1.50651, 52.64333 ], [ -1.50665, 52.64363 ], [ -1.50666, 52.64366 ], [ -1.5067, 52.64378 ], [ -1.50674, 52.64392 ], [ -1.5068, 52.64423 ], [ -1.50693, 52.64448 ], [ -1.50698, 52.64457 ], [ -1.50706, 52.64471 ], [ -1.50727, 52.64503 ], [ -1.5073, 52.64507 ], [ -1.50759, 52.64549 ], [ -1.50805, 52.64609 ], [ -1.50836, 52.64644 ], [ -1.50838, 52.64646 ], [ -1.50843, 52.64652 ], [ -1.50856, 52.64665 ], [ -1.5091, 52.6472 ], [ -1.50931, 52.64739 ], [ -1.50981, 52.6478 ], [ -1.50982, 52.64781 ], [ -1.50989, 52.64787 ], [ -1.51001, 52.64796 ], [ -1.51118, 52.64896 ], [ -1.51121, 52.64898 ], [ -1.51127, 52.64904 ], [ -1.51213, 52.64977 ], [ -1.51235, 52.64998 ], [ -1.51255, 52.65014 ], [ -1.51283, 52.65034 ], [ -1.51302, 52.65048 ], [ -1.51321, 52.65058 ], [ -1.51332, 52.65065 ], [ -1.51339, 52.65069 ], [ -1.51347, 52.65073 ], [ -1.51357, 52.65078 ], [ -1.51392, 52.65093 ], [ -1.51438, 52.65112 ], [ -1.51451, 52.65117 ], [ -1.51469, 52.65124 ], [ -1.51509, 52.6514 ], [ -1.51535, 52.6515 ], [ -1.51572, 52.65164 ], [ -1.51574, 52.65165 ], [ -1.51591, 52.65171 ], [ -1.51594, 52.65172 ], [ -1.5163, 52.65182 ], [ -1.51677, 52.65197 ], [ -1.51705, 52.65205 ], [ -1.51727, 52.65212 ], [ -1.51773, 52.65225 ], [ -1.5188, 52.65255 ], [ -1.51891, 52.65258 ], [ -1.51913, 52.65264 ], [ -1.51915, 52.65265 ], [ -1.51958, 52.65276 ], [ -1.51985, 52.65282 ], [ -1.52082, 52.65302 ], [ -1.52084, 52.65302 ], [ -1.52127, 52.65311 ], [ -1.52154, 52.65317 ], [ -1.52217, 52.65329 ], [ -1.52223, 52.6533 ], [ -1.52228, 52.65331 ], [ -1.52258, 52.65337 ], [ -1.52285, 52.65341 ], [ -1.52327, 52.65348 ], [ -1.52353, 52.65351 ], [ -1.52384, 52.65354 ], [ -1.52419, 52.65356 ], [ -1.52443, 52.65356 ], [ -1.52464, 52.65356 ], [ -1.52472, 52.65355 ], [ -1.52503, 52.65352 ], [ -1.5253, 52.65348 ], [ -1.52545, 52.65346 ], [ -1.52614, 52.65338 ], [ -1.52672, 52.6533 ], [ -1.5273, 52.65323 ], [ -1.52753, 52.65321 ], [ -1.52772, 52.65321 ], [ -1.52775, 52.65321 ], [ -1.52787, 52.65322 ], [ -1.52797, 52.65323 ], [ -1.5281, 52.65324 ], [ -1.52827, 52.65328 ], [ -1.52848, 52.65332 ], [ -1.52915, 52.65354 ], [ -1.52964, 52.65371 ], [ -1.53001, 52.65382 ], [ -1.53051, 52.65401 ], [ -1.53127, 52.65428 ], [ -1.53174, 52.65444 ], [ -1.53175, 52.65444 ], [ -1.53225, 52.65462 ], [ -1.53265, 52.65475 ], [ -1.53333, 52.65499 ], [ -1.53354, 52.65508 ], [ -1.53379, 52.65518 ], [ -1.53401, 52.65529 ], [ -1.5343, 52.65546 ], [ -1.53547, 52.65617 ], [ -1.5363, 52.65668 ], [ -1.53669, 52.65692 ], [ -1.53679, 52.65698 ], [ -1.53715, 52.65721 ], [ -1.53723, 52.65726 ], [ -1.53733, 52.65733 ], [ -1.5374, 52.65739 ], [ -1.53746, 52.65744 ], [ -1.53761, 52.65762 ], [ -1.53835, 52.65877 ], [ -1.53854, 52.65905 ], [ -1.53864, 52.65927 ], [ -1.53872, 52.65945 ], [ -1.53886, 52.65989 ], [ -1.53888, 52.65998 ], [ -1.5389, 52.66005 ], [ -1.53894, 52.66026 ], [ -1.53899, 52.66053 ], [ -1.539, 52.66061 ], [ -1.539, 52.66066 ], [ -1.53902, 52.66086 ], [ -1.53906, 52.66143 ], [ -1.53907, 52.66186 ], [ -1.53907, 52.6619 ], [ -1.53907, 52.66204 ], [ -1.53908, 52.66265 ], [ -1.53907, 52.66276 ], [ -1.53907, 52.66294 ], [ -1.53907, 52.66369 ], [ -1.53907, 52.66384 ], [ -1.53907, 52.66436 ], [ -1.53906, 52.66456 ], [ -1.53905, 52.66479 ], [ -1.53904, 52.66494 ], [ -1.53902, 52.66507 ], [ -1.53902, 52.6651 ], [ -1.53899, 52.66527 ], [ -1.53899, 52.66528 ], [ -1.53893, 52.66546 ], [ -1.5389, 52.66554 ], [ -1.53885, 52.66569 ], [ -1.53878, 52.66584 ], [ -1.53873, 52.66595 ], [ -1.53867, 52.6661 ], [ -1.53863, 52.66619 ], [ -1.53859, 52.66633 ], [ -1.53857, 52.6664 ], [ -1.53855, 52.66648 ], [ -1.53853, 52.66661 ], [ -1.53852, 52.66667 ], [ -1.53851, 52.66677 ], [ -1.53851, 52.66686 ], [ -1.53849, 52.66708 ], [ -1.53854, 52.66736 ], [ -1.53858, 52.66758 ], [ -1.53862, 52.66771 ], [ -1.53869, 52.66788 ], [ -1.53875, 52.66802 ], [ -1.53879, 52.66811 ], [ -1.53881, 52.66815 ], [ -1.53883, 52.66819 ], [ -1.53888, 52.66828 ], [ -1.53892, 52.66836 ], [ -1.539, 52.66851 ], [ -1.53914, 52.6688 ], [ -1.53929, 52.66911 ], [ -1.53935, 52.66922 ], [ -1.53944, 52.6694 ], [ -1.53949, 52.66949 ], [ -1.53957, 52.66966 ], [ -1.53962, 52.66974 ], [ -1.5397, 52.66991 ], [ -1.53975, 52.67 ], [ -1.53977, 52.67004 ], [ -1.53979, 52.67008 ], [ -1.53995, 52.67041 ], [ -1.54003, 52.67057 ], [ -1.54011, 52.6707 ], [ -1.54018, 52.67082 ], [ -1.54027, 52.67093 ], [ -1.54031, 52.67099 ], [ -1.54033, 52.67102 ], [ -1.54038, 52.67108 ], [ -1.54039, 52.6711 ], [ -1.54044, 52.67117 ], [ -1.54053, 52.67126 ], [ -1.54066, 52.6714 ], [ -1.54067, 52.67142 ], [ -1.54074, 52.6715 ], [ -1.5409, 52.67167 ], [ -1.54113, 52.67195 ], [ -1.54127, 52.67217 ], [ -1.54135, 52.67232 ], [ -1.54137, 52.67236 ], [ -1.54143, 52.6725 ], [ -1.54149, 52.67261 ], [ -1.54155, 52.67279 ], [ -1.5416, 52.67298 ], [ -1.54164, 52.67317 ], [ -1.54166, 52.67328 ], [ -1.54167, 52.67337 ], [ -1.54169, 52.67346 ], [ -1.54169, 52.67347 ], [ -1.5417, 52.67355 ], [ -1.54172, 52.67364 ], [ -1.54172, 52.67365 ], [ -1.54174, 52.67373 ], [ -1.54175, 52.67375 ], [ -1.5418, 52.67391 ], [ -1.54183, 52.67398 ], [ -1.5419, 52.67411 ], [ -1.54198, 52.67424 ], [ -1.54204, 52.67432 ], [ -1.5421, 52.6744 ], [ -1.54222, 52.67455 ], [ -1.54232, 52.67465 ], [ -1.54236, 52.67468 ], [ -1.54241, 52.67472 ], [ -1.54249, 52.6748 ], [ -1.54259, 52.67487 ], [ -1.54269, 52.67495 ], [ -1.5428, 52.67502 ], [ -1.54282, 52.67504 ], [ -1.54287, 52.67507 ], [ -1.54296, 52.67512 ], [ -1.5431, 52.67521 ], [ -1.54317, 52.67525 ], [ -1.54348, 52.67544 ], [ -1.54393, 52.67574 ], [ -1.54417, 52.67591 ], [ -1.54419, 52.67593 ], [ -1.5444, 52.6761 ], [ -1.54451, 52.67621 ], [ -1.54468, 52.67641 ], [ -1.54477, 52.67651 ], [ -1.54481, 52.67657 ], [ -1.5449, 52.6767 ], [ -1.54502, 52.6769 ], [ -1.54511, 52.67706 ], [ -1.54524, 52.67735 ], [ -1.54534, 52.67761 ], [ -1.54539, 52.67775 ], [ -1.54547, 52.67803 ], [ -1.54549, 52.67812 ], [ -1.54552, 52.67835 ], [ -1.54554, 52.67862 ], [ -1.54555, 52.67885 ], [ -1.54554, 52.67902 ], [ -1.54553, 52.67904 ], [ -1.54552, 52.67921 ], [ -1.5455, 52.67936 ], [ -1.54548, 52.67943 ], [ -1.54532, 52.68033 ], [ -1.54526, 52.68066 ], [ -1.54518, 52.68115 ], [ -1.54518, 52.68116 ], [ -1.54512, 52.68152 ], [ -1.54508, 52.68182 ], [ -1.54508, 52.68189 ], [ -1.54507, 52.68205 ], [ -1.54508, 52.68225 ], [ -1.54508, 52.68233 ], [ -1.54509, 52.68251 ], [ -1.5451, 52.68258 ], [ -1.54514, 52.68279 ], [ -1.54518, 52.683 ], [ -1.54521, 52.68311 ], [ -1.54526, 52.68328 ], [ -1.54531, 52.68341 ], [ -1.5454, 52.68365 ], [ -1.54548, 52.68382 ], [ -1.54558, 52.684 ], [ -1.5458, 52.68444 ], [ -1.54581, 52.68446 ], [ -1.54597, 52.6848 ], [ -1.54602, 52.68494 ], [ -1.54608, 52.68511 ], [ -1.54613, 52.68528 ], [ -1.54616, 52.68543 ], [ -1.54619, 52.68559 ], [ -1.5462, 52.68616 ], [ -1.5461972, 52.6861573 ], [ -1.54625, 52.68631 ], [ -1.54627, 52.68639 ], [ -1.54628, 52.68672 ], [ -1.54631, 52.68695 ], [ -1.54634, 52.6871 ], [ -1.54641, 52.68732 ], [ -1.54653, 52.68765 ], [ -1.5466, 52.68781 ], [ -1.54669, 52.688 ], [ -1.54685, 52.68826 ], [ -1.54688, 52.68829 ], [ -1.54693, 52.68833 ], [ -1.54698, 52.68837 ], [ -1.54706, 52.68841 ], [ -1.54714, 52.68844 ], [ -1.54721, 52.68846 ], [ -1.54726, 52.68847 ], [ -1.54734, 52.68848 ], [ -1.54751, 52.68851 ], [ -1.54756, 52.68849 ], [ -1.54759, 52.68849 ], [ -1.54762, 52.68848 ], [ -1.54764, 52.68848 ], [ -1.54769, 52.68847 ], [ -1.54772, 52.68847 ], [ -1.54781, 52.68847 ], [ -1.5479, 52.68847 ], [ -1.54799, 52.68848 ], [ -1.54814, 52.6885 ], [ -1.54838, 52.68852 ], [ -1.54876, 52.68858 ], [ -1.54889, 52.6886 ], [ -1.54901, 52.68862 ], [ -1.54904, 52.68862 ], [ -1.54912, 52.68863 ], [ -1.54921, 52.68866 ], [ -1.54926, 52.68868 ], [ -1.54943, 52.68874 ], [ -1.54947, 52.68877 ], [ -1.5495, 52.68878 ], [ -1.54952, 52.6888 ], [ -1.54955, 52.68881 ], [ -1.54958, 52.68884 ], [ -1.54962, 52.68887 ], [ -1.54965, 52.68891 ], [ -1.54968, 52.68895 ], [ -1.5497, 52.689 ], [ -1.54971, 52.68901 ], [ -1.54972, 52.68904 ], [ -1.54974, 52.68909 ], [ -1.54975, 52.68913 ], [ -1.54975, 52.68918 ], [ -1.54976, 52.68922 ], [ -1.54975, 52.68925 ], [ -1.54974, 52.68929 ], [ -1.54973, 52.68931 ], [ -1.54972, 52.68933 ], [ -1.54971, 52.68935 ], [ -1.5497, 52.68937 ], [ -1.54969, 52.6894 ], [ -1.54971, 52.68945 ], [ -1.54976, 52.68953 ], [ -1.54981, 52.68968 ], [ -1.54988, 52.6898 ], [ -1.54991, 52.68984 ], [ -1.55003, 52.68997 ], [ -1.55005, 52.69 ], [ -1.55009, 52.69005 ], [ -1.55016, 52.69013 ], [ -1.55018, 52.69016 ], [ -1.55029, 52.6903 ], [ -1.55042, 52.69049 ], [ -1.55057, 52.69072 ], [ -1.55066, 52.69089 ], [ -1.55068, 52.69092 ], [ -1.55077, 52.6911 ], [ -1.55084, 52.69128 ], [ -1.55092, 52.69147 ], [ -1.55093, 52.6915 ], [ -1.55097, 52.69165 ], [ -1.55102, 52.69181 ], [ -1.55107, 52.69197 ], [ -1.55111, 52.69215 ], [ -1.55116, 52.69232 ], [ -1.55121, 52.69249 ], [ -1.55129, 52.69268 ], [ -1.55134, 52.69278 ], [ -1.55141, 52.69294 ], [ -1.55143, 52.69297 ], [ -1.5515, 52.69309 ], [ -1.55157, 52.69321 ], [ -1.55165, 52.69334 ], [ -1.55181, 52.69361 ], [ -1.55184, 52.69365 ], [ -1.55194, 52.69382 ], [ -1.55205, 52.69399 ], [ -1.55215, 52.69415 ], [ -1.55222, 52.69427 ], [ -1.55237, 52.69449 ], [ -1.55245, 52.69461 ], [ -1.5526, 52.69482 ], [ -1.55272, 52.69499 ], [ -1.55283, 52.69515 ], [ -1.55297, 52.69536 ], [ -1.55306, 52.69548 ], [ -1.55317, 52.69565 ], [ -1.55328, 52.69582 ], [ -1.55338, 52.69596 ], [ -1.5534, 52.69598 ], [ -1.55351, 52.69615 ], [ -1.55354, 52.69619 ], [ -1.55362, 52.69632 ], [ -1.55374, 52.69648 ], [ -1.55374, 52.69649 ], [ -1.55384, 52.69663 ], [ -1.55385, 52.69665 ], [ -1.55397, 52.69681 ], [ -1.554, 52.69686 ], [ -1.55409, 52.69698 ], [ -1.55416, 52.69707 ], [ -1.55421, 52.69714 ], [ -1.55433, 52.6973 ], [ -1.55445, 52.69745 ], [ -1.55459, 52.69761 ], [ -1.5546, 52.69763 ], [ -1.55476, 52.69779 ], [ -1.5549, 52.69794 ], [ -1.55497, 52.69801 ], [ -1.55505, 52.69811 ], [ -1.55512, 52.69819 ], [ -1.55516, 52.69826 ], [ -1.55518, 52.69831 ], [ -1.5552, 52.69834 ], [ -1.55521, 52.69839 ], [ -1.55523, 52.69848 ], [ -1.55525, 52.6986 ], [ -1.55525, 52.69869 ], [ -1.55525, 52.69876 ], [ -1.55525, 52.69879 ], [ -1.55527, 52.69896 ], [ -1.55526, 52.69915 ], [ -1.55525, 52.69926 ], [ -1.55522, 52.69936 ], [ -1.5552, 52.69945 ], [ -1.55519, 52.69951 ], [ -1.55516, 52.69959 ], [ -1.55512, 52.69969 ], [ -1.5551, 52.69975 ], [ -1.55505, 52.69986 ], [ -1.55503, 52.69991 ], [ -1.55497, 52.70003 ], [ -1.55494, 52.70009 ], [ -1.55489, 52.70021 ], [ -1.55489, 52.70023 ], [ -1.55484, 52.70034 ], [ -1.5548, 52.70046 ], [ -1.55475, 52.70065 ], [ -1.5547, 52.7009 ], [ -1.55468, 52.70101 ], [ -1.55464, 52.70125 ], [ -1.55463, 52.70148 ], [ -1.55463, 52.70165 ], [ -1.55463, 52.70181 ], [ -1.55463, 52.70183 ], [ -1.55465, 52.70198 ], [ -1.55465, 52.70199 ], [ -1.55468, 52.7021 ], [ -1.55472, 52.70219 ], [ -1.55479, 52.70234 ], [ -1.55488, 52.70252 ], [ -1.55494, 52.70263 ], [ -1.55496, 52.70269 ], [ -1.55498, 52.70273 ], [ -1.555, 52.7028 ], [ -1.55501, 52.70289 ], [ -1.55499, 52.703 ], [ -1.55483, 52.70347 ], [ -1.55481, 52.70353 ], [ -1.55479, 52.70359 ], [ -1.55477, 52.70368 ], [ -1.55476, 52.7037 ], [ -1.55474, 52.70379 ], [ -1.55473, 52.7039 ], [ -1.55473, 52.70398 ], [ -1.55473, 52.70406 ], [ -1.55475, 52.70421 ], [ -1.55475, 52.70424 ], [ -1.55476, 52.70433 ], [ -1.55477, 52.70446 ], [ -1.5548, 52.7046 ], [ -1.5548, 52.70463 ], [ -1.55484, 52.70478 ], [ -1.55484, 52.70481 ], [ -1.5549, 52.70497 ], [ -1.55495, 52.7051 ], [ -1.55505, 52.7053 ], [ -1.55506, 52.70533 ], [ -1.5552, 52.7056 ], [ -1.55533, 52.70586 ], [ -1.55539, 52.70599 ], [ -1.55542, 52.70604 ], [ -1.55552, 52.70625 ], [ -1.55561, 52.70643 ], [ -1.55578, 52.70683 ], [ -1.55586, 52.707 ], [ -1.55587, 52.70703 ], [ -1.55595, 52.70723 ], [ -1.556, 52.70738 ], [ -1.556, 52.70739 ], [ -1.55604, 52.70755 ], [ -1.55604, 52.70756 ], [ -1.55608, 52.70774 ], [ -1.55609, 52.70776 ], [ -1.55611, 52.7079 ], [ -1.55611, 52.70792 ], [ -1.55613, 52.70811 ], [ -1.55614, 52.70826 ], [ -1.55614, 52.70846 ], [ -1.55613, 52.7087 ], [ -1.55611, 52.70887 ], [ -1.55609, 52.70901 ], [ -1.55606, 52.70912 ], [ -1.55605, 52.70917 ], [ -1.55602, 52.70932 ], [ -1.55597, 52.70951 ], [ -1.55591, 52.70974 ], [ -1.55586, 52.70993 ], [ -1.55578, 52.71026 ], [ -1.55567, 52.71071 ], [ -1.55562, 52.71094 ], [ -1.55557, 52.7112 ], [ -1.55553, 52.71143 ], [ -1.55549, 52.71175 ], [ -1.55549, 52.71182 ], [ -1.55549, 52.71189 ], [ -1.55549, 52.71194 ], [ -1.55549, 52.71199 ], [ -1.5555, 52.71203 ], [ -1.55551, 52.71207 ], [ -1.55556, 52.71216 ], [ -1.55559, 52.71224 ], [ -1.55571, 52.71243 ], [ -1.55586, 52.71268 ], [ -1.55591, 52.71276 ], [ -1.55607, 52.71298 ], [ -1.55614, 52.71308 ], [ -1.55624, 52.71318 ], [ -1.55632, 52.71328 ], [ -1.55645, 52.71338 ], [ -1.55652, 52.71344 ], [ -1.55663, 52.71351 ], [ -1.55711, 52.7138 ], [ -1.55718, 52.71385 ], [ -1.55734, 52.71395 ], [ -1.55737, 52.71397 ], [ -1.55749, 52.71406 ], [ -1.55753, 52.71409 ], [ -1.55763, 52.71416 ], [ -1.55787, 52.71434 ], [ -1.55797, 52.71442 ], [ -1.55834, 52.71468 ], [ -1.55845, 52.71477 ], [ -1.55847, 52.71479 ], [ -1.55863, 52.71491 ], [ -1.55872, 52.71497 ], [ -1.55885, 52.71506 ], [ -1.5589, 52.71509 ], [ -1.55896, 52.71512 ], [ -1.55906, 52.71516 ], [ -1.55916, 52.71519 ], [ -1.55924, 52.71521 ], [ -1.5595, 52.71529 ], [ -1.55972, 52.71536 ], [ -1.55998, 52.71546 ], [ -1.56008, 52.71551 ], [ -1.56021, 52.71558 ], [ -1.56046, 52.71571 ], [ -1.56107, 52.71603 ], [ -1.56125, 52.71612 ], [ -1.56141, 52.71622 ], [ -1.56147, 52.71625 ], [ -1.56152, 52.71629 ], [ -1.56158, 52.71635 ], [ -1.56162, 52.7164 ], [ -1.56165, 52.71645 ], [ -1.56167, 52.7165 ], [ -1.56167, 52.71654 ], [ -1.56168, 52.71658 ], [ -1.56167, 52.71664 ], [ -1.56166, 52.7167 ], [ -1.56164, 52.71676 ], [ -1.5616, 52.71687 ], [ -1.56155, 52.71701 ], [ -1.56155, 52.71702 ], [ -1.56148, 52.71718 ], [ -1.56142, 52.71736 ], [ -1.5613, 52.71768 ], [ -1.56124, 52.71786 ], [ -1.56121, 52.71797 ], [ -1.56119, 52.71805 ], [ -1.56118, 52.7183 ], [ -1.56117, 52.71847 ], [ -1.56116, 52.71863 ], [ -1.56112, 52.71878 ], [ -1.5611, 52.71887 ], [ -1.56104, 52.71902 ], [ -1.561, 52.7191 ], [ -1.56096, 52.7192 ], [ -1.56089, 52.71932 ], [ -1.56085, 52.71942 ], [ -1.56079, 52.71958 ], [ -1.56078, 52.71959 ], [ -1.56074, 52.71974 ], [ -1.56068, 52.71992 ], [ -1.5606, 52.7202 ], [ -1.56058, 52.72029 ], [ -1.56053, 52.72047 ], [ -1.56051, 52.72055 ], [ -1.56042, 52.72083 ], [ -1.56039, 52.72094 ], [ -1.56037, 52.721 ], [ -1.56025, 52.7214 ], [ -1.5602, 52.72153 ], [ -1.56013, 52.72177 ], [ -1.56004, 52.72201 ], [ -1.55996, 52.7222 ], [ -1.5599, 52.72232 ], [ -1.55985, 52.72241 ], [ -1.55982, 52.72247 ], [ -1.5597, 52.72269 ], [ -1.55959, 52.72289 ], [ -1.55953, 52.72302 ], [ -1.55947, 52.72318 ], [ -1.55942, 52.72331 ], [ -1.55939, 52.72343 ], [ -1.55933, 52.72366 ], [ -1.5593, 52.7238 ], [ -1.55927, 52.72398 ], [ -1.55926, 52.72412 ], [ -1.55925, 52.7242 ], [ -1.55924, 52.72439 ], [ -1.55924, 52.72453 ], [ -1.55925, 52.72465 ], [ -1.55927, 52.72476 ], [ -1.55929, 52.72488 ], [ -1.55934, 52.72501 ], [ -1.5594, 52.72515 ], [ -1.55947, 52.72529 ], [ -1.55955, 52.7254 ], [ -1.55966, 52.72556 ], [ -1.55969, 52.72559 ], [ -1.55979, 52.72572 ], [ -1.55981, 52.72575 ], [ -1.55994, 52.72592 ], [ -1.56006, 52.72608 ], [ -1.56011, 52.72616 ], [ -1.56016, 52.72622 ], [ -1.56022, 52.72634 ], [ -1.56026, 52.72642 ], [ -1.56029, 52.72649 ], [ -1.56034, 52.72659 ], [ -1.56036, 52.72663 ], [ -1.56041, 52.72677 ], [ -1.56044, 52.72684 ], [ -1.56048, 52.72694 ], [ -1.56049, 52.72697 ], [ -1.56053, 52.72709 ], [ -1.56056, 52.72721 ], [ -1.56058, 52.7273 ], [ -1.56059, 52.72734 ], [ -1.56064, 52.72755 ], [ -1.56068, 52.72775 ], [ -1.5607, 52.72784 ], [ -1.56073, 52.72801 ], [ -1.56076, 52.72815 ], [ -1.56077, 52.72819 ], [ -1.56081, 52.72837 ], [ -1.56084, 52.7285 ], [ -1.56085, 52.72854 ], [ -1.56087, 52.7286 ], [ -1.56091, 52.72872 ], [ -1.56092, 52.72875 ], [ -1.56096, 52.72886 ], [ -1.56098, 52.7289 ], [ -1.561, 52.72895 ], [ -1.56106, 52.72907 ], [ -1.56114, 52.72924 ], [ -1.56118, 52.72931 ], [ -1.56131, 52.72959 ], [ -1.56141, 52.72977 ], [ -1.56148, 52.72993 ], [ -1.56156, 52.73008 ], [ -1.56171, 52.73039 ], [ -1.56183, 52.73062 ], [ -1.56184, 52.73065 ], [ -1.56192, 52.73079 ], [ -1.56204, 52.73101 ], [ -1.56218, 52.73127 ], [ -1.5622, 52.7313 ], [ -1.56229, 52.73146 ], [ -1.56238, 52.73162 ], [ -1.56242, 52.73169 ], [ -1.56247, 52.73178 ], [ -1.56254, 52.73191 ], [ -1.56259, 52.73201 ], [ -1.56263, 52.73212 ], [ -1.56267, 52.73224 ], [ -1.56274, 52.73244 ], [ -1.56281, 52.73262 ], [ -1.56284, 52.73268 ], [ -1.56287, 52.73274 ], [ -1.56291, 52.7328 ], [ -1.56305, 52.733 ], [ -1.56331, 52.73335 ], [ -1.56346, 52.73355 ], [ -1.56356, 52.73369 ], [ -1.56385, 52.7341 ], [ -1.56413, 52.73449 ], [ -1.56421, 52.7346 ], [ -1.56452, 52.73499 ], [ -1.56468, 52.7352 ], [ -1.56478, 52.73532 ], [ -1.56489, 52.73545 ], [ -1.56494, 52.7355 ], [ -1.56508, 52.73564 ], [ -1.56554, 52.73611 ], [ -1.56567, 52.73625 ], [ -1.56569, 52.73628 ], [ -1.56584, 52.73644 ], [ -1.56605, 52.73668 ], [ -1.56627, 52.73692 ], [ -1.56642, 52.73705 ], [ -1.56642, 52.73706 ], [ -1.56652, 52.73715 ], [ -1.5666, 52.73721 ], [ -1.56668, 52.73727 ], [ -1.56674, 52.73732 ], [ -1.56694, 52.73748 ], [ -1.56707, 52.73758 ], [ -1.5671, 52.73761 ], [ -1.56722, 52.73769 ], [ -1.56747, 52.73786 ], [ -1.56773, 52.73804 ], [ -1.56831, 52.73842 ], [ -1.56835, 52.73845 ], [ -1.56854, 52.73857 ], [ -1.56873, 52.73871 ], [ -1.56876, 52.73873 ], [ -1.56887, 52.73881 ], [ -1.56908, 52.73895 ], [ -1.56909, 52.73896 ], [ -1.56945, 52.7392 ], [ -1.56949, 52.73923 ], [ -1.56965, 52.73934 ], [ -1.56978, 52.73943 ], [ -1.56985, 52.73948 ], [ -1.56994, 52.73954 ], [ -1.56999, 52.73959 ], [ -1.57002, 52.73962 ], [ -1.57008, 52.73968 ], [ -1.57014, 52.73975 ], [ -1.57015, 52.73978 ], [ -1.57024, 52.7399 ], [ -1.57027, 52.73994 ], [ -1.57034, 52.74005 ], [ -1.57038, 52.74011 ], [ -1.57046, 52.74022 ], [ -1.57059, 52.74041 ], [ -1.57061, 52.74044 ], [ -1.57072, 52.74059 ], [ -1.57079, 52.74068 ], [ -1.5709, 52.74083 ], [ -1.57098, 52.74093 ], [ -1.57118, 52.74118 ], [ -1.57128, 52.7413 ], [ -1.57139, 52.74146 ], [ -1.5715, 52.74164 ], [ -1.57155, 52.74173 ], [ -1.57163, 52.74191 ], [ -1.57168, 52.74204 ], [ -1.57172, 52.74215 ], [ -1.57173, 52.7422 ], [ -1.57174, 52.74226 ], [ -1.57175, 52.74233 ], [ -1.57175, 52.74237 ], [ -1.57174, 52.7424 ], [ -1.57173, 52.74245 ], [ -1.57172, 52.74249 ], [ -1.5717, 52.74255 ], [ -1.57167, 52.74263 ], [ -1.57163, 52.7427 ], [ -1.57159, 52.74278 ], [ -1.57154, 52.74286 ], [ -1.57147, 52.74298 ], [ -1.57142, 52.74309 ], [ -1.57137, 52.74317 ], [ -1.57136, 52.74321 ], [ -1.57134, 52.74324 ], [ -1.57133, 52.74328 ], [ -1.57132, 52.74331 ], [ -1.57132, 52.74334 ], [ -1.57131, 52.74336 ], [ -1.57131, 52.74342 ], [ -1.57131, 52.74347 ], [ -1.57131, 52.74348 ], [ -1.57132, 52.74353 ], [ -1.57133, 52.74361 ], [ -1.57138, 52.74376 ], [ -1.57142, 52.74383 ], [ -1.57143, 52.74384 ], [ -1.57147, 52.74389 ], [ -1.5715, 52.74393 ], [ -1.57155, 52.74397 ], [ -1.57161, 52.74401 ], [ -1.57167, 52.74405 ], [ -1.57178, 52.74411 ], [ -1.57226, 52.74436 ], [ -1.57234, 52.74441 ], [ -1.57243, 52.74446 ], [ -1.57246, 52.74449 ], [ -1.5726, 52.74458 ], [ -1.57272, 52.74468 ], [ -1.57279, 52.74476 ], [ -1.57288, 52.74488 ], [ -1.57296, 52.74499 ], [ -1.57305, 52.74513 ], [ -1.57311, 52.74524 ], [ -1.57318, 52.74537 ], [ -1.57322, 52.74546 ], [ -1.57326, 52.74555 ], [ -1.57328, 52.74566 ], [ -1.5733, 52.74578 ], [ -1.5733, 52.74579 ], [ -1.5733, 52.7459 ], [ -1.57329, 52.74615 ], [ -1.57327, 52.74649 ], [ -1.57326, 52.74668 ], [ -1.57326, 52.74677 ], [ -1.57327, 52.74681 ], [ -1.57328, 52.74685 ], [ -1.57329, 52.74688 ], [ -1.57332, 52.74693 ], [ -1.57328, 52.74694 ], [ -1.57327, 52.74694 ], [ -1.57327, 52.74695 ], [ -1.57326, 52.74695 ], [ -1.57325, 52.74696 ], [ -1.57324, 52.74696 ], [ -1.57324, 52.74697 ], [ -1.57323, 52.74697 ], [ -1.57322, 52.74698 ], [ -1.57322, 52.74699 ], [ -1.57321, 52.74699 ], [ -1.57321, 52.747 ], [ -1.5732, 52.74701 ], [ -1.5732, 52.74702 ], [ -1.5732, 52.74703 ], [ -1.5732, 52.74704 ], [ -1.5732, 52.74705 ], [ -1.5732, 52.74706 ], [ -1.57321, 52.74707 ], [ -1.57321, 52.74708 ], [ -1.57322, 52.7471 ], [ -1.57324, 52.74712 ], [ -1.57325, 52.74712 ], [ -1.57326, 52.74713 ], [ -1.57327, 52.74713 ], [ -1.57328, 52.74714 ], [ -1.57329, 52.74714 ], [ -1.5733, 52.74715 ], [ -1.57331, 52.74715 ], [ -1.57332, 52.74715 ], [ -1.57333, 52.74716 ], [ -1.57334, 52.74716 ], [ -1.57335, 52.74716 ], [ -1.57336, 52.74716 ], [ -1.57337, 52.74716 ], [ -1.57339, 52.74716 ], [ -1.5734, 52.74716 ], [ -1.57341, 52.74716 ], [ -1.57342, 52.74716 ], [ -1.57345, 52.74716 ], [ -1.57346, 52.7472 ], [ -1.57347, 52.74724 ], [ -1.57347, 52.74728 ], [ -1.57346, 52.74735 ], [ -1.57342, 52.74747 ], [ -1.57339, 52.7476 ], [ -1.57337, 52.74772 ], [ -1.57335, 52.74783 ], [ -1.57335, 52.74791 ], [ -1.57335, 52.74794 ], [ -1.57336, 52.74804 ], [ -1.57336, 52.74812 ], [ -1.57337, 52.7483 ], [ -1.57337, 52.74833 ], [ -1.57338, 52.74856 ], [ -1.57338, 52.7488 ], [ -1.57337, 52.74899 ], [ -1.57337, 52.74912 ], [ -1.57337, 52.74946 ], [ -1.57337, 52.74964 ], [ -1.57338, 52.74987 ], [ -1.57338, 52.74996 ], [ -1.5734, 52.75013 ], [ -1.57342, 52.75027 ], [ -1.57346, 52.75044 ], [ -1.57348, 52.75051 ], [ -1.57349, 52.75055 ], [ -1.57351, 52.75057 ], [ -1.57353, 52.75063 ], [ -1.57359, 52.75078 ], [ -1.57362, 52.75085 ], [ -1.57367, 52.75095 ], [ -1.57372, 52.75106 ], [ -1.57378, 52.75118 ], [ -1.57391, 52.75139 ], [ -1.57398, 52.75152 ], [ -1.57405, 52.75164 ], [ -1.57414, 52.75179 ], [ -1.57419, 52.75187 ], [ -1.5743, 52.75204 ], [ -1.57453, 52.7524 ], [ -1.5747, 52.75266 ], [ -1.57494, 52.75305 ], [ -1.57508, 52.75328 ], [ -1.5752, 52.75345 ], [ -1.57536, 52.75372 ], [ -1.57551, 52.75396 ], [ -1.57568, 52.75423 ], [ -1.576, 52.75475 ], [ -1.57612, 52.75492 ], [ -1.57617, 52.755 ], [ -1.57623, 52.75507 ], [ -1.57631, 52.75517 ], [ -1.5764, 52.75527 ], [ -1.57648, 52.75535 ], [ -1.57659, 52.75545 ], [ -1.57671, 52.75555 ], [ -1.57672, 52.75555 ], [ -1.57686, 52.75566 ], [ -1.57697, 52.75574 ], [ -1.57706, 52.7558 ], [ -1.57715, 52.75586 ], [ -1.57727, 52.75593 ], [ -1.5773, 52.75595 ], [ -1.57737, 52.75598 ], [ -1.57741, 52.75601 ], [ -1.57758, 52.75609 ], [ -1.57773, 52.75617 ], [ -1.57789, 52.75624 ], [ -1.57798, 52.75627 ], [ -1.57806, 52.7563 ], [ -1.57819, 52.75636 ], [ -1.57824, 52.75637 ], [ -1.57841, 52.75643 ], [ -1.57851, 52.75646 ], [ -1.57863, 52.7565 ], [ -1.57876, 52.75653 ], [ -1.57889, 52.75657 ], [ -1.57901, 52.7566 ], [ -1.57914, 52.75663 ], [ -1.57925, 52.75665 ], [ -1.57936, 52.75667 ], [ -1.57955, 52.75671 ], [ -1.57966, 52.75672 ], [ -1.57971, 52.75673 ], [ -1.5798, 52.75674 ], [ -1.57996, 52.75676 ], [ -1.58008, 52.75678 ], [ -1.58019, 52.75679 ], [ -1.58033, 52.7568 ], [ -1.58041, 52.7568 ], [ -1.58065, 52.75682 ], [ -1.58081, 52.75683 ], [ -1.58093, 52.75684 ], [ -1.58098, 52.75685 ], [ -1.58104, 52.75685 ], [ -1.58112, 52.75686 ], [ -1.58122, 52.75687 ], [ -1.58151, 52.75693 ], [ -1.58149, 52.75696 ], [ -1.58148, 52.757 ], [ -1.58147, 52.75706 ], [ -1.58148, 52.7571 ], [ -1.58149, 52.75727 ], [ -1.5815, 52.75729 ], [ -1.58151, 52.75731 ], [ -1.58153, 52.75733 ], [ -1.58154, 52.75735 ], [ -1.58157, 52.75737 ], [ -1.58161, 52.7574 ], [ -1.58165, 52.75742 ], [ -1.58168, 52.75742 ], [ -1.58171, 52.75743 ], [ -1.58175, 52.75744 ], [ -1.58178, 52.75744 ], [ -1.58181, 52.75745 ], [ -1.58185, 52.75745 ], [ -1.58188, 52.75744 ], [ -1.58191, 52.75744 ], [ -1.58194, 52.75744 ], [ -1.58197, 52.75743 ], [ -1.582, 52.75742 ], [ -1.58205, 52.7574 ], [ -1.58209, 52.75738 ], [ -1.58222, 52.75743 ], [ -1.58233, 52.75748 ], [ -1.58246, 52.75756 ], [ -1.58256, 52.75761 ], [ -1.58281, 52.75776 ], [ -1.58323, 52.75799 ], [ -1.58343, 52.7581 ], [ -1.58376, 52.75829 ], [ -1.58409, 52.75847 ], [ -1.5841, 52.75848 ], [ -1.58442, 52.75865 ], [ -1.5848, 52.75886 ], [ -1.58494, 52.75894 ], [ -1.58509, 52.75901 ], [ -1.58515, 52.75904 ], [ -1.58522, 52.75907 ], [ -1.5853, 52.7591 ], [ -1.5854, 52.75915 ], [ -1.58551, 52.75919 ], [ -1.58585, 52.75933 ], [ -1.58607, 52.75942 ], [ -1.58627, 52.7595 ], [ -1.58638, 52.75955 ], [ -1.58648, 52.75959 ], [ -1.58653, 52.75961 ], [ -1.58666, 52.75967 ], [ -1.58679, 52.75974 ], [ -1.58695, 52.75983 ], [ -1.58708, 52.7599 ], [ -1.58715, 52.75994 ], [ -1.58727, 52.76002 ], [ -1.58744, 52.76012 ], [ -1.58751, 52.76017 ], [ -1.58758, 52.76021 ], [ -1.58764, 52.76025 ], [ -1.5877, 52.76029 ], [ -1.58782, 52.76038 ], [ -1.58794, 52.76046 ], [ -1.58805, 52.76055 ], [ -1.58818, 52.76066 ], [ -1.5882, 52.76067 ], [ -1.58834, 52.7608 ], [ -1.58844, 52.7609 ], [ -1.58852, 52.76097 ], [ -1.58863, 52.76107 ], [ -1.58877, 52.76121 ], [ -1.58892, 52.76135 ], [ -1.58904, 52.76146 ], [ -1.58912, 52.76153 ], [ -1.58937, 52.76176 ], [ -1.58956, 52.76194 ], [ -1.58969, 52.76206 ], [ -1.5897, 52.76208 ], [ -1.58983, 52.7622 ], [ -1.59002, 52.76238 ], [ -1.59016, 52.76253 ], [ -1.59031, 52.76271 ], [ -1.59041, 52.76283 ], [ -1.59052, 52.76299 ], [ -1.59062, 52.76314 ], [ -1.59072, 52.76329 ], [ -1.59078, 52.7634 ], [ -1.59083, 52.7635 ], [ -1.59086, 52.76357 ], [ -1.59093, 52.76375 ], [ -1.59101, 52.76396 ], [ -1.59103, 52.76404 ], [ -1.59112, 52.76423 ], [ -1.59133, 52.76473 ], [ -1.59133, 52.76474 ], [ -1.59142, 52.76496 ], [ -1.59156, 52.7653 ], [ -1.5917, 52.76566 ], [ -1.59196, 52.76629 ], [ -1.59209, 52.76659 ], [ -1.59212, 52.76666 ], [ -1.59215, 52.76671 ], [ -1.59218, 52.76676 ], [ -1.59222, 52.76681 ], [ -1.5923, 52.76692 ], [ -1.59228, 52.76693 ], [ -1.59227, 52.76694 ], [ -1.59226, 52.76695 ], [ -1.59224, 52.76695 ], [ -1.59223, 52.76696 ], [ -1.59222, 52.76697 ], [ -1.59221, 52.76698 ], [ -1.5922, 52.76699 ], [ -1.5922, 52.767 ], [ -1.59219, 52.76701 ], [ -1.59219, 52.76702 ], [ -1.59218, 52.76703 ], [ -1.59218, 52.76704 ], [ -1.59218, 52.76705 ], [ -1.59218, 52.76706 ], [ -1.59218, 52.76707 ], [ -1.59219, 52.76708 ], [ -1.5922, 52.76711 ], [ -1.59222, 52.76713 ], [ -1.59223, 52.76714 ], [ -1.59224, 52.76715 ], [ -1.59225, 52.76715 ], [ -1.59226, 52.76716 ], [ -1.59227, 52.76717 ], [ -1.59229, 52.76717 ], [ -1.5923, 52.76718 ], [ -1.59231, 52.76718 ], [ -1.59233, 52.76719 ], [ -1.59234, 52.76719 ], [ -1.59236, 52.76719 ], [ -1.59237, 52.76719 ], [ -1.59239, 52.7672 ], [ -1.5924, 52.7672 ], [ -1.59242, 52.7672 ], [ -1.59244, 52.7672 ], [ -1.59245, 52.7672 ], [ -1.59247, 52.76719 ], [ -1.59248, 52.76719 ], [ -1.59251, 52.76719 ], [ -1.59254, 52.76718 ], [ -1.59258, 52.76723 ], [ -1.5926, 52.76727 ], [ -1.59262, 52.76731 ], [ -1.59264, 52.76737 ], [ -1.5927, 52.76755 ], [ -1.59271, 52.76757 ], [ -1.59274, 52.76765 ], [ -1.59277, 52.76771 ], [ -1.59278, 52.76774 ], [ -1.59281, 52.7678 ], [ -1.59281, 52.76781 ], [ -1.59284, 52.76787 ], [ -1.5929, 52.76798 ], [ -1.59296, 52.76809 ], [ -1.593, 52.76815 ], [ -1.59304, 52.76821 ], [ -1.59308, 52.76826 ], [ -1.59312, 52.76831 ], [ -1.59312, 52.76832 ], [ -1.59316, 52.76837 ], [ -1.59324, 52.76847 ], [ -1.59325, 52.76848 ], [ -1.59325, 52.76849 ], [ -1.59331, 52.76856 ], [ -1.59338, 52.76864 ], [ -1.59338, 52.76865 ], [ -1.59343, 52.7687 ], [ -1.5935, 52.76878 ], [ -1.59362, 52.76892 ], [ -1.5937, 52.769 ], [ -1.59381, 52.76912 ], [ -1.59386, 52.76917 ], [ -1.59393, 52.76925 ], [ -1.59395, 52.76927 ], [ -1.59396, 52.76928 ], [ -1.59405, 52.76937 ], [ -1.59412, 52.76943 ], [ -1.59424, 52.76954 ], [ -1.59426, 52.76956 ], [ -1.59429, 52.76958 ], [ -1.5944, 52.76969 ], [ -1.59445, 52.76973 ], [ -1.59469, 52.76993 ], [ -1.59481, 52.77003 ], [ -1.59497, 52.77017 ], [ -1.59498, 52.77018 ], [ -1.59506, 52.77024 ], [ -1.59534, 52.77047 ], [ -1.59567, 52.77075 ], [ -1.59605, 52.77107 ], [ -1.59621, 52.77122 ], [ -1.59632, 52.77134 ], [ -1.59648, 52.77154 ], [ -1.59653, 52.77159 ], [ -1.59657, 52.77166 ], [ -1.59667, 52.77181 ], [ -1.59678, 52.77196 ], [ -1.59689, 52.77212 ], [ -1.59694, 52.77219 ], [ -1.597, 52.77229 ], [ -1.59702, 52.77233 ], [ -1.59714, 52.77252 ], [ -1.59723, 52.77266 ], [ -1.59729, 52.77275 ], [ -1.59738, 52.77289 ], [ -1.59745, 52.77298 ], [ -1.59747, 52.773 ], [ -1.59747, 52.77301 ], [ -1.59756, 52.7731 ], [ -1.59759, 52.77314 ], [ -1.5977, 52.77324 ], [ -1.59778, 52.77332 ], [ -1.59787, 52.77339 ], [ -1.59804, 52.77352 ], [ -1.59819, 52.77363 ], [ -1.59851, 52.77386 ], [ -1.59861, 52.77394 ], [ -1.59876, 52.77405 ], [ -1.59906, 52.77427 ], [ -1.59925, 52.77439 ], [ -1.59933, 52.77444 ], [ -1.59945, 52.77451 ], [ -1.59949, 52.77453 ], [ -1.59978, 52.7747 ], [ -1.60001, 52.77482 ], [ -1.60006, 52.77485 ], [ -1.60026, 52.77496 ], [ -1.60049, 52.77508 ], [ -1.60053, 52.7751 ], [ -1.60075, 52.77523 ], [ -1.60124, 52.7755 ], [ -1.6014, 52.77559 ], [ -1.60158, 52.7757 ], [ -1.60161, 52.77572 ], [ -1.60194, 52.77592 ], [ -1.60203, 52.77598 ], [ -1.60224, 52.77611 ], [ -1.60233, 52.77617 ], [ -1.60256, 52.7763 ], [ -1.60266, 52.77636 ], [ -1.60267, 52.77636 ], [ -1.6028, 52.77643 ], [ -1.60289, 52.77647 ], [ -1.60304, 52.77655 ], [ -1.60315, 52.7766 ], [ -1.6033, 52.77666 ], [ -1.60343, 52.7767 ], [ -1.60357, 52.77675 ], [ -1.6037, 52.77679 ], [ -1.60384, 52.77682 ], [ -1.60404, 52.77687 ], [ -1.60435, 52.77695 ], [ -1.60446, 52.77697 ], [ -1.60473, 52.77704 ], [ -1.60488, 52.77707 ], [ -1.60532, 52.77718 ], [ -1.60555, 52.77725 ], [ -1.60556, 52.77725 ], [ -1.60568, 52.77728 ], [ -1.6058, 52.77732 ], [ -1.60587, 52.77735 ], [ -1.60599, 52.7774 ], [ -1.60604, 52.77743 ], [ -1.60612, 52.77748 ], [ -1.60618, 52.77752 ], [ -1.60625, 52.77758 ], [ -1.60629, 52.77762 ], [ -1.60634, 52.77768 ], [ -1.60638, 52.77772 ], [ -1.60641, 52.77776 ], [ -1.60644, 52.7778 ], [ -1.60647, 52.77786 ], [ -1.6065, 52.77793 ], [ -1.60651, 52.77798 ], [ -1.60653, 52.77804 ], [ -1.60654, 52.7781 ], [ -1.60655, 52.77819 ], [ -1.60656, 52.77826 ], [ -1.60656, 52.77831 ], [ -1.60657, 52.77842 ], [ -1.60657, 52.77853 ], [ -1.60657, 52.77862 ], [ -1.60657, 52.77875 ], [ -1.60657, 52.77903 ], [ -1.60659, 52.77935 ], [ -1.6066, 52.77948 ], [ -1.60661, 52.77952 ], [ -1.60662, 52.77957 ], [ -1.60664, 52.77964 ], [ -1.60667, 52.77972 ], [ -1.6067, 52.77979 ], [ -1.60674, 52.77989 ], [ -1.60678, 52.77995 ], [ -1.60681, 52.78 ], [ -1.60691, 52.78012 ], [ -1.60696, 52.78018 ], [ -1.607, 52.78022 ], [ -1.60707, 52.78028 ], [ -1.60717, 52.78037 ], [ -1.60727, 52.78045 ], [ -1.60742, 52.78057 ], [ -1.60743, 52.78058 ], [ -1.60813, 52.78116 ], [ -1.60837, 52.78134 ], [ -1.60853, 52.78146 ], [ -1.60863, 52.78153 ], [ -1.60902, 52.78176 ], [ -1.60915, 52.78183 ], [ -1.60939, 52.78196 ], [ -1.60975, 52.78214 ], [ -1.61016, 52.78235 ], [ -1.61043, 52.78248 ], [ -1.61071, 52.7826 ], [ -1.61094, 52.7827 ], [ -1.61118, 52.78279 ], [ -1.61122, 52.78281 ], [ -1.61153, 52.78294 ], [ -1.61189, 52.7831 ], [ -1.6122, 52.78325 ], [ -1.61243, 52.78338 ], [ -1.61312, 52.78373 ], [ -1.61359, 52.78398 ], [ -1.61377, 52.78409 ], [ -1.61429, 52.78439 ], [ -1.61459, 52.78458 ], [ -1.61474, 52.78465 ], [ -1.61517, 52.7849 ], [ -1.61542, 52.78505 ], [ -1.61566, 52.7852 ], [ -1.61579, 52.78529 ], [ -1.61582, 52.78531 ], [ -1.61599, 52.78544 ], [ -1.61614, 52.78556 ], [ -1.61626, 52.78567 ], [ -1.61638, 52.78578 ], [ -1.61647, 52.78587 ], [ -1.61647, 52.78588 ], [ -1.61657, 52.78598 ], [ -1.6167, 52.78612 ], [ -1.61682, 52.78627 ], [ -1.61697, 52.78648 ], [ -1.61708, 52.78665 ], [ -1.61725, 52.78691 ], [ -1.61756, 52.78737 ], [ -1.61778, 52.7877 ], [ -1.6179, 52.78787 ], [ -1.618, 52.78802 ], [ -1.61813, 52.78822 ], [ -1.61845, 52.78864 ], [ -1.61847, 52.78867 ], [ -1.61864, 52.78889 ], [ -1.61873, 52.789 ], [ -1.61875, 52.78903 ], [ -1.61889, 52.78923 ], [ -1.61895, 52.78933 ], [ -1.61902, 52.78944 ], [ -1.61909, 52.78958 ], [ -1.61917, 52.78976 ], [ -1.61921, 52.78985 ], [ -1.61924, 52.78993 ], [ -1.6195, 52.79075 ], [ -1.61956, 52.79095 ], [ -1.61963, 52.79117 ], [ -1.61964, 52.79122 ], [ -1.61965, 52.79126 ], [ -1.61966, 52.79132 ], [ -1.61965, 52.7914 ], [ -1.6196, 52.79158 ], [ -1.61962, 52.79158 ], [ -1.61963, 52.79159 ], [ -1.61964, 52.79159 ], [ -1.61965, 52.7916 ], [ -1.61966, 52.7916 ], [ -1.61966, 52.79161 ], [ -1.61967, 52.79161 ], [ -1.61967, 52.79162 ], [ -1.61968, 52.79162 ], [ -1.61968, 52.79163 ], [ -1.61968, 52.79164 ], [ -1.61968, 52.79165 ], [ -1.61968, 52.79166 ], [ -1.61968, 52.79167 ], [ -1.61968, 52.79168 ], [ -1.61967, 52.79168 ], [ -1.61967, 52.79169 ], [ -1.61966, 52.79169 ], [ -1.61965, 52.7917 ], [ -1.61971, 52.79177 ], [ -1.61974, 52.79182 ], [ -1.61977, 52.79186 ], [ -1.61982, 52.79196 ], [ -1.61992, 52.79227 ], [ -1.62006, 52.79266 ], [ -1.6201, 52.79278 ], [ -1.62012, 52.79281 ], [ -1.62014, 52.79288 ], [ -1.62016, 52.79294 ], [ -1.62017, 52.79302 ], [ -1.62019, 52.79317 ], [ -1.6202, 52.79342 ], [ -1.62022, 52.79368 ], [ -1.62024, 52.79387 ], [ -1.62026, 52.79404 ], [ -1.62027, 52.79407 ], [ -1.62028, 52.79424 ], [ -1.62031, 52.79444 ], [ -1.62032, 52.79452 ], [ -1.62033, 52.79456 ], [ -1.62034, 52.79462 ], [ -1.62036, 52.79467 ], [ -1.62037, 52.79471 ], [ -1.62041, 52.79475 ], [ -1.62044, 52.79478 ], [ -1.62047, 52.79481 ], [ -1.62051, 52.79484 ], [ -1.62057, 52.79487 ], [ -1.62063, 52.7949 ], [ -1.62075, 52.79494 ], [ -1.6207474, 52.7949374 ], [ -1.62065, 52.7951 ], [ -1.62048, 52.79541 ], [ -1.62043, 52.79554 ], [ -1.62032, 52.79585 ], [ -1.62026, 52.79607 ], [ -1.62024, 52.79617 ], [ -1.62024, 52.79638 ], [ -1.62024, 52.79639 ], [ -1.62031, 52.79656 ], [ -1.62033, 52.79658 ], [ -1.62043, 52.79672 ], [ -1.62052, 52.79683 ], [ -1.62058, 52.79688 ], [ -1.62085, 52.79706 ], [ -1.621, 52.79713 ], [ -1.62113, 52.79718 ], [ -1.62129, 52.79725 ], [ -1.62156, 52.79739 ], [ -1.62167, 52.79744 ], [ -1.62202, 52.79771 ], [ -1.62231, 52.79794 ], [ -1.62273, 52.79832 ], [ -1.62279, 52.79836 ], [ -1.62295, 52.79843 ], [ -1.6229508, 52.7984298 ], [ -1.62286, 52.79859 ], [ -1.62273, 52.79879 ], [ -1.62264, 52.79894 ], [ -1.62253, 52.79911 ], [ -1.62219, 52.79971 ], [ -1.62208, 52.79989 ], [ -1.62204, 52.79997 ], [ -1.62195, 52.80019 ], [ -1.62193, 52.80022 ], [ -1.62183, 52.80053 ], [ -1.62177, 52.80075 ], [ -1.62176, 52.8008 ], [ -1.62173, 52.80093 ], [ -1.6217, 52.8011 ], [ -1.62167, 52.80129 ], [ -1.62159, 52.80164 ], [ -1.62152, 52.80191 ], [ -1.6215, 52.802 ], [ -1.62136, 52.80253 ], [ -1.62132, 52.80267 ], [ -1.62126, 52.80286 ], [ -1.62118, 52.80306 ], [ -1.62116, 52.8031 ], [ -1.6211, 52.80323 ], [ -1.62103, 52.80336 ], [ -1.62085, 52.80365 ], [ -1.62068, 52.80386 ], [ -1.62045, 52.80413 ], [ -1.62018, 52.80446 ], [ -1.61989, 52.80478 ], [ -1.61956, 52.80515 ], [ -1.61937, 52.80537 ], [ -1.6193, 52.80545 ], [ -1.61924, 52.80555 ], [ -1.61922, 52.80558 ], [ -1.61919, 52.80564 ], [ -1.61917, 52.80567 ], [ -1.61916, 52.80572 ], [ -1.61916, 52.80577 ], [ -1.61916, 52.80584 ], [ -1.6191574, 52.8058362 ], [ -1.61926, 52.8059 ], [ -1.61929, 52.80591 ], [ -1.61958, 52.80597 ], [ -1.61998, 52.80602 ], [ -1.62021, 52.80607 ], [ -1.62048, 52.80611 ], [ -1.62133, 52.80628 ], [ -1.6231, 52.80661 ], [ -1.62338, 52.80667 ], [ -1.62388, 52.80676 ], [ -1.62417, 52.80682 ], [ -1.62454, 52.80689 ], [ -1.62474, 52.80692 ], [ -1.62478, 52.80693 ], [ -1.62487, 52.80694 ], [ -1.62495, 52.80695 ], [ -1.6251, 52.80696 ], [ -1.62535, 52.80697 ], [ -1.62564, 52.80697 ], [ -1.62611, 52.80698 ], [ -1.62651, 52.80701 ], [ -1.62715, 52.80703 ], [ -1.62754, 52.80705 ], [ -1.62848, 52.80708 ], [ -1.6286, 52.80708 ], [ -1.62872, 52.80709 ], [ -1.62887, 52.8071 ], [ -1.62907, 52.80712 ], [ -1.62921, 52.80713 ], [ -1.62927, 52.80714 ], [ -1.62947, 52.80717 ], [ -1.62954, 52.80718 ], [ -1.62958, 52.80719 ], [ -1.6296, 52.80719 ], [ -1.62969, 52.8072 ], [ -1.62977, 52.80722 ], [ -1.62987, 52.80725 ], [ -1.6299, 52.80726 ], [ -1.63002, 52.80729 ], [ -1.63007, 52.80731 ], [ -1.63027, 52.80737 ], [ -1.63104, 52.80763 ], [ -1.63137, 52.80777 ], [ -1.63146, 52.80781 ], [ -1.63173, 52.80793 ], [ -1.63192, 52.80803 ], [ -1.63202, 52.80808 ], [ -1.6323, 52.80824 ], [ -1.63252, 52.8084 ], [ -1.63256, 52.80843 ], [ -1.63283, 52.80864 ], [ -1.63305, 52.80883 ], [ -1.63327, 52.80903 ], [ -1.63341, 52.8092 ], [ -1.63347, 52.80928 ], [ -1.63349, 52.8093 ], [ -1.63364, 52.80951 ], [ -1.63365, 52.80953 ], [ -1.63377, 52.80971 ], [ -1.63387, 52.80989 ], [ -1.63406, 52.81022 ], [ -1.63424, 52.81056 ], [ -1.63429, 52.81066 ], [ -1.63437, 52.81079 ], [ -1.63449, 52.81102 ], [ -1.63479, 52.8116 ], [ -1.63494, 52.81188 ], [ -1.63498, 52.81194 ], [ -1.6351, 52.81216 ], [ -1.63523, 52.8124 ], [ -1.6354, 52.8127 ], [ -1.63552, 52.81294 ], [ -1.63554, 52.81299 ], [ -1.63564, 52.8132 ], [ -1.63567, 52.8132 ], [ -1.63568, 52.8132 ], [ -1.63569, 52.8132 ], [ -1.6357, 52.8132 ], [ -1.63571, 52.8132 ], [ -1.63572, 52.8132 ], [ -1.63573, 52.8132 ], [ -1.63574, 52.8132 ], [ -1.63575, 52.8132 ], [ -1.63576, 52.8132 ], [ -1.63576, 52.81321 ], [ -1.63577, 52.81321 ], [ -1.63578, 52.81321 ], [ -1.63579, 52.81321 ], [ -1.6358, 52.81322 ], [ -1.63581, 52.81322 ], [ -1.63581, 52.81323 ], [ -1.63582, 52.81323 ], [ -1.63583, 52.81323 ], [ -1.63583, 52.81324 ], [ -1.63585, 52.81325 ], [ -1.63586, 52.81327 ], [ -1.63587, 52.81328 ], [ -1.63587, 52.81329 ], [ -1.63587, 52.8133 ], [ -1.63587, 52.81331 ], [ -1.63587, 52.81332 ], [ -1.63587, 52.81333 ], [ -1.63587, 52.81334 ], [ -1.63586, 52.81335 ], [ -1.63586, 52.81336 ], [ -1.63585, 52.81337 ], [ -1.63584, 52.81338 ], [ -1.63583, 52.81338 ], [ -1.63582, 52.81339 ], [ -1.63581, 52.8134 ], [ -1.63578, 52.81341 ], [ -1.63603, 52.81359 ], [ -1.63622, 52.81376 ], [ -1.63631, 52.81384 ], [ -1.63663, 52.81417 ], [ -1.63668, 52.81421 ], [ -1.63711, 52.81464 ], [ -1.6373, 52.81483 ], [ -1.63752, 52.81506 ], [ -1.63829, 52.8158 ], [ -1.63865, 52.81616 ], [ -1.63871, 52.81623 ], [ -1.63876, 52.81628 ], [ -1.6388, 52.81634 ], [ -1.63884, 52.81639 ], [ -1.63889, 52.81647 ], [ -1.63894, 52.81656 ], [ -1.639, 52.81672 ], [ -1.63912, 52.81705 ], [ -1.63929, 52.81765 ], [ -1.63948, 52.81813 ], [ -1.63955, 52.81835 ], [ -1.63959, 52.81849 ], [ -1.63963, 52.81858 ], [ -1.63965, 52.81864 ], [ -1.6397, 52.81875 ], [ -1.63977, 52.81887 ], [ -1.63985, 52.81906 ], [ -1.63986, 52.81908 ], [ -1.63994, 52.81925 ], [ -1.64002, 52.81951 ], [ -1.64004, 52.81956 ], [ -1.64016, 52.81994 ], [ -1.64022, 52.8201 ], [ -1.64035, 52.8203 ], [ -1.64052, 52.82058 ], [ -1.64073, 52.82089 ], [ -1.64082, 52.82104 ], [ -1.64088, 52.82113 ], [ -1.64097, 52.82125 ], [ -1.64117, 52.82149 ], [ -1.6413, 52.82164 ], [ -1.6414, 52.82173 ], [ -1.64152, 52.82183 ], [ -1.64169, 52.82196 ], [ -1.64189, 52.82212 ], [ -1.64213, 52.82232 ], [ -1.64224, 52.82242 ], [ -1.64235, 52.82253 ], [ -1.64268, 52.82283 ], [ -1.64293, 52.82306 ], [ -1.64294, 52.82307 ], [ -1.64307, 52.82319 ], [ -1.64319, 52.82329 ], [ -1.64339, 52.82345 ], [ -1.64361, 52.8236 ], [ -1.6437, 52.82365 ], [ -1.64378, 52.8237 ], [ -1.64405, 52.82383 ], [ -1.64425, 52.82393 ], [ -1.64436, 52.82397 ], [ -1.64447, 52.82402 ], [ -1.64463, 52.82406 ], [ -1.64483, 52.82408 ], [ -1.64504, 52.8241 ], [ -1.6452, 52.8241 ], [ -1.6457, 52.82409 ], [ -1.64602, 52.82408 ], [ -1.64614, 52.82408 ], [ -1.6463, 52.82408 ], [ -1.64648, 52.82408 ], [ -1.64655, 52.82408 ], [ -1.64674, 52.82408 ], [ -1.6469, 52.82409 ], [ -1.647, 52.8241 ], [ -1.64705, 52.82411 ], [ -1.6471, 52.82411 ], [ -1.64723, 52.82414 ], [ -1.64736, 52.82417 ], [ -1.64747, 52.8242 ], [ -1.64753, 52.82422 ], [ -1.6476, 52.82424 ], [ -1.64766, 52.82426 ], [ -1.64771, 52.82429 ], [ -1.64776, 52.82431 ], [ -1.64782, 52.82435 ], [ -1.64796, 52.82446 ], [ -1.6481, 52.82468 ], [ -1.64812, 52.82472 ], [ -1.6482, 52.82484 ], [ -1.64829, 52.82505 ], [ -1.6483, 52.82506 ], [ -1.64836, 52.82519 ], [ -1.6484, 52.82528 ], [ -1.64847, 52.8254 ], [ -1.64854, 52.82552 ], [ -1.64865, 52.82567 ], [ -1.6488, 52.82586 ], [ -1.64895, 52.82601 ], [ -1.649, 52.82605 ], [ -1.64931, 52.82632 ], [ -1.64952, 52.82647 ], [ -1.64969, 52.82659 ], [ -1.64972, 52.82662 ], [ -1.64992, 52.82675 ], [ -1.65002, 52.82683 ], [ -1.65025, 52.82701 ], [ -1.65051, 52.82728 ], [ -1.65069, 52.82749 ], [ -1.65074, 52.82755 ], [ -1.65078, 52.8276 ], [ -1.65093, 52.82779 ], [ -1.65105, 52.82793 ], [ -1.65108, 52.82798 ], [ -1.65118, 52.8281 ], [ -1.65129, 52.82822 ], [ -1.65159, 52.82857 ], [ -1.65185, 52.82887 ], [ -1.65205, 52.82911 ], [ -1.65226, 52.82936 ], [ -1.65237, 52.8295 ], [ -1.65244, 52.82961 ], [ -1.65251, 52.82971 ], [ -1.65259, 52.82983 ], [ -1.65272, 52.83007 ], [ -1.65277, 52.83015 ], [ -1.65279, 52.83019 ], [ -1.65284, 52.83025 ], [ -1.65284, 52.83028 ], [ -1.6529, 52.83048 ], [ -1.65288, 52.8305 ], [ -1.65287, 52.83051 ], [ -1.65286, 52.83052 ], [ -1.65286, 52.83053 ], [ -1.65285, 52.83054 ], [ -1.65285, 52.83055 ], [ -1.65285, 52.83056 ], [ -1.65285, 52.83057 ], [ -1.65285, 52.83058 ], [ -1.65285, 52.83059 ], [ -1.65285, 52.8306 ], [ -1.65285, 52.83061 ], [ -1.65286, 52.83062 ], [ -1.65286, 52.83063 ], [ -1.65287, 52.83064 ], [ -1.65288, 52.83065 ], [ -1.65289, 52.83066 ], [ -1.6529, 52.83067 ], [ -1.65292, 52.83069 ], [ -1.65307, 52.83082 ], [ -1.65318, 52.83096 ], [ -1.65322, 52.83106 ], [ -1.65326, 52.8312 ], [ -1.65329, 52.83135 ], [ -1.65334, 52.83152 ], [ -1.6534, 52.83185 ], [ -1.65342, 52.83199 ], [ -1.6535, 52.83246 ], [ -1.65362, 52.83311 ], [ -1.65364, 52.83317 ], [ -1.65372, 52.83348 ], [ -1.65389, 52.8339 ], [ -1.65391, 52.83394 ], [ -1.654, 52.8341 ], [ -1.65428, 52.83457 ], [ -1.65443, 52.83482 ], [ -1.65451, 52.83494 ], [ -1.65461, 52.8351 ], [ -1.65471, 52.83524 ], [ -1.65472, 52.83525 ], [ -1.65477, 52.83532 ], [ -1.65485, 52.8354 ], [ -1.65486, 52.83541 ], [ -1.65494, 52.83548 ], [ -1.65499, 52.83552 ], [ -1.65509, 52.83559 ], [ -1.65517, 52.83564 ], [ -1.65525, 52.83569 ], [ -1.65538, 52.83574 ], [ -1.65551, 52.83579 ], [ -1.65574, 52.83586 ], [ -1.65577, 52.83587 ], [ -1.65626, 52.83598 ], [ -1.65681, 52.8361 ], [ -1.65737, 52.83623 ], [ -1.65768, 52.8363 ], [ -1.65805, 52.83639 ], [ -1.65834, 52.83647 ], [ -1.65847, 52.83651 ], [ -1.65921, 52.83671 ], [ -1.65929, 52.83673 ], [ -1.65985, 52.83689 ], [ -1.66069, 52.83711 ], [ -1.66112, 52.83724 ], [ -1.6614, 52.83734 ], [ -1.66167, 52.83746 ], [ -1.66221, 52.83771 ], [ -1.66316, 52.83818 ], [ -1.66379, 52.83848 ], [ -1.66387, 52.83852 ], [ -1.66402, 52.83859 ], [ -1.6647, 52.83892 ], [ -1.66506, 52.8391 ], [ -1.66508, 52.83911 ], [ -1.66578, 52.83945 ], [ -1.66625, 52.83968 ], [ -1.66671, 52.8399 ], [ -1.66705, 52.84006 ], [ -1.66732, 52.84019 ], [ -1.66841, 52.84073 ], [ -1.66856, 52.8408 ], [ -1.66894, 52.84099 ], [ -1.66903, 52.84104 ], [ -1.66915, 52.84111 ], [ -1.66945, 52.84126 ], [ -1.66993, 52.8415 ], [ -1.6703, 52.84169 ], [ -1.67034, 52.84172 ], [ -1.67083, 52.84197 ], [ -1.67094, 52.84203 ], [ -1.67139, 52.84225 ], [ -1.67164, 52.84238 ], [ -1.67209, 52.84261 ], [ -1.67254, 52.84284 ], [ -1.67291, 52.84303 ], [ -1.67326, 52.84321 ], [ -1.67356, 52.84337 ], [ -1.67359, 52.84339 ], [ -1.67377, 52.84349 ], [ -1.67397, 52.84363 ], [ -1.67398, 52.84364 ], [ -1.67413, 52.84375 ], [ -1.67416, 52.84377 ], [ -1.67428, 52.84387 ], [ -1.67434, 52.84392 ], [ -1.67453, 52.84408 ], [ -1.67485, 52.84436 ], [ -1.67503, 52.8445 ], [ -1.67523, 52.84468 ], [ -1.67555, 52.84497 ], [ -1.67604, 52.84541 ], [ -1.67636, 52.84572 ], [ -1.67663, 52.84599 ], [ -1.67665, 52.84601 ], [ -1.67679, 52.84617 ], [ -1.67686, 52.84624 ], [ -1.67709, 52.84648 ], [ -1.67712, 52.84652 ], [ -1.67723, 52.84664 ], [ -1.67741, 52.84685 ], [ -1.67765, 52.84713 ], [ -1.67785, 52.84739 ], [ -1.67809, 52.84768 ], [ -1.67823, 52.84787 ], [ -1.67828, 52.84793 ], [ -1.67836, 52.84805 ], [ -1.6784, 52.8481 ], [ -1.67849, 52.84819 ], [ -1.67877, 52.84856 ], [ -1.67879, 52.84858 ], [ -1.6789, 52.84875 ], [ -1.67908, 52.84902 ], [ -1.67935, 52.84944 ], [ -1.67952, 52.84976 ], [ -1.67956, 52.84982 ], [ -1.67961, 52.84993 ], [ -1.67975, 52.85028 ], [ -1.67979, 52.85037 ], [ -1.67981, 52.85045 ], [ -1.67984, 52.85054 ], [ -1.67994, 52.85083 ], [ -1.67998, 52.85098 ], [ -1.68002, 52.85111 ], [ -1.68003, 52.85115 ], [ -1.68009, 52.85136 ], [ -1.68013, 52.85151 ], [ -1.68015, 52.85162 ], [ -1.68025, 52.852 ], [ -1.68033, 52.85232 ], [ -1.68036, 52.85248 ], [ -1.68037, 52.85258 ], [ -1.68038, 52.85267 ], [ -1.68039, 52.85282 ], [ -1.68035, 52.85282 ], [ -1.68033, 52.85283 ], [ -1.68031, 52.85283 ], [ -1.68029, 52.85284 ], [ -1.68028, 52.85284 ], [ -1.68026, 52.85285 ], [ -1.68024, 52.85286 ], [ -1.68023, 52.85286 ], [ -1.68021, 52.85287 ], [ -1.6802, 52.85288 ], [ -1.68019, 52.85289 ], [ -1.68018, 52.8529 ], [ -1.68017, 52.85291 ], [ -1.68016, 52.85292 ], [ -1.68015, 52.85293 ], [ -1.68015, 52.85295 ], [ -1.68014, 52.85296 ], [ -1.68014, 52.853 ], [ -1.68014, 52.85301 ], [ -1.68014, 52.85302 ], [ -1.68015, 52.85303 ], [ -1.68015, 52.85304 ], [ -1.68016, 52.85306 ], [ -1.68017, 52.85307 ], [ -1.68017, 52.85308 ], [ -1.68018, 52.85309 ], [ -1.6802, 52.8531 ], [ -1.68021, 52.85311 ], [ -1.68022, 52.85311 ], [ -1.68024, 52.85312 ], [ -1.68025, 52.85313 ], [ -1.68027, 52.85314 ], [ -1.68029, 52.85314 ], [ -1.6803, 52.85315 ], [ -1.68032, 52.85315 ], [ -1.68034, 52.85316 ], [ -1.68037, 52.85316 ], [ -1.68041, 52.85316 ], [ -1.68034, 52.85351 ], [ -1.68029, 52.85379 ], [ -1.68022, 52.85403 ], [ -1.68016, 52.85423 ], [ -1.68011, 52.85436 ], [ -1.6801, 52.85441 ], [ -1.68008, 52.85447 ], [ -1.68004, 52.85456 ], [ -1.67996, 52.85476 ], [ -1.67983, 52.85508 ], [ -1.67941, 52.85606 ], [ -1.67934, 52.85625 ], [ -1.6792, 52.85668 ], [ -1.67917, 52.85678 ], [ -1.67913, 52.85708 ], [ -1.67912, 52.85726 ], [ -1.67912, 52.85731 ], [ -1.67912, 52.85743 ], [ -1.67914, 52.8576 ], [ -1.67915, 52.85767 ], [ -1.67918, 52.85785 ], [ -1.67921, 52.85797 ], [ -1.67922, 52.85803 ], [ -1.67924, 52.85809 ], [ -1.67929, 52.85824 ], [ -1.67939, 52.85849 ], [ -1.67951, 52.85874 ], [ -1.67968, 52.85903 ], [ -1.67983, 52.85925 ], [ -1.68007, 52.85952 ], [ -1.68009, 52.85955 ], [ -1.68029, 52.85975 ], [ -1.68054, 52.85998 ], [ -1.68072, 52.86013 ], [ -1.68097, 52.8603 ], [ -1.68109, 52.86038 ], [ -1.6814, 52.86057 ], [ -1.68169, 52.86073 ], [ -1.68182, 52.8608 ], [ -1.68185, 52.86082 ], [ -1.6819, 52.86084 ], [ -1.68205, 52.86092 ], [ -1.68219, 52.86098 ], [ -1.68239, 52.86107 ], [ -1.68254, 52.86112 ], [ -1.6826, 52.86115 ], [ -1.68285, 52.86124 ], [ -1.68286, 52.86125 ], [ -1.68286, 52.86126 ], [ -1.68287, 52.86126 ], [ -1.68287, 52.86127 ], [ -1.68288, 52.86127 ], [ -1.68289, 52.86128 ], [ -1.6829, 52.86129 ], [ -1.68291, 52.86129 ], [ -1.68292, 52.8613 ], [ -1.68293, 52.8613 ], [ -1.68294, 52.86131 ], [ -1.68295, 52.86131 ], [ -1.68296, 52.86131 ], [ -1.68297, 52.86131 ], [ -1.68297, 52.86132 ], [ -1.68298, 52.86132 ], [ -1.68299, 52.86132 ], [ -1.683, 52.86132 ], [ -1.68301, 52.86132 ], [ -1.68302, 52.86132 ], [ -1.68303, 52.86132 ], [ -1.68304, 52.86132 ], [ -1.68305, 52.86132 ], [ -1.68306, 52.86132 ], [ -1.68307, 52.86132 ], [ -1.68308, 52.86132 ], [ -1.68309, 52.86131 ], [ -1.6831, 52.86131 ], [ -1.68313, 52.8613 ], [ -1.68315, 52.8614 ], [ -1.68316, 52.86144 ], [ -1.68316, 52.86148 ], [ -1.68316, 52.86152 ], [ -1.68316, 52.86155 ], [ -1.68313, 52.86167 ], [ -1.68311, 52.86178 ], [ -1.68302, 52.86216 ], [ -1.683, 52.86224 ], [ -1.68296, 52.86237 ], [ -1.68286, 52.86274 ], [ -1.68278, 52.86304 ], [ -1.68277, 52.86309 ], [ -1.6827, 52.86332 ], [ -1.68264, 52.86344 ], [ -1.68259, 52.86355 ], [ -1.68243, 52.86386 ], [ -1.6823, 52.86408 ], [ -1.68226, 52.86414 ], [ -1.68224, 52.86417 ], [ -1.68204, 52.86451 ], [ -1.68187, 52.86476 ], [ -1.68174, 52.86497 ], [ -1.68159, 52.86525 ], [ -1.68152, 52.8654 ], [ -1.68151, 52.8654 ], [ -1.6815, 52.8654 ], [ -1.68149, 52.8654 ], [ -1.68148, 52.8654 ], [ -1.68147, 52.86541 ], [ -1.68146, 52.86541 ], [ -1.68145, 52.86541 ], [ -1.68145, 52.86542 ], [ -1.68144, 52.86542 ], [ -1.68144, 52.86543 ], [ -1.68143, 52.86543 ], [ -1.68143, 52.86544 ], [ -1.68143, 52.86545 ], [ -1.68143, 52.86546 ], [ -1.68144, 52.86547 ], [ -1.68144, 52.86548 ], [ -1.68145, 52.86548 ], [ -1.68146, 52.86548 ], [ -1.68146, 52.86549 ], [ -1.68147, 52.86549 ], [ -1.68148, 52.86549 ], [ -1.68131, 52.8658 ], [ -1.68104, 52.86633 ], [ -1.68083, 52.86676 ], [ -1.68063, 52.86716 ], [ -1.68058, 52.86726 ], [ -1.68046, 52.86754 ], [ -1.68032, 52.86807 ], [ -1.68028, 52.86822 ], [ -1.6801, 52.86895 ], [ -1.67995, 52.86953 ], [ -1.67979, 52.87016 ], [ -1.67971, 52.87047 ], [ -1.67962, 52.87081 ], [ -1.67952, 52.87114 ], [ -1.6795, 52.87122 ], [ -1.67949, 52.87129 ], [ -1.6794, 52.87164 ], [ -1.67927, 52.87213 ], [ -1.6791, 52.87264 ], [ -1.67906, 52.87277 ], [ -1.67901, 52.873 ], [ -1.67897, 52.87312 ], [ -1.67897, 52.87313 ], [ -1.6789, 52.87356 ], [ -1.67889, 52.87378 ], [ -1.67889, 52.87395 ], [ -1.67891, 52.87428 ], [ -1.67893, 52.87449 ], [ -1.67895, 52.87471 ], [ -1.6789509, 52.8747139 ], [ -1.67909, 52.87472 ], [ -1.68003, 52.87476 ], [ -1.68007, 52.87476 ], [ -1.68082, 52.8748 ], [ -1.68142, 52.87482 ], [ -1.68276, 52.87488 ], [ -1.68378, 52.87493 ], [ -1.68478, 52.87498 ], [ -1.68525, 52.875 ], [ -1.68554, 52.87502 ], [ -1.68565, 52.87502 ], [ -1.68749, 52.87511 ], [ -1.68773, 52.87512 ], [ -1.68844, 52.87517 ], [ -1.68935, 52.87525 ], [ -1.68984, 52.87529 ], [ -1.69045, 52.87534 ], [ -1.69082, 52.87537 ], [ -1.69123, 52.8754 ], [ -1.69188, 52.87546 ], [ -1.69235, 52.87552 ], [ -1.69281, 52.87558 ], [ -1.69301, 52.87561 ], [ -1.69325, 52.87567 ], [ -1.69343, 52.87571 ], [ -1.69349, 52.87573 ], [ -1.69378, 52.87581 ], [ -1.69396, 52.87587 ], [ -1.69427, 52.87598 ], [ -1.69471, 52.87616 ], [ -1.69521, 52.87637 ], [ -1.69541, 52.87646 ], [ -1.6962, 52.87679 ], [ -1.69679, 52.87704 ], [ -1.69758, 52.87738 ], [ -1.69764, 52.8774 ], [ -1.69791, 52.87752 ], [ -1.69814, 52.87763 ], [ -1.69851, 52.87783 ], [ -1.69897, 52.87812 ], [ -1.6991, 52.87822 ], [ -1.69923, 52.87831 ], [ -1.69948, 52.87852 ], [ -1.69963, 52.87866 ], [ -1.69996, 52.87899 ], [ -1.70006, 52.87913 ], [ -1.70021, 52.8793 ], [ -1.70036, 52.87953 ], [ -1.70052, 52.87979 ], [ -1.7005, 52.87989 ], [ -1.70047, 52.87996 ], [ -1.70043, 52.88003 ], [ -1.70038, 52.88013 ], [ -1.70034, 52.88018 ], [ -1.70034, 52.88022 ], [ -1.70034, 52.88025 ], [ -1.70034, 52.88027 ], [ -1.70035, 52.8803 ], [ -1.70036, 52.88032 ], [ -1.70038, 52.88034 ], [ -1.7004, 52.88036 ], [ -1.70042, 52.88038 ], [ -1.70045, 52.8804 ], [ -1.70048, 52.88042 ], [ -1.70051, 52.88043 ], [ -1.70055, 52.88045 ], [ -1.70059, 52.88046 ], [ -1.70065, 52.88047 ], [ -1.70073, 52.88047 ], [ -1.7008, 52.8805 ], [ -1.70084, 52.88053 ], [ -1.70097, 52.88064 ], [ -1.70106, 52.88072 ], [ -1.70163, 52.8816 ], [ -1.70175, 52.88178 ], [ -1.70187, 52.88197 ], [ -1.70209, 52.8823 ], [ -1.70246, 52.88286 ], [ -1.70257, 52.88303 ], [ -1.70283, 52.88321 ], [ -1.70289, 52.88321 ], [ -1.70293, 52.88321 ], [ -1.70296, 52.88321 ], [ -1.70299, 52.88322 ], [ -1.70304, 52.88323 ], [ -1.70309, 52.88325 ], [ -1.70329, 52.88327 ], [ -1.70364, 52.88334 ], [ -1.70377, 52.88338 ], [ -1.704, 52.8834 ], [ -1.70412, 52.8834 ], [ -1.70423, 52.8834 ], [ -1.70438, 52.88339 ], [ -1.70453, 52.88338 ], [ -1.70471, 52.88335 ], [ -1.70491, 52.88331 ], [ -1.70495, 52.8833 ], [ -1.70507, 52.88326 ], [ -1.70522, 52.8832 ], [ -1.70533, 52.88316 ], [ -1.70541, 52.88312 ], [ -1.70547, 52.88309 ], [ -1.7055, 52.88307 ], [ -1.70558, 52.88301 ], [ -1.70569, 52.88293 ], [ -1.70576, 52.88287 ], [ -1.70589, 52.88274 ], [ -1.70597, 52.88263 ], [ -1.70607, 52.8825 ], [ -1.7060677, 52.8824979 ], [ -1.70625, 52.88249 ], [ -1.70634, 52.88249 ], [ -1.7067, 52.88249 ], [ -1.70755, 52.88244 ], [ -1.70869, 52.88239 ], [ -1.70901, 52.88237 ], [ -1.7090124, 52.882373 ], [ -1.70902, 52.88248 ], [ -1.70901, 52.88255 ], [ -1.709, 52.88264 ], [ -1.70891, 52.8829 ], [ -1.70884, 52.88308 ], [ -1.70876, 52.88323 ], [ -1.70875, 52.88326 ], [ -1.70864, 52.88342 ], [ -1.70854, 52.88358 ], [ -1.70852, 52.8836 ], [ -1.70841, 52.88377 ], [ -1.70832, 52.88389 ], [ -1.70825, 52.88399 ], [ -1.70805, 52.88429 ], [ -1.70802, 52.88432 ], [ -1.70794, 52.88443 ], [ -1.70783, 52.88454 ], [ -1.70782, 52.88455 ], [ -1.70771, 52.88464 ], [ -1.70759, 52.88474 ], [ -1.70747, 52.88484 ], [ -1.70738, 52.88492 ], [ -1.70734, 52.88496 ], [ -1.70729, 52.88501 ], [ -1.70723, 52.88509 ], [ -1.70719, 52.88515 ], [ -1.70711, 52.88528 ], [ -1.70699, 52.88546 ], [ -1.7069, 52.88561 ], [ -1.70685, 52.88568 ], [ -1.70679, 52.88578 ], [ -1.70672, 52.88588 ], [ -1.70669, 52.88595 ], [ -1.70663, 52.88604 ], [ -1.7066, 52.88609 ], [ -1.70655, 52.88618 ], [ -1.70652, 52.88622 ], [ -1.70649, 52.88626 ], [ -1.70642, 52.88636 ], [ -1.70636, 52.88644 ], [ -1.70628, 52.88654 ], [ -1.70622, 52.8866 ], [ -1.70616, 52.88665 ], [ -1.70606, 52.88672 ], [ -1.70605, 52.88673 ], [ -1.70593, 52.88684 ], [ -1.70588, 52.88688 ], [ -1.70587, 52.88688 ], [ -1.70577, 52.88699 ], [ -1.70575, 52.88702 ], [ -1.70573, 52.88706 ], [ -1.70571, 52.88711 ], [ -1.70569, 52.88717 ], [ -1.70564, 52.88735 ], [ -1.7056, 52.88748 ], [ -1.70559, 52.88752 ], [ -1.70556, 52.88761 ], [ -1.70547, 52.88785 ], [ -1.70543, 52.88797 ], [ -1.7054, 52.88805 ], [ -1.70534, 52.88818 ], [ -1.70529, 52.88827 ], [ -1.70525, 52.88834 ], [ -1.70522, 52.88839 ], [ -1.7052, 52.88843 ], [ -1.70515, 52.88852 ], [ -1.70483, 52.88899 ], [ -1.7048, 52.88904 ], [ -1.70479, 52.88906 ], [ -1.70473, 52.88922 ], [ -1.70472, 52.88925 ], [ -1.70467, 52.88959 ], [ -1.70466, 52.88964 ], [ -1.70466, 52.88967 ], [ -1.70464, 52.88976 ], [ -1.70464, 52.88977 ], [ -1.70461, 52.88984 ], [ -1.70454, 52.89003 ], [ -1.7042, 52.89082 ], [ -1.70418, 52.89086 ], [ -1.70412, 52.89099 ], [ -1.7041, 52.89103 ], [ -1.70396, 52.8913 ], [ -1.70393, 52.89138 ], [ -1.70385, 52.89163 ], [ -1.70382, 52.89186 ], [ -1.70386, 52.89206 ], [ -1.70389, 52.89227 ], [ -1.70389, 52.89234 ], [ -1.70398, 52.89281 ], [ -1.704, 52.89297 ], [ -1.70403, 52.89311 ], [ -1.7040286, 52.8931148 ], [ -1.70409, 52.89329 ], [ -1.70408, 52.89364 ], [ -1.70402, 52.89383 ], [ -1.70399, 52.89398 ], [ -1.70399, 52.89402 ], [ -1.70396, 52.89417 ], [ -1.70395, 52.89423 ], [ -1.70393, 52.89429 ], [ -1.70389, 52.89441 ], [ -1.70386, 52.89449 ], [ -1.70381, 52.89462 ], [ -1.70377, 52.89472 ], [ -1.70357, 52.89525 ], [ -1.70353, 52.89534 ], [ -1.70349, 52.89545 ], [ -1.70347, 52.8955 ], [ -1.70345, 52.89555 ], [ -1.70344, 52.89558 ], [ -1.70342, 52.89561 ], [ -1.7034, 52.89563 ], [ -1.70337, 52.89565 ], [ -1.70332, 52.89568 ], [ -1.70328, 52.8957 ], [ -1.70324, 52.89571 ], [ -1.70315, 52.89574 ], [ -1.70304, 52.89578 ], [ -1.70298, 52.89581 ], [ -1.70293, 52.89584 ], [ -1.70288, 52.89587 ], [ -1.70283, 52.8959 ], [ -1.70276, 52.89595 ], [ -1.70275, 52.89596 ], [ -1.7027, 52.89601 ], [ -1.70265, 52.89606 ], [ -1.70261, 52.89611 ], [ -1.70259, 52.89615 ], [ -1.70257, 52.89619 ], [ -1.70254, 52.89627 ], [ -1.70253, 52.89633 ], [ -1.70253, 52.89641 ], [ -1.70252, 52.89647 ], [ -1.7025, 52.89655 ], [ -1.70249, 52.89661 ], [ -1.70247, 52.89667 ], [ -1.70243, 52.89678 ], [ -1.70241, 52.89681 ], [ -1.70235, 52.89694 ], [ -1.70224, 52.89714 ], [ -1.70219, 52.89723 ], [ -1.70213, 52.89731 ], [ -1.70212, 52.89732 ], [ -1.70206, 52.89739 ], [ -1.70198, 52.89747 ], [ -1.70197, 52.89748 ], [ -1.70182, 52.89763 ], [ -1.7018, 52.89765 ], [ -1.7017, 52.89776 ], [ -1.70164, 52.89785 ], [ -1.70159, 52.89793 ], [ -1.70156, 52.898 ], [ -1.70154, 52.89806 ], [ -1.70152, 52.89811 ], [ -1.70151, 52.89819 ], [ -1.70151, 52.89831 ], [ -1.70151, 52.89839 ], [ -1.70152, 52.89849 ], [ -1.70154, 52.89861 ], [ -1.7016, 52.89897 ], [ -1.70164, 52.8993 ], [ -1.70166, 52.89942 ], [ -1.70167, 52.89951 ], [ -1.70169, 52.89962 ], [ -1.70173, 52.89975 ], [ -1.701733, 52.8997463 ], [ -1.70183, 52.89975 ], [ -1.70194, 52.89977 ], [ -1.702, 52.89978 ], [ -1.70207, 52.89979 ], [ -1.70215, 52.89981 ], [ -1.7022, 52.89983 ], [ -1.70224, 52.89985 ], [ -1.70228, 52.89988 ], [ -1.70232, 52.89994 ], [ -1.70234, 52.89998 ], [ -1.70235, 52.90002 ], [ -1.70237, 52.9002 ], [ -1.7024, 52.90037 ], [ -1.70242, 52.90066 ], [ -1.70247, 52.9012 ], [ -1.70253, 52.90185 ], [ -1.70248, 52.90242 ], [ -1.70247, 52.90249 ], [ -1.70234, 52.90332 ], [ -1.70231, 52.90361 ], [ -1.70227, 52.90386 ], [ -1.70232, 52.90406 ], [ -1.7024, 52.90425 ], [ -1.70241, 52.90427 ], [ -1.70253, 52.90444 ], [ -1.70282, 52.90477 ], [ -1.70307, 52.90508 ], [ -1.70342, 52.90544 ], [ -1.7038, 52.90586 ], [ -1.70394, 52.90602 ], [ -1.70428, 52.90646 ], [ -1.70472, 52.90697 ], [ -1.70485, 52.90715 ], [ -1.70489, 52.90721 ], [ -1.70501, 52.90755 ], [ -1.70513, 52.90795 ], [ -1.70524, 52.90835 ], [ -1.7053, 52.90856 ], [ -1.70532, 52.90865 ], [ -1.70537, 52.90878 ], [ -1.70541, 52.90892 ], [ -1.70542, 52.90895 ], [ -1.70543, 52.90906 ], [ -1.70543, 52.9091 ], [ -1.70542, 52.90921 ], [ -1.70538, 52.90939 ], [ -1.70538, 52.90961 ], [ -1.70543, 52.90981 ], [ -1.70546, 52.90995 ], [ -1.70552, 52.91032 ], [ -1.70553, 52.91039 ], [ -1.70559, 52.91074 ], [ -1.70564, 52.91103 ], [ -1.7057, 52.91119 ], [ -1.70574, 52.9113 ], [ -1.70579, 52.91138 ], [ -1.70584, 52.91147 ], [ -1.70593, 52.9116 ], [ -1.70602, 52.91171 ], [ -1.70611, 52.91182 ], [ -1.70637, 52.91214 ], [ -1.70662, 52.91247 ], [ -1.70666, 52.91253 ], [ -1.70676, 52.91267 ], [ -1.70677, 52.91269 ], [ -1.70684, 52.91288 ], [ -1.70686, 52.9131 ], [ -1.70686, 52.91323 ], [ -1.70685, 52.91329 ], [ -1.70684, 52.91341 ], [ -1.70681, 52.91356 ], [ -1.7068, 52.9137 ], [ -1.70675, 52.91388 ], [ -1.70674, 52.91394 ], [ -1.70673, 52.91403 ], [ -1.70672, 52.91412 ], [ -1.70672, 52.91418 ], [ -1.70671, 52.9143 ], [ -1.70671, 52.91431 ], [ -1.70671, 52.91442 ], [ -1.70671, 52.91448 ], [ -1.70671, 52.91452 ], [ -1.70672, 52.91466 ], [ -1.70673, 52.91471 ], [ -1.70674, 52.91486 ], [ -1.70677, 52.91519 ], [ -1.70678, 52.91524 ], [ -1.70677, 52.91538 ], [ -1.70677, 52.91555 ], [ -1.70676, 52.91566 ], [ -1.70675, 52.91582 ], [ -1.70675, 52.91584 ], [ -1.7067, 52.91606 ], [ -1.70665, 52.91619 ], [ -1.70665, 52.9162 ], [ -1.70662, 52.91628 ], [ -1.70648, 52.91654 ], [ -1.70628, 52.91678 ], [ -1.70619, 52.91695 ], [ -1.70615, 52.91704 ], [ -1.70604, 52.91724 ], [ -1.70595, 52.91746 ], [ -1.70573, 52.91799 ], [ -1.70567, 52.91813 ], [ -1.70564, 52.91822 ], [ -1.70554, 52.91848 ], [ -1.70553, 52.91849 ], [ -1.70547, 52.91872 ], [ -1.70544, 52.91883 ], [ -1.7054, 52.919 ], [ -1.7054, 52.91901 ], [ -1.70534, 52.91929 ], [ -1.70532, 52.91955 ], [ -1.70531, 52.91973 ], [ -1.70532, 52.91991 ], [ -1.70532, 52.92009 ], [ -1.70532, 52.92021 ], [ -1.70534, 52.92081 ], [ -1.70536, 52.92109 ], [ -1.70538, 52.92141 ], [ -1.70541, 52.9216 ], [ -1.70542, 52.92168 ], [ -1.70544, 52.92174 ], [ -1.70547, 52.92182 ], [ -1.70551, 52.9219 ], [ -1.70554, 52.92198 ], [ -1.70555, 52.922 ], [ -1.70558, 52.92209 ], [ -1.70562, 52.92215 ], [ -1.70565, 52.92223 ], [ -1.70567, 52.92232 ], [ -1.70568, 52.92239 ], [ -1.70568, 52.92245 ], [ -1.70565, 52.92252 ], [ -1.7056, 52.92258 ], [ -1.70553, 52.92265 ], [ -1.70543, 52.92274 ], [ -1.70536, 52.92281 ], [ -1.70525, 52.92293 ], [ -1.70515, 52.92306 ], [ -1.70511, 52.92314 ], [ -1.70505, 52.92322 ], [ -1.70502, 52.92331 ], [ -1.70501, 52.92333 ], [ -1.70498, 52.92346 ], [ -1.70495, 52.92356 ], [ -1.70492, 52.9237 ], [ -1.70491, 52.92385 ], [ -1.7049, 52.92403 ], [ -1.70489, 52.92406 ], [ -1.70489, 52.92426 ], [ -1.70491, 52.92438 ], [ -1.70491, 52.9244 ], [ -1.70494, 52.92454 ], [ -1.70495, 52.92456 ], [ -1.70499, 52.9247 ], [ -1.70505, 52.92481 ], [ -1.70514, 52.92499 ], [ -1.70532, 52.92523 ], [ -1.70576, 52.92578 ], [ -1.7061, 52.92627 ], [ -1.70616, 52.9264 ], [ -1.70623, 52.92654 ], [ -1.70625, 52.92657 ], [ -1.70635, 52.9268 ], [ -1.70651, 52.92711 ], [ -1.70674, 52.92753 ], [ -1.70683, 52.92765 ], [ -1.70696, 52.92778 ], [ -1.70711, 52.92789 ], [ -1.70735, 52.92801 ], [ -1.7082, 52.92851 ], [ -1.70861, 52.92876 ], [ -1.7087, 52.92882 ], [ -1.70876, 52.92887 ], [ -1.70881, 52.92893 ], [ -1.7092, 52.92939 ], [ -1.70976, 52.92997 ], [ -1.70997, 52.93018 ], [ -1.71008, 52.93029 ], [ -1.71013, 52.93033 ], [ -1.71026, 52.93044 ], [ -1.71031, 52.93048 ], [ -1.71035, 52.93051 ], [ -1.7105, 52.9306 ], [ -1.71051, 52.93061 ], [ -1.71063, 52.93067 ], [ -1.71074, 52.93073 ], [ -1.71075, 52.93073 ], [ -1.71099, 52.93083 ], [ -1.71105, 52.93086 ], [ -1.71123, 52.93093 ], [ -1.7114, 52.931 ], [ -1.71148, 52.93103 ], [ -1.71172, 52.93113 ], [ -1.71189, 52.9312 ], [ -1.71211, 52.93132 ], [ -1.71238, 52.93149 ], [ -1.71239, 52.93149 ], [ -1.71276, 52.93173 ], [ -1.71297, 52.93188 ], [ -1.71309, 52.93196 ], [ -1.71318, 52.93203 ], [ -1.71326, 52.93208 ], [ -1.71338, 52.93217 ], [ -1.71352, 52.93227 ], [ -1.71365, 52.93238 ], [ -1.71369, 52.93243 ], [ -1.71373, 52.93249 ], [ -1.71377, 52.93254 ], [ -1.7138, 52.93259 ], [ -1.71383, 52.93265 ], [ -1.71387, 52.93274 ], [ -1.7139, 52.93281 ], [ -1.71396, 52.93294 ], [ -1.714, 52.93301 ], [ -1.71401, 52.93304 ], [ -1.71405, 52.93311 ], [ -1.71409, 52.93317 ], [ -1.71415, 52.93325 ], [ -1.71425, 52.93336 ], [ -1.71431, 52.93342 ], [ -1.71434, 52.93345 ], [ -1.71453, 52.9336 ], [ -1.71473, 52.93374 ], [ -1.71492, 52.93386 ], [ -1.71494, 52.93387 ], [ -1.71519, 52.93402 ], [ -1.71535, 52.93413 ], [ -1.71569, 52.93435 ], [ -1.71575, 52.93439 ], [ -1.71584, 52.93446 ], [ -1.71594, 52.93453 ], [ -1.71609, 52.93463 ], [ -1.71614, 52.93466 ], [ -1.71636, 52.93479 ], [ -1.71638, 52.9348 ], [ -1.71659, 52.93491 ], [ -1.71721, 52.93523 ], [ -1.71726, 52.93526 ], [ -1.71748, 52.93538 ], [ -1.71769, 52.93551 ], [ -1.71779, 52.93557 ], [ -1.71783, 52.93559 ], [ -1.7179, 52.93563 ], [ -1.7179, 52.93564 ], [ -1.71794, 52.93566 ], [ -1.71799, 52.9357 ], [ -1.71802, 52.93574 ], [ -1.71804, 52.93577 ], [ -1.71806, 52.93579 ], [ -1.71807, 52.9358 ], [ -1.71809, 52.93584 ], [ -1.7181, 52.93586 ], [ -1.71811, 52.93589 ], [ -1.71811, 52.93593 ], [ -1.7181, 52.93596 ], [ -1.7181, 52.93598 ], [ -1.71809, 52.93605 ], [ -1.71806, 52.93611 ], [ -1.71805, 52.93617 ], [ -1.71803, 52.93623 ], [ -1.71803, 52.93627 ], [ -1.71803, 52.93631 ], [ -1.71803, 52.93632 ], [ -1.71803, 52.93633 ], [ -1.71805, 52.93637 ], [ -1.71807, 52.9364 ], [ -1.7181, 52.93644 ], [ -1.71813, 52.93648 ], [ -1.71813, 52.93649 ], [ -1.71817, 52.93652 ], [ -1.71823, 52.93658 ], [ -1.71827, 52.93661 ], [ -1.71831, 52.93663 ], [ -1.71832, 52.93664 ], [ -1.71841, 52.93668 ], [ -1.71854, 52.93675 ], [ -1.71861, 52.93678 ], [ -1.71877, 52.93686 ], [ -1.71899, 52.93698 ], [ -1.7194, 52.93719 ], [ -1.71948, 52.93724 ], [ -1.71954, 52.93728 ], [ -1.7196, 52.93733 ], [ -1.71963, 52.93736 ], [ -1.71977, 52.93752 ], [ -1.71986, 52.93761 ], [ -1.72003, 52.93784 ], [ -1.72017, 52.938 ], [ -1.72024, 52.93808 ], [ -1.72031, 52.93816 ], [ -1.72043, 52.93831 ], [ -1.72043, 52.93832 ], [ -1.72047, 52.93838 ], [ -1.72051, 52.93849 ], [ -1.72059, 52.93867 ], [ -1.72066, 52.93884 ], [ -1.72081, 52.93919 ], [ -1.72112, 52.93996 ], [ -1.7215, 52.94091 ], [ -1.72157, 52.94107 ], [ -1.72179, 52.94157 ], [ -1.72186, 52.94174 ], [ -1.72198, 52.94199 ], [ -1.72207, 52.94213 ], [ -1.72231, 52.94246 ], [ -1.7226, 52.94285 ], [ -1.72269, 52.94295 ], [ -1.72287, 52.94317 ], [ -1.72294, 52.94325 ], [ -1.72305, 52.94335 ], [ -1.72311, 52.9434 ], [ -1.72313, 52.94342 ], [ -1.72318, 52.94346 ], [ -1.72325, 52.94352 ], [ -1.7234, 52.94363 ], [ -1.72357, 52.94375 ], [ -1.72375, 52.94387 ], [ -1.7237518, 52.9438683 ], [ -1.72385, 52.94392 ], [ -1.7241, 52.94403 ], [ -1.72445, 52.9442 ], [ -1.72472, 52.94431 ], [ -1.72571, 52.94472 ], [ -1.72646, 52.94506 ], [ -1.72656, 52.9451 ], [ -1.72669, 52.94518 ], [ -1.72682, 52.94526 ], [ -1.72691, 52.94533 ], [ -1.72705, 52.94545 ], [ -1.72714, 52.94553 ], [ -1.72721, 52.94559 ], [ -1.72735, 52.94569 ], [ -1.72755, 52.94584 ], [ -1.72762, 52.9459 ], [ -1.72787, 52.94607 ], [ -1.72797, 52.94614 ], [ -1.72803, 52.9462 ], [ -1.72842, 52.94672 ], [ -1.72846, 52.9468 ], [ -1.72852, 52.94692 ], [ -1.72855, 52.94701 ], [ -1.72856, 52.94712 ], [ -1.72853, 52.94733 ], [ -1.7285, 52.9475 ], [ -1.72843, 52.94779 ], [ -1.72841, 52.94786 ], [ -1.72835, 52.94804 ], [ -1.7283, 52.94822 ], [ -1.72827, 52.94834 ], [ -1.72824, 52.94844 ], [ -1.7282, 52.94854 ], [ -1.72815, 52.94862 ], [ -1.72807, 52.94872 ], [ -1.72806, 52.94873 ], [ -1.72799, 52.94879 ], [ -1.72789, 52.94887 ], [ -1.72788, 52.94887 ], [ -1.72775, 52.94895 ], [ -1.72769, 52.94899 ], [ -1.72766, 52.949 ], [ -1.72755, 52.94905 ], [ -1.72739, 52.9491 ], [ -1.72688, 52.94926 ], [ -1.72671, 52.94931 ], [ -1.72661, 52.94934 ], [ -1.72635, 52.94941 ], [ -1.72634, 52.94941 ], [ -1.72619, 52.94947 ], [ -1.7261, 52.9495 ], [ -1.72609, 52.94951 ], [ -1.72602, 52.94954 ], [ -1.7259, 52.94961 ], [ -1.72588, 52.94963 ], [ -1.72584, 52.94967 ], [ -1.7258, 52.94971 ], [ -1.72574, 52.94979 ], [ -1.72571, 52.94982 ], [ -1.72565, 52.94994 ], [ -1.72563, 52.94996 ], [ -1.72555, 52.95012 ], [ -1.72547, 52.95031 ], [ -1.7254, 52.95048 ], [ -1.72539, 52.9505 ], [ -1.72533, 52.95066 ], [ -1.72527, 52.9508 ], [ -1.72526, 52.95083 ], [ -1.72521, 52.95101 ], [ -1.72516, 52.95119 ], [ -1.72514, 52.95128 ], [ -1.72511, 52.95145 ], [ -1.72511, 52.95154 ], [ -1.7251, 52.95164 ], [ -1.7251, 52.95172 ], [ -1.7251, 52.95183 ], [ -1.7251, 52.9519 ], [ -1.72509, 52.9519 ], [ -1.72506, 52.95208 ], [ -1.72504, 52.95224 ], [ -1.72504, 52.95226 ], [ -1.72502, 52.95236 ], [ -1.72502, 52.95244 ], [ -1.72502, 52.95245 ], [ -1.72502, 52.95256 ], [ -1.72507, 52.95275 ], [ -1.72509, 52.9528 ], [ -1.72513, 52.95291 ], [ -1.72518, 52.95304 ], [ -1.7252, 52.95315 ], [ -1.72521, 52.95321 ], [ -1.72521, 52.95325 ], [ -1.7252, 52.9533 ], [ -1.72518, 52.95335 ], [ -1.72515, 52.95343 ], [ -1.72512, 52.95349 ], [ -1.72511, 52.95352 ], [ -1.72508, 52.95358 ], [ -1.72506, 52.95363 ], [ -1.72505, 52.95367 ], [ -1.72504, 52.95372 ], [ -1.72503, 52.95381 ], [ -1.72504, 52.95385 ], [ -1.72504, 52.9539 ], [ -1.72505, 52.95402 ], [ -1.72507, 52.95419 ], [ -1.72507, 52.9542 ], [ -1.72506, 52.95438 ], [ -1.72506, 52.95447 ], [ -1.72506, 52.95456 ], [ -1.72505, 52.9546 ], [ -1.72505, 52.95467 ], [ -1.72503, 52.95483 ], [ -1.72502, 52.95497 ], [ -1.725, 52.955 ], [ -1.72496, 52.9551 ], [ -1.72519, 52.95521 ], [ -1.72536, 52.9553 ], [ -1.72542, 52.95533 ], [ -1.72552, 52.95539 ], [ -1.72564, 52.95545 ], [ -1.72565, 52.95545 ], [ -1.7258, 52.95557 ], [ -1.72597, 52.95575 ], [ -1.72599, 52.95576 ], [ -1.7261, 52.95591 ], [ -1.72617, 52.95601 ], [ -1.72623, 52.9561 ], [ -1.72626, 52.95615 ], [ -1.7263, 52.95618 ], [ -1.72637, 52.95621 ], [ -1.7263, 52.9563 ], [ -1.72626, 52.95642 ], [ -1.72617, 52.95659 ], [ -1.72604, 52.95683 ], [ -1.72599, 52.95693 ], [ -1.7259, 52.95711 ], [ -1.72584, 52.95723 ], [ -1.72573, 52.95745 ], [ -1.72567, 52.95756 ], [ -1.72559, 52.95768 ], [ -1.72558, 52.95771 ], [ -1.72557, 52.95774 ], [ -1.72552, 52.95807 ], [ -1.72549, 52.95821 ], [ -1.72546, 52.95827 ], [ -1.72543, 52.95833 ], [ -1.72542, 52.95834 ], [ -1.72533, 52.95845 ], [ -1.72529, 52.95848 ], [ -1.72517, 52.95861 ], [ -1.72498, 52.95879 ], [ -1.72496, 52.95881 ], [ -1.72481, 52.95894 ], [ -1.7248, 52.95896 ], [ -1.72468, 52.95907 ], [ -1.72466, 52.9591 ], [ -1.72445, 52.95936 ], [ -1.72441, 52.95942 ], [ -1.72437, 52.95949 ], [ -1.72431, 52.95959 ], [ -1.7243, 52.9596 ], [ -1.72428, 52.95966 ], [ -1.72424, 52.95974 ], [ -1.72423, 52.95978 ], [ -1.72422, 52.95982 ], [ -1.72423, 52.95995 ], [ -1.72424, 52.96004 ], [ -1.72362, 52.96076 ], [ -1.72269, 52.96189 ], [ -1.72255, 52.96205 ], [ -1.72228, 52.96237 ], [ -1.72218, 52.96254 ], [ -1.72214, 52.96261 ], [ -1.72203, 52.96286 ], [ -1.72197, 52.96302 ], [ -1.72195, 52.96314 ], [ -1.72192, 52.9633 ], [ -1.7219, 52.96344 ], [ -1.72189, 52.96374 ], [ -1.72193, 52.96394 ], [ -1.72198, 52.96415 ], [ -1.72206, 52.96434 ], [ -1.72215, 52.96454 ], [ -1.72218, 52.96459 ], [ -1.72226, 52.96473 ], [ -1.72237, 52.96489 ], [ -1.72267, 52.96519 ], [ -1.72288, 52.96539 ], [ -1.72305, 52.96552 ], [ -1.72318, 52.96571 ], [ -1.72332, 52.96593 ], [ -1.72346, 52.96613 ], [ -1.72358, 52.96636 ], [ -1.72364, 52.96656 ], [ -1.72371, 52.96684 ], [ -1.72378, 52.9672 ], [ -1.72385, 52.96763 ], [ -1.72386, 52.96785 ], [ -1.72387, 52.96789 ], [ -1.72389, 52.96807 ], [ -1.72394, 52.96825 ], [ -1.72397, 52.96838 ], [ -1.72412, 52.96883 ], [ -1.72416, 52.96896 ], [ -1.7243, 52.96933 ], [ -1.72435, 52.96948 ], [ -1.72445, 52.96977 ], [ -1.72454, 52.9701 ], [ -1.72455, 52.97019 ], [ -1.72458, 52.97039 ], [ -1.72456, 52.97056 ], [ -1.72454, 52.9707 ], [ -1.72453, 52.97073 ], [ -1.72449, 52.97087 ], [ -1.72443, 52.97102 ], [ -1.72441, 52.97108 ], [ -1.72432, 52.97128 ], [ -1.72422, 52.97149 ], [ -1.72418, 52.97159 ], [ -1.72416, 52.97167 ], [ -1.72415, 52.97182 ], [ -1.72414, 52.97195 ], [ -1.72414, 52.97196 ], [ -1.72415, 52.97214 ], [ -1.72415, 52.97221 ], [ -1.72414, 52.97231 ], [ -1.72414, 52.97232 ], [ -1.72412, 52.9724 ], [ -1.72407, 52.9725 ], [ -1.72402, 52.97259 ], [ -1.72398, 52.97267 ], [ -1.72384, 52.97289 ], [ -1.72361, 52.97333 ], [ -1.7235, 52.97352 ], [ -1.7234, 52.97369 ], [ -1.72336, 52.97377 ], [ -1.72334, 52.97383 ], [ -1.72334, 52.97404 ], [ -1.72333, 52.97417 ], [ -1.72332, 52.9744 ], [ -1.72333, 52.97448 ], [ -1.72334, 52.97453 ], [ -1.72338, 52.97462 ], [ -1.72347, 52.97475 ], [ -1.72348, 52.97476 ], [ -1.72357, 52.97486 ], [ -1.72364, 52.97494 ], [ -1.72368, 52.97501 ], [ -1.72382, 52.97519 ], [ -1.72394, 52.97537 ], [ -1.72407, 52.97558 ], [ -1.72412, 52.97568 ], [ -1.72427, 52.97603 ], [ -1.72434, 52.97619 ], [ -1.72435, 52.9762 ], [ -1.72441, 52.97635 ], [ -1.72449, 52.97648 ], [ -1.72456, 52.97657 ], [ -1.72468, 52.9767 ], [ -1.72472, 52.97675 ], [ -1.72489, 52.97692 ], [ -1.7251, 52.97718 ], [ -1.72515, 52.97723 ], [ -1.72537, 52.97748 ], [ -1.72551, 52.97766 ], [ -1.72567, 52.97786 ], [ -1.72577, 52.97798 ], [ -1.72589, 52.97809 ], [ -1.72599, 52.97819 ], [ -1.72658, 52.97877 ], [ -1.72685, 52.97894 ], [ -1.72695, 52.979 ], [ -1.72698, 52.97903 ], [ -1.72706, 52.97909 ], [ -1.72715, 52.97917 ], [ -1.7274, 52.97948 ], [ -1.72751, 52.97962 ], [ -1.72752, 52.97965 ], [ -1.72777, 52.97998 ], [ -1.728, 52.98031 ], [ -1.7282, 52.98059 ], [ -1.72843, 52.98098 ], [ -1.72848, 52.98131 ], [ -1.72849, 52.98141 ], [ -1.72854, 52.98166 ], [ -1.7286, 52.98185 ], [ -1.72865, 52.98207 ], [ -1.72867, 52.98218 ], [ -1.72868, 52.98234 ], [ -1.72867, 52.9824 ], [ -1.72866, 52.98252 ], [ -1.72863, 52.98264 ], [ -1.72859, 52.98275 ], [ -1.72852, 52.98293 ], [ -1.72846, 52.98308 ], [ -1.72841, 52.98324 ], [ -1.72836, 52.98347 ], [ -1.72835, 52.98352 ], [ -1.72831, 52.98369 ], [ -1.72828, 52.98378 ], [ -1.72822, 52.98394 ], [ -1.72817, 52.984 ], [ -1.72806, 52.98415 ], [ -1.72785, 52.98439 ], [ -1.72763, 52.98458 ], [ -1.7275, 52.98469 ], [ -1.7274, 52.98476 ], [ -1.72703, 52.98503 ], [ -1.72684, 52.98517 ], [ -1.72665, 52.98532 ], [ -1.72651, 52.98543 ], [ -1.72647, 52.98547 ], [ -1.72627, 52.98565 ], [ -1.72616, 52.98577 ], [ -1.7261568, 52.985773 ], [ -1.72622, 52.98584 ], [ -1.72628, 52.98591 ], [ -1.7263, 52.98596 ], [ -1.72636, 52.98606 ], [ -1.72646, 52.98625 ], [ -1.72663, 52.98665 ], [ -1.7267, 52.98683 ], [ -1.72671, 52.98684 ], [ -1.72685, 52.98718 ], [ -1.72689, 52.98727 ], [ -1.72694, 52.9874 ], [ -1.72709, 52.9877 ], [ -1.72715, 52.9878 ], [ -1.72719, 52.98786 ], [ -1.72738, 52.98808 ], [ -1.72758, 52.98832 ], [ -1.72759, 52.98835 ], [ -1.72786, 52.98871 ], [ -1.72795, 52.98884 ], [ -1.7282, 52.98923 ], [ -1.72826, 52.98933 ], [ -1.72833, 52.98942 ], [ -1.72843, 52.98955 ], [ -1.72854, 52.98967 ], [ -1.72856, 52.98969 ], [ -1.72869, 52.98981 ], [ -1.7287, 52.98982 ], [ -1.72878, 52.98992 ], [ -1.72882, 52.98998 ], [ -1.72883, 52.98998 ], [ -1.72889, 52.99013 ], [ -1.7289, 52.99016 ], [ -1.72897, 52.99038 ], [ -1.72921, 52.99122 ], [ -1.72925, 52.99137 ], [ -1.72925, 52.9914 ], [ -1.72934, 52.99175 ], [ -1.72939, 52.99193 ], [ -1.72944, 52.99211 ], [ -1.72966, 52.99298 ], [ -1.72966, 52.993 ], [ -1.72969, 52.99313 ], [ -1.72972, 52.99331 ], [ -1.72976, 52.99374 ], [ -1.72978, 52.99389 ], [ -1.72981, 52.99401 ], [ -1.72983, 52.9941 ], [ -1.72983, 52.99422 ], [ -1.72982, 52.99444 ], [ -1.72981, 52.9946 ], [ -1.72975, 52.99482 ], [ -1.72971, 52.99505 ], [ -1.7297, 52.99522 ], [ -1.72969, 52.99564 ], [ -1.72968, 52.99585 ], [ -1.72968, 52.99603 ], [ -1.72967, 52.99621 ], [ -1.72966, 52.99645 ], [ -1.72965, 52.99681 ], [ -1.72964, 52.99693 ], [ -1.72964, 52.99703 ], [ -1.72962, 52.99717 ], [ -1.7296, 52.9973 ], [ -1.72956, 52.99747 ], [ -1.72954, 52.99758 ], [ -1.72948, 52.99782 ], [ -1.72943, 52.998 ], [ -1.72943, 52.99801 ], [ -1.7294, 52.99815 ], [ -1.7294, 52.99818 ], [ -1.72934, 52.99867 ], [ -1.72933, 52.99881 ], [ -1.72931, 52.99896 ], [ -1.7292, 52.99943 ], [ -1.72912, 52.99979 ], [ -1.72911, 52.99985 ], [ -1.72905, 53.00013 ], [ -1.72899, 53.00045 ], [ -1.72892, 53.00085 ], [ -1.7288, 53.00132 ], [ -1.72878, 53.00138 ], [ -1.72872, 53.00156 ], [ -1.72872, 53.00157 ], [ -1.72866, 53.00173 ], [ -1.7286, 53.0019 ], [ -1.72859, 53.00191 ], [ -1.72851, 53.00208 ], [ -1.72848, 53.00215 ], [ -1.72842, 53.00225 ], [ -1.72838, 53.00232 ], [ -1.72831, 53.00239 ], [ -1.72829, 53.00241 ], [ -1.72824, 53.00246 ], [ -1.72814, 53.00255 ], [ -1.728, 53.00262 ], [ -1.72779, 53.00272 ], [ -1.72763, 53.00284 ], [ -1.72752, 53.00295 ], [ -1.72748, 53.00299 ], [ -1.72739, 53.00311 ], [ -1.72734, 53.00318 ], [ -1.72726, 53.00328 ], [ -1.72718, 53.00338 ], [ -1.72713, 53.00344 ], [ -1.72705, 53.00353 ], [ -1.727, 53.0036 ], [ -1.72698, 53.00363 ], [ -1.72691, 53.00375 ], [ -1.7269, 53.00377 ], [ -1.72689, 53.0038 ], [ -1.72688, 53.00392 ], [ -1.72687, 53.00395 ], [ -1.72686, 53.00401 ], [ -1.72686, 53.00408 ], [ -1.72687, 53.00413 ], [ -1.72689, 53.00421 ], [ -1.72692, 53.00428 ], [ -1.72697, 53.00437 ], [ -1.72701, 53.00445 ], [ -1.72703, 53.00448 ], [ -1.72714, 53.00464 ], [ -1.72718, 53.0047 ], [ -1.72726, 53.0048 ], [ -1.72727, 53.00481 ], [ -1.72738, 53.00497 ], [ -1.72739, 53.00498 ], [ -1.72747, 53.00513 ], [ -1.7276, 53.00536 ], [ -1.72763, 53.00541 ], [ -1.72766, 53.00545 ], [ -1.72779, 53.00573 ], [ -1.7278, 53.00576 ], [ -1.72781, 53.00579 ], [ -1.72784, 53.00587 ], [ -1.72786, 53.00593 ], [ -1.72792, 53.00611 ], [ -1.72799, 53.00632 ], [ -1.72804, 53.00646 ], [ -1.72808, 53.00658 ], [ -1.7281, 53.00664 ], [ -1.72822, 53.00703 ], [ -1.72835, 53.00748 ], [ -1.72837, 53.00772 ], [ -1.7283666, 53.0077201 ], [ -1.72834, 53.00774 ], [ -1.72834, 53.00776 ], [ -1.72834, 53.00778 ], [ -1.72835, 53.0078 ], [ -1.72836, 53.00783 ], [ -1.72843, 53.00786 ], [ -1.72856, 53.00802 ], [ -1.72852, 53.0082 ], [ -1.72857, 53.00847 ], [ -1.7286, 53.00865 ], [ -1.72865, 53.00889 ], [ -1.7287, 53.00927 ], [ -1.72875, 53.00945 ], [ -1.72879, 53.0096 ], [ -1.72879, 53.00962 ], [ -1.72888, 53.00988 ], [ -1.72892, 53.00993 ], [ -1.72903, 53.01005 ], [ -1.7290344, 53.0100478 ], [ -1.72905, 53.01005 ], [ -1.72905, 53.01006 ], [ -1.72906, 53.01006 ], [ -1.72908, 53.01007 ], [ -1.7291, 53.01008 ], [ -1.72911, 53.01009 ], [ -1.72911, 53.0101 ], [ -1.72912, 53.0101 ], [ -1.72912, 53.01011 ], [ -1.72913, 53.01012 ], [ -1.72913, 53.01013 ], [ -1.72913, 53.01014 ], [ -1.72913, 53.01015 ], [ -1.72913, 53.01016 ], [ -1.72913, 53.01017 ], [ -1.72912, 53.01019 ], [ -1.72911, 53.01019 ], [ -1.72911, 53.0102 ], [ -1.7291, 53.0102 ], [ -1.7291, 53.01021 ], [ -1.72909, 53.01021 ], [ -1.72909, 53.01022 ], [ -1.72908, 53.01022 ], [ -1.72908, 53.01023 ], [ -1.72906, 53.01024 ], [ -1.72911, 53.01039 ], [ -1.72916, 53.01048 ], [ -1.72916, 53.01052 ], [ -1.72918, 53.01055 ], [ -1.72922, 53.01061 ], [ -1.72928, 53.01068 ], [ -1.72944, 53.01083 ], [ -1.7296, 53.01098 ], [ -1.72962, 53.011 ], [ -1.72975, 53.01113 ], [ -1.72981, 53.0112 ], [ -1.72987, 53.0113 ], [ -1.72991, 53.01137 ], [ -1.73, 53.01159 ], [ -1.7301, 53.0118 ], [ -1.73012, 53.01182 ], [ -1.73016, 53.01187 ], [ -1.73024, 53.01192 ], [ -1.73045, 53.01202 ], [ -1.73055, 53.01206 ], [ -1.73069, 53.01212 ], [ -1.7308, 53.01216 ], [ -1.73092, 53.0122 ], [ -1.73105, 53.01225 ], [ -1.73108, 53.01227 ], [ -1.73122, 53.01232 ], [ -1.73128, 53.01235 ], [ -1.73129, 53.01236 ], [ -1.73133, 53.01239 ], [ -1.73141, 53.01245 ], [ -1.73151, 53.01257 ], [ -1.73155, 53.01266 ], [ -1.73158, 53.01271 ], [ -1.73159, 53.01275 ], [ -1.73161, 53.01288 ], [ -1.73163, 53.01296 ], [ -1.73165, 53.01312 ], [ -1.73165, 53.01314 ], [ -1.73166, 53.01324 ], [ -1.73168, 53.0135 ], [ -1.73168, 53.01353 ], [ -1.73171, 53.01386 ], [ -1.73172, 53.01397 ], [ -1.73171, 53.01403 ], [ -1.73169, 53.01408 ], [ -1.7316, 53.01416 ], [ -1.7315999, 53.0141556 ], [ -1.73168, 53.01421 ], [ -1.7316767, 53.0142129 ], [ -1.73174, 53.01465 ], [ -1.73174, 53.01469 ], [ -1.73175, 53.01478 ], [ -1.73178, 53.0149 ], [ -1.73187, 53.01522 ], [ -1.73189, 53.01531 ], [ -1.7319, 53.01533 ], [ -1.73199, 53.01564 ], [ -1.73204, 53.01579 ], [ -1.73208, 53.01588 ], [ -1.73212, 53.01599 ], [ -1.73217, 53.01614 ], [ -1.73218, 53.01617 ], [ -1.73227, 53.01631 ], [ -1.73229, 53.01634 ], [ -1.73233, 53.0164 ], [ -1.73237, 53.01646 ], [ -1.73241, 53.0165 ], [ -1.73249, 53.01654 ], [ -1.73253, 53.01656 ], [ -1.73261, 53.01658 ], [ -1.73276, 53.01664 ], [ -1.733, 53.01672 ], [ -1.73315, 53.01677 ], [ -1.73367, 53.01696 ], [ -1.73367, 53.016955 ], [ -1.73313, 53.01721 ], [ -1.7331272, 53.0172055 ], [ -1.73306, 53.01734 ], [ -1.73299, 53.01744 ], [ -1.73295, 53.01752 ], [ -1.73294, 53.01754 ], [ -1.73291, 53.01761 ], [ -1.7329, 53.01769 ], [ -1.7329, 53.01774 ], [ -1.73294, 53.01784 ], [ -1.73295, 53.0184 ], [ -1.7329543, 53.0183992 ], [ -1.73282, 53.01841 ], [ -1.7328217, 53.0184092 ], [ -1.73288, 53.01847 ], [ -1.73291, 53.01849 ], [ -1.73295, 53.01854 ], [ -1.73297, 53.01858 ], [ -1.733, 53.01868 ], [ -1.73307, 53.01889 ], [ -1.73312, 53.01904 ], [ -1.73314, 53.01911 ], [ -1.73318, 53.01925 ], [ -1.73321, 53.01934 ], [ -1.73323, 53.01939 ], [ -1.73324, 53.01941 ], [ -1.7333, 53.01949 ], [ -1.73338, 53.01958 ], [ -1.73345, 53.01967 ], [ -1.73369, 53.02002 ], [ -1.7342, 53.0207 ], [ -1.73423, 53.02074 ], [ -1.73427, 53.02078 ], [ -1.73433, 53.02084 ], [ -1.73439, 53.0209 ], [ -1.73448, 53.02099 ], [ -1.7345, 53.02101 ], [ -1.73456, 53.0211 ], [ -1.73459, 53.02116 ], [ -1.73462, 53.02122 ], [ -1.73462, 53.02123 ], [ -1.73467, 53.02134 ], [ -1.7347, 53.02154 ], [ -1.73471, 53.02158 ], [ -1.73472, 53.02172 ], [ -1.73473, 53.02184 ], [ -1.73473, 53.02208 ], [ -1.7347, 53.02238 ], [ -1.73468, 53.02253 ], [ -1.73468, 53.02258 ], [ -1.73461, 53.02307 ], [ -1.73455, 53.02344 ], [ -1.73445, 53.02404 ], [ -1.73437, 53.0245 ], [ -1.73434, 53.02469 ], [ -1.73434, 53.02481 ], [ -1.73435, 53.02494 ], [ -1.73441, 53.02539 ], [ -1.73442, 53.02544 ], [ -1.73448, 53.0258 ], [ -1.73451, 53.02599 ], [ -1.73455, 53.02624 ], [ -1.73456, 53.02634 ], [ -1.73459, 53.02651 ], [ -1.73459, 53.02659 ], [ -1.73459, 53.02679 ], [ -1.73458, 53.02695 ], [ -1.73456, 53.02709 ], [ -1.73451, 53.02729 ], [ -1.73449, 53.0274 ], [ -1.73447, 53.02747 ], [ -1.73442, 53.02764 ], [ -1.7344, 53.02772 ], [ -1.73437, 53.02783 ], [ -1.73436, 53.0279 ], [ -1.73433, 53.02801 ], [ -1.73429, 53.02821 ], [ -1.73428, 53.02827 ], [ -1.73429, 53.02834 ], [ -1.7343, 53.02845 ], [ -1.73431, 53.02849 ], [ -1.73433, 53.02855 ], [ -1.73437, 53.02863 ], [ -1.73442, 53.02869 ], [ -1.73457, 53.02887 ], [ -1.7346, 53.02891 ], [ -1.73486, 53.02918 ], [ -1.735, 53.02934 ], [ -1.73504, 53.02938 ], [ -1.73514, 53.0295 ], [ -1.73526, 53.02964 ], [ -1.73535, 53.02976 ], [ -1.73539, 53.02983 ], [ -1.73548, 53.02998 ], [ -1.73555, 53.03017 ], [ -1.73567, 53.03053 ], [ -1.73572, 53.03066 ], [ -1.73588, 53.031 ], [ -1.7359, 53.03104 ], [ -1.73597, 53.03116 ], [ -1.73609, 53.03134 ], [ -1.73613, 53.0314 ], [ -1.7362, 53.0315 ], [ -1.73633, 53.03169 ], [ -1.73634, 53.03172 ], [ -1.73646, 53.03196 ], [ -1.7365, 53.03205 ], [ -1.73653, 53.03213 ], [ -1.73657, 53.03227 ], [ -1.73658, 53.0323 ], [ -1.73659, 53.03239 ], [ -1.73659, 53.03248 ], [ -1.73659, 53.03263 ], [ -1.73657, 53.03274 ], [ -1.73656, 53.03282 ], [ -1.73654, 53.03291 ], [ -1.7365, 53.03302 ], [ -1.73644, 53.03312 ], [ -1.73638, 53.03321 ], [ -1.73632, 53.03331 ], [ -1.73618, 53.03356 ], [ -1.73596, 53.03388 ], [ -1.73582, 53.0341 ], [ -1.73577, 53.03417 ], [ -1.73562, 53.0344 ], [ -1.73553, 53.03453 ], [ -1.73541, 53.03474 ], [ -1.73519, 53.03506 ], [ -1.73506, 53.03527 ], [ -1.73496, 53.03542 ], [ -1.73484, 53.0356 ], [ -1.73482, 53.03564 ], [ -1.73473, 53.03577 ], [ -1.73468, 53.03585 ], [ -1.73451, 53.03611 ], [ -1.73447, 53.03617 ], [ -1.73432, 53.03639 ], [ -1.73424, 53.03652 ], [ -1.73418, 53.03661 ], [ -1.73418, 53.03662 ], [ -1.73408, 53.03676 ], [ -1.73398, 53.03697 ], [ -1.73395, 53.03703 ], [ -1.73393, 53.03707 ], [ -1.7339, 53.03716 ], [ -1.73389, 53.03721 ], [ -1.73387, 53.03737 ], [ -1.73387, 53.03741 ], [ -1.73387, 53.03743 ], [ -1.73388, 53.03747 ], [ -1.7339, 53.03755 ], [ -1.73391, 53.03759 ], [ -1.73393, 53.03764 ], [ -1.73399, 53.03774 ], [ -1.734, 53.03776 ], [ -1.73406, 53.03786 ], [ -1.73411, 53.03792 ], [ -1.73415, 53.03798 ], [ -1.73424, 53.03809 ], [ -1.73425, 53.0381 ], [ -1.73434, 53.03821 ], [ -1.73444, 53.03833 ], [ -1.7345, 53.03841 ], [ -1.73455, 53.03847 ], [ -1.73461, 53.03856 ], [ -1.73467, 53.03866 ], [ -1.73475, 53.03883 ], [ -1.73479, 53.03894 ], [ -1.73483, 53.03907 ], [ -1.73483, 53.0391 ], [ -1.73485, 53.03922 ], [ -1.73487, 53.03946 ], [ -1.73487, 53.03955 ], [ -1.73487, 53.03982 ], [ -1.73488, 53.03998 ], [ -1.73488, 53.04 ], [ -1.73488, 53.04022 ], [ -1.7349, 53.04029 ], [ -1.73491, 53.04035 ], [ -1.73497, 53.04048 ], [ -1.73506, 53.04059 ], [ -1.73507, 53.0406 ], [ -1.7351, 53.04063 ], [ -1.73514, 53.04067 ], [ -1.73523, 53.04074 ], [ -1.73525, 53.04076 ], [ -1.73528, 53.04079 ], [ -1.73533, 53.04083 ], [ -1.73538, 53.04086 ], [ -1.73546, 53.04091 ], [ -1.73561, 53.041 ], [ -1.73564, 53.04103 ], [ -1.73578, 53.04112 ], [ -1.73585, 53.04116 ], [ -1.7359, 53.0412 ], [ -1.73596, 53.04125 ], [ -1.73603, 53.0413 ], [ -1.73608, 53.04134 ], [ -1.73614, 53.0414 ], [ -1.73619, 53.04146 ], [ -1.73623, 53.04151 ], [ -1.73632, 53.04164 ], [ -1.73643, 53.04184 ], [ -1.73657, 53.0421 ], [ -1.73673, 53.04244 ], [ -1.7368, 53.0426 ], [ -1.7369, 53.04279 ], [ -1.73716, 53.0433 ], [ -1.73727, 53.04353 ], [ -1.73733, 53.04365 ], [ -1.7375, 53.04399 ], [ -1.73765, 53.04427 ], [ -1.73769, 53.04433 ], [ -1.73777, 53.04447 ], [ -1.73786, 53.04464 ], [ -1.73798, 53.04481 ], [ -1.73806, 53.04491 ], [ -1.73814, 53.045 ], [ -1.73819, 53.04507 ], [ -1.73827, 53.04516 ], [ -1.73841, 53.04532 ], [ -1.73843, 53.04535 ], [ -1.73862, 53.04558 ], [ -1.73867, 53.04564 ], [ -1.73881, 53.0458 ], [ -1.73888, 53.0459 ], [ -1.73894, 53.04596 ], [ -1.73901, 53.04605 ], [ -1.73907, 53.04613 ], [ -1.73921, 53.0463 ], [ -1.73929, 53.0464 ], [ -1.73932, 53.04645 ], [ -1.73935, 53.04652 ], [ -1.73939, 53.04659 ], [ -1.7394, 53.04663 ], [ -1.73943, 53.04669 ], [ -1.73951, 53.04686 ], [ -1.73955, 53.04697 ], [ -1.73957, 53.04702 ], [ -1.73961, 53.04715 ], [ -1.73963, 53.04719 ], [ -1.73967, 53.04738 ], [ -1.73968, 53.04748 ], [ -1.73968, 53.04787 ], [ -1.73968, 53.04795 ], [ -1.7397, 53.04816 ], [ -1.73973, 53.04832 ], [ -1.73976, 53.04845 ], [ -1.73982, 53.04854 ], [ -1.73988, 53.04863 ], [ -1.73999, 53.04873 ], [ -1.7401, 53.04882 ], [ -1.7402, 53.04889 ], [ -1.74036, 53.04901 ], [ -1.74045, 53.0491 ], [ -1.74054, 53.04918 ], [ -1.74056, 53.04921 ], [ -1.7406, 53.04927 ], [ -1.74066, 53.04937 ], [ -1.74068, 53.04941 ], [ -1.7407, 53.04946 ], [ -1.74073, 53.04954 ], [ -1.74075, 53.04963 ], [ -1.7408, 53.04978 ], [ -1.74089, 53.05003 ], [ -1.74097, 53.05023 ], [ -1.741, 53.05031 ], [ -1.74104, 53.0504 ], [ -1.74109, 53.05054 ], [ -1.7411, 53.05058 ], [ -1.74116, 53.05075 ], [ -1.74123, 53.05087 ], [ -1.74128, 53.05096 ], [ -1.74133, 53.05105 ], [ -1.74138, 53.05116 ], [ -1.74144, 53.05135 ], [ -1.74147, 53.05145 ], [ -1.74154, 53.0517 ], [ -1.74158, 53.05186 ], [ -1.74162, 53.05198 ], [ -1.74165, 53.05212 ], [ -1.74166, 53.05216 ], [ -1.74171, 53.05239 ], [ -1.74174, 53.05252 ], [ -1.74177, 53.05263 ], [ -1.74181, 53.0528 ], [ -1.74182, 53.05287 ], [ -1.74185, 53.05298 ], [ -1.74197, 53.05351 ], [ -1.74201, 53.05369 ], [ -1.74202, 53.05372 ], [ -1.74213, 53.05417 ], [ -1.74214, 53.05422 ], [ -1.74222, 53.05458 ], [ -1.74226, 53.05476 ], [ -1.74232, 53.05504 ], [ -1.74236, 53.05521 ], [ -1.7424, 53.05539 ], [ -1.74241, 53.05547 ], [ -1.74248, 53.05578 ], [ -1.74272, 53.05658 ], [ -1.74276, 53.05674 ], [ -1.74283, 53.057 ], [ -1.74284, 53.05702 ], [ -1.74286, 53.05711 ], [ -1.74287, 53.05719 ], [ -1.74292, 53.05738 ], [ -1.74299, 53.05766 ], [ -1.74303, 53.05787 ], [ -1.74304, 53.05791 ], [ -1.74305, 53.05796 ], [ -1.7431, 53.05827 ], [ -1.74315, 53.05858 ], [ -1.74329, 53.05905 ], [ -1.74333, 53.05915 ], [ -1.74336, 53.05922 ], [ -1.74339, 53.05929 ], [ -1.74344, 53.05937 ], [ -1.7435, 53.05945 ], [ -1.74353, 53.0595 ], [ -1.74359, 53.05959 ], [ -1.74366, 53.05967 ], [ -1.74372, 53.05975 ], [ -1.7438, 53.05984 ], [ -1.74386, 53.05992 ], [ -1.74398, 53.06004 ], [ -1.74409, 53.06016 ], [ -1.74429, 53.06039 ], [ -1.74445, 53.06056 ], [ -1.7445, 53.06063 ], [ -1.74454, 53.06066 ], [ -1.74462, 53.06076 ], [ -1.74481, 53.06097 ], [ -1.74494, 53.0611 ], [ -1.74507, 53.06124 ], [ -1.74514, 53.06131 ], [ -1.7453, 53.0615 ], [ -1.74542, 53.06165 ], [ -1.74546, 53.06173 ], [ -1.74552, 53.06183 ], [ -1.7456, 53.06199 ], [ -1.74568, 53.06216 ], [ -1.74586, 53.06254 ], [ -1.7459, 53.06261 ], [ -1.74605, 53.06286 ], [ -1.74624, 53.0631 ], [ -1.74649, 53.06343 ], [ -1.74653, 53.06349 ], [ -1.74672, 53.06376 ], [ -1.74678, 53.06384 ], [ -1.74684, 53.06393 ], [ -1.74695, 53.06409 ], [ -1.74706, 53.06426 ], [ -1.74715, 53.06441 ], [ -1.74716, 53.06443 ], [ -1.74724, 53.06456 ], [ -1.74726, 53.0646 ], [ -1.74728, 53.06464 ], [ -1.74734, 53.06477 ], [ -1.74734, 53.06478 ], [ -1.74739, 53.06495 ], [ -1.74739, 53.06496 ], [ -1.74745, 53.0651 ], [ -1.74746, 53.06512 ], [ -1.7475, 53.06525 ], [ -1.74752, 53.0653 ], [ -1.74753, 53.06533 ], [ -1.74757, 53.06548 ], [ -1.7476, 53.06559 ], [ -1.74761, 53.06566 ], [ -1.74767, 53.0659 ], [ -1.7477, 53.06601 ], [ -1.74771, 53.06609 ], [ -1.74774, 53.06619 ], [ -1.74775, 53.06623 ], [ -1.7478, 53.06637 ], [ -1.74784, 53.06649 ], [ -1.74786, 53.06654 ], [ -1.74789, 53.06659 ], [ -1.74797, 53.06677 ], [ -1.74802, 53.06689 ], [ -1.74805, 53.06694 ], [ -1.74809, 53.06704 ], [ -1.74812, 53.06715 ], [ -1.74814, 53.06724 ], [ -1.74816, 53.0673 ], [ -1.74818, 53.06741 ], [ -1.74818, 53.06742 ], [ -1.74821, 53.06753 ], [ -1.74822, 53.0676 ], [ -1.74823, 53.06763 ], [ -1.74824, 53.06776 ], [ -1.74827, 53.06793 ], [ -1.74828, 53.06795 ], [ -1.74831, 53.06813 ], [ -1.74838, 53.06849 ], [ -1.74838, 53.06851 ], [ -1.7484, 53.06861 ], [ -1.74843, 53.06875 ], [ -1.74844, 53.06885 ], [ -1.74845, 53.06893 ], [ -1.74849, 53.0691 ], [ -1.74852, 53.06921 ], [ -1.7486, 53.06938 ], [ -1.74863, 53.06942 ], [ -1.7487, 53.06952 ], [ -1.74876, 53.06959 ], [ -1.74886, 53.06971 ], [ -1.74894, 53.0698 ], [ -1.74909, 53.06997 ], [ -1.74914, 53.07003 ], [ -1.74922, 53.07012 ], [ -1.7493, 53.07023 ], [ -1.7494, 53.07041 ], [ -1.74943, 53.07046 ], [ -1.74949, 53.07058 ], [ -1.74953, 53.07063 ], [ -1.74956, 53.07068 ], [ -1.74962, 53.07076 ], [ -1.74971, 53.07083 ], [ -1.74975, 53.07086 ], [ -1.74994, 53.07097 ], [ -1.75002, 53.07101 ], [ -1.75044, 53.07124 ], [ -1.75091, 53.07149 ], [ -1.75113, 53.07161 ], [ -1.75135, 53.07173 ], [ -1.75158, 53.07185 ], [ -1.75165, 53.0719 ], [ -1.75195, 53.07205 ], [ -1.75202, 53.07209 ], [ -1.75247, 53.07233 ], [ -1.7529, 53.07257 ], [ -1.75378, 53.07307 ], [ -1.75387, 53.07311 ], [ -1.75391, 53.07313 ], [ -1.75437, 53.07339 ], [ -1.75465, 53.07355 ], [ -1.75487, 53.07367 ], [ -1.75509, 53.0738 ], [ -1.75543, 53.074 ], [ -1.75552, 53.07405 ], [ -1.75559, 53.07409 ], [ -1.75572, 53.07417 ], [ -1.75573, 53.07417 ], [ -1.75585, 53.07425 ], [ -1.75593, 53.0743 ], [ -1.75599, 53.07435 ], [ -1.75605, 53.07439 ], [ -1.7561, 53.07443 ], [ -1.75612, 53.07444 ], [ -1.75623, 53.07454 ], [ -1.75625, 53.07456 ], [ -1.75638, 53.07468 ], [ -1.75645, 53.07476 ], [ -1.75653, 53.07486 ], [ -1.75657, 53.07492 ], [ -1.75665, 53.07508 ], [ -1.75684, 53.07549 ], [ -1.757, 53.07583 ], [ -1.75706, 53.07595 ], [ -1.75709, 53.076 ], [ -1.75711, 53.07606 ], [ -1.75717, 53.07618 ], [ -1.75728, 53.07636 ], [ -1.75734, 53.07646 ], [ -1.75741, 53.07659 ], [ -1.75744, 53.07663 ], [ -1.75754, 53.0768 ], [ -1.75757, 53.07686 ], [ -1.7576, 53.07691 ], [ -1.75765, 53.07701 ], [ -1.75771, 53.07715 ], [ -1.75775, 53.07725 ], [ -1.75778, 53.07732 ], [ -1.75783, 53.07743 ], [ -1.75785, 53.07746 ], [ -1.75786, 53.07749 ], [ -1.75791, 53.0776 ], [ -1.75794, 53.07767 ], [ -1.75796, 53.07773 ], [ -1.75803, 53.07784 ], [ -1.75805, 53.07788 ], [ -1.75815, 53.07803 ], [ -1.75838, 53.07834 ], [ -1.75842, 53.07839 ], [ -1.75854, 53.07855 ], [ -1.75863, 53.07867 ], [ -1.75866, 53.07873 ], [ -1.75876, 53.07889 ], [ -1.75884, 53.07902 ], [ -1.75905, 53.07936 ], [ -1.75908, 53.0794 ], [ -1.75916, 53.07953 ], [ -1.75925, 53.07968 ], [ -1.75926, 53.0797 ], [ -1.75937, 53.07987 ], [ -1.75947, 53.08008 ], [ -1.75953, 53.08021 ], [ -1.75958, 53.08032 ], [ -1.75961, 53.08038 ], [ -1.75968, 53.08056 ], [ -1.75971, 53.08062 ], [ -1.75985, 53.08094 ], [ -1.75997, 53.08126 ], [ -1.76004, 53.08143 ], [ -1.7601, 53.08164 ], [ -1.76015, 53.08174 ], [ -1.76017, 53.08178 ], [ -1.76019, 53.08181 ], [ -1.76025, 53.08188 ], [ -1.7603, 53.08194 ], [ -1.76035, 53.082 ], [ -1.76045, 53.0821 ], [ -1.76047, 53.08212 ], [ -1.76052, 53.08218 ], [ -1.76056, 53.08223 ], [ -1.76057, 53.08226 ], [ -1.76058, 53.0823 ], [ -1.7606, 53.08238 ], [ -1.76061, 53.08244 ], [ -1.76063, 53.0826 ], [ -1.76065, 53.08286 ], [ -1.76068, 53.08298 ], [ -1.76072, 53.08311 ], [ -1.76073, 53.08316 ], [ -1.76077, 53.08325 ], [ -1.76084, 53.08343 ], [ -1.76091, 53.08356 ], [ -1.761, 53.08366 ], [ -1.76111, 53.08379 ], [ -1.76129, 53.08398 ], [ -1.76131, 53.08401 ], [ -1.76145, 53.08414 ], [ -1.7616, 53.08429 ], [ -1.76164, 53.08433 ], [ -1.76181, 53.08445 ], [ -1.76206, 53.0846 ], [ -1.76221, 53.08468 ], [ -1.76251, 53.08486 ], [ -1.76277, 53.085 ], [ -1.76287, 53.08505 ], [ -1.76304, 53.08515 ], [ -1.76309, 53.08517 ], [ -1.76325, 53.08527 ], [ -1.7633, 53.0853 ], [ -1.76351, 53.08543 ], [ -1.76397, 53.08575 ], [ -1.76447, 53.0861 ], [ -1.76448, 53.08611 ], [ -1.76468, 53.08625 ], [ -1.76487, 53.08639 ], [ -1.76488, 53.0864 ], [ -1.76506, 53.08653 ], [ -1.76525, 53.08665 ], [ -1.76526, 53.08666 ], [ -1.76546, 53.0868 ], [ -1.76554, 53.08686 ], [ -1.7657, 53.08698 ], [ -1.76576, 53.08703 ], [ -1.76586, 53.08712 ], [ -1.76607, 53.08733 ], [ -1.76613, 53.08739 ], [ -1.76623, 53.08749 ], [ -1.76628, 53.08754 ], [ -1.76649, 53.08771 ], [ -1.76669, 53.08787 ], [ -1.76678, 53.08794 ], [ -1.76692, 53.08804 ], [ -1.76719, 53.08827 ], [ -1.76742, 53.08848 ], [ -1.76755, 53.0886 ], [ -1.76758, 53.08863 ], [ -1.76808, 53.08909 ], [ -1.76841, 53.08938 ], [ -1.76851, 53.08947 ], [ -1.76857, 53.08953 ], [ -1.76876, 53.08971 ], [ -1.76907, 53.09002 ], [ -1.76919, 53.09014 ], [ -1.76919, 53.09015 ], [ -1.76928, 53.09024 ], [ -1.76941, 53.0904 ], [ -1.7695, 53.09054 ], [ -1.76956, 53.09063 ], [ -1.76958, 53.09066 ], [ -1.76971, 53.09089 ], [ -1.76982, 53.09115 ], [ -1.76989, 53.09129 ], [ -1.77001, 53.09153 ], [ -1.77011, 53.09172 ], [ -1.77019, 53.09187 ], [ -1.77019, 53.09188 ], [ -1.77024, 53.092 ], [ -1.77025, 53.09204 ], [ -1.77028, 53.09213 ], [ -1.77031, 53.09222 ], [ -1.77041, 53.09257 ], [ -1.77047, 53.09271 ], [ -1.77048, 53.09275 ], [ -1.77053, 53.09285 ], [ -1.77062, 53.09301 ], [ -1.77071, 53.09313 ], [ -1.77076, 53.09318 ], [ -1.7708, 53.09323 ], [ -1.77082, 53.09325 ], [ -1.77095, 53.09336 ], [ -1.77105, 53.09343 ], [ -1.77111, 53.09347 ], [ -1.77118, 53.09351 ], [ -1.77133, 53.09359 ], [ -1.77134, 53.0936 ], [ -1.77177, 53.09383 ], [ -1.77184, 53.09387 ], [ -1.772, 53.09395 ], [ -1.77206, 53.09399 ], [ -1.77222, 53.09407 ], [ -1.77222, 53.09408 ], [ -1.77238, 53.09416 ], [ -1.77244, 53.0942 ], [ -1.77251, 53.09423 ], [ -1.77255, 53.09426 ], [ -1.77265, 53.09433 ], [ -1.7727, 53.09437 ], [ -1.77282, 53.09446 ], [ -1.77283, 53.09447 ], [ -1.77288, 53.09452 ], [ -1.7729, 53.09454 ], [ -1.77297, 53.09463 ], [ -1.77303, 53.09471 ], [ -1.77316, 53.09486 ], [ -1.77325, 53.09501 ], [ -1.77328, 53.09514 ], [ -1.77329, 53.09518 ], [ -1.77329, 53.09531 ], [ -1.7733, 53.09536 ], [ -1.7733, 53.09537 ], [ -1.77329, 53.09549 ], [ -1.77329, 53.09551 ], [ -1.77327, 53.09584 ], [ -1.7732, 53.09618 ], [ -1.77319, 53.09619 ], [ -1.77316, 53.09626 ], [ -1.77312, 53.09637 ], [ -1.77312, 53.09638 ], [ -1.77289, 53.09684 ], [ -1.77279, 53.09706 ], [ -1.77272, 53.09724 ], [ -1.77267, 53.09734 ], [ -1.77265, 53.09741 ], [ -1.77258, 53.09758 ], [ -1.77258, 53.09759 ], [ -1.77254, 53.09776 ], [ -1.77254, 53.09777 ], [ -1.77253, 53.09789 ], [ -1.77255, 53.098 ], [ -1.77259, 53.09812 ], [ -1.77262, 53.09822 ], [ -1.77263, 53.09832 ], [ -1.77261, 53.09844 ], [ -1.77258, 53.09848 ], [ -1.77249, 53.09864 ], [ -1.77249, 53.09865 ], [ -1.77236, 53.09879 ], [ -1.77235, 53.09881 ], [ -1.77221, 53.09896 ], [ -1.77216, 53.09902 ], [ -1.77209, 53.09911 ], [ -1.77208, 53.09912 ], [ -1.77199, 53.09924 ], [ -1.77196, 53.09929 ], [ -1.77189, 53.09939 ], [ -1.77185, 53.09946 ], [ -1.77182, 53.09951 ], [ -1.7717, 53.09981 ], [ -1.77169, 53.09983 ], [ -1.77163, 53.09997 ], [ -1.77163, 53.09998 ], [ -1.77149, 53.10029 ], [ -1.77138, 53.10047 ], [ -1.77137, 53.1005 ], [ -1.77128, 53.10062 ], [ -1.77125, 53.10066 ], [ -1.77118, 53.10074 ], [ -1.7711, 53.10082 ], [ -1.77095, 53.10097 ], [ -1.77087, 53.10105 ], [ -1.77079, 53.10113 ], [ -1.7706, 53.1013 ], [ -1.77048, 53.10143 ], [ -1.77043, 53.10148 ], [ -1.77033, 53.10159 ], [ -1.77027, 53.10166 ], [ -1.77019, 53.10175 ], [ -1.77008, 53.10188 ], [ -1.77005, 53.10191 ], [ -1.76991, 53.10206 ], [ -1.76963, 53.1023 ], [ -1.76921, 53.10265 ], [ -1.76911, 53.10274 ], [ -1.76886, 53.10294 ], [ -1.76867, 53.10311 ], [ -1.76836, 53.10337 ], [ -1.76808, 53.1036 ], [ -1.76797, 53.10369 ], [ -1.76785, 53.10378 ], [ -1.76775, 53.10384 ], [ -1.76765, 53.10391 ], [ -1.76746, 53.10404 ], [ -1.76709, 53.10426 ], [ -1.76684, 53.1044 ], [ -1.7668, 53.10442 ], [ -1.76669, 53.10447 ], [ -1.76655, 53.10455 ], [ -1.76637, 53.10464 ], [ -1.76619, 53.10473 ], [ -1.76577, 53.10492 ], [ -1.76558, 53.105 ], [ -1.76537, 53.1051 ], [ -1.76506, 53.10523 ], [ -1.76455, 53.10545 ], [ -1.76441, 53.10551 ], [ -1.76421, 53.10559 ], [ -1.76391, 53.10572 ], [ -1.76368, 53.10582 ], [ -1.76364, 53.10584 ], [ -1.76344, 53.10593 ], [ -1.7633, 53.10599 ], [ -1.7629, 53.10617 ], [ -1.76247, 53.10635 ], [ -1.76206, 53.10652 ], [ -1.76195, 53.10656 ], [ -1.7618, 53.10662 ], [ -1.76169, 53.10666 ], [ -1.76135, 53.10679 ], [ -1.7613, 53.10682 ], [ -1.7611, 53.10689 ], [ -1.76093, 53.10696 ], [ -1.76085, 53.10699 ], [ -1.76061, 53.10709 ], [ -1.76044, 53.10716 ], [ -1.76036, 53.1072 ], [ -1.76013, 53.10731 ], [ -1.76008, 53.10733 ], [ -1.75982, 53.10747 ], [ -1.75939, 53.10768 ], [ -1.75928, 53.10774 ], [ -1.75886, 53.10797 ], [ -1.75867, 53.10807 ], [ -1.75848, 53.10819 ], [ -1.7583, 53.1083 ], [ -1.75828, 53.10831 ], [ -1.75813, 53.10842 ], [ -1.75802, 53.10851 ], [ -1.75798, 53.10855 ], [ -1.7578, 53.10874 ], [ -1.7577, 53.10889 ], [ -1.7576, 53.10905 ], [ -1.75743, 53.10932 ], [ -1.75727, 53.10958 ], [ -1.75725, 53.10962 ], [ -1.75716, 53.10978 ], [ -1.75706, 53.1099 ], [ -1.75702, 53.10997 ], [ -1.75694, 53.11006 ], [ -1.75677, 53.11024 ], [ -1.75662, 53.11041 ], [ -1.75647, 53.11059 ], [ -1.75641, 53.11067 ], [ -1.75621, 53.11091 ], [ -1.75608, 53.11108 ], [ -1.75594, 53.11125 ], [ -1.75581, 53.11147 ], [ -1.75575, 53.11157 ], [ -1.75571, 53.11165 ], [ -1.75552, 53.112 ], [ -1.75529, 53.11243 ], [ -1.75525, 53.11251 ], [ -1.75516, 53.11271 ], [ -1.75504, 53.11295 ], [ -1.75501, 53.11301 ], [ -1.75488, 53.11327 ], [ -1.75472, 53.11362 ], [ -1.75463, 53.1138 ], [ -1.75447, 53.11413 ], [ -1.75446, 53.11416 ], [ -1.75442, 53.11426 ], [ -1.75438, 53.11437 ], [ -1.75435, 53.11447 ], [ -1.75434, 53.11458 ], [ -1.75434, 53.11476 ], [ -1.75433, 53.11493 ], [ -1.75433, 53.11515 ], [ -1.75431, 53.11539 ], [ -1.75427, 53.11568 ], [ -1.7542, 53.11602 ], [ -1.75418, 53.11612 ], [ -1.75412, 53.11635 ], [ -1.75403, 53.11664 ], [ -1.75381, 53.11726 ], [ -1.75378, 53.11736 ], [ -1.75359, 53.11789 ], [ -1.75347, 53.11815 ], [ -1.75342, 53.11826 ], [ -1.7534, 53.1183 ], [ -1.75333, 53.11843 ], [ -1.75325, 53.11861 ], [ -1.75316, 53.11878 ], [ -1.75314, 53.11882 ], [ -1.75308, 53.11895 ], [ -1.753, 53.11912 ], [ -1.75292, 53.1193 ], [ -1.75279, 53.11961 ], [ -1.75267, 53.1199 ], [ -1.75265, 53.11996 ], [ -1.75247, 53.12042 ], [ -1.75243, 53.12054 ], [ -1.75238, 53.12072 ], [ -1.75233, 53.12093 ], [ -1.7523, 53.12111 ], [ -1.75228, 53.12129 ], [ -1.75226, 53.12151 ], [ -1.75227, 53.12162 ], [ -1.75227, 53.12177 ], [ -1.75227, 53.12196 ], [ -1.75228, 53.12197 ], [ -1.75232, 53.12223 ], [ -1.75233, 53.12231 ], [ -1.75234, 53.12233 ], [ -1.75235, 53.12239 ], [ -1.75237, 53.12247 ], [ -1.75242, 53.12263 ], [ -1.75245, 53.12272 ], [ -1.75252, 53.1229 ], [ -1.75255, 53.12298 ], [ -1.75274, 53.12349 ], [ -1.75279, 53.1236 ], [ -1.75281, 53.12366 ], [ -1.753, 53.12414 ], [ -1.7532, 53.12468 ], [ -1.75325, 53.12482 ], [ -1.7534, 53.12517 ], [ -1.75363, 53.12571 ], [ -1.75366, 53.12577 ], [ -1.75379, 53.12605 ], [ -1.75402, 53.12655 ], [ -1.75415, 53.1269 ], [ -1.75416, 53.12693 ], [ -1.75426, 53.12724 ], [ -1.75436, 53.12764 ], [ -1.75436, 53.12765 ], [ -1.75445, 53.12807 ], [ -1.75446, 53.12817 ], [ -1.75448, 53.12825 ], [ -1.7545, 53.1284 ], [ -1.75452, 53.12866 ], [ -1.75454, 53.12889 ], [ -1.75454, 53.12896 ], [ -1.75456, 53.12925 ], [ -1.75458, 53.12943 ], [ -1.75462, 53.12962 ], [ -1.75465, 53.12975 ], [ -1.75467, 53.12985 ], [ -1.75477, 53.13012 ], [ -1.75481, 53.13022 ], [ -1.75491, 53.13049 ], [ -1.75493, 53.13059 ], [ -1.75496, 53.1307 ], [ -1.75497, 53.13087 ], [ -1.75498, 53.13105 ], [ -1.75496, 53.13119 ], [ -1.75492, 53.1313 ], [ -1.75486, 53.13149 ], [ -1.75481, 53.13165 ], [ -1.75478, 53.13176 ], [ -1.75476, 53.13183 ], [ -1.75467, 53.13215 ], [ -1.75458, 53.13245 ], [ -1.75451, 53.13264 ], [ -1.7545, 53.13267 ], [ -1.75444, 53.13284 ], [ -1.75438, 53.13302 ], [ -1.75427, 53.13335 ], [ -1.7542, 53.13355 ], [ -1.75417, 53.13362 ], [ -1.75414, 53.13372 ], [ -1.75409, 53.1339 ], [ -1.75403, 53.13408 ], [ -1.75401, 53.13416 ], [ -1.75398, 53.13426 ], [ -1.75385, 53.13472 ], [ -1.75383, 53.13479 ], [ -1.75377, 53.13496 ], [ -1.75371, 53.13514 ], [ -1.75366, 53.13532 ], [ -1.7536, 53.13549 ], [ -1.75354, 53.13567 ], [ -1.75352, 53.13575 ], [ -1.75348, 53.13585 ], [ -1.75343, 53.13602 ], [ -1.75337, 53.1362 ], [ -1.75329, 53.13644 ], [ -1.75326, 53.13655 ], [ -1.75313, 53.13691 ], [ -1.7531, 53.13698 ], [ -1.753, 53.13726 ], [ -1.75296, 53.13744 ], [ -1.75293, 53.13754 ], [ -1.75291, 53.13766 ], [ -1.7529, 53.13776 ], [ -1.7529, 53.13787 ], [ -1.7529, 53.13796 ], [ -1.75291, 53.13806 ], [ -1.75291, 53.13811 ], [ -1.75292, 53.13817 ], [ -1.75295, 53.13828 ], [ -1.75297, 53.13839 ], [ -1.75302, 53.13854 ], [ -1.75305, 53.13861 ], [ -1.75314, 53.1388 ], [ -1.75327, 53.13906 ], [ -1.75333, 53.13916 ], [ -1.75343, 53.13931 ], [ -1.75353, 53.13943 ], [ -1.75357, 53.13948 ], [ -1.75367, 53.1396 ], [ -1.75386, 53.1398 ], [ -1.75391, 53.13985 ], [ -1.75402, 53.13995 ], [ -1.75431, 53.14023 ], [ -1.75457, 53.14048 ], [ -1.75466, 53.14056 ], [ -1.75482, 53.14071 ], [ -1.75484, 53.14073 ], [ -1.75505, 53.14089 ], [ -1.75518, 53.14098 ], [ -1.7552, 53.14099 ], [ -1.75533, 53.14108 ], [ -1.7554, 53.14112 ], [ -1.75551, 53.14119 ], [ -1.75562, 53.14125 ], [ -1.75575, 53.14132 ], [ -1.75607, 53.1415 ], [ -1.75628, 53.14161 ], [ -1.7565, 53.14173 ], [ -1.75687, 53.14193 ], [ -1.75695, 53.14197 ], [ -1.75715, 53.14209 ], [ -1.7575, 53.1423 ], [ -1.75782, 53.14251 ], [ -1.75798, 53.14262 ], [ -1.75818, 53.14276 ], [ -1.75825, 53.14281 ], [ -1.75837, 53.1429 ], [ -1.75846, 53.14296 ], [ -1.75857, 53.14304 ], [ -1.75876, 53.14317 ], [ -1.75879, 53.1432 ], [ -1.75914, 53.14345 ], [ -1.75942, 53.14365 ], [ -1.75952, 53.14373 ], [ -1.75973, 53.14389 ], [ -1.76014, 53.14418 ], [ -1.76028, 53.14428 ], [ -1.76048, 53.14443 ], [ -1.76082, 53.14468 ], [ -1.76085, 53.1447 ], [ -1.76095, 53.14477 ], [ -1.76119, 53.14495 ], [ -1.76142, 53.14512 ], [ -1.76167, 53.14531 ], [ -1.76195, 53.14551 ], [ -1.76207, 53.1456 ], [ -1.76212, 53.14563 ], [ -1.76237, 53.14581 ], [ -1.76282, 53.14615 ], [ -1.76286, 53.14617 ], [ -1.76327, 53.14647 ], [ -1.76377, 53.14684 ], [ -1.7639, 53.14694 ], [ -1.76395, 53.14699 ], [ -1.76409, 53.14709 ], [ -1.76434, 53.14728 ], [ -1.76448, 53.1474 ], [ -1.76466, 53.14757 ], [ -1.76476, 53.14767 ], [ -1.76485, 53.14776 ], [ -1.7649, 53.14781 ], [ -1.76499, 53.14792 ], [ -1.76534, 53.14832 ], [ -1.76547, 53.14847 ], [ -1.76563, 53.14866 ], [ -1.76568, 53.14872 ], [ -1.76572, 53.14877 ], [ -1.76577, 53.14882 ], [ -1.76591, 53.14898 ], [ -1.76612, 53.14923 ], [ -1.76637, 53.14953 ], [ -1.76641, 53.14957 ], [ -1.76649, 53.14966 ], [ -1.76651, 53.14968 ], [ -1.76682, 53.15005 ], [ -1.76735, 53.15069 ], [ -1.76772, 53.15114 ], [ -1.768, 53.15147 ], [ -1.76837, 53.15195 ], [ -1.76858, 53.15222 ], [ -1.76863, 53.15229 ], [ -1.76876, 53.15245 ], [ -1.76877, 53.15247 ], [ -1.76916, 53.15296 ], [ -1.76929, 53.15311 ], [ -1.76952, 53.15343 ], [ -1.76956, 53.15347 ], [ -1.76969, 53.15365 ], [ -1.76978, 53.15377 ], [ -1.7699, 53.15394 ], [ -1.77006, 53.15418 ], [ -1.77026, 53.15451 ], [ -1.77041, 53.15477 ], [ -1.77064, 53.15513 ], [ -1.77072, 53.15524 ], [ -1.77087, 53.15549 ], [ -1.77091, 53.15554 ], [ -1.77102, 53.15571 ], [ -1.77112, 53.15588 ], [ -1.77114, 53.15591 ], [ -1.77132, 53.15622 ], [ -1.77135, 53.15626 ], [ -1.77157, 53.15668 ], [ -1.7716, 53.15673 ], [ -1.77179, 53.15707 ], [ -1.77184, 53.15717 ], [ -1.77199, 53.15741 ], [ -1.77222, 53.15784 ], [ -1.77227, 53.15793 ], [ -1.77235, 53.15806 ], [ -1.77246, 53.15827 ], [ -1.77256, 53.15844 ], [ -1.77265, 53.15859 ], [ -1.77275, 53.15877 ], [ -1.77312, 53.15944 ], [ -1.77328, 53.15973 ], [ -1.77333, 53.15984 ], [ -1.7734, 53.15997 ], [ -1.77364, 53.1604 ], [ -1.77381, 53.1607 ], [ -1.77391, 53.16087 ], [ -1.77412, 53.16125 ], [ -1.77433, 53.16162 ], [ -1.77453, 53.162 ], [ -1.77454, 53.16202 ], [ -1.77472, 53.16233 ], [ -1.7749, 53.16268 ], [ -1.77519, 53.1632 ], [ -1.77537, 53.16352 ], [ -1.77544, 53.16365 ], [ -1.77554, 53.16382 ], [ -1.77568, 53.16408 ], [ -1.7758, 53.16429 ], [ -1.77601, 53.16463 ], [ -1.77612, 53.1648 ], [ -1.77623, 53.16496 ], [ -1.77626, 53.165 ], [ -1.77649, 53.16531 ], [ -1.77684, 53.16575 ], [ -1.77703, 53.16598 ], [ -1.77716, 53.16614 ], [ -1.77718, 53.16617 ], [ -1.77743, 53.16646 ], [ -1.77749, 53.16653 ], [ -1.77771, 53.16678 ], [ -1.77785, 53.16694 ], [ -1.77803, 53.16714 ], [ -1.77826, 53.16742 ], [ -1.77839, 53.16758 ], [ -1.77852, 53.16774 ], [ -1.7786, 53.16783 ], [ -1.77866, 53.1679 ], [ -1.77879, 53.16806 ], [ -1.77892, 53.16822 ], [ -1.77907, 53.16839 ], [ -1.7792, 53.16854 ], [ -1.77934, 53.1687 ], [ -1.77947, 53.16886 ], [ -1.77948, 53.16886 ], [ -1.77958, 53.16898 ], [ -1.77989, 53.16934 ], [ -1.78028, 53.16981 ], [ -1.78035, 53.16989 ], [ -1.78041, 53.16996 ], [ -1.78042, 53.16997 ], [ -1.78055, 53.17013 ], [ -1.78069, 53.17029 ], [ -1.78083, 53.17045 ], [ -1.78096, 53.17061 ], [ -1.78106, 53.17072 ], [ -1.78124, 53.17093 ], [ -1.78151, 53.17125 ], [ -1.78164, 53.17141 ], [ -1.78174, 53.17152 ], [ -1.78178, 53.17157 ], [ -1.78192, 53.17173 ], [ -1.78206, 53.17189 ], [ -1.7822, 53.17205 ], [ -1.78229, 53.17215 ], [ -1.78234, 53.17221 ], [ -1.78249, 53.17236 ], [ -1.78263, 53.17252 ], [ -1.7829, 53.17283 ], [ -1.78319, 53.17316 ], [ -1.78332, 53.17332 ], [ -1.78342, 53.17343 ], [ -1.78346, 53.17348 ], [ -1.78362, 53.17367 ], [ -1.78368, 53.17375 ], [ -1.78383, 53.17394 ], [ -1.78387, 53.17398 ], [ -1.784, 53.17414 ], [ -1.784, 53.17415 ], [ -1.78438, 53.17459 ], [ -1.78481, 53.17511 ], [ -1.78496, 53.17526 ], [ -1.78505, 53.17534 ], [ -1.78518, 53.17545 ], [ -1.7853, 53.17552 ], [ -1.78544, 53.17559 ], [ -1.78576, 53.17575 ], [ -1.78605, 53.17587 ], [ -1.78621, 53.17595 ], [ -1.78629, 53.17598 ], [ -1.78653, 53.17609 ], [ -1.78659, 53.17612 ], [ -1.78677, 53.1762 ], [ -1.78701, 53.17631 ], [ -1.78724, 53.17641 ], [ -1.78807, 53.1768 ], [ -1.78819, 53.17686 ], [ -1.7882, 53.17686 ], [ -1.78843, 53.17697 ], [ -1.78889, 53.1772 ], [ -1.78892, 53.17721 ], [ -1.78964, 53.17755 ], [ -1.79031, 53.17786 ], [ -1.79055, 53.17797 ], [ -1.79062, 53.17801 ], [ -1.79078, 53.17808 ], [ -1.791, 53.17819 ], [ -1.79102, 53.1782 ], [ -1.79131, 53.17835 ], [ -1.79148, 53.17847 ], [ -1.79171, 53.17863 ], [ -1.79185, 53.17874 ], [ -1.79201, 53.17887 ], [ -1.79218, 53.17901 ], [ -1.79224, 53.17907 ], [ -1.79235, 53.17916 ], [ -1.79245, 53.17926 ], [ -1.79252, 53.17931 ], [ -1.79271, 53.17949 ], [ -1.79302, 53.17976 ], [ -1.79315, 53.17989 ], [ -1.79331, 53.18003 ], [ -1.79357, 53.18028 ], [ -1.79396, 53.18064 ], [ -1.79415, 53.18082 ], [ -1.79448, 53.18112 ], [ -1.79448, 53.18113 ], [ -1.79478, 53.18139 ], [ -1.79514, 53.18172 ], [ -1.7953, 53.18187 ], [ -1.79553, 53.18208 ], [ -1.79579, 53.18233 ], [ -1.79582, 53.18235 ], [ -1.79614, 53.18264 ], [ -1.79621, 53.1827 ], [ -1.7963, 53.18279 ], [ -1.7965, 53.18297 ], [ -1.79681, 53.18326 ], [ -1.79713, 53.18354 ], [ -1.79727, 53.18366 ], [ -1.79749, 53.18386 ], [ -1.79764, 53.18399 ], [ -1.7978, 53.18414 ], [ -1.79796, 53.18428 ], [ -1.79821, 53.1845 ], [ -1.79852, 53.18479 ], [ -1.79879, 53.18504 ], [ -1.79895, 53.18519 ], [ -1.79918, 53.1854 ], [ -1.79928, 53.18549 ], [ -1.79958, 53.18577 ], [ -1.79983, 53.186 ], [ -1.80008, 53.18623 ], [ -1.80033, 53.18647 ], [ -1.80042, 53.18655 ], [ -1.8005, 53.18662 ], [ -1.80058, 53.1867 ], [ -1.80072, 53.18683 ], [ -1.8009, 53.187 ], [ -1.80106, 53.18716 ], [ -1.80114, 53.18724 ], [ -1.80122, 53.18731 ], [ -1.80138, 53.18746 ], [ -1.80155, 53.18761 ], [ -1.80159, 53.18765 ], [ -1.80171, 53.18776 ], [ -1.80179, 53.18783 ], [ -1.80189, 53.18791 ], [ -1.80203, 53.18803 ], [ -1.80225, 53.18823 ], [ -1.80241, 53.18838 ], [ -1.80255, 53.18849 ], [ -1.80323, 53.1891 ], [ -1.80326, 53.18913 ], [ -1.80356, 53.1894 ], [ -1.80378, 53.18961 ], [ -1.80388, 53.1897 ], [ -1.80422, 53.19002 ], [ -1.80439, 53.19018 ], [ -1.80452, 53.19029 ], [ -1.80516, 53.19087 ], [ -1.80536, 53.19105 ], [ -1.80545, 53.19114 ], [ -1.80553, 53.1912 ], [ -1.80606, 53.19169 ], [ -1.80647, 53.19206 ], [ -1.80672, 53.19229 ], [ -1.80709, 53.19262 ], [ -1.80749, 53.19297 ], [ -1.8079, 53.19333 ], [ -1.80831, 53.19372 ], [ -1.80871, 53.19408 ], [ -1.80872, 53.19409 ], [ -1.80924, 53.19457 ], [ -1.80969, 53.195 ], [ -1.80992, 53.19523 ], [ -1.80996, 53.19528 ], [ -1.81012, 53.19544 ], [ -1.81029, 53.19558 ], [ -1.81047, 53.19572 ], [ -1.81051, 53.19575 ], [ -1.81056, 53.19579 ], [ -1.81073, 53.1959 ], [ -1.81151, 53.19647 ], [ -1.81183, 53.19669 ], [ -1.81208, 53.19688 ], [ -1.81246, 53.19715 ], [ -1.81247, 53.19716 ], [ -1.81286, 53.19743 ], [ -1.81305, 53.19757 ], [ -1.81368, 53.19802 ], [ -1.8142, 53.19837 ], [ -1.81442, 53.19853 ], [ -1.81472, 53.19874 ], [ -1.81518, 53.19907 ], [ -1.81558, 53.19935 ], [ -1.81562, 53.19938 ], [ -1.81584, 53.19954 ], [ -1.81616, 53.19976 ], [ -1.8163, 53.19986 ], [ -1.81653, 53.20001 ], [ -1.81676, 53.20016 ], [ -1.81717, 53.20043 ], [ -1.8175, 53.20065 ], [ -1.81797, 53.20097 ], [ -1.81799, 53.20098 ], [ -1.81818, 53.2011 ], [ -1.81847, 53.20128 ], [ -1.81898, 53.2016 ], [ -1.8196, 53.20196 ], [ -1.82009, 53.20224 ], [ -1.82029, 53.20236 ], [ -1.82074, 53.20262 ], [ -1.82114, 53.20284 ], [ -1.82175, 53.20318 ], [ -1.82209, 53.20341 ], [ -1.82218, 53.20349 ], [ -1.82237, 53.20363 ], [ -1.8224, 53.20365 ], [ -1.82252, 53.20375 ], [ -1.82281, 53.20397 ], [ -1.82292, 53.20406 ], [ -1.82307, 53.20418 ], [ -1.82311, 53.2042 ], [ -1.82334, 53.20437 ], [ -1.8234, 53.20442 ], [ -1.82353, 53.20452 ], [ -1.82371, 53.20465 ], [ -1.82375, 53.20468 ], [ -1.82397, 53.20484 ], [ -1.82414, 53.20495 ], [ -1.82423, 53.205 ], [ -1.82437, 53.20508 ], [ -1.82452, 53.20514 ], [ -1.82463, 53.20518 ], [ -1.82475, 53.20522 ], [ -1.82492, 53.20526 ], [ -1.82507, 53.20529 ], [ -1.82531, 53.20533 ], [ -1.82581, 53.20538 ], [ -1.82624, 53.20541 ], [ -1.82703, 53.20546 ], [ -1.8275, 53.20547 ], [ -1.82853, 53.20551 ], [ -1.82886, 53.20552 ], [ -1.82914, 53.20553 ], [ -1.82974, 53.20555 ], [ -1.83004, 53.20555 ], [ -1.83037, 53.20556 ], [ -1.83113, 53.20559 ], [ -1.83129, 53.2056 ], [ -1.83149, 53.20561 ], [ -1.83184, 53.20564 ], [ -1.83231, 53.2057 ], [ -1.83337, 53.20583 ], [ -1.83346, 53.20584 ], [ -1.83366, 53.20586 ], [ -1.83483, 53.20602 ], [ -1.83538, 53.20611 ], [ -1.8357, 53.20617 ], [ -1.83596, 53.20622 ], [ -1.83598, 53.20623 ], [ -1.83626, 53.2063 ], [ -1.83654, 53.20637 ], [ -1.83687, 53.20645 ], [ -1.8378, 53.2067 ], [ -1.83791, 53.20673 ], [ -1.83847, 53.20687 ], [ -1.84027, 53.20732 ], [ -1.84065, 53.20741 ], [ -1.8419, 53.20773 ], [ -1.84194, 53.20775 ], [ -1.84217, 53.20781 ], [ -1.84241, 53.20787 ], [ -1.84244, 53.20788 ], [ -1.84275, 53.20797 ], [ -1.84296, 53.20807 ], [ -1.84297, 53.20807 ], [ -1.84315, 53.20815 ], [ -1.8435, 53.20834 ], [ -1.84374, 53.20852 ], [ -1.8438, 53.20857 ], [ -1.84413, 53.20887 ], [ -1.8443, 53.20902 ], [ -1.8448, 53.20947 ], [ -1.84549, 53.21006 ], [ -1.84567, 53.21021 ], [ -1.84601, 53.2105 ], [ -1.84618, 53.21065 ], [ -1.84636, 53.21079 ], [ -1.84671, 53.2111 ], [ -1.84722, 53.21153 ], [ -1.84773, 53.21198 ], [ -1.84775, 53.21199 ], [ -1.8479, 53.21212 ], [ -1.84808, 53.21227 ], [ -1.84825, 53.21242 ], [ -1.84842, 53.21256 ], [ -1.84859, 53.21271 ], [ -1.8496, 53.21357 ], [ -1.8497, 53.21366 ], [ -1.85028, 53.21414 ], [ -1.85074, 53.21453 ], [ -1.85109, 53.21482 ], [ -1.85126, 53.21497 ], [ -1.85144, 53.21512 ], [ -1.85163, 53.21528 ], [ -1.85179, 53.21541 ], [ -1.85197, 53.21555 ], [ -1.85215, 53.21569 ], [ -1.85233, 53.21584 ], [ -1.85251, 53.21598 ], [ -1.85278, 53.2162 ], [ -1.85304, 53.21642 ], [ -1.85322, 53.21656 ], [ -1.8534, 53.21671 ], [ -1.85358, 53.21685 ], [ -1.85375, 53.217 ], [ -1.85388, 53.2171 ], [ -1.85393, 53.21714 ], [ -1.85411, 53.21729 ], [ -1.85447, 53.21758 ], [ -1.855, 53.21801 ], [ -1.85518, 53.21815 ], [ -1.85536, 53.2183 ], [ -1.8557, 53.21858 ], [ -1.85572, 53.21859 ], [ -1.85605, 53.21886 ], [ -1.85656, 53.21926 ], [ -1.85668, 53.21935 ], [ -1.85675, 53.2194 ], [ -1.85693, 53.21954 ], [ -1.85693, 53.21955 ], [ -1.85711, 53.21969 ], [ -1.85746, 53.21997 ], [ -1.85747, 53.21997 ], [ -1.85779, 53.22021 ], [ -1.85786, 53.22025 ], [ -1.85805, 53.22039 ], [ -1.85821, 53.2205 ], [ -1.85825, 53.22052 ], [ -1.85845, 53.22066 ], [ -1.8587, 53.22083 ], [ -1.85904, 53.22106 ], [ -1.85904, 53.22107 ], [ -1.85921, 53.22122 ], [ -1.85931, 53.22132 ], [ -1.85937, 53.22137 ], [ -1.85955, 53.22155 ], [ -1.85972, 53.2217 ], [ -1.85987, 53.22181 ], [ -1.85988, 53.22182 ], [ -1.86002, 53.22191 ], [ -1.86007, 53.22195 ], [ -1.86015, 53.222 ], [ -1.86029, 53.22208 ], [ -1.86038, 53.22213 ], [ -1.86051, 53.22219 ], [ -1.86062, 53.22225 ], [ -1.86075, 53.2223 ], [ -1.86097, 53.22239 ], [ -1.861, 53.2224 ], [ -1.86126, 53.22249 ], [ -1.86132, 53.22252 ], [ -1.86152, 53.22258 ], [ -1.86205, 53.22276 ], [ -1.86231, 53.22284 ], [ -1.86242, 53.22288 ], [ -1.86258, 53.22292 ], [ -1.86285, 53.22301 ], [ -1.8639, 53.22335 ], [ -1.86435, 53.2235 ], [ -1.86442, 53.22353 ], [ -1.86469, 53.22362 ], [ -1.86524, 53.2238 ], [ -1.86534, 53.22382 ], [ -1.8654, 53.22384 ], [ -1.8662, 53.224 ], [ -1.86646, 53.22404 ], [ -1.86657, 53.22405 ], [ -1.86677, 53.22408 ], [ -1.86698, 53.22409 ], [ -1.86725, 53.2241 ], [ -1.86736, 53.2241 ], [ -1.86749, 53.22411 ], [ -1.86798, 53.22413 ], [ -1.86826, 53.22415 ], [ -1.86856, 53.22416 ], [ -1.86857, 53.22417 ], [ -1.86875, 53.22417 ], [ -1.869, 53.22419 ], [ -1.86917, 53.22422 ], [ -1.86936, 53.22425 ], [ -1.86968, 53.2243 ], [ -1.86974, 53.22432 ], [ -1.86997, 53.22438 ], [ -1.87003, 53.2244 ], [ -1.87024, 53.22446 ], [ -1.87042, 53.22452 ], [ -1.87054, 53.22456 ], [ -1.87075, 53.22464 ], [ -1.8711, 53.22476 ], [ -1.87124, 53.22482 ], [ -1.87132, 53.22485 ], [ -1.87163, 53.225 ], [ -1.87175, 53.22507 ], [ -1.87189, 53.22516 ], [ -1.87217, 53.22533 ], [ -1.87266, 53.22564 ], [ -1.87275, 53.22571 ], [ -1.87314, 53.22598 ], [ -1.87338, 53.22615 ], [ -1.87353, 53.22626 ], [ -1.87396, 53.22656 ], [ -1.87401, 53.22659 ], [ -1.87405, 53.22662 ], [ -1.87408, 53.22664 ], [ -1.87412, 53.22667 ], [ -1.8747, 53.22708 ], [ -1.87474, 53.22711 ], [ -1.87494, 53.22725 ], [ -1.87497, 53.22727 ], [ -1.87509, 53.22735 ], [ -1.87514, 53.22738 ], [ -1.87551, 53.22761 ], [ -1.87555, 53.22764 ], [ -1.87633, 53.22813 ], [ -1.87654, 53.22826 ], [ -1.87659, 53.22829 ], [ -1.87675, 53.22839 ], [ -1.87691, 53.2285 ], [ -1.87695, 53.22852 ], [ -1.87716, 53.22865 ], [ -1.87721, 53.22868 ], [ -1.87742, 53.22881 ], [ -1.87758, 53.22891 ], [ -1.87779, 53.22904 ], [ -1.87785, 53.22908 ], [ -1.87841, 53.22943 ], [ -1.87909, 53.22985 ], [ -1.87925, 53.22995 ], [ -1.87929, 53.22998 ], [ -1.87946, 53.23008 ], [ -1.87968, 53.23022 ], [ -1.88008, 53.23047 ], [ -1.88075, 53.23089 ], [ -1.8808, 53.23092 ], [ -1.88096, 53.23102 ], [ -1.88132, 53.23125 ], [ -1.88153, 53.23138 ], [ -1.88158, 53.23141 ], [ -1.88174, 53.23151 ], [ -1.88195, 53.23164 ], [ -1.882, 53.23167 ], [ -1.88216, 53.23177 ], [ -1.88237, 53.23189 ], [ -1.88284, 53.23218 ], [ -1.883, 53.23228 ], [ -1.88305, 53.23231 ], [ -1.88321, 53.23241 ], [ -1.88325, 53.23244 ], [ -1.88404, 53.23293 ], [ -1.88446, 53.23319 ], [ -1.88488, 53.23344 ], [ -1.88509, 53.23357 ], [ -1.88514, 53.2336 ], [ -1.8853, 53.2337 ], [ -1.88533, 53.23372 ], [ -1.88551, 53.23383 ], [ -1.88555, 53.23386 ], [ -1.88659, 53.23451 ], [ -1.88661, 53.23452 ], [ -1.88675, 53.23461 ], [ -1.8868, 53.23464 ], [ -1.88695, 53.23474 ], [ -1.887, 53.23478 ], [ -1.88711, 53.23484 ], [ -1.88716, 53.23488 ], [ -1.88736, 53.23501 ], [ -1.88741, 53.23504 ], [ -1.88803, 53.23546 ], [ -1.88842, 53.23573 ], [ -1.88861, 53.23587 ], [ -1.88867, 53.23592 ], [ -1.88919, 53.23628 ], [ -1.88923, 53.23631 ], [ -1.88958, 53.23656 ], [ -1.88978, 53.2367 ], [ -1.88984, 53.23674 ], [ -1.88997, 53.23683 ], [ -1.89017, 53.23697 ], [ -1.89025, 53.23702 ], [ -1.89037, 53.2371 ], [ -1.89056, 53.23724 ], [ -1.89076, 53.23737 ], [ -1.89098, 53.23753 ], [ -1.89115, 53.23765 ], [ -1.89173, 53.23806 ], [ -1.89184, 53.23813 ], [ -1.89205, 53.23827 ], [ -1.89225, 53.23841 ], [ -1.89239, 53.2385 ], [ -1.89275, 53.23874 ], [ -1.89335, 53.23914 ], [ -1.89337, 53.23916 ], [ -1.89354, 53.23928 ], [ -1.8939, 53.23953 ], [ -1.89393, 53.23955 ], [ -1.89452, 53.23996 ], [ -1.8955, 53.24064 ], [ -1.89551, 53.24064 ], [ -1.89571, 53.24078 ], [ -1.8961, 53.24105 ], [ -1.89627, 53.24116 ], [ -1.89667, 53.24142 ], [ -1.89749, 53.24195 ], [ -1.89796, 53.24226 ], [ -1.89856, 53.24266 ], [ -1.89876, 53.2428 ], [ -1.89896, 53.24293 ], [ -1.89909, 53.24301 ], [ -1.89958, 53.24332 ], [ -1.89979, 53.24345 ], [ -1.89996, 53.24356 ], [ -1.9001, 53.24364 ], [ -1.90042, 53.24384 ], [ -1.90063, 53.24397 ], [ -1.90094, 53.24416 ], [ -1.90116, 53.24431 ], [ -1.90134, 53.24443 ], [ -1.90157, 53.24457 ], [ -1.90184, 53.24477 ], [ -1.90206, 53.24496 ], [ -1.90229, 53.24516 ], [ -1.90256, 53.24542 ], [ -1.90269, 53.24554 ], [ -1.90274, 53.24559 ], [ -1.90291, 53.24577 ], [ -1.903, 53.24585 ], [ -1.90304, 53.24591 ], [ -1.90314, 53.24601 ], [ -1.90319, 53.24606 ], [ -1.90329, 53.24617 ], [ -1.90343, 53.24633 ], [ -1.90357, 53.24647 ], [ -1.90378, 53.24668 ], [ -1.90402, 53.24689 ], [ -1.90405, 53.24692 ], [ -1.90427, 53.24708 ], [ -1.90468, 53.24736 ], [ -1.90482, 53.24744 ], [ -1.90498, 53.24751 ], [ -1.9049804, 53.2475147 ], [ -1.90503, 53.24761 ], [ -1.90506, 53.24764 ], [ -1.9051, 53.24767 ], [ -1.90514, 53.2477 ], [ -1.90521, 53.24774 ], [ -1.9053, 53.24778 ], [ -1.90534, 53.24779 ], [ -1.90536, 53.2478 ], [ -1.90544, 53.24783 ], [ -1.90555, 53.24786 ], [ -1.90563, 53.24787 ], [ -1.90573, 53.24789 ], [ -1.90586, 53.24789 ], [ -1.9059, 53.24789 ], [ -1.90596, 53.2479 ], [ -1.90604, 53.2479 ], [ -1.90617, 53.24789 ], [ -1.9065, 53.24787 ], [ -1.90677, 53.24786 ], [ -1.90725, 53.24781 ], [ -1.90782, 53.24778 ], [ -1.90802, 53.24778 ], [ -1.90814, 53.24777 ], [ -1.90828, 53.24777 ], [ -1.90855, 53.24783 ], [ -1.90866, 53.24786 ], [ -1.90877, 53.24788 ], [ -1.909, 53.24793 ], [ -1.90906, 53.24795 ], [ -1.90911, 53.24798 ], [ -1.90916, 53.248 ], [ -1.90926, 53.24805 ], [ -1.90959, 53.24825 ], [ -1.90971, 53.24834 ], [ -1.90981, 53.24841 ], [ -1.90983, 53.24843 ], [ -1.91005, 53.24862 ], [ -1.91025, 53.24882 ], [ -1.91051, 53.24911 ], [ -1.91058, 53.24919 ], [ -1.91061, 53.24924 ], [ -1.91065, 53.24929 ], [ -1.9107, 53.24937 ], [ -1.91073, 53.24943 ], [ -1.91081, 53.24956 ], [ -1.91087, 53.2497 ], [ -1.91098, 53.25002 ], [ -1.91131, 53.25097 ], [ -1.91147, 53.25124 ], [ -1.91158, 53.2514 ], [ -1.91167, 53.25151 ], [ -1.91173, 53.25158 ], [ -1.9118, 53.25165 ], [ -1.91189, 53.25174 ], [ -1.91218, 53.25197 ], [ -1.91273, 53.25228 ], [ -1.91293, 53.25239 ], [ -1.91339, 53.25262 ], [ -1.91397, 53.25287 ], [ -1.91411, 53.25293 ], [ -1.91429, 53.25301 ], [ -1.91435, 53.25304 ], [ -1.9144, 53.25306 ], [ -1.91448, 53.25311 ], [ -1.91454, 53.25315 ], [ -1.91466, 53.25325 ], [ -1.91473, 53.25331 ], [ -1.9148, 53.25344 ], [ -1.91494, 53.25368 ], [ -1.915, 53.25378 ], [ -1.9152, 53.25405 ], [ -1.91531, 53.25418 ], [ -1.91535, 53.25425 ], [ -1.91537, 53.2543 ], [ -1.91537, 53.25436 ], [ -1.91538, 53.25443 ], [ -1.91539, 53.25451 ], [ -1.91539, 53.25458 ], [ -1.91539, 53.2547 ], [ -1.91538, 53.25474 ], [ -1.91537, 53.25483 ], [ -1.91536, 53.25489 ], [ -1.91533, 53.25497 ], [ -1.9153, 53.25503 ], [ -1.91526, 53.2551 ], [ -1.91519, 53.25523 ], [ -1.91518, 53.25524 ], [ -1.91505, 53.25546 ], [ -1.91496, 53.25558 ], [ -1.91494, 53.25561 ], [ -1.91475, 53.25584 ], [ -1.9147488, 53.2558378 ], [ -1.9149, 53.25591 ], [ -1.9148961, 53.2559057 ], [ -1.91485, 53.25596 ], [ -1.91477, 53.25609 ], [ -1.91463, 53.25631 ], [ -1.91459, 53.25641 ], [ -1.91453, 53.25653 ], [ -1.91453, 53.25655 ], [ -1.91452, 53.25659 ], [ -1.91451, 53.25666 ], [ -1.9145, 53.25671 ], [ -1.9145, 53.25677 ], [ -1.9145, 53.25679 ], [ -1.91454, 53.25689 ], [ -1.9145419, 53.2568895 ], [ -1.91463, 53.2571 ], [ -1.91471, 53.25727 ], [ -1.91483, 53.25751 ], [ -1.915, 53.25776 ], [ -1.91509, 53.25787 ], [ -1.91517, 53.25794 ], [ -1.9151722, 53.2579389 ], [ -1.91523, 53.25796 ], [ -1.91529, 53.25798 ], [ -1.91554, 53.25808 ], [ -1.91557, 53.25809 ], [ -1.9157, 53.25816 ], [ -1.91577, 53.2582 ], [ -1.91594, 53.25832 ], [ -1.91608, 53.25842 ], [ -1.91622, 53.25852 ], [ -1.9162157, 53.2585183 ], [ -1.91626, 53.25859 ], [ -1.91626, 53.25865 ], [ -1.91626, 53.25867 ], [ -1.91626, 53.2587 ], [ -1.91625, 53.25873 ], [ -1.91623, 53.25878 ], [ -1.91622, 53.25881 ], [ -1.91619, 53.25884 ], [ -1.91617, 53.25887 ], [ -1.91605, 53.25903 ], [ -1.91603, 53.25906 ], [ -1.91602, 53.25909 ], [ -1.91601, 53.2591 ], [ -1.91601, 53.25912 ], [ -1.91601, 53.25915 ], [ -1.91601, 53.25921 ], [ -1.91602, 53.25927 ], [ -1.91602, 53.25932 ], [ -1.9160183, 53.2593229 ], [ -1.91606, 53.25931 ], [ -1.91614, 53.25929 ], [ -1.91621, 53.25928 ], [ -1.916207, 53.2592824 ], [ -1.91629, 53.25928 ], [ -1.91638, 53.25928 ], [ -1.91647, 53.25929 ], [ -1.91659, 53.2593 ], [ -1.91667, 53.25932 ], [ -1.91672, 53.25934 ], [ -1.9168, 53.25937 ], [ -1.91699, 53.25951 ], [ -1.91723, 53.2597 ], [ -1.91743, 53.25989 ], [ -1.91778, 53.26017 ], [ -1.91823, 53.26055 ], [ -1.91829, 53.26059 ], [ -1.91901, 53.26117 ], [ -1.91913, 53.26127 ], [ -1.91945, 53.26152 ], [ -1.91956, 53.26159 ], [ -1.9197, 53.26167 ], [ -1.91986, 53.26172 ], [ -1.9201, 53.26175 ], [ -1.92032, 53.26177 ], [ -1.92044, 53.26177 ], [ -1.9206, 53.26177 ], [ -1.92088, 53.26178 ], [ -1.92157, 53.26183 ], [ -1.92272, 53.26192 ], [ -1.92368, 53.262 ], [ -1.92375, 53.262 ], [ -1.9248, 53.26207 ], [ -1.92516, 53.2621 ], [ -1.92539, 53.26212 ], [ -1.92567, 53.26216 ], [ -1.92582, 53.26217 ], [ -1.92588, 53.26219 ], [ -1.9261, 53.26223 ], [ -1.9266, 53.26235 ], [ -1.92699, 53.26246 ], [ -1.92716, 53.26251 ], [ -1.92751, 53.26263 ], [ -1.9278, 53.26274 ], [ -1.92806, 53.26285 ], [ -1.92819, 53.26291 ], [ -1.92832, 53.26299 ], [ -1.92845, 53.26307 ], [ -1.92866, 53.26321 ], [ -1.92881, 53.26332 ], [ -1.92904, 53.26349 ], [ -1.92923, 53.26362 ], [ -1.92942, 53.26376 ], [ -1.92971, 53.26398 ], [ -1.93019, 53.26432 ], [ -1.9303, 53.2644 ], [ -1.93056, 53.2646 ], [ -1.93084, 53.2648 ], [ -1.93113, 53.26502 ], [ -1.93131, 53.26516 ], [ -1.93146, 53.26527 ], [ -1.9315, 53.2653 ], [ -1.93188, 53.26558 ], [ -1.93214, 53.26577 ], [ -1.93226, 53.26586 ], [ -1.93263, 53.26614 ], [ -1.93271, 53.26621 ], [ -1.93321, 53.26666 ], [ -1.93345, 53.26688 ], [ -1.93354, 53.26696 ], [ -1.93369, 53.2671 ], [ -1.93387, 53.26726 ], [ -1.93396, 53.26735 ], [ -1.93405, 53.26741 ], [ -1.9342, 53.26752 ], [ -1.93427, 53.26758 ], [ -1.93442, 53.26769 ], [ -1.93455, 53.26779 ], [ -1.9346, 53.26783 ], [ -1.93461, 53.26784 ], [ -1.93473, 53.26793 ], [ -1.93491, 53.26808 ], [ -1.93495, 53.26811 ], [ -1.9351, 53.26825 ], [ -1.93521, 53.26839 ], [ -1.93573, 53.26892 ], [ -1.93584, 53.26903 ], [ -1.93627, 53.2695 ], [ -1.93629, 53.26952 ], [ -1.93635, 53.26958 ], [ -1.93644, 53.26965 ], [ -1.93655, 53.2697 ], [ -1.93674, 53.26976 ], [ -1.9367439, 53.2697627 ], [ -1.93674, 53.26983 ], [ -1.93674, 53.26985 ], [ -1.93676, 53.26986 ], [ -1.93683, 53.26993 ], [ -1.93696, 53.27007 ], [ -1.93698, 53.27009 ], [ -1.93712, 53.27025 ], [ -1.93726, 53.27041 ], [ -1.9374, 53.27057 ], [ -1.93754, 53.27072 ], [ -1.93782, 53.27104 ], [ -1.93796, 53.2712 ], [ -1.93799, 53.27123 ], [ -1.93809, 53.27136 ], [ -1.93821, 53.27153 ], [ -1.93834, 53.27169 ], [ -1.93846, 53.27186 ], [ -1.93858, 53.27202 ], [ -1.93871, 53.27218 ], [ -1.93895, 53.27251 ], [ -1.93908, 53.27268 ], [ -1.9392, 53.27284 ], [ -1.93932, 53.27301 ], [ -1.93955, 53.27334 ], [ -1.93961, 53.27346 ], [ -1.93962, 53.27354 ], [ -1.93964, 53.27372 ], [ -1.93967, 53.2739 ], [ -1.93968, 53.27395 ], [ -1.93968, 53.27399 ], [ -1.93972, 53.27406 ], [ -1.93974, 53.27407 ], [ -1.93986, 53.2742 ], [ -1.93997, 53.27429 ], [ -1.94007, 53.27438 ], [ -1.94014, 53.27444 ], [ -1.9403, 53.27455 ], [ -1.94049, 53.27473 ], [ -1.94065, 53.27488 ], [ -1.9408, 53.27504 ], [ -1.94085, 53.27508 ], [ -1.94098, 53.27518 ], [ -1.94102, 53.27521 ], [ -1.94119, 53.27531 ], [ -1.94123, 53.27533 ], [ -1.94145, 53.27545 ], [ -1.94164, 53.27555 ], [ -1.94187, 53.27566 ], [ -1.94188, 53.27567 ], [ -1.9421, 53.27579 ], [ -1.94216, 53.27583 ], [ -1.94219, 53.27587 ], [ -1.94222, 53.27591 ], [ -1.94232, 53.27611 ], [ -1.94234, 53.27616 ], [ -1.94246, 53.27627 ], [ -1.9425, 53.27632 ], [ -1.94254, 53.27634 ], [ -1.94257, 53.27638 ], [ -1.9426, 53.27643 ], [ -1.94261, 53.27646 ], [ -1.94264, 53.27651 ], [ -1.94272, 53.27659 ], [ -1.94286, 53.27675 ], [ -1.9429, 53.27679 ], [ -1.943, 53.27691 ], [ -1.94308, 53.27699 ], [ -1.94313, 53.27707 ], [ -1.94316, 53.27711 ], [ -1.94321, 53.27722 ], [ -1.94322, 53.27724 ], [ -1.94332, 53.27741 ], [ -1.94335, 53.27746 ], [ -1.94342, 53.27752 ], [ -1.94352, 53.2776 ], [ -1.94367, 53.2777 ], [ -1.94375, 53.27776 ], [ -1.94386, 53.27784 ], [ -1.94404, 53.27799 ], [ -1.94406, 53.27801 ], [ -1.94423, 53.27813 ], [ -1.94425, 53.27815 ], [ -1.94438, 53.27824 ], [ -1.94441, 53.27827 ], [ -1.94453, 53.27837 ], [ -1.94459, 53.27842 ], [ -1.94469, 53.2785 ], [ -1.94496, 53.27868 ], [ -1.94497, 53.27869 ], [ -1.94515, 53.27884 ], [ -1.94532, 53.27899 ], [ -1.94541, 53.27907 ], [ -1.94548, 53.27914 ], [ -1.94554, 53.2792 ], [ -1.9456, 53.27925 ], [ -1.94607, 53.27944 ], [ -1.94616, 53.27948 ], [ -1.94629, 53.27953 ], [ -1.9464, 53.27959 ], [ -1.94662, 53.27971 ], [ -1.94666, 53.27973 ], [ -1.94683, 53.27984 ], [ -1.94725, 53.28009 ], [ -1.94774, 53.28039 ], [ -1.94826, 53.28071 ], [ -1.94829, 53.28074 ], [ -1.94846, 53.28089 ], [ -1.94848, 53.28091 ], [ -1.94861, 53.28105 ], [ -1.94862, 53.28106 ], [ -1.94873, 53.28121 ], [ -1.94875, 53.28125 ], [ -1.94882, 53.28138 ], [ -1.94901, 53.28173 ], [ -1.94925, 53.28218 ], [ -1.94936, 53.28241 ], [ -1.9494, 53.28248 ], [ -1.94945, 53.28259 ], [ -1.94947, 53.28262 ], [ -1.94977, 53.28289 ], [ -1.94994, 53.28304 ], [ -1.95011, 53.28319 ], [ -1.95025, 53.28332 ], [ -1.95028, 53.28334 ], [ -1.95047, 53.28348 ], [ -1.95066, 53.28362 ], [ -1.95104, 53.2839 ], [ -1.95123, 53.28404 ], [ -1.95132, 53.28411 ], [ -1.95141, 53.28418 ], [ -1.9516, 53.28432 ], [ -1.95179, 53.28446 ], [ -1.95197, 53.2846 ], [ -1.95205, 53.28466 ], [ -1.95215, 53.28474 ], [ -1.95225, 53.28482 ], [ -1.95236, 53.28487 ], [ -1.95259, 53.28499 ], [ -1.95266, 53.28502 ], [ -1.95289, 53.28515 ], [ -1.95296, 53.28518 ], [ -1.95304, 53.2852 ], [ -1.95312, 53.28522 ], [ -1.95334, 53.28527 ], [ -1.9533412, 53.2852733 ], [ -1.95337, 53.28534 ], [ -1.95345, 53.28548 ], [ -1.95353, 53.28561 ], [ -1.95356, 53.28567 ], [ -1.95362, 53.28579 ], [ -1.95368, 53.2859 ], [ -1.95371, 53.28596 ], [ -1.95376, 53.28607 ], [ -1.95378, 53.28613 ], [ -1.95381, 53.2862 ], [ -1.95385, 53.28629 ], [ -1.95391, 53.28648 ], [ -1.95394, 53.28659 ], [ -1.95397, 53.28668 ], [ -1.95403, 53.28684 ], [ -1.95406, 53.28691 ], [ -1.95412, 53.28701 ], [ -1.95417, 53.28708 ], [ -1.95422, 53.28716 ], [ -1.95435, 53.28724 ], [ -1.95443, 53.28729 ], [ -1.95462, 53.28743 ], [ -1.95464, 53.28745 ], [ -1.95482, 53.28756 ], [ -1.9549, 53.28762 ], [ -1.95507, 53.28775 ], [ -1.95536, 53.28794 ], [ -1.95542, 53.28797 ], [ -1.95568, 53.2881 ], [ -1.95587, 53.2882 ], [ -1.95603, 53.2883 ], [ -1.95608, 53.28833 ], [ -1.95638, 53.28851 ], [ -1.95659, 53.28864 ], [ -1.95667, 53.28869 ], [ -1.95679, 53.28878 ], [ -1.95698, 53.28892 ], [ -1.95705, 53.28897 ], [ -1.95715, 53.28906 ], [ -1.95719, 53.2891 ], [ -1.9573, 53.28922 ], [ -1.95767, 53.28963 ], [ -1.95774, 53.28969 ], [ -1.95791, 53.28984 ], [ -1.95807, 53.28998 ], [ -1.95808, 53.28999 ], [ -1.95828, 53.29012 ], [ -1.95848, 53.29026 ], [ -1.9588, 53.29048 ], [ -1.95887, 53.29053 ], [ -1.95906, 53.29067 ], [ -1.95911, 53.29071 ], [ -1.95921, 53.29082 ], [ -1.95921, 53.29083 ], [ -1.95926, 53.29092 ], [ -1.95928, 53.291 ], [ -1.95929, 53.29105 ], [ -1.95931, 53.29112 ], [ -1.95935, 53.29117 ], [ -1.95937, 53.29121 ], [ -1.95953, 53.29132 ], [ -1.95961, 53.29137 ], [ -1.9597, 53.29146 ], [ -1.95984, 53.29159 ], [ -1.95986, 53.29162 ], [ -1.95997, 53.29172 ], [ -1.96002, 53.29177 ], [ -1.96017, 53.29192 ], [ -1.96032, 53.29208 ], [ -1.96048, 53.29223 ], [ -1.96063, 53.29239 ], [ -1.96068, 53.29244 ], [ -1.96078, 53.29254 ], [ -1.96085, 53.29261 ], [ -1.96095, 53.29269 ], [ -1.96096, 53.2927 ], [ -1.96109, 53.29278 ], [ -1.96117, 53.29282 ], [ -1.96177, 53.29309 ], [ -1.96178, 53.29309 ], [ -1.96185, 53.29314 ], [ -1.96187, 53.29315 ], [ -1.96191, 53.29319 ], [ -1.96198, 53.29326 ], [ -1.96204, 53.29334 ], [ -1.96207, 53.29343 ], [ -1.96211, 53.29355 ], [ -1.96212, 53.29366 ], [ -1.96212, 53.29371 ], [ -1.96211, 53.29384 ], [ -1.96211, 53.2939 ], [ -1.96208, 53.29402 ], [ -1.96204, 53.2942 ], [ -1.962, 53.29438 ], [ -1.96199, 53.29441 ], [ -1.96194, 53.29455 ], [ -1.96189, 53.29471 ], [ -1.96187, 53.29473 ], [ -1.96176, 53.2949 ], [ -1.96168, 53.29502 ], [ -1.96165, 53.29506 ], [ -1.96158, 53.29517 ], [ -1.96156, 53.29523 ], [ -1.96153, 53.29535 ], [ -1.96152, 53.29541 ], [ -1.9615, 53.29551 ], [ -1.96151, 53.29559 ], [ -1.96154, 53.29575 ], [ -1.96154, 53.29577 ], [ -1.96156, 53.29583 ], [ -1.96162, 53.29594 ], [ -1.96171, 53.29611 ], [ -1.96176, 53.2962 ], [ -1.96179, 53.29628 ], [ -1.96179, 53.29629 ], [ -1.96184, 53.29645 ], [ -1.96185, 53.29665 ], [ -1.96185, 53.29667 ], [ -1.96185, 53.29695 ], [ -1.96186, 53.297 ], [ -1.96191, 53.29726 ], [ -1.96195, 53.29736 ], [ -1.96201, 53.29752 ], [ -1.96212, 53.2977 ], [ -1.96214, 53.29774 ], [ -1.96222, 53.29799 ], [ -1.96223, 53.29806 ], [ -1.96226, 53.29825 ], [ -1.96231, 53.29859 ], [ -1.96232, 53.29864 ], [ -1.96243, 53.29895 ], [ -1.96244, 53.29896 ], [ -1.96253, 53.29912 ], [ -1.9626, 53.29923 ], [ -1.96264, 53.29928 ], [ -1.96277, 53.29945 ], [ -1.96286, 53.29956 ], [ -1.96291, 53.2996 ], [ -1.96307, 53.29976 ], [ -1.96323, 53.29991 ], [ -1.96346, 53.30013 ], [ -1.96354, 53.30022 ], [ -1.96383, 53.30053 ], [ -1.96393, 53.30064 ], [ -1.96432, 53.30099 ], [ -1.96443, 53.30109 ], [ -1.96448, 53.30114 ], [ -1.9648, 53.30144 ], [ -1.96487, 53.3015 ], [ -1.96496, 53.30159 ], [ -1.96558, 53.3022 ], [ -1.96559, 53.30221 ], [ -1.96588, 53.30249 ], [ -1.9659, 53.30251 ], [ -1.96638, 53.30297 ], [ -1.9667, 53.30328 ], [ -1.96686, 53.30343 ], [ -1.96701, 53.30359 ], [ -1.96715, 53.30373 ], [ -1.96724, 53.30385 ], [ -1.96727, 53.30391 ], [ -1.96735, 53.30406 ], [ -1.96744, 53.30425 ], [ -1.96751, 53.30443 ], [ -1.96758, 53.3046 ], [ -1.9676, 53.30466 ], [ -1.96766, 53.30478 ], [ -1.96773, 53.3049 ], [ -1.96775, 53.30495 ], [ -1.96798, 53.30545 ], [ -1.96805, 53.30565 ], [ -1.96811, 53.30582 ], [ -1.96814, 53.30593 ], [ -1.96817, 53.306 ], [ -1.96831, 53.30632 ], [ -1.96833, 53.30634 ], [ -1.96836, 53.30638 ], [ -1.96842, 53.30642 ], [ -1.96848, 53.30646 ], [ -1.96852, 53.30648 ], [ -1.96855, 53.30649 ], [ -1.96863, 53.30652 ], [ -1.96873, 53.30653 ], [ -1.9688, 53.30652 ], [ -1.96894, 53.30651 ], [ -1.9691, 53.30648 ], [ -1.96925, 53.30646 ], [ -1.96934, 53.30645 ], [ -1.96939, 53.30644 ], [ -1.96946, 53.30644 ], [ -1.96957, 53.30643 ], [ -1.96969, 53.30644 ], [ -1.96979, 53.30644 ], [ -1.96993, 53.30647 ], [ -1.96998, 53.30649 ], [ -1.97009, 53.30652 ], [ -1.97023, 53.30658 ], [ -1.9703, 53.30661 ], [ -1.97046, 53.30669 ], [ -1.97054, 53.30674 ], [ -1.97068, 53.30682 ], [ -1.97078, 53.30688 ], [ -1.97109, 53.30708 ], [ -1.97127, 53.30722 ], [ -1.97128, 53.30723 ], [ -1.9714, 53.30735 ], [ -1.97142, 53.30738 ], [ -1.97162, 53.3077 ], [ -1.97173, 53.30789 ], [ -1.97183, 53.30805 ], [ -1.97183, 53.30806 ], [ -1.97195, 53.30822 ], [ -1.97207, 53.30839 ], [ -1.97219, 53.30855 ], [ -1.97226, 53.30866 ], [ -1.97241, 53.30889 ], [ -1.97252, 53.30906 ], [ -1.97265, 53.30927 ], [ -1.97273, 53.30939 ], [ -1.97282, 53.30956 ], [ -1.9729, 53.3097 ], [ -1.97292, 53.30973 ], [ -1.97303, 53.3099 ], [ -1.97314, 53.31007 ], [ -1.9733, 53.3103 ], [ -1.97337, 53.3104 ], [ -1.9735, 53.31056 ], [ -1.9736, 53.31069 ], [ -1.97364, 53.31075 ], [ -1.9737, 53.31082 ], [ -1.97376, 53.31092 ], [ -1.97387, 53.31108 ], [ -1.97396, 53.31122 ], [ -1.97397, 53.31125 ], [ -1.97416, 53.31159 ], [ -1.97429, 53.31176 ], [ -1.9743, 53.31178 ], [ -1.97445, 53.31191 ], [ -1.97447, 53.31193 ], [ -1.97462, 53.31206 ], [ -1.97474, 53.31215 ], [ -1.97481, 53.3122 ], [ -1.97525, 53.31253 ], [ -1.97602, 53.3131 ], [ -1.97631, 53.31332 ], [ -1.97649, 53.31347 ], [ -1.97668, 53.31361 ], [ -1.97682, 53.31372 ], [ -1.97687, 53.31375 ], [ -1.97709, 53.31387 ], [ -1.9770924, 53.3138658 ], [ -1.97725, 53.31431 ], [ -1.9773, 53.31447 ], [ -1.97742, 53.31488 ], [ -1.97751, 53.31502 ], [ -1.97755, 53.31508 ], [ -1.97763, 53.31518 ], [ -1.97798, 53.31557 ], [ -1.97803, 53.31563 ], [ -1.97811, 53.31573 ], [ -1.97871, 53.31656 ], [ -1.97876, 53.31663 ], [ -1.97911, 53.31712 ], [ -1.97918, 53.31722 ], [ -1.97922, 53.31728 ], [ -1.97925, 53.31736 ], [ -1.97927, 53.31745 ], [ -1.97928, 53.31756 ], [ -1.97928, 53.31757 ], [ -1.97929, 53.31766 ], [ -1.97918, 53.31802 ], [ -1.97915, 53.31814 ], [ -1.97914, 53.31818 ], [ -1.97904, 53.31842 ], [ -1.97898, 53.31854 ], [ -1.97887, 53.31877 ], [ -1.97884, 53.31883 ], [ -1.97879, 53.31894 ], [ -1.97875, 53.31907 ], [ -1.9787, 53.31935 ], [ -1.9787, 53.31937 ], [ -1.97869, 53.31973 ], [ -1.97871, 53.31992 ], [ -1.97872, 53.31998 ], [ -1.97875, 53.32008 ], [ -1.97876, 53.3201 ], [ -1.9788, 53.32017 ], [ -1.97887, 53.32026 ], [ -1.97888, 53.32029 ], [ -1.97899, 53.32038 ], [ -1.97914, 53.32048 ], [ -1.97918, 53.32056 ], [ -1.97927, 53.32066 ], [ -1.97929, 53.32073 ], [ -1.9793, 53.32078 ], [ -1.97929, 53.32084 ], [ -1.9792944, 53.3208371 ], [ -1.98021, 53.32129 ], [ -1.98075, 53.32157 ], [ -1.98118, 53.32178 ], [ -1.98158, 53.32198 ], [ -1.98172, 53.32207 ], [ -1.98232, 53.3225 ], [ -1.9824, 53.32253 ], [ -1.98264, 53.32267 ], [ -1.98279, 53.32273 ], [ -1.9827909, 53.3227273 ], [ -1.98292, 53.32286 ], [ -1.98305, 53.32301 ], [ -1.98317, 53.32314 ], [ -1.98319, 53.32317 ], [ -1.98334, 53.32336 ], [ -1.98341, 53.32348 ], [ -1.98341, 53.3235 ], [ -1.98345, 53.3236 ], [ -1.98349, 53.32368 ], [ -1.98361, 53.32393 ], [ -1.98373, 53.32426 ], [ -1.98373, 53.3244 ], [ -1.98372, 53.32452 ], [ -1.98371, 53.32456 ], [ -1.98367, 53.32465 ], [ -1.98364, 53.32474 ], [ -1.98362, 53.32478 ], [ -1.98358, 53.32488 ], [ -1.98357, 53.32515 ], [ -1.9836, 53.32545 ], [ -1.98359, 53.32548 ], [ -1.98348, 53.32583 ], [ -1.98343, 53.32601 ], [ -1.98333, 53.32633 ], [ -1.98332, 53.32636 ], [ -1.98331, 53.32636 ], [ -1.98318, 53.32662 ], [ -1.98304, 53.32686 ], [ -1.98293, 53.32704 ], [ -1.98289, 53.3271 ], [ -1.98284, 53.32725 ], [ -1.98283, 53.32739 ], [ -1.98285, 53.32757 ], [ -1.98285, 53.32764 ], [ -1.98285, 53.32794 ], [ -1.98286, 53.328 ], [ -1.98294, 53.32824 ], [ -1.98309, 53.32852 ], [ -1.98311, 53.32855 ], [ -1.98316, 53.32861 ], [ -1.98321, 53.32866 ], [ -1.983209, 53.3286641 ], [ -1.98326, 53.32865 ], [ -1.98337, 53.32865 ], [ -1.9833685, 53.3286509 ], [ -1.98337, 53.32869 ], [ -1.98337, 53.32874 ], [ -1.98338, 53.32876 ], [ -1.98346, 53.32884 ], [ -1.98358, 53.32893 ], [ -1.98375, 53.32903 ], [ -1.98379, 53.32906 ], [ -1.98394, 53.32925 ], [ -1.98397, 53.3293 ], [ -1.984, 53.32936 ], [ -1.98403, 53.32991 ], [ -1.9840298, 53.3299118 ], [ -1.98422, 53.32989 ], [ -1.98425, 53.32989 ], [ -1.98432, 53.32986 ], [ -1.98451, 53.3298 ], [ -1.98473, 53.32968 ], [ -1.9847296, 53.329676 ], [ -1.9848, 53.32968 ], [ -1.98485, 53.32971 ], [ -1.98488, 53.32975 ], [ -1.98488, 53.32976 ], [ -1.98488, 53.32977 ], [ -1.98492, 53.33003 ], [ -1.98493, 53.33009 ], [ -1.98497, 53.33011 ], [ -1.98504, 53.33012 ], [ -1.98516, 53.33013 ], [ -1.98526, 53.33013 ], [ -1.98544, 53.33013 ], [ -1.98557, 53.33014 ], [ -1.98587, 53.33016 ], [ -1.98604, 53.33017 ], [ -1.98628, 53.33018 ], [ -1.98643, 53.33019 ], [ -1.98679, 53.33019 ], [ -1.98795, 53.33023 ], [ -1.98817, 53.33023 ], [ -1.98842, 53.33023 ], [ -1.98878, 53.33021 ], [ -1.98896, 53.3302 ], [ -1.98907, 53.33019 ], [ -1.98957, 53.33013 ], [ -1.98989, 53.3301 ], [ -1.99056, 53.33002 ], [ -1.99067, 53.33001 ], [ -1.99086, 53.33 ], [ -1.99099, 53.32999 ], [ -1.9912, 53.33 ], [ -1.99154, 53.32999 ], [ -1.99176, 53.33 ], [ -1.992, 53.33001 ], [ -1.99236, 53.33005 ], [ -1.99283, 53.33013 ], [ -1.99377, 53.33026 ], [ -1.99424, 53.33035 ], [ -1.99439, 53.33038 ], [ -1.99443, 53.33039 ], [ -1.99468, 53.33051 ], [ -1.99532, 53.33084 ], [ -1.99548, 53.33093 ], [ -1.99594, 53.33124 ], [ -1.996, 53.33128 ], [ -1.99618, 53.33141 ], [ -1.99648, 53.33161 ], [ -1.9966, 53.33169 ], [ -1.99667, 53.33176 ], [ -1.99683, 53.33191 ], [ -1.99707, 53.33214 ], [ -1.99712, 53.33222 ], [ -1.99719, 53.33233 ], [ -1.99721, 53.33239 ], [ -1.99727, 53.33257 ], [ -1.99727, 53.33258 ], [ -1.99731, 53.33268 ], [ -1.99732, 53.33276 ], [ -1.99745, 53.33348 ], [ -1.99752, 53.33365 ], [ -1.99754, 53.33368 ], [ -1.99755, 53.3337 ], [ -1.99759, 53.33377 ], [ -1.99762, 53.33383 ], [ -1.99764, 53.33386 ], [ -1.99798, 53.33419 ], [ -1.99803, 53.33424 ], [ -1.99852, 53.3346 ], [ -1.99882, 53.33477 ], [ -1.99916, 53.33493 ], [ -1.99955, 53.33506 ], [ -1.99966, 53.33508 ], [ -1.99981, 53.33511 ], [ -2.00024, 53.33518 ], [ -2.0005, 53.33522 ], [ -2.00053, 53.33522 ], [ -2.00092, 53.33522 ], [ -2.00113, 53.3352 ], [ -2.00131, 53.33518 ], [ -2.00142, 53.33516 ], [ -2.00192, 53.33505 ], [ -2.00253, 53.33491 ], [ -2.00283, 53.33483 ], [ -2.00328, 53.33471 ], [ -2.00338, 53.33469 ], [ -2.0034, 53.33468 ], [ -2.00383, 53.3346 ], [ -2.00416, 53.3346 ], [ -2.00441, 53.33461 ], [ -2.00484, 53.33463 ], [ -2.00511, 53.3347 ], [ -2.00514, 53.33471 ], [ -2.00542, 53.3348 ], [ -2.00581, 53.33498 ], [ -2.00611, 53.33513 ], [ -2.00627, 53.33521 ], [ -2.00634, 53.33525 ], [ -2.00654, 53.33538 ], [ -2.00662, 53.33543 ], [ -2.00672, 53.33552 ], [ -2.00691, 53.33568 ], [ -2.00722, 53.33608 ], [ -2.00728, 53.33616 ], [ -2.00747, 53.33643 ], [ -2.00751, 53.33649 ], [ -2.00769, 53.33678 ], [ -2.0078, 53.33712 ], [ -2.00789, 53.33754 ], [ -2.00793, 53.33771 ], [ -2.00793, 53.33772 ], [ -2.00794, 53.3379 ], [ -2.00796, 53.33808 ], [ -2.00797, 53.33837 ], [ -2.00797, 53.33844 ], [ -2.00797, 53.33862 ], [ -2.00797, 53.3388 ], [ -2.00797, 53.33881 ], [ -2.00805, 53.33913 ], [ -2.00805, 53.33915 ], [ -2.0082, 53.33948 ], [ -2.00821, 53.3395 ], [ -2.0082118, 53.3394992 ], [ -2.00845, 53.33983 ], [ -2.00854, 53.33993 ], [ -2.00856, 53.33995 ], [ -2.00875, 53.34016 ], [ -2.00896, 53.34041 ], [ -2.00925, 53.34072 ], [ -2.00927, 53.34074 ], [ -2.00942, 53.34091 ], [ -2.00966, 53.34118 ], [ -2.0098, 53.34136 ], [ -2.00993, 53.34152 ], [ -2.01009, 53.34171 ], [ -2.01035, 53.34203 ], [ -2.01062, 53.34236 ], [ -2.01073, 53.34249 ], [ -2.01148, 53.34339 ], [ -2.01171, 53.34363 ], [ -2.01186, 53.34379 ], [ -2.01195, 53.34388 ], [ -2.01218, 53.34409 ], [ -2.01235, 53.34424 ], [ -2.01252, 53.34439 ], [ -2.01276, 53.34462 ], [ -2.01319, 53.34499 ], [ -2.01322, 53.34501 ], [ -2.01334, 53.34514 ], [ -2.01349, 53.3453 ], [ -2.01358, 53.34539 ], [ -2.01418, 53.3461 ], [ -2.01475, 53.34683 ], [ -2.01497, 53.34707 ], [ -2.01512, 53.34723 ], [ -2.01519, 53.3473 ], [ -2.0154, 53.34751 ], [ -2.01558, 53.34768 ], [ -2.01566, 53.34774 ], [ -2.01587, 53.34792 ], [ -2.01594, 53.34797 ], [ -2.01636, 53.34831 ], [ -2.01638, 53.34832 ], [ -2.01659, 53.34845 ], [ -2.01671, 53.34853 ], [ -2.01703, 53.3487 ], [ -2.01726, 53.34881 ], [ -2.01728, 53.34883 ], [ -2.01787, 53.34915 ], [ -2.01833, 53.34937 ], [ -2.01867, 53.34951 ], [ -2.01891, 53.34959 ], [ -2.01892, 53.3496 ], [ -2.01903, 53.34963 ], [ -2.01954, 53.34976 ], [ -2.01994, 53.34986 ], [ -2.02002, 53.34987 ], [ -2.02003, 53.34987 ], [ -2.02032, 53.34993 ], [ -2.02041, 53.34995 ], [ -2.02059, 53.34998 ], [ -2.02061, 53.34998 ], [ -2.0209, 53.35002 ], [ -2.0211, 53.35004 ], [ -2.02118, 53.35005 ], [ -2.0215, 53.35008 ], [ -2.0216, 53.35009 ], [ -2.02213, 53.35013 ], [ -2.02231, 53.35014 ], [ -2.02261, 53.35018 ], [ -2.02264, 53.35018 ], [ -2.0229, 53.35023 ], [ -2.02313, 53.35027 ], [ -2.02318, 53.35028 ], [ -2.02364, 53.35036 ], [ -2.02425, 53.3505 ], [ -2.02432, 53.35052 ], [ -2.02459, 53.3506 ], [ -2.02514, 53.35075 ], [ -2.02551, 53.35085 ], [ -2.02559, 53.35087 ], [ -2.02569, 53.3509 ], [ -2.02625, 53.35104 ], [ -2.02652, 53.35111 ], [ -2.02658, 53.35113 ], [ -2.02679, 53.3512 ], [ -2.02702, 53.35128 ], [ -2.02727, 53.35139 ], [ -2.02748, 53.35154 ], [ -2.02767, 53.35167 ], [ -2.02769, 53.35169 ], [ -2.02804, 53.35194 ], [ -2.02822, 53.3521 ], [ -2.02827, 53.35214 ], [ -2.02841, 53.35229 ], [ -2.02849, 53.35242 ], [ -2.02865, 53.35266 ], [ -2.02886, 53.35293 ], [ -2.0289, 53.35298 ], [ -2.02913, 53.35321 ], [ -2.0292, 53.35327 ], [ -2.02932, 53.35335 ], [ -2.02963, 53.35355 ], [ -2.02993, 53.35374 ], [ -2.03066, 53.35418 ], [ -2.03119, 53.35451 ], [ -2.03136, 53.35462 ], [ -2.03149, 53.35472 ], [ -2.0316, 53.35478 ], [ -2.03201, 53.35501 ], [ -2.03235, 53.3552 ], [ -2.0331, 53.35563 ], [ -2.03314, 53.35565 ], [ -2.03416, 53.35623 ], [ -2.03452, 53.35639 ], [ -2.03467, 53.35647 ], [ -2.0354, 53.35674 ], [ -2.03572, 53.35687 ], [ -2.03597, 53.35697 ], [ -2.03624, 53.35712 ], [ -2.03669, 53.35738 ], [ -2.03678, 53.35743 ], [ -2.03712, 53.35762 ], [ -2.03717, 53.35765 ], [ -2.03722, 53.35768 ], [ -2.03762, 53.35787 ], [ -2.03803, 53.35801 ], [ -2.03814, 53.35804 ], [ -2.03839, 53.35814 ], [ -2.03858, 53.35821 ], [ -2.03874, 53.35827 ], [ -2.03875, 53.35827 ], [ -2.03885, 53.35832 ], [ -2.03896, 53.35837 ], [ -2.03898, 53.35839 ], [ -2.03909, 53.35845 ], [ -2.0392, 53.35851 ], [ -2.03921, 53.35852 ], [ -2.03928, 53.35857 ], [ -2.03955, 53.35876 ], [ -2.0395524, 53.3587602 ], [ -2.03978, 53.35888 ], [ -2.03983, 53.3589 ], [ -2.04005, 53.35902 ], [ -2.04023, 53.35911 ], [ -2.04051, 53.35925 ], [ -2.04075, 53.35936 ], [ -2.04076, 53.35937 ], [ -2.04098, 53.35948 ], [ -2.04121, 53.35959 ], [ -2.04145, 53.35971 ], [ -2.04168, 53.35982 ], [ -2.0418, 53.35988 ], [ -2.04191, 53.35994 ], [ -2.04235, 53.36019 ], [ -2.04257, 53.36031 ], [ -2.04278, 53.36044 ], [ -2.04283, 53.36046 ], [ -2.04304, 53.36055 ], [ -2.04316, 53.36059 ], [ -2.04335, 53.36067 ], [ -2.04342, 53.3607 ], [ -2.04375, 53.36076 ], [ -2.04383, 53.36077 ], [ -2.04403, 53.3608 ], [ -2.04467, 53.36087 ], [ -2.04488, 53.3609 ], [ -2.04532, 53.36094 ], [ -2.04577, 53.36096 ], [ -2.0459, 53.36097 ], [ -2.04608, 53.36098 ], [ -2.04612, 53.36098 ], [ -2.0463, 53.36099 ], [ -2.04638, 53.36099 ], [ -2.04697, 53.361 ], [ -2.04728, 53.361 ], [ -2.04789, 53.36101 ], [ -2.04801, 53.36101 ], [ -2.04872, 53.36102 ], [ -2.04907, 53.36104 ], [ -2.04909, 53.36104 ], [ -2.0493, 53.36105 ], [ -2.04952, 53.36106 ], [ -2.04967, 53.36107 ], [ -2.04998, 53.36109 ], [ -2.05019, 53.36109 ], [ -2.05062, 53.36109 ], [ -2.05084, 53.36109 ], [ -2.05101, 53.36109 ], [ -2.05106, 53.36109 ], [ -2.05111, 53.36109 ], [ -2.05118, 53.3611 ], [ -2.05133, 53.36113 ], [ -2.05139, 53.36115 ], [ -2.05148, 53.36118 ], [ -2.05155, 53.36122 ], [ -2.05157, 53.36123 ], [ -2.05158, 53.36124 ], [ -2.05161, 53.36127 ], [ -2.05164, 53.36129 ], [ -2.0517, 53.36136 ], [ -2.05171, 53.36137 ], [ -2.05176, 53.36146 ], [ -2.05187, 53.36159 ], [ -2.05195, 53.36168 ], [ -2.05197, 53.3617 ], [ -2.05199, 53.36171 ], [ -2.05203, 53.36174 ], [ -2.05207, 53.36177 ], [ -2.05224, 53.36188 ], [ -2.05245, 53.36199 ], [ -2.05269, 53.36211 ], [ -2.05283, 53.3622 ], [ -2.05284, 53.36221 ], [ -2.0529, 53.36224 ], [ -2.0529, 53.36225 ], [ -2.05305, 53.36232 ], [ -2.05306, 53.36232 ], [ -2.05307, 53.36232 ], [ -2.05326, 53.3624 ], [ -2.05333, 53.36242 ], [ -2.05355, 53.36249 ], [ -2.05358, 53.36249 ], [ -2.05359, 53.3625 ], [ -2.05383, 53.36257 ], [ -2.05386, 53.36258 ], [ -2.05407, 53.36265 ], [ -2.05454, 53.36281 ], [ -2.05463, 53.36284 ], [ -2.05489, 53.36293 ], [ -2.05493, 53.36294 ], [ -2.05516, 53.36302 ], [ -2.05538, 53.36308 ], [ -2.05597, 53.36325 ], [ -2.05625, 53.36333 ], [ -2.05637, 53.36335 ], [ -2.05656, 53.36339 ], [ -2.05694, 53.36346 ], [ -2.0571, 53.36349 ], [ -2.05713, 53.36349 ], [ -2.05717, 53.36349 ], [ -2.05729, 53.36351 ], [ -2.05748, 53.36352 ], [ -2.05764, 53.36352 ], [ -2.0576378, 53.363523 ], [ -2.05781, 53.36351 ], [ -2.05797, 53.36349 ], [ -2.05829, 53.36345 ], [ -2.05853, 53.36344 ], [ -2.05855, 53.36344 ], [ -2.05883, 53.36344 ], [ -2.05933, 53.36345 ], [ -2.05942, 53.36346 ], [ -2.06034, 53.36348 ], [ -2.0606, 53.36349 ], [ -2.06064, 53.36349 ], [ -2.06094, 53.3635 ], [ -2.06154, 53.36352 ], [ -2.06226, 53.36355 ], [ -2.06272, 53.36355 ], [ -2.06281, 53.36355 ], [ -2.06282, 53.36355 ], [ -2.06289, 53.36354 ], [ -2.06294, 53.36353 ], [ -2.063, 53.36351 ], [ -2.06309, 53.36347 ], [ -2.0630858, 53.3634668 ], [ -2.06325, 53.36353 ], [ -2.06332, 53.36356 ], [ -2.06343, 53.36357 ], [ -2.06378, 53.36361 ], [ -2.06442, 53.36367 ], [ -2.06459, 53.36369 ], [ -2.06504, 53.36374 ], [ -2.06531, 53.36377 ], [ -2.06545, 53.36378 ], [ -2.06624, 53.36385 ], [ -2.06642, 53.36387 ], [ -2.06739, 53.36395 ], [ -2.06759, 53.36397 ], [ -2.06782, 53.36399 ], [ -2.06903, 53.36409 ], [ -2.06935, 53.36411 ], [ -2.06947, 53.36412 ], [ -2.06974, 53.36414 ], [ -2.07023, 53.36416 ], [ -2.07076, 53.36419 ], [ -2.07135, 53.36424 ], [ -2.07188, 53.36428 ], [ -2.07216, 53.3643 ], [ -2.07228, 53.36432 ], [ -2.07251, 53.36434 ], [ -2.0727, 53.36435 ], [ -2.07297, 53.36438 ], [ -2.07376, 53.36447 ], [ -2.07397, 53.3645 ], [ -2.07413, 53.36453 ], [ -2.0742, 53.36454 ], [ -2.07444, 53.36458 ], [ -2.07467, 53.36465 ], [ -2.07477, 53.36467 ], [ -2.07507, 53.36475 ], [ -2.07549, 53.36487 ], [ -2.07568, 53.36494 ], [ -2.07584, 53.36499 ], [ -2.07593, 53.36502 ], [ -2.07598, 53.36504 ], [ -2.07638, 53.36519 ], [ -2.07669, 53.36532 ], [ -2.07686, 53.3654 ], [ -2.07697, 53.36542 ], [ -2.07708, 53.36545 ], [ -2.07723, 53.36549 ], [ -2.07755, 53.36556 ], [ -2.0778, 53.36561 ], [ -2.07822, 53.36569 ], [ -2.07839, 53.36572 ], [ -2.07855, 53.36575 ], [ -2.07864, 53.36576 ], [ -2.07916, 53.36585 ], [ -2.07982, 53.36598 ], [ -2.08361, 53.36667 ], [ -2.08454, 53.36684 ], [ -2.08516, 53.36697 ], [ -2.08557, 53.36705 ], [ -2.0863, 53.36719 ], [ -2.08692, 53.36729 ], [ -2.08724, 53.36734 ], [ -2.08749, 53.36736 ], [ -2.08771, 53.36738 ], [ -2.08827, 53.36742 ], [ -2.08845, 53.36744 ], [ -2.08895, 53.36747 ], [ -2.08941, 53.36749 ], [ -2.08962, 53.36749 ], [ -2.09082, 53.36752 ], [ -2.09136, 53.36754 ], [ -2.0919, 53.36754 ], [ -2.09199, 53.36754 ], [ -2.09207, 53.36757 ], [ -2.09225, 53.36759 ], [ -2.09251, 53.36763 ], [ -2.09279, 53.36769 ], [ -2.093, 53.36774 ], [ -2.09321, 53.36782 ], [ -2.09351, 53.36792 ], [ -2.09362, 53.36798 ], [ -2.09373, 53.36804 ], [ -2.09405, 53.36825 ], [ -2.09432, 53.36845 ], [ -2.09448, 53.36857 ], [ -2.09514, 53.36904 ], [ -2.09553, 53.36926 ], [ -2.09591, 53.36944 ], [ -2.09621, 53.36957 ], [ -2.09663, 53.3697 ], [ -2.09721, 53.36984 ], [ -2.09805, 53.37004 ], [ -2.09875, 53.37019 ], [ -2.09889, 53.37022 ], [ -2.09936, 53.37034 ], [ -2.09952, 53.37038 ], [ -2.09978, 53.37045 ], [ -2.1006, 53.37068 ], [ -2.10165, 53.3711 ], [ -2.1023, 53.37137 ], [ -2.1029, 53.37164 ], [ -2.10293, 53.37166 ], [ -2.10337, 53.37185 ], [ -2.1037, 53.37196 ], [ -2.10402, 53.37206 ], [ -2.10441, 53.37215 ], [ -2.10496, 53.37224 ], [ -2.10541, 53.3723 ], [ -2.10566, 53.37235 ], [ -2.10569, 53.37236 ], [ -2.10574, 53.37237 ], [ -2.10584, 53.37239 ], [ -2.10605, 53.37244 ], [ -2.10648, 53.37254 ], [ -2.10669, 53.37262 ], [ -2.10702, 53.37275 ], [ -2.10711, 53.3728 ], [ -2.10715, 53.37281 ], [ -2.10747, 53.37297 ], [ -2.10805, 53.37329 ], [ -2.10842, 53.37349 ], [ -2.1086, 53.37358 ], [ -2.10876, 53.37367 ], [ -2.10894, 53.37376 ], [ -2.10904, 53.37381 ], [ -2.10913, 53.37386 ], [ -2.10969, 53.3741 ], [ -2.1098, 53.37416 ], [ -2.11007, 53.37426 ], [ -2.11016, 53.3743 ], [ -2.11037, 53.37438 ], [ -2.11077, 53.37451 ], [ -2.11089, 53.37456 ], [ -2.11116, 53.37465 ], [ -2.11207, 53.37495 ], [ -2.11263, 53.37513 ], [ -2.11272, 53.37517 ], [ -2.11284, 53.37521 ], [ -2.1129, 53.37523 ], [ -2.11324, 53.37534 ], [ -2.1138, 53.37554 ], [ -2.11396, 53.37561 ], [ -2.11413, 53.37572 ], [ -2.1142, 53.37576 ], [ -2.11427, 53.37581 ], [ -2.11436, 53.37588 ], [ -2.11443, 53.37592 ], [ -2.1146, 53.37605 ], [ -2.11497, 53.37631 ], [ -2.11511, 53.37643 ], [ -2.11532, 53.37658 ], [ -2.1155, 53.37672 ], [ -2.11557, 53.37676 ], [ -2.11586, 53.37696 ], [ -2.11597, 53.37703 ], [ -2.11615, 53.37717 ], [ -2.1163, 53.37727 ], [ -2.11691, 53.37769 ], [ -2.11709, 53.37781 ], [ -2.1172, 53.37788 ], [ -2.11728, 53.37795 ], [ -2.11742, 53.37805 ], [ -2.11763, 53.37822 ], [ -2.11767, 53.37824 ], [ -2.11787, 53.3784 ], [ -2.11805, 53.37852 ], [ -2.11814, 53.37858 ], [ -2.11824, 53.37865 ], [ -2.11833, 53.37871 ], [ -2.1184, 53.37875 ], [ -2.11848, 53.3788 ], [ -2.11862, 53.37888 ], [ -2.11873, 53.37894 ], [ -2.11883, 53.37898 ], [ -2.11892, 53.37902 ], [ -2.11902, 53.37906 ], [ -2.11914, 53.3791 ], [ -2.1194, 53.3792 ], [ -2.11956, 53.37925 ], [ -2.11982, 53.37933 ], [ -2.12026, 53.37946 ], [ -2.12071, 53.3796 ], [ -2.121, 53.37968 ], [ -2.12118, 53.37973 ], [ -2.12133, 53.37977 ], [ -2.1215, 53.37982 ], [ -2.1216, 53.37986 ], [ -2.12172, 53.37991 ], [ -2.12181, 53.37996 ], [ -2.12191, 53.38002 ], [ -2.12193, 53.38004 ], [ -2.12203, 53.38011 ], [ -2.12216, 53.38021 ], [ -2.12232, 53.38034 ], [ -2.12269, 53.38063 ], [ -2.12288, 53.38078 ], [ -2.12308, 53.38095 ], [ -2.12345, 53.38124 ], [ -2.12376, 53.38148 ], [ -2.12392, 53.3816 ], [ -2.12411, 53.38176 ], [ -2.12457, 53.38214 ], [ -2.12495, 53.38245 ], [ -2.12519, 53.38266 ], [ -2.12525, 53.38271 ], [ -2.12529, 53.38273 ], [ -2.12559, 53.383 ], [ -2.12588, 53.38327 ], [ -2.12626, 53.38363 ], [ -2.12639, 53.38376 ], [ -2.12642, 53.38377 ], [ -2.12643, 53.38377 ], [ -2.12644, 53.38378 ], [ -2.12646, 53.38378 ], [ -2.1265, 53.38381 ], [ -2.12655, 53.38386 ], [ -2.12674, 53.38406 ], [ -2.12684, 53.38415 ], [ -2.12687, 53.38417 ], [ -2.12692, 53.38421 ], [ -2.12703, 53.38426 ], [ -2.12731, 53.38441 ], [ -2.1276, 53.38457 ], [ -2.1277, 53.38462 ], [ -2.12776, 53.38466 ], [ -2.12778, 53.38468 ], [ -2.1278, 53.38472 ], [ -2.12805, 53.38486 ], [ -2.1282, 53.38495 ], [ -2.12856, 53.38515 ], [ -2.12875, 53.38524 ], [ -2.12932, 53.38556 ], [ -2.12988, 53.38587 ], [ -2.13, 53.38594 ], [ -2.129998, 53.3859385 ], [ -2.13012, 53.38596 ], [ -2.13043, 53.38611 ], [ -2.13052, 53.38614 ], [ -2.13063, 53.38618 ], [ -2.13191, 53.38674 ], [ -2.13194, 53.38676 ], [ -2.13197, 53.38678 ], [ -2.13204, 53.38685 ], [ -2.13233, 53.38697 ], [ -2.13248, 53.38704 ], [ -2.13291, 53.38723 ], [ -2.13337, 53.38742 ], [ -2.13418, 53.38777 ], [ -2.13486, 53.38805 ], [ -2.13537, 53.38826 ], [ -2.13574, 53.38839 ], [ -2.13597, 53.38846 ], [ -2.13668, 53.38867 ], [ -2.13686, 53.38872 ], [ -2.13724, 53.38882 ], [ -2.13775, 53.38895 ], [ -2.13799, 53.389 ], [ -2.13819, 53.38904 ], [ -2.13841, 53.38909 ], [ -2.13876, 53.38918 ], [ -2.1392, 53.38933 ], [ -2.13936, 53.38938 ], [ -2.13965, 53.38949 ], [ -2.1404, 53.38978 ], [ -2.14086, 53.38998 ], [ -2.14118, 53.39013 ], [ -2.14162, 53.39034 ], [ -2.14201, 53.39054 ], [ -2.14234, 53.39071 ], [ -2.14273, 53.3909 ], [ -2.14287, 53.39096 ], [ -2.14297, 53.391 ], [ -2.14329, 53.39113 ], [ -2.14393, 53.39138 ], [ -2.144, 53.39142 ], [ -2.14418, 53.39151 ], [ -2.14434, 53.39159 ], [ -2.1445, 53.39168 ], [ -2.1447, 53.39179 ], [ -2.14482, 53.39186 ], [ -2.14502, 53.39199 ], [ -2.14522, 53.39212 ], [ -2.14546, 53.39226 ], [ -2.14567, 53.3924 ], [ -2.14584, 53.39252 ], [ -2.146, 53.39264 ], [ -2.14613, 53.39274 ], [ -2.1462, 53.3928 ], [ -2.14634, 53.39294 ], [ -2.14661, 53.39317 ], [ -2.14701, 53.39351 ], [ -2.14716, 53.39364 ], [ -2.1476, 53.39403 ], [ -2.14806, 53.39443 ], [ -2.14915, 53.39539 ], [ -2.14934, 53.39555 ], [ -2.14982, 53.39597 ], [ -2.15032, 53.39641 ], [ -2.15054, 53.39658 ], [ -2.15102, 53.39699 ], [ -2.15123, 53.39717 ], [ -2.15151, 53.39741 ], [ -2.15162, 53.39751 ], [ -2.15194, 53.39777 ], [ -2.15219, 53.39799 ], [ -2.15244, 53.39819 ], [ -2.15279, 53.39845 ], [ -2.15298, 53.39857 ], [ -2.15332, 53.3989 ], [ -2.15346, 53.39902 ], [ -2.15368, 53.39918 ], [ -2.15386, 53.39933 ], [ -2.1538581, 53.3993285 ], [ -2.15387, 53.39938 ], [ -2.1539, 53.39942 ], [ -2.15392, 53.39945 ], [ -2.15398, 53.39949 ], [ -2.15416, 53.39964 ], [ -2.15444, 53.39985 ], [ -2.15467, 53.40002 ], [ -2.15506, 53.40036 ], [ -2.1553, 53.40056 ], [ -2.15553, 53.40079 ], [ -2.15565, 53.40091 ], [ -2.15576, 53.40102 ], [ -2.15589, 53.40119 ], [ -2.15601, 53.40133 ], [ -2.15605, 53.40139 ], [ -2.15629, 53.4017 ], [ -2.15632, 53.40173 ], [ -2.15635, 53.40176 ], [ -2.15644, 53.4018 ], [ -2.15651, 53.40191 ], [ -2.15664, 53.40209 ], [ -2.15722, 53.40292 ], [ -2.15731, 53.40307 ], [ -2.15769, 53.40365 ], [ -2.15814, 53.40435 ], [ -2.15821, 53.40448 ], [ -2.15832, 53.40465 ], [ -2.1583165, 53.4046527 ], [ -2.15829, 53.4047 ], [ -2.15829, 53.40473 ], [ -2.15829, 53.40479 ], [ -2.15863, 53.40532 ], [ -2.15874, 53.40547 ], [ -2.15883, 53.40562 ], [ -2.1591, 53.40606 ], [ -2.15919, 53.4062 ], [ -2.15933, 53.40643 ], [ -2.15947, 53.40665 ], [ -2.15958, 53.40685 ], [ -2.15963, 53.4069 ], [ -2.15967, 53.40694 ], [ -2.15976, 53.407 ], [ -2.15992, 53.40722 ], [ -2.16052, 53.40773 ], [ -2.16089, 53.40799 ], [ -2.16112, 53.40818 ], [ -2.1616, 53.40847 ], [ -2.16181, 53.40864 ], [ -2.16202, 53.4088 ], [ -2.16261, 53.40927 ], [ -2.16271, 53.40938 ], [ -2.16274, 53.40941 ], [ -2.16299, 53.40974 ], [ -2.16327, 53.41002 ], [ -2.1633, 53.41005 ], [ -2.16358, 53.41031 ], [ -2.16376, 53.41043 ], [ -2.16389, 53.41051 ], [ -2.16397, 53.41056 ], [ -2.16407, 53.41061 ], [ -2.16435, 53.41077 ], [ -2.1645, 53.41085 ], [ -2.16471, 53.41097 ], [ -2.16488, 53.41107 ], [ -2.16508, 53.41118 ], [ -2.1651, 53.41119 ], [ -2.16545, 53.41139 ], [ -2.1655, 53.41142 ], [ -2.16558, 53.41146 ], [ -2.16574, 53.41153 ], [ -2.16587, 53.41161 ], [ -2.16602, 53.4117 ], [ -2.1661, 53.41177 ], [ -2.16622, 53.41184 ], [ -2.16628, 53.41188 ], [ -2.16631, 53.41189 ], [ -2.16653, 53.41205 ], [ -2.16663, 53.41213 ], [ -2.16669, 53.41217 ], [ -2.16681, 53.41228 ], [ -2.16692, 53.41237 ], [ -2.16722, 53.41269 ], [ -2.16737, 53.41289 ], [ -2.16757, 53.41319 ], [ -2.16767, 53.41333 ], [ -2.16794, 53.41375 ], [ -2.168, 53.41385 ], [ -2.16802, 53.41389 ], [ -2.16807, 53.41397 ], [ -2.1682, 53.4142 ], [ -2.16846, 53.41462 ], [ -2.1685, 53.41468 ], [ -2.16864, 53.4149 ], [ -2.16867, 53.41494 ], [ -2.16878, 53.41512 ], [ -2.16898, 53.41546 ], [ -2.16908, 53.41562 ], [ -2.16916, 53.41574 ], [ -2.16927, 53.41591 ], [ -2.16942, 53.41615 ], [ -2.16945, 53.4162 ], [ -2.16955, 53.41635 ], [ -2.1696, 53.41644 ], [ -2.16996, 53.41699 ], [ -2.17006, 53.41715 ], [ -2.1701, 53.41722 ], [ -2.17028, 53.4175 ], [ -2.17031, 53.41754 ], [ -2.17035, 53.41761 ], [ -2.1706, 53.41801 ], [ -2.17069, 53.41816 ], [ -2.17076, 53.41825 ], [ -2.17084, 53.41841 ], [ -2.17099, 53.41865 ], [ -2.17111, 53.41884 ], [ -2.17124, 53.41901 ], [ -2.1713, 53.41912 ], [ -2.17139, 53.41927 ], [ -2.17153, 53.41949 ], [ -2.17159, 53.41959 ], [ -2.17172, 53.41978 ], [ -2.17184, 53.41996 ], [ -2.17199, 53.42019 ], [ -2.17209, 53.42035 ], [ -2.17218, 53.4205 ], [ -2.17224, 53.42059 ], [ -2.17237, 53.42078 ], [ -2.17245, 53.42092 ], [ -2.17254, 53.42106 ], [ -2.17261, 53.42116 ], [ -2.17264, 53.4212 ], [ -2.17272, 53.42132 ], [ -2.1728, 53.42144 ], [ -2.17287, 53.42154 ], [ -2.17306, 53.42182 ], [ -2.1735, 53.42238 ], [ -2.17371, 53.4227 ], [ -2.1739, 53.42298 ], [ -2.17397, 53.42306 ], [ -2.17403, 53.42315 ], [ -2.17409, 53.42324 ], [ -2.17433, 53.42357 ], [ -2.17454, 53.42384 ], [ -2.17469, 53.42405 ], [ -2.17472, 53.42409 ], [ -2.17476, 53.42414 ], [ -2.17493, 53.42438 ], [ -2.17511, 53.42462 ], [ -2.17534, 53.42495 ], [ -2.1755, 53.42517 ], [ -2.17571, 53.42545 ], [ -2.17591, 53.42572 ], [ -2.17616, 53.42608 ], [ -2.17625, 53.4262 ], [ -2.17629, 53.42624 ], [ -2.17633, 53.42629 ], [ -2.17643, 53.42642 ], [ -2.17647, 53.42647 ], [ -2.17656, 53.42659 ], [ -2.1765562, 53.4265891 ], [ -2.17654, 53.42662 ], [ -2.17654, 53.42665 ], [ -2.17655, 53.42668 ], [ -2.17663, 53.42679 ], [ -2.17685, 53.42711 ], [ -2.17727, 53.42764 ], [ -2.17736, 53.4277 ], [ -2.17749, 53.42787 ], [ -2.17775, 53.42823 ], [ -2.17805, 53.42863 ], [ -2.17815, 53.42877 ], [ -2.17821, 53.42886 ], [ -2.17856, 53.42936 ], [ -2.17864, 53.42946 ], [ -2.17873, 53.42958 ], [ -2.17892, 53.42978 ], [ -2.17901, 53.42988 ], [ -2.1791, 53.42995 ], [ -2.17935, 53.43015 ], [ -2.17946, 53.43025 ], [ -2.17953, 53.4303 ], [ -2.17972, 53.43046 ], [ -2.17981, 53.43054 ], [ -2.17986, 53.43059 ], [ -2.17993, 53.43065 ], [ -2.18027, 53.431 ], [ -2.18042, 53.43116 ], [ -2.18073, 53.43148 ], [ -2.18097, 53.43175 ], [ -2.18127, 53.43209 ], [ -2.18161, 53.43247 ], [ -2.18176, 53.43263 ], [ -2.18227, 53.43318 ], [ -2.18269, 53.43361 ], [ -2.1829, 53.43383 ], [ -2.18306, 53.43399 ], [ -2.18323, 53.43415 ], [ -2.18328, 53.43421 ], [ -2.18336, 53.43428 ], [ -2.18353, 53.43445 ], [ -2.18356, 53.43448 ], [ -2.18369, 53.43462 ], [ -2.18371, 53.43464 ], [ -2.18375, 53.43469 ], [ -2.18382, 53.43477 ], [ -2.18385, 53.43482 ], [ -2.18392, 53.43491 ], [ -2.18404, 53.43509 ], [ -2.1842, 53.43538 ], [ -2.18425, 53.43545 ], [ -2.18437, 53.43563 ], [ -2.18443, 53.43575 ], [ -2.18448, 53.43584 ], [ -2.18453, 53.43595 ], [ -2.18461, 53.4361 ], [ -2.18492, 53.43665 ], [ -2.18501, 53.43679 ], [ -2.18527, 53.43717 ], [ -2.18538, 53.43732 ], [ -2.18563, 53.43768 ], [ -2.18583, 53.43795 ], [ -2.18608, 53.4383 ], [ -2.18643, 53.4387 ], [ -2.18651, 53.4388 ], [ -2.18688, 53.43921 ], [ -2.18726, 53.43959 ], [ -2.18748, 53.43979 ], [ -2.18768, 53.43999 ], [ -2.18823, 53.44051 ], [ -2.18837, 53.44064 ], [ -2.18842, 53.44069 ], [ -2.18848, 53.44074 ], [ -2.18849, 53.44075 ], [ -2.18853, 53.44078 ], [ -2.18853, 53.44079 ], [ -2.18862, 53.44087 ], [ -2.1887, 53.44094 ], [ -2.18879, 53.44102 ], [ -2.18905, 53.44127 ], [ -2.18937, 53.44157 ], [ -2.18959, 53.44178 ], [ -2.18993, 53.4421 ], [ -2.18996, 53.44213 ], [ -2.19014, 53.44232 ], [ -2.19025, 53.44242 ], [ -2.19054, 53.44268 ], [ -2.19072, 53.44284 ], [ -2.19094, 53.44303 ], [ -2.19105, 53.44313 ], [ -2.19116, 53.44324 ], [ -2.19134, 53.44342 ], [ -2.19148, 53.44361 ], [ -2.19151, 53.44366 ], [ -2.19153, 53.44376 ], [ -2.19156, 53.44389 ], [ -2.19156, 53.44395 ], [ -2.19157, 53.44408 ], [ -2.19157, 53.44428 ], [ -2.19156, 53.44461 ], [ -2.19156, 53.44471 ], [ -2.19155, 53.44497 ], [ -2.19152, 53.44528 ], [ -2.1915, 53.44541 ], [ -2.19146, 53.44579 ], [ -2.19144, 53.44591 ], [ -2.19142, 53.44602 ], [ -2.1914, 53.44616 ], [ -2.19136, 53.44637 ], [ -2.19133, 53.44652 ], [ -2.19131, 53.44685 ], [ -2.1913, 53.44692 ], [ -2.1913, 53.44694 ], [ -2.19132, 53.44706 ], [ -2.19134, 53.44719 ], [ -2.19139, 53.44729 ], [ -2.19143, 53.44737 ], [ -2.1915, 53.44749 ], [ -2.19158, 53.44769 ], [ -2.1917, 53.44796 ], [ -2.19185, 53.44828 ], [ -2.19194, 53.44847 ], [ -2.192, 53.44861 ], [ -2.19216, 53.44897 ], [ -2.1922, 53.44906 ], [ -2.19236, 53.44943 ], [ -2.19246, 53.44965 ], [ -2.19262, 53.44989 ], [ -2.19276, 53.4501 ], [ -2.19298, 53.45038 ], [ -2.19314, 53.45058 ], [ -2.19327, 53.45075 ], [ -2.19346, 53.45099 ], [ -2.19367, 53.45125 ], [ -2.19373, 53.45131 ], [ -2.19392, 53.45154 ], [ -2.19448, 53.45217 ], [ -2.19491, 53.45266 ], [ -2.19531, 53.45309 ], [ -2.19546, 53.45325 ], [ -2.1957, 53.45347 ], [ -2.19591, 53.45368 ], [ -2.19617, 53.45393 ], [ -2.19634, 53.45405 ], [ -2.19657, 53.45419 ], [ -2.19679, 53.45432 ], [ -2.19689, 53.45438 ], [ -2.19715, 53.45454 ], [ -2.19762, 53.45481 ], [ -2.19775, 53.45489 ], [ -2.19789, 53.45496 ], [ -2.19797, 53.45501 ], [ -2.19809, 53.45508 ], [ -2.19828, 53.45517 ], [ -2.19846, 53.4553 ], [ -2.19864, 53.45544 ], [ -2.19875, 53.45554 ], [ -2.19884, 53.45561 ], [ -2.19886, 53.45563 ], [ -2.19889, 53.45566 ], [ -2.19921, 53.4559 ], [ -2.1995, 53.45615 ], [ -2.19953, 53.45617 ], [ -2.19992, 53.45653 ], [ -2.20038, 53.45692 ], [ -2.20067, 53.45715 ], [ -2.201, 53.4574 ], [ -2.20132, 53.45765 ], [ -2.20193, 53.45814 ], [ -2.20208, 53.45826 ], [ -2.20231, 53.45846 ], [ -2.20256, 53.45869 ], [ -2.20268, 53.45881 ], [ -2.20297, 53.45905 ], [ -2.20318, 53.45917 ], [ -2.20345, 53.45933 ], [ -2.20376, 53.4595 ], [ -2.20399, 53.45962 ], [ -2.20428, 53.45976 ], [ -2.20435, 53.45981 ], [ -2.20454, 53.45989 ], [ -2.20494, 53.4601 ], [ -2.20497, 53.46012 ], [ -2.20512, 53.4602 ], [ -2.20516, 53.46022 ], [ -2.20529, 53.46029 ], [ -2.20575, 53.46053 ], [ -2.20608, 53.46068 ], [ -2.2065, 53.46089 ], [ -2.2067, 53.46099 ], [ -2.20678, 53.46104 ], [ -2.20716, 53.46123 ], [ -2.20724, 53.46128 ], [ -2.20734, 53.46132 ], [ -2.20738, 53.46134 ], [ -2.20776, 53.46155 ], [ -2.2079, 53.46162 ], [ -2.20794, 53.46164 ], [ -2.20806, 53.46171 ], [ -2.20895, 53.4622 ], [ -2.20927, 53.46238 ], [ -2.20952, 53.46252 ], [ -2.20967, 53.4626 ], [ -2.21008, 53.46283 ], [ -2.21031, 53.46294 ], [ -2.2107, 53.46317 ], [ -2.21091, 53.4633 ], [ -2.21112, 53.46341 ], [ -2.2113, 53.46352 ], [ -2.21154, 53.46365 ], [ -2.21168, 53.46373 ], [ -2.21191, 53.46386 ], [ -2.21201, 53.46392 ], [ -2.21239, 53.46413 ], [ -2.21249, 53.46418 ], [ -2.21266, 53.46428 ], [ -2.21278, 53.46435 ], [ -2.21293, 53.46444 ], [ -2.21297, 53.46446 ], [ -2.21317, 53.46457 ], [ -2.21324, 53.46461 ], [ -2.2135, 53.46476 ], [ -2.21418, 53.46514 ], [ -2.21424, 53.46518 ], [ -2.21479, 53.4655 ], [ -2.21508, 53.46566 ], [ -2.21516, 53.46572 ], [ -2.21552, 53.46593 ], [ -2.21567, 53.46601 ], [ -2.21582, 53.46609 ], [ -2.21588, 53.46613 ], [ -2.21596, 53.46618 ], [ -2.21612, 53.46626 ], [ -2.2163, 53.46635 ], [ -2.21645, 53.46642 ], [ -2.21647, 53.46643 ], [ -2.21673, 53.46654 ], [ -2.2168, 53.46656 ], [ -2.21698, 53.46663 ], [ -2.21726, 53.46673 ], [ -2.21746, 53.46678 ], [ -2.21784, 53.46689 ], [ -2.21799, 53.46693 ], [ -2.21811, 53.46696 ], [ -2.21826, 53.467 ], [ -2.21827, 53.467 ], [ -2.21863, 53.4671 ], [ -2.21879, 53.46714 ], [ -2.21901, 53.46721 ], [ -2.21906, 53.46723 ], [ -2.21933, 53.46729 ], [ -2.2195, 53.46735 ], [ -2.21973, 53.46745 ], [ -2.21978, 53.46747 ], [ -2.22, 53.46756 ], [ -2.22022, 53.46765 ], [ -2.22052, 53.46778 ], [ -2.22076, 53.46791 ], [ -2.22095, 53.46802 ], [ -2.22113, 53.46813 ], [ -2.22137, 53.46829 ], [ -2.22158, 53.46844 ], [ -2.22171, 53.46853 ], [ -2.22196, 53.4687 ], [ -2.22219, 53.46887 ], [ -2.22226, 53.46892 ], [ -2.22236, 53.469 ], [ -2.22247, 53.46912 ], [ -2.22248, 53.46913 ], [ -2.22252, 53.46918 ], [ -2.22265, 53.46936 ], [ -2.22272, 53.46952 ], [ -2.22275, 53.46963 ], [ -2.22277, 53.46969 ], [ -2.22277, 53.46973 ], [ -2.22277, 53.46978 ], [ -2.22277, 53.46983 ], [ -2.2227669, 53.469826 ], [ -2.2228, 53.46988 ], [ -2.22283, 53.46996 ], [ -2.22286, 53.47007 ], [ -2.22291, 53.47009 ], [ -2.22294, 53.4701 ], [ -2.22296, 53.47011 ], [ -2.22298, 53.47012 ], [ -2.22299, 53.47013 ], [ -2.223, 53.47014 ], [ -2.22301, 53.47015 ], [ -2.22302, 53.47016 ], [ -2.22303, 53.47017 ], [ -2.22303, 53.47018 ], [ -2.22304, 53.4702 ], [ -2.22302, 53.47025 ], [ -2.2231, 53.47035 ], [ -2.22315, 53.4704 ], [ -2.22319, 53.47044 ], [ -2.22324, 53.47048 ], [ -2.22329, 53.4705 ], [ -2.22347, 53.4706 ], [ -2.2237, 53.47071 ], [ -2.22373, 53.47073 ], [ -2.22381, 53.47077 ], [ -2.22391, 53.47081 ], [ -2.22414, 53.47092 ], [ -2.22467, 53.47114 ], [ -2.22475, 53.47117 ], [ -2.22494, 53.47124 ], [ -2.2253, 53.47138 ], [ -2.22545, 53.47143 ], [ -2.22548, 53.47145 ], [ -2.22552, 53.4715 ], [ -2.22578, 53.47157 ], [ -2.22611, 53.47165 ], [ -2.22636, 53.47172 ], [ -2.22689, 53.47183 ], [ -2.2268946, 53.4718258 ], [ -2.22699, 53.47189 ], [ -2.22707, 53.47192 ], [ -2.22732, 53.47196 ], [ -2.22746, 53.47199 ], [ -2.22761, 53.47203 ], [ -2.22771, 53.47206 ], [ -2.22785, 53.4721 ], [ -2.22791, 53.47213 ], [ -2.22797, 53.47215 ], [ -2.22803, 53.47218 ], [ -2.22808, 53.4722 ], [ -2.22817, 53.47225 ], [ -2.22822, 53.47229 ], [ -2.2283, 53.47234 ], [ -2.2287, 53.47268 ], [ -2.22887, 53.47283 ], [ -2.22893, 53.47288 ], [ -2.22912, 53.47306 ], [ -2.22918, 53.47311 ], [ -2.22932, 53.47323 ], [ -2.2294, 53.47331 ], [ -2.22954, 53.47346 ], [ -2.22958, 53.4735 ], [ -2.22961, 53.47355 ], [ -2.22964, 53.47361 ], [ -2.22967, 53.47366 ], [ -2.22973, 53.47376 ], [ -2.22976, 53.47384 ], [ -2.22978, 53.47392 ], [ -2.2298, 53.47396 ], [ -2.2298, 53.47407 ], [ -2.22986, 53.4743 ], [ -2.22989, 53.47438 ], [ -2.23, 53.47473 ], [ -2.23001, 53.47502 ], [ -2.23005, 53.47511 ], [ -2.23009, 53.47521 ], [ -2.2301, 53.47524 ], [ -2.23011, 53.47527 ], [ -2.23015, 53.47533 ], [ -2.23018, 53.47538 ], [ -2.23024, 53.47546 ], [ -2.23026, 53.47548 ], [ -2.23029, 53.4755 ], [ -2.23036, 53.47554 ], [ -2.23049, 53.47561 ], [ -2.23073, 53.47579 ], [ -2.23084, 53.47588 ], [ -2.23088, 53.47591 ], [ -2.231, 53.47604 ], [ -2.23115, 53.47621 ], [ -2.2311549, 53.476211 ], [ -2.23112, 53.47627 ], [ -2.23118, 53.47634 ], [ -2.23121, 53.47637 ], [ -2.23127, 53.47645 ], [ -2.23134, 53.47655 ], [ -2.23143, 53.47666 ], [ -2.23151, 53.47678 ], [ -2.23153, 53.4768 ], [ -2.23165, 53.47701 ], [ -2.23171, 53.47713 ], [ -2.23174, 53.47718 ], [ -2.23181, 53.47727 ], [ -2.2319, 53.47741 ], [ -2.232, 53.47755 ], [ -2.23205, 53.47762 ], [ -2.2321, 53.47771 ], [ -2.2322, 53.47785 ], [ -2.23224, 53.47792 ], [ -2.23228, 53.47796 ], [ -2.23238, 53.47811 ], [ -2.2324, 53.47814 ], [ -2.23246, 53.47821 ], [ -2.23253, 53.4783 ], [ -2.23266, 53.47848 ], [ -2.23268, 53.47851 ], [ -2.23272, 53.47857 ], [ -2.23277, 53.47865 ], [ -2.23285, 53.47879 ], [ -2.2328486, 53.4787931 ], [ -2.23283, 53.47884 ], [ -2.23283, 53.47886 ], [ -2.23286, 53.47899 ], [ -2.23291, 53.47909 ], [ -2.23295, 53.47919 ], [ -2.23297, 53.47925 ], [ -2.23299, 53.4793 ], [ -2.23301, 53.47935 ], [ -2.23304, 53.4794 ], [ -2.23307, 53.47944 ], [ -2.2331, 53.47948 ], [ -2.23315, 53.47954 ], [ -2.2332, 53.47959 ], [ -2.2333, 53.47963 ], [ -2.23334, 53.47966 ], [ -2.23342, 53.47973 ], [ -2.23349, 53.47981 ], [ -2.23354, 53.47986 ], [ -2.2337, 53.48003 ], [ -2.23375, 53.4801 ], [ -2.23389, 53.48022 ], [ -2.23394, 53.48028 ], [ -2.23397, 53.4803 ], [ -2.23409, 53.48042 ], [ -2.23432, 53.48061 ], [ -2.23446, 53.48072 ], [ -2.23447, 53.48074 ], [ -2.23443, 53.48078 ], [ -2.23439, 53.48082 ], [ -2.2343871, 53.4808195 ], [ -2.23462, 53.48089 ], [ -2.23488, 53.48096 ], [ -2.23556, 53.48115 ], [ -2.2357, 53.48118 ], [ -2.23595, 53.48126 ], [ -2.2369, 53.48152 ], [ -2.23699, 53.48154 ], [ -2.23754, 53.48167 ], [ -2.23772, 53.48172 ], [ -2.23812, 53.48181 ], [ -2.23829, 53.48186 ], [ -2.2382909, 53.4818596 ], [ -2.23844, 53.4819 ], [ -2.23846, 53.48191 ], [ -2.23883, 53.48201 ], [ -2.23886, 53.48202 ], [ -2.23918, 53.48211 ], [ -2.23924, 53.48213 ], [ -2.23927, 53.48214 ], [ -2.2393, 53.48217 ], [ -2.23933, 53.48217 ], [ -2.23948, 53.48214 ], [ -2.23961, 53.48214 ], [ -2.23978, 53.48218 ], [ -2.2406, 53.48237 ], [ -2.24095, 53.48244 ], [ -2.24136, 53.48252 ], [ -2.24151, 53.48255 ], [ -2.24222, 53.48269 ], [ -2.24249, 53.48275 ], [ -2.24265, 53.48278 ], [ -2.24284, 53.48282 ], [ -2.24303, 53.48286 ], [ -2.24331, 53.48293 ], [ -2.24337, 53.48294 ], [ -2.24346, 53.48297 ], [ -2.2437, 53.48302 ], [ -2.2436973, 53.4830233 ], [ -2.24362, 53.48313 ], [ -2.24338, 53.48346 ], [ -2.24331, 53.48356 ], [ -2.24305, 53.48389 ], [ -2.24294, 53.48404 ], [ -2.2429385, 53.4840412 ], [ -2.24352, 53.48418 ], [ -2.2438, 53.48425 ], [ -2.24408, 53.48431 ], [ -2.2440788, 53.4843136 ], [ -2.24406, 53.48435 ], [ -2.24404, 53.48441 ], [ -2.244041, 53.4844087 ], [ -2.24373, 53.48445 ], [ -2.243727, 53.4844529 ], [ -2.24375, 53.4846 ], [ -2.24374, 53.48476 ], [ -2.24368, 53.48546 ], [ -2.24364, 53.48551 ], [ -2.2436367, 53.4855147 ], [ -2.24373, 53.48555 ], [ -2.24382, 53.48558 ], [ -2.2439, 53.4856 ], [ -2.24408, 53.48564 ], [ -2.24431, 53.48571 ], [ -2.2444, 53.48574 ], [ -2.24451, 53.48582 ], [ -2.2446, 53.48588 ], [ -2.24465, 53.48591 ], [ -2.24472, 53.48594 ], [ -2.2448, 53.48597 ], [ -2.2448042, 53.4859707 ], [ -2.24479, 53.48602 ], [ -2.24479, 53.48609 ], [ -2.24478, 53.48612 ], [ -2.24478, 53.48616 ], [ -2.24478, 53.48619 ], [ -2.24478, 53.48621 ], [ -2.24479, 53.48622 ], [ -2.24479, 53.48624 ], [ -2.2448, 53.48625 ], [ -2.24481, 53.48627 ], [ -2.24482, 53.48628 ], [ -2.24484, 53.4863 ], [ -2.24488, 53.48632 ], [ -2.2448755, 53.4863228 ], [ -2.24482, 53.48634 ], [ -2.24477, 53.48637 ], [ -2.24477, 53.4864 ], [ -2.2448, 53.48643 ], [ -2.24479, 53.48659 ], [ -2.24477, 53.48681 ], [ -2.24477, 53.48686 ], [ -2.24476, 53.48694 ], [ -2.24476, 53.48699 ], [ -2.24476, 53.48702 ], [ -2.24479, 53.48709 ], [ -2.24483, 53.48715 ], [ -2.24492, 53.48729 ], [ -2.24509, 53.48752 ], [ -2.24523, 53.48769 ], [ -2.24529, 53.48781 ], [ -2.24537, 53.48793 ], [ -2.24542, 53.48802 ], [ -2.24544, 53.48811 ], [ -2.24545, 53.48818 ], [ -2.24546, 53.48822 ], [ -2.24557, 53.48838 ], [ -2.24563, 53.48844 ], [ -2.24574, 53.48852 ], [ -2.2458, 53.48858 ], [ -2.24596, 53.48875 ], [ -2.24607, 53.48888 ], [ -2.24611, 53.48893 ], [ -2.24614, 53.48895 ], [ -2.24633, 53.48915 ], [ -2.24638, 53.48921 ], [ -2.24643, 53.48928 ], [ -2.24646, 53.48933 ], [ -2.24661, 53.48958 ], [ -2.24665, 53.48963 ], [ -2.24672, 53.48973 ], [ -2.24674, 53.48975 ], [ -2.24679, 53.48982 ], [ -2.24707, 53.49021 ], [ -2.24725, 53.49047 ], [ -2.2473, 53.49053 ], [ -2.24735, 53.49059 ], [ -2.24748, 53.49072 ], [ -2.2476, 53.49085 ], [ -2.24769, 53.49092 ], [ -2.24781, 53.49104 ], [ -2.24815, 53.49137 ], [ -2.24822, 53.49145 ], [ -2.2483, 53.49154 ], [ -2.24839, 53.49164 ], [ -2.24847, 53.49173 ], [ -2.24856, 53.49184 ], [ -2.24873, 53.49204 ], [ -2.24877, 53.4921 ], [ -2.24887, 53.49221 ], [ -2.24899, 53.49235 ], [ -2.24904, 53.49242 ], [ -2.24914, 53.49252 ], [ -2.24946, 53.4929 ], [ -2.24952, 53.49297 ], [ -2.24955, 53.493 ], [ -2.24963, 53.49309 ], [ -2.24974, 53.49321 ], [ -2.24981, 53.4933 ], [ -2.24991, 53.49342 ], [ -2.25007, 53.4936 ], [ -2.25025, 53.49379 ], [ -2.25038, 53.49393 ], [ -2.2504, 53.49396 ], [ -2.25048, 53.49406 ], [ -2.25065, 53.49426 ], [ -2.2507, 53.49432 ], [ -2.2508, 53.49445 ], [ -2.2511, 53.4948 ], [ -2.25126, 53.49499 ], [ -2.25161, 53.49532 ], [ -2.25176, 53.49547 ], [ -2.25181, 53.49552 ], [ -2.2519, 53.4956 ], [ -2.25217, 53.49588 ], [ -2.2524, 53.49611 ], [ -2.2525, 53.49622 ], [ -2.25265, 53.49637 ], [ -2.2528, 53.49653 ], [ -2.25293, 53.49667 ], [ -2.25323, 53.497 ], [ -2.25353, 53.49734 ], [ -2.25365, 53.49746 ], [ -2.25381, 53.49762 ], [ -2.25415, 53.49797 ], [ -2.25433, 53.49816 ], [ -2.25441, 53.49825 ], [ -2.25449, 53.49833 ], [ -2.25456, 53.4984 ], [ -2.25482, 53.49868 ], [ -2.25499, 53.49886 ], [ -2.25508, 53.49894 ], [ -2.25521, 53.49908 ], [ -2.25535, 53.49921 ], [ -2.25569, 53.49958 ], [ -2.2559, 53.4998 ], [ -2.25611, 53.50004 ], [ -2.25638, 53.50033 ], [ -2.25684, 53.50087 ], [ -2.25713, 53.50116 ], [ -2.25719, 53.50123 ], [ -2.25729, 53.50134 ], [ -2.25749, 53.50157 ], [ -2.25779, 53.50188 ], [ -2.25796, 53.50206 ], [ -2.25811, 53.5022 ], [ -2.25824, 53.50234 ], [ -2.25832, 53.50244 ], [ -2.25837, 53.50252 ], [ -2.25841, 53.50257 ], [ -2.25848, 53.50267 ], [ -2.2585, 53.5027 ], [ -2.25852, 53.50273 ], [ -2.25867, 53.50295 ], [ -2.25869, 53.50298 ], [ -2.25877, 53.50311 ], [ -2.25886, 53.50326 ], [ -2.25901, 53.5035 ], [ -2.25905, 53.50356 ], [ -2.25926, 53.5039 ], [ -2.25946, 53.50422 ], [ -2.25953, 53.50434 ], [ -2.25968, 53.5046 ], [ -2.25973, 53.50468 ], [ -2.25987, 53.50491 ], [ -2.26004, 53.50519 ], [ -2.26007, 53.50525 ], [ -2.26009, 53.50528 ], [ -2.26016, 53.5054 ], [ -2.26024, 53.50553 ], [ -2.26053, 53.50599 ], [ -2.26056, 53.50604 ], [ -2.26078, 53.50641 ], [ -2.26097, 53.50674 ], [ -2.26096, 53.50678 ], [ -2.26095, 53.50688 ], [ -2.26104, 53.50705 ], [ -2.26116, 53.50727 ], [ -2.26124, 53.50739 ], [ -2.26143, 53.50769 ], [ -2.26156, 53.50783 ], [ -2.26165, 53.50788 ], [ -2.26172, 53.50797 ], [ -2.26178, 53.50804 ], [ -2.2619, 53.50823 ], [ -2.26197, 53.50835 ], [ -2.26219, 53.50869 ], [ -2.26235, 53.50895 ], [ -2.2625, 53.5092 ], [ -2.26256, 53.50929 ], [ -2.26262, 53.5094 ], [ -2.26269, 53.50955 ], [ -2.26275, 53.50967 ], [ -2.26284, 53.50992 ], [ -2.26294, 53.51022 ], [ -2.26301, 53.51044 ], [ -2.26316, 53.51092 ], [ -2.26325, 53.51125 ], [ -2.26326, 53.51128 ], [ -2.26331, 53.51144 ], [ -2.26334, 53.51153 ], [ -2.26342, 53.51173 ], [ -2.26344, 53.51178 ], [ -2.26352, 53.51189 ], [ -2.26364, 53.51202 ], [ -2.26374, 53.51211 ], [ -2.26385, 53.5122 ], [ -2.26395, 53.51227 ], [ -2.26407, 53.51234 ], [ -2.26411, 53.51237 ], [ -2.26415, 53.51239 ], [ -2.26448, 53.51256 ], [ -2.26451, 53.51257 ], [ -2.26459, 53.51261 ], [ -2.2648, 53.51272 ], [ -2.265, 53.51282 ], [ -2.26508, 53.51286 ], [ -2.26547, 53.51305 ], [ -2.2657, 53.51316 ], [ -2.26576, 53.51319 ], [ -2.26578, 53.5132 ], [ -2.26583, 53.51322 ], [ -2.26607, 53.51333 ], [ -2.26641, 53.51351 ], [ -2.26684, 53.51372 ], [ -2.26698, 53.51379 ], [ -2.26714, 53.51387 ], [ -2.26717, 53.51388 ], [ -2.2674, 53.51399 ], [ -2.26764, 53.51412 ], [ -2.26779, 53.51419 ], [ -2.26808, 53.51436 ], [ -2.26832, 53.5145 ], [ -2.26836, 53.51453 ], [ -2.26857, 53.51469 ], [ -2.26868, 53.51478 ], [ -2.26904, 53.51506 ], [ -2.26928, 53.51525 ], [ -2.26944, 53.51539 ], [ -2.26959, 53.51554 ], [ -2.26966, 53.51559 ], [ -2.27011, 53.51597 ], [ -2.27045, 53.51624 ], [ -2.27056, 53.51633 ], [ -2.2708, 53.51655 ], [ -2.27089, 53.51664 ], [ -2.271, 53.51677 ], [ -2.27112, 53.5169 ], [ -2.27119, 53.51699 ], [ -2.27125, 53.51706 ], [ -2.27135, 53.51724 ], [ -2.27142, 53.51742 ], [ -2.27152, 53.51766 ], [ -2.27156, 53.51779 ], [ -2.27161, 53.51795 ], [ -2.27167, 53.51819 ], [ -2.27187, 53.51881 ], [ -2.27201, 53.51916 ], [ -2.27204, 53.51922 ], [ -2.27219, 53.5196 ], [ -2.27234, 53.5199 ], [ -2.27249, 53.52012 ], [ -2.27257, 53.52022 ], [ -2.2727, 53.52038 ], [ -2.27315, 53.52079 ], [ -2.27352, 53.52107 ], [ -2.27405, 53.52145 ], [ -2.27428, 53.52162 ], [ -2.27445, 53.52175 ], [ -2.27453, 53.52183 ], [ -2.27468, 53.52196 ], [ -2.27471, 53.52198 ], [ -2.27486, 53.5221 ], [ -2.2748625, 53.5220969 ], [ -2.27492, 53.52221 ], [ -2.27497, 53.52228 ], [ -2.2753, 53.52272 ], [ -2.27542, 53.52282 ], [ -2.27552, 53.52291 ], [ -2.27596, 53.52334 ], [ -2.27626, 53.52363 ], [ -2.27651, 53.52385 ], [ -2.27655, 53.52389 ], [ -2.27666, 53.524 ], [ -2.2769, 53.52422 ], [ -2.27701, 53.52432 ], [ -2.27707, 53.52438 ], [ -2.27733, 53.52463 ], [ -2.27742, 53.52473 ], [ -2.27748, 53.52478 ], [ -2.27751, 53.5248 ], [ -2.27761, 53.52483 ], [ -2.27767, 53.52488 ], [ -2.27777, 53.52499 ], [ -2.2782, 53.52546 ], [ -2.27882, 53.52611 ], [ -2.27923, 53.52654 ], [ -2.27941, 53.52673 ], [ -2.27955, 53.52689 ], [ -2.27963, 53.52697 ], [ -2.2797, 53.52705 ], [ -2.28, 53.52736 ], [ -2.2802, 53.52757 ], [ -2.28028, 53.52765 ], [ -2.28052, 53.52789 ], [ -2.28054, 53.52791 ], [ -2.28063, 53.528 ], [ -2.28075, 53.52812 ], [ -2.28096, 53.52833 ], [ -2.28123, 53.52861 ], [ -2.28151, 53.52893 ], [ -2.28158, 53.529 ], [ -2.2817, 53.52912 ], [ -2.28188, 53.52931 ], [ -2.28224, 53.52969 ], [ -2.28242, 53.52987 ], [ -2.28254, 53.52999 ], [ -2.28261, 53.53006 ], [ -2.28271, 53.53016 ], [ -2.28279, 53.53026 ], [ -2.28288, 53.53035 ], [ -2.28292, 53.53038 ], [ -2.28301, 53.53047 ], [ -2.28322, 53.53068 ], [ -2.2833, 53.53077 ], [ -2.2834, 53.53087 ], [ -2.28352, 53.53101 ], [ -2.28361, 53.53111 ], [ -2.28376, 53.53127 ], [ -2.28385, 53.53133 ], [ -2.28399, 53.53147 ], [ -2.28407, 53.53154 ], [ -2.28413, 53.53161 ], [ -2.28416, 53.53165 ], [ -2.28444, 53.53195 ], [ -2.28459, 53.53212 ], [ -2.28461, 53.53213 ], [ -2.28479, 53.53232 ], [ -2.28492, 53.53246 ], [ -2.28513, 53.53268 ], [ -2.28523, 53.53279 ], [ -2.28534, 53.5329 ], [ -2.28541, 53.53296 ], [ -2.28555, 53.53314 ], [ -2.28567, 53.53329 ], [ -2.28589, 53.53363 ], [ -2.28615, 53.53398 ], [ -2.28623, 53.53411 ], [ -2.28638, 53.53434 ], [ -2.28645, 53.53445 ], [ -2.28668, 53.53477 ], [ -2.28687, 53.53504 ], [ -2.28699, 53.53521 ], [ -2.28703, 53.53538 ], [ -2.28724, 53.53572 ], [ -2.28739, 53.53595 ], [ -2.28764, 53.53631 ], [ -2.28773, 53.53645 ], [ -2.28779, 53.53653 ], [ -2.28784, 53.53662 ], [ -2.28807, 53.53699 ], [ -2.28815, 53.53712 ], [ -2.28822, 53.53724 ], [ -2.28825, 53.53732 ], [ -2.28827, 53.53738 ], [ -2.28831, 53.53747 ], [ -2.28836, 53.5377 ], [ -2.28836, 53.53776 ], [ -2.28836, 53.53782 ], [ -2.28837, 53.53788 ], [ -2.28836, 53.53791 ], [ -2.28836, 53.53792 ], [ -2.28832, 53.53803 ], [ -2.28829, 53.53814 ], [ -2.28823, 53.53826 ], [ -2.28815, 53.53839 ], [ -2.28814, 53.53851 ], [ -2.28807, 53.53859 ], [ -2.28805, 53.53863 ], [ -2.28801, 53.53869 ], [ -2.28798, 53.53878 ], [ -2.28797, 53.53882 ], [ -2.28797, 53.53887 ], [ -2.288, 53.53894 ], [ -2.28804, 53.53901 ], [ -2.28811, 53.53909 ], [ -2.28814, 53.53911 ], [ -2.28825, 53.5392 ], [ -2.28832, 53.53926 ], [ -2.28838, 53.5393 ], [ -2.28851, 53.53942 ], [ -2.28859, 53.53947 ], [ -2.2887, 53.53951 ], [ -2.28884, 53.53955 ], [ -2.28894, 53.53956 ], [ -2.28907, 53.53957 ], [ -2.2892, 53.53963 ], [ -2.28927, 53.53969 ], [ -2.28931, 53.53972 ], [ -2.28933, 53.53975 ], [ -2.28935, 53.53978 ], [ -2.28937, 53.53982 ], [ -2.28938, 53.53987 ], [ -2.2894, 53.53999 ], [ -2.28947, 53.54018 ], [ -2.28973, 53.54094 ], [ -2.28993, 53.54152 ], [ -2.29004, 53.54186 ], [ -2.29006, 53.54194 ], [ -2.29012, 53.54213 ], [ -2.2902, 53.54235 ], [ -2.29027, 53.54255 ], [ -2.29045, 53.54314 ], [ -2.29058, 53.54355 ], [ -2.29063, 53.54372 ], [ -2.29071, 53.54393 ], [ -2.29085, 53.54434 ], [ -2.29087, 53.54437 ], [ -2.29089, 53.54442 ], [ -2.29096, 53.54458 ], [ -2.29098, 53.54461 ], [ -2.29103, 53.54471 ], [ -2.29107, 53.54479 ], [ -2.29117, 53.54496 ], [ -2.29122, 53.54503 ], [ -2.29127, 53.5451 ], [ -2.29132, 53.54518 ], [ -2.29147, 53.5454 ], [ -2.2915, 53.54541 ], [ -2.29153, 53.54542 ], [ -2.29159, 53.54545 ], [ -2.29167, 53.54557 ], [ -2.29181, 53.54573 ], [ -2.29186, 53.54581 ], [ -2.29208, 53.5461 ], [ -2.29217, 53.54623 ], [ -2.29223, 53.5463 ], [ -2.29244, 53.54657 ], [ -2.29251, 53.54665 ], [ -2.29276, 53.54696 ], [ -2.29284, 53.54706 ], [ -2.29295, 53.54719 ], [ -2.29304, 53.54732 ], [ -2.29313, 53.54745 ], [ -2.29348, 53.5478 ], [ -2.29354, 53.54789 ], [ -2.29385, 53.54821 ], [ -2.29396, 53.54833 ], [ -2.29409, 53.54849 ], [ -2.29418, 53.54861 ], [ -2.29425, 53.5487 ], [ -2.2943, 53.54876 ], [ -2.29435, 53.54884 ], [ -2.29437, 53.54886 ], [ -2.29441, 53.54892 ], [ -2.29445, 53.54899 ], [ -2.29451, 53.54907 ], [ -2.29478, 53.54948 ], [ -2.29485, 53.54955 ], [ -2.29487, 53.54958 ], [ -2.29495, 53.5497 ], [ -2.29514, 53.55002 ], [ -2.2953, 53.55029 ], [ -2.29534, 53.55033 ], [ -2.29561, 53.55078 ], [ -2.29568, 53.55088 ], [ -2.29579, 53.55108 ], [ -2.29585, 53.55118 ], [ -2.29588, 53.55122 ], [ -2.296, 53.55152 ], [ -2.29604, 53.55162 ], [ -2.29611, 53.55178 ], [ -2.29615, 53.55184 ], [ -2.29622, 53.55195 ], [ -2.29626, 53.55201 ], [ -2.29639, 53.55217 ], [ -2.29644, 53.55225 ], [ -2.29656, 53.55241 ], [ -2.29662, 53.55249 ], [ -2.2968, 53.55271 ], [ -2.29691, 53.55285 ], [ -2.29697, 53.55292 ], [ -2.29702, 53.55299 ], [ -2.29707, 53.55308 ], [ -2.29711, 53.55313 ], [ -2.29714, 53.55324 ], [ -2.29716, 53.5533 ], [ -2.29717, 53.55336 ], [ -2.29717, 53.55341 ], [ -2.29716, 53.55345 ], [ -2.29715, 53.55349 ], [ -2.29714, 53.55357 ], [ -2.29709, 53.5537 ], [ -2.29707, 53.55373 ], [ -2.29698, 53.55393 ], [ -2.29689, 53.5541 ], [ -2.29683, 53.55419 ], [ -2.29676, 53.55432 ], [ -2.29659, 53.55466 ], [ -2.29655, 53.55472 ], [ -2.29642, 53.55494 ], [ -2.29641, 53.55497 ], [ -2.29628, 53.55515 ], [ -2.29623, 53.55522 ], [ -2.29597, 53.55563 ], [ -2.29593, 53.55569 ], [ -2.29591, 53.55574 ], [ -2.29563, 53.5562 ], [ -2.29557, 53.5563 ], [ -2.29546, 53.55646 ], [ -2.29536, 53.55663 ], [ -2.29505, 53.55717 ], [ -2.29494, 53.55735 ], [ -2.29458, 53.55798 ], [ -2.29447, 53.55815 ], [ -2.29445, 53.55819 ], [ -2.29433, 53.5584 ], [ -2.29432, 53.55842 ], [ -2.29422, 53.55859 ], [ -2.2942, 53.55863 ], [ -2.29415, 53.55871 ], [ -2.29401, 53.55893 ], [ -2.29395, 53.55902 ], [ -2.29377, 53.55933 ], [ -2.29319, 53.56034 ], [ -2.2931, 53.56049 ], [ -2.29307, 53.56054 ], [ -2.29303, 53.56061 ], [ -2.29278, 53.56106 ], [ -2.29271, 53.56117 ], [ -2.29263, 53.56131 ], [ -2.29255, 53.56142 ], [ -2.29251, 53.5615 ], [ -2.29242, 53.56164 ], [ -2.29235, 53.56175 ], [ -2.29225, 53.56189 ], [ -2.29211, 53.56208 ], [ -2.29207, 53.56216 ], [ -2.29201, 53.56224 ], [ -2.29195, 53.56231 ], [ -2.29171, 53.56261 ], [ -2.29168, 53.56265 ], [ -2.29157, 53.56279 ], [ -2.29141, 53.56296 ], [ -2.29116, 53.56327 ], [ -2.29108, 53.5634 ], [ -2.29107, 53.56342 ], [ -2.29095, 53.56364 ], [ -2.29093, 53.56368 ], [ -2.29088, 53.5638 ], [ -2.29087, 53.56384 ], [ -2.29082, 53.56395 ], [ -2.2908, 53.56403 ], [ -2.29078, 53.56411 ], [ -2.29077, 53.56419 ], [ -2.29076, 53.56425 ], [ -2.29077, 53.56435 ], [ -2.29078, 53.56443 ], [ -2.2908, 53.56453 ], [ -2.29082, 53.5646 ], [ -2.29086, 53.56471 ], [ -2.29091, 53.56482 ], [ -2.29092, 53.56485 ], [ -2.29096, 53.56494 ], [ -2.29108, 53.56511 ], [ -2.2912, 53.56527 ], [ -2.29135, 53.56544 ], [ -2.29146, 53.56556 ], [ -2.29158, 53.56568 ], [ -2.29173, 53.56584 ], [ -2.29195, 53.56609 ], [ -2.29202, 53.56617 ], [ -2.29209, 53.56625 ], [ -2.29217, 53.56636 ], [ -2.29221, 53.56642 ], [ -2.29233, 53.5666 ], [ -2.29255, 53.56691 ], [ -2.2929, 53.56733 ], [ -2.29297, 53.56742 ], [ -2.29308, 53.56759 ], [ -2.29312, 53.56766 ], [ -2.29319, 53.56781 ], [ -2.29324, 53.56795 ], [ -2.29332, 53.56815 ], [ -2.29335, 53.56826 ], [ -2.29337, 53.56832 ], [ -2.29341, 53.5684 ], [ -2.29346, 53.56852 ], [ -2.29367, 53.569 ], [ -2.2937, 53.56908 ], [ -2.29375, 53.56923 ], [ -2.2938, 53.56936 ], [ -2.29381, 53.5694 ], [ -2.29383, 53.56946 ], [ -2.29385, 53.5696 ], [ -2.29397, 53.56991 ], [ -2.29402, 53.57004 ], [ -2.29408, 53.57021 ], [ -2.29415, 53.57038 ], [ -2.29422, 53.57058 ], [ -2.29423, 53.57061 ], [ -2.29425, 53.57065 ], [ -2.2943, 53.57081 ], [ -2.29434, 53.57089 ], [ -2.29438, 53.57097 ], [ -2.2944, 53.57105 ], [ -2.29483, 53.57216 ], [ -2.29491, 53.57232 ], [ -2.29497, 53.57251 ], [ -2.29511, 53.57293 ], [ -2.29526, 53.57332 ], [ -2.29534, 53.5735 ], [ -2.29534, 53.57351 ], [ -2.29536, 53.57356 ], [ -2.29538, 53.57361 ], [ -2.29547, 53.57383 ], [ -2.29551, 53.57395 ], [ -2.29561, 53.57424 ], [ -2.29567, 53.57438 ], [ -2.29587, 53.57493 ], [ -2.29594, 53.57512 ], [ -2.29606, 53.57544 ], [ -2.29622, 53.57583 ], [ -2.29653, 53.5767 ], [ -2.29655, 53.57677 ], [ -2.29658, 53.57687 ], [ -2.29665, 53.57712 ], [ -2.29668, 53.57725 ], [ -2.29671, 53.57736 ], [ -2.29676, 53.57757 ], [ -2.29678, 53.57766 ], [ -2.29695, 53.57834 ], [ -2.29696, 53.57842 ], [ -2.29698, 53.57851 ], [ -2.297, 53.57859 ], [ -2.29717, 53.57921 ], [ -2.2972, 53.57937 ], [ -2.29731, 53.57971 ], [ -2.29744, 53.58008 ], [ -2.29749, 53.58025 ], [ -2.29756, 53.58045 ], [ -2.29769, 53.58081 ], [ -2.29778, 53.58105 ], [ -2.29785, 53.58123 ], [ -2.29798, 53.58151 ], [ -2.29802, 53.5816 ], [ -2.29809, 53.58175 ], [ -2.29817, 53.5819 ], [ -2.29822, 53.58199 ], [ -2.29824, 53.582 ], [ -2.29825, 53.58202 ], [ -2.29826, 53.58204 ], [ -2.29828, 53.58207 ], [ -2.29831, 53.58212 ], [ -2.29835, 53.5822 ], [ -2.29844, 53.58235 ], [ -2.29857, 53.58246 ], [ -2.29869, 53.58267 ], [ -2.29891, 53.58309 ], [ -2.29907, 53.58342 ], [ -2.29905, 53.58349 ], [ -2.29909, 53.58359 ], [ -2.29916, 53.58375 ], [ -2.2992, 53.58386 ], [ -2.29937, 53.5842 ], [ -2.29938, 53.58423 ], [ -2.29961, 53.58468 ], [ -2.29976, 53.58497 ], [ -2.29988, 53.58521 ], [ -2.29991, 53.58527 ], [ -2.29994, 53.58532 ], [ -2.30015, 53.58568 ], [ -2.30024, 53.58587 ], [ -2.30031, 53.58603 ], [ -2.30038, 53.58616 ], [ -2.30041, 53.58622 ], [ -2.30045, 53.58629 ], [ -2.30054, 53.58648 ], [ -2.30071, 53.5868 ], [ -2.30074, 53.58687 ], [ -2.30079, 53.58697 ], [ -2.30095, 53.58727 ], [ -2.30103, 53.58742 ], [ -2.30114, 53.58763 ], [ -2.30115, 53.58766 ], [ -2.30116, 53.58768 ], [ -2.30122, 53.5878 ], [ -2.3013, 53.58794 ], [ -2.30135, 53.58805 ], [ -2.30137, 53.58811 ], [ -2.30139, 53.58825 ], [ -2.30141, 53.58835 ], [ -2.3014, 53.58844 ], [ -2.30139, 53.58863 ], [ -2.30137, 53.5888 ], [ -2.3013, 53.58902 ], [ -2.3012, 53.58933 ], [ -2.30119, 53.58936 ], [ -2.30104, 53.58965 ], [ -2.30091, 53.58994 ], [ -2.30086, 53.59007 ], [ -2.3008, 53.59018 ], [ -2.30076, 53.59026 ], [ -2.30074, 53.59034 ], [ -2.30073, 53.59042 ], [ -2.30072, 53.59049 ], [ -2.30074, 53.59057 ], [ -2.30076, 53.59063 ], [ -2.30077, 53.59069 ], [ -2.3008, 53.59072 ], [ -2.30085, 53.59077 ], [ -2.3008458, 53.5907735 ], [ -2.3009, 53.59083 ], [ -2.30099, 53.5909 ], [ -2.30108, 53.59097 ], [ -2.30121, 53.59105 ], [ -2.30126, 53.59108 ], [ -2.30133, 53.59112 ], [ -2.3017, 53.59132 ], [ -2.3019, 53.59141 ], [ -2.30212, 53.59151 ], [ -2.30229, 53.59159 ], [ -2.30241, 53.59166 ], [ -2.30255, 53.59173 ], [ -2.3028, 53.59187 ], [ -2.30298, 53.59197 ], [ -2.30315, 53.59208 ], [ -2.30332, 53.59218 ], [ -2.30347, 53.59229 ], [ -2.30362, 53.59241 ], [ -2.3037, 53.59247 ], [ -2.30377, 53.59254 ], [ -2.30385, 53.59264 ], [ -2.30386, 53.59265 ], [ -2.30392, 53.59273 ], [ -2.30398, 53.59281 ], [ -2.30402, 53.5929 ], [ -2.30405, 53.59297 ], [ -2.30405, 53.59298 ], [ -2.30407, 53.59305 ], [ -2.30408, 53.59312 ], [ -2.3041, 53.59324 ], [ -2.30408, 53.59337 ], [ -2.30407, 53.59344 ], [ -2.30406, 53.59351 ], [ -2.30402, 53.5936 ], [ -2.30398, 53.59371 ], [ -2.30393, 53.59386 ], [ -2.30388, 53.59399 ], [ -2.30386, 53.59405 ], [ -2.30386, 53.59411 ], [ -2.30386, 53.59417 ], [ -2.30387, 53.59424 ], [ -2.3039, 53.59431 ], [ -2.30395, 53.59438 ], [ -2.30398, 53.59441 ], [ -2.30402, 53.59444 ], [ -2.30407, 53.59447 ], [ -2.30417, 53.59453 ], [ -2.30425, 53.59456 ], [ -2.30433, 53.59459 ], [ -2.3045, 53.59465 ], [ -2.30458, 53.59468 ], [ -2.30476, 53.59476 ], [ -2.30488, 53.59478 ], [ -2.3051, 53.59482 ], [ -2.30533, 53.59486 ], [ -2.30543, 53.59488 ], [ -2.30553, 53.59489 ], [ -2.30564, 53.5949 ], [ -2.30575, 53.59491 ], [ -2.30593, 53.59492 ], [ -2.30614, 53.59492 ], [ -2.30632, 53.59492 ], [ -2.30633, 53.59492 ], [ -2.30643, 53.59492 ], [ -2.30653, 53.59491 ], [ -2.30673, 53.5949 ], [ -2.30693, 53.59488 ], [ -2.30712, 53.59486 ], [ -2.30737, 53.59483 ], [ -2.30762, 53.5948 ], [ -2.30779, 53.59477 ], [ -2.30794, 53.59476 ], [ -2.3079389, 53.594755 ], [ -2.30807, 53.59475 ], [ -2.30821, 53.59476 ], [ -2.30823, 53.59476 ], [ -2.30836, 53.59477 ], [ -2.3085, 53.59479 ], [ -2.30862, 53.59482 ], [ -2.30875, 53.59486 ], [ -2.30886, 53.59491 ], [ -2.30892, 53.59493 ], [ -2.30904, 53.59501 ], [ -2.3091, 53.59505 ], [ -2.30916, 53.5951 ], [ -2.30922, 53.59515 ], [ -2.30929, 53.59524 ], [ -2.30933, 53.59539 ], [ -2.30935, 53.59548 ], [ -2.30935, 53.59562 ], [ -2.30932, 53.59578 ], [ -2.30925, 53.59598 ], [ -2.30917, 53.59617 ], [ -2.30914, 53.59623 ], [ -2.3091, 53.59632 ], [ -2.30905, 53.59643 ], [ -2.30904, 53.59645 ], [ -2.30898, 53.59655 ], [ -2.30896, 53.59663 ], [ -2.30896, 53.59668 ], [ -2.30896, 53.59676 ], [ -2.30888, 53.5969 ], [ -2.30881, 53.59704 ], [ -2.30871, 53.59729 ], [ -2.30869, 53.59737 ], [ -2.30868, 53.59747 ], [ -2.30866, 53.59762 ], [ -2.3086619, 53.5976179 ], [ -2.30866, 53.59767 ], [ -2.30865, 53.59778 ], [ -2.30864, 53.59786 ], [ -2.30863, 53.59803 ], [ -2.30862, 53.59808 ], [ -2.30862, 53.59813 ], [ -2.30859, 53.59838 ], [ -2.30857, 53.59865 ], [ -2.30857, 53.59876 ], [ -2.30859, 53.59897 ], [ -2.30863, 53.59917 ], [ -2.30865, 53.59922 ], [ -2.30866, 53.59927 ], [ -2.30871, 53.59937 ], [ -2.30885, 53.59956 ], [ -2.3089, 53.59962 ], [ -2.30927, 53.60004 ], [ -2.30934, 53.60013 ], [ -2.30942, 53.6002 ], [ -2.30951, 53.60028 ], [ -2.30954, 53.60032 ], [ -2.30957, 53.60038 ], [ -2.30963, 53.6005 ], [ -2.3097, 53.60064 ], [ -2.30971, 53.60066 ], [ -2.30974, 53.60076 ], [ -2.30979, 53.60089 ], [ -2.31005, 53.60163 ], [ -2.31006, 53.60169 ], [ -2.31008, 53.60173 ], [ -2.31012, 53.60184 ], [ -2.31018, 53.60189 ], [ -2.31021, 53.60197 ], [ -2.31027, 53.60211 ], [ -2.31052, 53.60263 ], [ -2.31076, 53.6031 ], [ -2.31094, 53.60344 ], [ -2.31097, 53.60351 ], [ -2.31116, 53.60392 ], [ -2.31119, 53.6041 ], [ -2.31121, 53.6042 ], [ -2.3113, 53.60455 ], [ -2.31132, 53.60469 ], [ -2.31134, 53.60482 ], [ -2.31142, 53.60516 ], [ -2.31148, 53.60537 ], [ -2.31161, 53.60576 ], [ -2.31173, 53.60615 ], [ -2.31178, 53.6063 ], [ -2.31187, 53.60653 ], [ -2.31189, 53.60659 ], [ -2.31217, 53.60729 ], [ -2.31245, 53.60787 ], [ -2.31256, 53.60809 ], [ -2.31276, 53.60832 ], [ -2.31282, 53.60836 ], [ -2.31291, 53.60844 ], [ -2.31296, 53.60848 ], [ -2.31338, 53.6088 ], [ -2.31426, 53.60941 ], [ -2.3144, 53.6095 ], [ -2.3147, 53.6097 ], [ -2.31489, 53.6098 ], [ -2.31515, 53.60993 ], [ -2.31522, 53.60997 ], [ -2.31565, 53.61019 ], [ -2.31591, 53.61031 ], [ -2.3162, 53.61046 ], [ -2.31657, 53.61068 ], [ -2.31685, 53.61084 ], [ -2.31696, 53.61091 ], [ -2.31778, 53.61148 ], [ -2.31789, 53.61155 ], [ -2.31812, 53.61175 ], [ -2.3183, 53.61197 ], [ -2.31874, 53.61261 ], [ -2.31912, 53.61329 ], [ -2.31942, 53.61386 ], [ -2.3198, 53.61454 ], [ -2.3202, 53.61522 ], [ -2.32034, 53.61548 ], [ -2.32042, 53.61562 ], [ -2.32047, 53.61572 ], [ -2.3207, 53.61612 ], [ -2.32091, 53.61652 ], [ -2.32102, 53.61665 ], [ -2.32105, 53.61669 ], [ -2.32127, 53.61688 ], [ -2.32143, 53.61703 ], [ -2.32159, 53.61718 ], [ -2.32187, 53.61744 ], [ -2.32195, 53.61752 ], [ -2.32203, 53.61759 ], [ -2.32208, 53.61763 ], [ -2.32218, 53.61773 ], [ -2.32229, 53.61783 ], [ -2.32236, 53.6179 ], [ -2.32244, 53.61797 ], [ -2.32255, 53.61806 ], [ -2.32277, 53.61818 ], [ -2.32299, 53.61831 ], [ -2.32314, 53.61839 ], [ -2.32324, 53.61844 ], [ -2.32331, 53.61848 ], [ -2.32349, 53.61858 ], [ -2.32369, 53.61868 ], [ -2.32381, 53.61874 ], [ -2.32391, 53.61878 ], [ -2.324, 53.61882 ], [ -2.32406, 53.61886 ], [ -2.32409, 53.61888 ], [ -2.32418, 53.61893 ], [ -2.32421, 53.61896 ], [ -2.32423, 53.61898 ], [ -2.32454, 53.61916 ], [ -2.3245433, 53.6191589 ], [ -2.32448, 53.6192 ], [ -2.32447, 53.61922 ], [ -2.32447, 53.61924 ], [ -2.32449, 53.61927 ], [ -2.32452, 53.61932 ], [ -2.32454, 53.61938 ], [ -2.32459, 53.61946 ], [ -2.32466, 53.61956 ], [ -2.32477, 53.61972 ], [ -2.32502, 53.62005 ], [ -2.32533, 53.62048 ], [ -2.32536, 53.62052 ], [ -2.32541, 53.62058 ], [ -2.32552, 53.62074 ], [ -2.3257, 53.62098 ], [ -2.32593, 53.6213 ], [ -2.32608, 53.6215 ], [ -2.32609, 53.62151 ], [ -2.32616, 53.62161 ], [ -2.32619, 53.62164 ], [ -2.32624, 53.62166 ], [ -2.3263, 53.62177 ], [ -2.32638, 53.62188 ], [ -2.32643, 53.62196 ], [ -2.32664, 53.62226 ], [ -2.3268, 53.62245 ], [ -2.32692, 53.62261 ], [ -2.32715, 53.62294 ], [ -2.32727, 53.62311 ], [ -2.32734, 53.62321 ], [ -2.32776, 53.62379 ], [ -2.32786, 53.62393 ], [ -2.32799, 53.62411 ], [ -2.32801, 53.62414 ], [ -2.32811, 53.62428 ], [ -2.32818, 53.62438 ], [ -2.32823, 53.62445 ], [ -2.32841, 53.62468 ], [ -2.32862, 53.625 ], [ -2.32884, 53.62532 ], [ -2.32894, 53.62545 ], [ -2.32912, 53.62568 ], [ -2.32923, 53.62583 ], [ -2.32928, 53.62589 ], [ -2.32945, 53.62613 ], [ -2.33025, 53.62723 ], [ -2.33037, 53.6274 ], [ -2.3304, 53.62743 ], [ -2.33057, 53.62766 ], [ -2.33086, 53.62806 ], [ -2.33098, 53.62822 ], [ -2.33143, 53.62884 ], [ -2.33194, 53.62958 ], [ -2.33245, 53.63029 ], [ -2.33291, 53.63096 ], [ -2.33344, 53.63171 ], [ -2.33361, 53.63192 ], [ -2.3338, 53.63217 ], [ -2.33395, 53.63242 ], [ -2.33396, 53.63244 ], [ -2.33404, 53.63259 ], [ -2.33413, 53.63276 ], [ -2.33413, 53.63277 ], [ -2.3342, 53.63294 ], [ -2.33427, 53.63314 ], [ -2.33429, 53.63318 ], [ -2.33432, 53.63324 ], [ -2.33435, 53.63328 ], [ -2.33438, 53.63332 ], [ -2.33443, 53.63335 ], [ -2.3345, 53.63339 ], [ -2.33459, 53.63342 ], [ -2.3345926, 53.6334212 ], [ -2.33451, 53.63354 ], [ -2.33434, 53.63369 ], [ -2.3342, 53.63383 ], [ -2.33415, 53.63388 ], [ -2.33401, 53.63401 ], [ -2.3340085, 53.6340063 ], [ -2.33407, 53.63404 ], [ -2.33408, 53.63409 ], [ -2.33408, 53.63415 ], [ -2.33406, 53.63421 ], [ -2.33396, 53.63448 ], [ -2.33395, 53.63453 ], [ -2.33394, 53.63458 ], [ -2.3339, 53.63476 ], [ -2.33389, 53.6348 ], [ -2.33387, 53.63489 ], [ -2.33387, 53.63496 ], [ -2.33386, 53.63498 ], [ -2.33387, 53.63506 ], [ -2.33387, 53.63509 ], [ -2.33389, 53.63529 ], [ -2.3339, 53.63536 ], [ -2.33398, 53.63594 ], [ -2.33398, 53.63603 ], [ -2.33398, 53.63621 ], [ -2.33392, 53.63641 ], [ -2.3338, 53.63667 ], [ -2.33361, 53.63708 ], [ -2.33347, 53.63749 ], [ -2.33346, 53.63762 ], [ -2.33344, 53.63791 ], [ -2.33348, 53.63822 ], [ -2.33349, 53.63833 ], [ -2.33349, 53.63835 ], [ -2.33347, 53.63847 ], [ -2.33343, 53.63859 ], [ -2.33334, 53.63877 ], [ -2.33313, 53.63903 ], [ -2.33303, 53.63913 ], [ -2.33299, 53.63917 ], [ -2.33273, 53.6394 ], [ -2.33269, 53.63944 ], [ -2.33257, 53.63955 ], [ -2.33256, 53.63955 ], [ -2.33246, 53.63964 ], [ -2.3324, 53.63971 ], [ -2.33239, 53.63971 ], [ -2.33236, 53.63975 ], [ -2.3323, 53.63983 ], [ -2.33226, 53.6399 ], [ -2.33224, 53.63996 ], [ -2.33221, 53.64007 ], [ -2.3322, 53.64015 ], [ -2.3322, 53.64022 ], [ -2.33221, 53.64029 ], [ -2.33224, 53.64041 ], [ -2.33227, 53.6405 ], [ -2.33229, 53.64058 ], [ -2.33234, 53.64076 ], [ -2.33239, 53.64093 ], [ -2.33239, 53.64094 ], [ -2.33252, 53.64144 ], [ -2.33253, 53.64153 ], [ -2.33254, 53.64164 ], [ -2.33254, 53.64165 ], [ -2.33255, 53.64183 ], [ -2.33259, 53.64235 ], [ -2.3326, 53.64272 ], [ -2.3326, 53.64273 ], [ -2.33261, 53.64291 ], [ -2.33262, 53.64308 ], [ -2.33262, 53.64309 ], [ -2.33263, 53.64341 ], [ -2.33263, 53.64344 ], [ -2.33263, 53.64345 ], [ -2.33262, 53.64363 ], [ -2.33262, 53.64376 ], [ -2.3326, 53.64396 ], [ -2.33254, 53.64419 ], [ -2.33235, 53.64465 ], [ -2.33216, 53.64503 ], [ -2.33212, 53.64511 ], [ -2.33207, 53.6452 ], [ -2.33201, 53.64535 ], [ -2.3319, 53.64555 ], [ -2.33185, 53.64562 ], [ -2.33174, 53.64572 ], [ -2.3316, 53.64582 ], [ -2.33156, 53.64584 ], [ -2.33151, 53.64588 ], [ -2.3314, 53.64592 ], [ -2.33133, 53.64596 ], [ -2.33132, 53.64596 ], [ -2.33122, 53.64601 ], [ -2.33092, 53.64615 ], [ -2.33065, 53.64629 ], [ -2.33046, 53.64638 ], [ -2.33024, 53.6465 ], [ -2.32988, 53.64668 ], [ -2.32978, 53.64674 ], [ -2.32914, 53.64707 ], [ -2.3283, 53.64752 ], [ -2.32825, 53.64755 ], [ -2.3282, 53.64758 ], [ -2.32801, 53.6477 ], [ -2.32791, 53.64776 ], [ -2.32789, 53.64778 ], [ -2.32785, 53.64781 ], [ -2.32771, 53.64796 ], [ -2.32755, 53.64818 ], [ -2.32753, 53.64819 ], [ -2.3275, 53.64826 ], [ -2.32747, 53.64832 ], [ -2.32746, 53.64838 ], [ -2.32745, 53.64845 ], [ -2.32747, 53.64856 ], [ -2.32748, 53.64864 ], [ -2.32749, 53.64868 ], [ -2.3275, 53.6487 ], [ -2.32752, 53.64884 ], [ -2.32756, 53.64907 ], [ -2.32758, 53.64919 ], [ -2.32761, 53.64941 ], [ -2.32766, 53.6499 ], [ -2.32768, 53.65009 ], [ -2.3277, 53.65014 ], [ -2.32776, 53.65038 ], [ -2.32776, 53.65039 ], [ -2.32777, 53.65043 ], [ -2.32781, 53.65059 ], [ -2.32789, 53.65095 ], [ -2.32796, 53.65116 ], [ -2.32798, 53.6512 ], [ -2.328, 53.65126 ], [ -2.328, 53.65127 ], [ -2.32802, 53.65131 ], [ -2.32804, 53.65135 ], [ -2.32815, 53.65151 ], [ -2.32823, 53.65163 ], [ -2.32836, 53.6518 ], [ -2.32847, 53.65193 ], [ -2.3285, 53.65196 ], [ -2.32856, 53.65204 ], [ -2.32861, 53.65209 ], [ -2.32867, 53.65218 ], [ -2.32871, 53.65226 ], [ -2.32872, 53.65241 ], [ -2.32871, 53.65257 ], [ -2.32871, 53.65262 ], [ -2.32871, 53.65271 ], [ -2.32871, 53.65273 ], [ -2.32871, 53.65277 ], [ -2.3287, 53.65281 ], [ -2.32872, 53.65291 ], [ -2.32873, 53.65298 ], [ -2.32883, 53.65325 ], [ -2.32895, 53.65357 ], [ -2.329, 53.65369 ], [ -2.32901, 53.65375 ], [ -2.32912, 53.65411 ], [ -2.32914, 53.6542 ], [ -2.32917, 53.65428 ], [ -2.32935, 53.65481 ], [ -2.32946, 53.65506 ], [ -2.3295, 53.65516 ], [ -2.32951, 53.65519 ], [ -2.32958, 53.65529 ], [ -2.32961, 53.65533 ], [ -2.32963, 53.65536 ], [ -2.32967, 53.6554 ], [ -2.32975, 53.65549 ], [ -2.32981, 53.65554 ], [ -2.32999, 53.65572 ], [ -2.33003, 53.65578 ], [ -2.33005, 53.6558 ], [ -2.33012, 53.6559 ], [ -2.33017, 53.65596 ], [ -2.33019, 53.656 ], [ -2.3302, 53.65604 ], [ -2.3302, 53.65609 ], [ -2.33019, 53.65614 ], [ -2.33007, 53.65653 ], [ -2.33002, 53.65667 ], [ -2.32996, 53.65685 ], [ -2.32995, 53.65688 ], [ -2.32992, 53.657 ], [ -2.32992, 53.65702 ], [ -2.32991, 53.6571 ], [ -2.32991, 53.6572 ], [ -2.32991, 53.65725 ], [ -2.32992, 53.6574 ], [ -2.32995, 53.65759 ], [ -2.33003, 53.6578 ], [ -2.3301, 53.65791 ], [ -2.33013, 53.65796 ], [ -2.33022, 53.65807 ], [ -2.33024, 53.6581 ], [ -2.33036, 53.65823 ], [ -2.33043, 53.65831 ], [ -2.33052, 53.65843 ], [ -2.3306, 53.65856 ], [ -2.33067, 53.6587 ], [ -2.33072, 53.65884 ], [ -2.33075, 53.65893 ], [ -2.33081, 53.65909 ], [ -2.33091, 53.65937 ], [ -2.33094, 53.65944 ], [ -2.33095, 53.65946 ], [ -2.33114, 53.65982 ], [ -2.33143, 53.66029 ], [ -2.33151, 53.66046 ], [ -2.33152, 53.66049 ], [ -2.33157, 53.66059 ], [ -2.33173, 53.66105 ], [ -2.33176, 53.66116 ], [ -2.33177, 53.66119 ], [ -2.33181, 53.66134 ], [ -2.33187, 53.66152 ], [ -2.33187, 53.66155 ], [ -2.33202, 53.66205 ], [ -2.33203, 53.66208 ], [ -2.33209, 53.6623 ], [ -2.33218, 53.66264 ], [ -2.33239, 53.66332 ], [ -2.33244, 53.66349 ], [ -2.33249, 53.66366 ], [ -2.3325, 53.66367 ], [ -2.33254, 53.66385 ], [ -2.33259, 53.66402 ], [ -2.33259, 53.66416 ], [ -2.33259, 53.66421 ], [ -2.33258, 53.66426 ], [ -2.33256, 53.66438 ], [ -2.33256, 53.66439 ], [ -2.33255, 53.66441 ], [ -2.33254, 53.66444 ], [ -2.33252, 53.66446 ], [ -2.33251, 53.66448 ], [ -2.33246, 53.66455 ], [ -2.33245, 53.66456 ], [ -2.33236, 53.66468 ], [ -2.33223, 53.6648 ], [ -2.33214, 53.66487 ], [ -2.33211, 53.6649 ], [ -2.33195, 53.665 ], [ -2.33155, 53.66527 ], [ -2.33118, 53.66555 ], [ -2.33109, 53.66562 ], [ -2.33101, 53.66569 ], [ -2.33086, 53.66583 ], [ -2.33074, 53.66596 ], [ -2.3306, 53.66612 ], [ -2.33045, 53.66628 ], [ -2.33042, 53.66632 ], [ -2.33032, 53.66644 ], [ -2.33006, 53.66677 ], [ -2.32992, 53.66693 ], [ -2.32981, 53.66708 ], [ -2.3298, 53.66709 ], [ -2.32968, 53.66726 ], [ -2.3295, 53.66754 ], [ -2.32937, 53.66778 ], [ -2.32928, 53.66793 ], [ -2.32922, 53.66812 ], [ -2.32921, 53.66814 ], [ -2.32919, 53.6683 ], [ -2.32918, 53.66831 ], [ -2.32918, 53.66844 ], [ -2.32918, 53.66848 ], [ -2.32921, 53.66879 ], [ -2.32921, 53.66902 ], [ -2.32922, 53.66929 ], [ -2.32922, 53.66938 ], [ -2.32921, 53.66956 ], [ -2.3292, 53.67 ], [ -2.32917, 53.67022 ], [ -2.32914, 53.67035 ], [ -2.3291, 53.67045 ], [ -2.3291, 53.67047 ], [ -2.32904, 53.67063 ], [ -2.32901, 53.67069 ], [ -2.32898, 53.67081 ], [ -2.32888, 53.67109 ], [ -2.32886, 53.67116 ], [ -2.32881, 53.67152 ], [ -2.32879, 53.67161 ], [ -2.3288, 53.67206 ], [ -2.3288, 53.67224 ], [ -2.3288, 53.67242 ], [ -2.3288, 53.6726 ], [ -2.32879, 53.6729 ], [ -2.32879, 53.67296 ], [ -2.32881, 53.67314 ], [ -2.32882, 53.67332 ], [ -2.32883, 53.67348 ], [ -2.32891, 53.67421 ], [ -2.32893, 53.67433 ], [ -2.32901, 53.67486 ], [ -2.32899, 53.67529 ], [ -2.32899, 53.6753 ], [ -2.32897, 53.67547 ], [ -2.32895, 53.67565 ], [ -2.32893, 53.67583 ], [ -2.32891, 53.67601 ], [ -2.32889, 53.67614 ], [ -2.32889, 53.67619 ], [ -2.32888, 53.67637 ], [ -2.32886, 53.67673 ], [ -2.32886, 53.67674 ], [ -2.32886, 53.67691 ], [ -2.32888, 53.67738 ], [ -2.32888, 53.67741 ], [ -2.32886, 53.6775 ], [ -2.32886, 53.67762 ], [ -2.32889, 53.67781 ], [ -2.3289, 53.67786 ], [ -2.32894, 53.67796 ], [ -2.3292, 53.67834 ], [ -2.32954, 53.67882 ], [ -2.32958, 53.67886 ], [ -2.32967, 53.679 ], [ -2.32993, 53.67936 ], [ -2.33001, 53.67948 ], [ -2.33023, 53.67981 ], [ -2.33041, 53.68005 ], [ -2.33049, 53.68014 ], [ -2.33065, 53.68027 ], [ -2.33069, 53.68031 ], [ -2.331, 53.6805 ], [ -2.33102, 53.68051 ], [ -2.33109, 53.68056 ], [ -2.33172, 53.68086 ], [ -2.33193, 53.68098 ], [ -2.33194, 53.68099 ], [ -2.33209, 53.68107 ], [ -2.33216, 53.68111 ], [ -2.33223, 53.68118 ], [ -2.33233, 53.68144 ], [ -2.3323312, 53.6814356 ], [ -2.33225, 53.68145 ], [ -2.33212, 53.68148 ], [ -2.33207, 53.68149 ], [ -2.33202, 53.68153 ], [ -2.33198, 53.68157 ], [ -2.33189, 53.68171 ], [ -2.33183, 53.6818 ], [ -2.33164, 53.68213 ], [ -2.33162, 53.68222 ], [ -2.33161, 53.68232 ], [ -2.33161, 53.68247 ], [ -2.33169, 53.68265 ], [ -2.33189, 53.68299 ], [ -2.33213, 53.68343 ], [ -2.33215, 53.68347 ], [ -2.33219, 53.68358 ], [ -2.33215, 53.68368 ], [ -2.33208, 53.68377 ], [ -2.33207, 53.68378 ], [ -2.332, 53.68385 ], [ -2.33191, 53.68393 ], [ -2.33175, 53.68408 ], [ -2.33163, 53.6842 ], [ -2.3316, 53.68423 ], [ -2.33146, 53.68435 ], [ -2.33142, 53.68437 ], [ -2.33128, 53.68449 ], [ -2.33122, 53.68454 ], [ -2.33118, 53.68458 ], [ -2.33114, 53.68463 ], [ -2.33102, 53.68478 ], [ -2.33087, 53.68497 ], [ -2.33072, 53.68529 ], [ -2.33058, 53.68558 ], [ -2.33054, 53.68567 ], [ -2.33045, 53.68584 ], [ -2.33028, 53.68608 ], [ -2.33022, 53.68616 ], [ -2.33005, 53.68642 ], [ -2.32993, 53.68659 ], [ -2.32983, 53.68673 ], [ -2.32943, 53.68736 ], [ -2.3294, 53.6875 ], [ -2.32939, 53.68777 ], [ -2.32933, 53.68824 ], [ -2.32921, 53.68874 ], [ -2.3291, 53.68927 ], [ -2.32909, 53.68932 ], [ -2.32903, 53.68962 ], [ -2.3290286, 53.6896213 ], [ -2.32909, 53.68963 ], [ -2.32911, 53.68966 ], [ -2.32909, 53.68969 ], [ -2.32905, 53.68971 ], [ -2.32913, 53.68992 ], [ -2.32923, 53.69016 ], [ -2.32948, 53.69059 ], [ -2.32961, 53.69084 ], [ -2.32963, 53.69094 ], [ -2.3297, 53.69121 ], [ -2.32972, 53.69142 ], [ -2.3297, 53.69164 ], [ -2.32968, 53.69168 ], [ -2.32961, 53.69184 ], [ -2.32937, 53.69229 ], [ -2.32933, 53.69235 ], [ -2.3292, 53.69259 ], [ -2.32906, 53.69283 ], [ -2.32886, 53.69317 ], [ -2.32871, 53.69344 ], [ -2.32831, 53.6942 ], [ -2.32822, 53.69436 ], [ -2.3278, 53.69488 ], [ -2.32777, 53.69492 ], [ -2.32767, 53.69503 ], [ -2.32755, 53.69517 ], [ -2.32743, 53.69538 ], [ -2.3274, 53.69548 ], [ -2.32739, 53.69555 ], [ -2.32738, 53.69557 ], [ -2.32735, 53.69578 ], [ -2.32727, 53.69623 ], [ -2.32725, 53.69642 ], [ -2.32724, 53.69648 ], [ -2.32723, 53.69658 ], [ -2.3272, 53.69671 ], [ -2.32717, 53.69681 ], [ -2.32712, 53.69702 ], [ -2.32703, 53.69738 ], [ -2.32702, 53.69741 ], [ -2.32694, 53.69762 ], [ -2.32683, 53.69783 ], [ -2.32669, 53.69797 ], [ -2.32659, 53.69808 ], [ -2.32636, 53.69828 ], [ -2.32605, 53.69857 ], [ -2.32598, 53.69862 ], [ -2.32567, 53.699 ], [ -2.3256, 53.69909 ], [ -2.32543, 53.6994 ], [ -2.32536, 53.69959 ], [ -2.32531, 53.69975 ], [ -2.32532, 53.69999 ], [ -2.32531, 53.70016 ], [ -2.32535, 53.70056 ], [ -2.32536, 53.70059 ], [ -2.32543, 53.70119 ], [ -2.32558, 53.70186 ], [ -2.32561, 53.70199 ], [ -2.32562, 53.70205 ], [ -2.32571, 53.70249 ], [ -2.32574, 53.70259 ], [ -2.32576, 53.7027 ], [ -2.32583, 53.70291 ], [ -2.32585, 53.70298 ], [ -2.32589, 53.70306 ], [ -2.32599, 53.70321 ], [ -2.32602, 53.70326 ], [ -2.32605, 53.70333 ], [ -2.32608, 53.70342 ], [ -2.32609, 53.70345 ], [ -2.3261, 53.70348 ], [ -2.32611, 53.70352 ], [ -2.32612, 53.70358 ], [ -2.32611, 53.70377 ], [ -2.32611, 53.7038 ], [ -2.3261096, 53.7037953 ], [ -2.3261, 53.70394 ], [ -2.32609, 53.70402 ], [ -2.32605, 53.70419 ], [ -2.32594, 53.70468 ], [ -2.32591, 53.70479 ], [ -2.32586, 53.70499 ], [ -2.3258622, 53.7049853 ], [ -2.32659, 53.70536 ], [ -2.32664, 53.7054 ], [ -2.32712, 53.70567 ], [ -2.32727, 53.70578 ], [ -2.32733, 53.70585 ], [ -2.32738, 53.70586 ], [ -2.32739, 53.70589 ], [ -2.32739, 53.7059 ], [ -2.32763, 53.70618 ], [ -2.32775, 53.70638 ], [ -2.32792, 53.70662 ], [ -2.32799, 53.70681 ], [ -2.32804, 53.70692 ], [ -2.32805, 53.70703 ], [ -2.32806, 53.70716 ], [ -2.32802, 53.70734 ], [ -2.32789, 53.70761 ], [ -2.32772, 53.70786 ], [ -2.32739, 53.70817 ], [ -2.32738, 53.70818 ], [ -2.32721, 53.70832 ], [ -2.32675, 53.70868 ], [ -2.32646, 53.70897 ], [ -2.32626, 53.70923 ], [ -2.32611, 53.70944 ], [ -2.32594, 53.70977 ], [ -2.32592, 53.70982 ], [ -2.32587, 53.70991 ], [ -2.32578, 53.71008 ], [ -2.32566, 53.71033 ], [ -2.32554, 53.71059 ], [ -2.32535, 53.711 ], [ -2.32527, 53.71114 ], [ -2.32518, 53.71131 ], [ -2.3251, 53.71149 ], [ -2.32501, 53.71166 ], [ -2.32499, 53.7117 ], [ -2.32494, 53.71183 ], [ -2.32485, 53.71212 ], [ -2.32484, 53.71219 ], [ -2.32482, 53.71229 ], [ -2.32479, 53.71257 ], [ -2.3249, 53.71338 ], [ -2.32491, 53.71359 ], [ -2.32487, 53.71386 ], [ -2.32486, 53.71391 ], [ -2.32466, 53.7144 ], [ -2.32462, 53.71449 ], [ -2.3246174, 53.7144901 ], [ -2.32468, 53.71456 ], [ -2.32471, 53.7146 ], [ -2.32471, 53.71461 ], [ -2.32474, 53.71469 ], [ -2.32477, 53.71475 ], [ -2.32478, 53.71487 ], [ -2.32483, 53.71496 ], [ -2.32484, 53.71498 ], [ -2.32489, 53.71504 ], [ -2.32499, 53.7151 ], [ -2.325, 53.71511 ], [ -2.32538, 53.71537 ], [ -2.32544, 53.71537 ], [ -2.32569, 53.71547 ], [ -2.32603, 53.71563 ], [ -2.32633, 53.71577 ], [ -2.32641, 53.7158 ], [ -2.32764, 53.71636 ], [ -2.32793, 53.71649 ], [ -2.3282, 53.71661 ], [ -2.32838, 53.7167 ], [ -2.32844, 53.71672 ], [ -2.32883, 53.7169 ], [ -2.32919, 53.71704 ], [ -2.32944, 53.71713 ], [ -2.32963, 53.7172 ], [ -2.3296315, 53.7171995 ], [ -2.32975, 53.71748 ], [ -2.32982, 53.71765 ], [ -2.32986, 53.71775 ], [ -2.32991, 53.71801 ], [ -2.32993, 53.7181 ], [ -2.32993, 53.71819 ], [ -2.32991, 53.71865 ], [ -2.32973, 53.71953 ], [ -2.32968, 53.7198 ], [ -2.32961, 53.72017 ], [ -2.32946, 53.72089 ], [ -2.32943, 53.72126 ], [ -2.32944, 53.72134 ], [ -2.32946, 53.72141 ], [ -2.32948, 53.72149 ], [ -2.32953, 53.72158 ], [ -2.32957, 53.72166 ], [ -2.32994, 53.72225 ], [ -2.32995, 53.72226 ], [ -2.33007, 53.72242 ], [ -2.33019, 53.72259 ], [ -2.3303, 53.72274 ], [ -2.33031, 53.72275 ], [ -2.33047, 53.72291 ], [ -2.33063, 53.72308 ], [ -2.33119, 53.72349 ], [ -2.33149, 53.7237 ], [ -2.33153, 53.72374 ], [ -2.33154, 53.72377 ], [ -2.33153, 53.72382 ], [ -2.33126, 53.72417 ], [ -2.33125, 53.72424 ], [ -2.33125, 53.72429 ], [ -2.33128, 53.72434 ], [ -2.33137, 53.72446 ], [ -2.3314, 53.72449 ], [ -2.33151, 53.72463 ], [ -2.33168, 53.72481 ], [ -2.33202, 53.72523 ], [ -2.33217, 53.7254 ], [ -2.33227, 53.72551 ], [ -2.33236, 53.72564 ], [ -2.3323577, 53.7256436 ], [ -2.33229, 53.72576 ], [ -2.33226, 53.7258 ], [ -2.33217, 53.72586 ], [ -2.3321699, 53.7258604 ], [ -2.33233, 53.72591 ], [ -2.33271, 53.72604 ], [ -2.33314, 53.72619 ], [ -2.33352, 53.7263 ], [ -2.33377, 53.72637 ], [ -2.33381, 53.72639 ], [ -2.33424, 53.72651 ], [ -2.33451, 53.72656 ], [ -2.33473, 53.72663 ], [ -2.33497, 53.7267 ], [ -2.33527, 53.72675 ], [ -2.33602, 53.72695 ], [ -2.33694, 53.72719 ], [ -2.33698, 53.7272 ], [ -2.33734, 53.72733 ], [ -2.33768, 53.72749 ], [ -2.33826, 53.72783 ], [ -2.33853, 53.72803 ], [ -2.33877, 53.72833 ], [ -2.33878, 53.72834 ], [ -2.33903, 53.72865 ], [ -2.33907, 53.72869 ], [ -2.33955, 53.72918 ], [ -2.33966, 53.72927 ], [ -2.34012, 53.72965 ], [ -2.34037, 53.72985 ], [ -2.34075, 53.73015 ], [ -2.34166, 53.73093 ], [ -2.34175, 53.731 ], [ -2.34209, 53.73126 ], [ -2.34294, 53.73191 ], [ -2.34363, 53.73246 ], [ -2.34382, 53.7326 ], [ -2.34388, 53.73265 ], [ -2.34441, 53.73323 ], [ -2.34461, 53.73344 ], [ -2.34504, 53.73385 ], [ -2.34551, 53.73429 ], [ -2.34574, 53.73445 ], [ -2.3463, 53.73486 ], [ -2.34669, 53.73514 ], [ -2.34726, 53.73554 ], [ -2.34727, 53.73555 ], [ -2.34775, 53.73589 ], [ -2.34783, 53.73595 ], [ -2.34828, 53.73623 ], [ -2.34843, 53.73634 ], [ -2.34883, 53.73662 ], [ -2.34939, 53.73699 ], [ -2.35018, 53.73752 ], [ -2.35027, 53.73761 ], [ -2.35078, 53.73811 ], [ -2.35081, 53.73814 ], [ -2.35094, 53.73828 ], [ -2.35162, 53.73903 ], [ -2.35173, 53.73918 ], [ -2.35179, 53.73926 ], [ -2.35186, 53.73932 ], [ -2.3524, 53.74011 ], [ -2.35249, 53.74025 ], [ -2.35308, 53.74103 ], [ -2.35333, 53.7414 ], [ -2.35349, 53.74166 ], [ -2.35372, 53.74199 ], [ -2.35381, 53.74215 ], [ -2.35397, 53.7424 ], [ -2.35411, 53.74262 ], [ -2.35429, 53.7429 ], [ -2.35441, 53.74311 ], [ -2.35449, 53.74326 ], [ -2.35456, 53.74337 ], [ -2.35485, 53.74384 ], [ -2.35491, 53.74396 ], [ -2.35499, 53.74416 ], [ -2.35529, 53.74464 ], [ -2.35542, 53.74486 ], [ -2.35546, 53.74493 ], [ -2.3556, 53.74523 ], [ -2.35563, 53.74532 ], [ -2.35566, 53.74545 ], [ -2.35568, 53.74566 ], [ -2.35569, 53.74572 ], [ -2.35581, 53.74607 ], [ -2.356, 53.74642 ], [ -2.35639, 53.7469 ], [ -2.35693, 53.74728 ], [ -2.35768, 53.74781 ], [ -2.35798, 53.74803 ], [ -2.35821, 53.7482 ], [ -2.35827, 53.74824 ], [ -2.35838, 53.74833 ], [ -2.35853, 53.74846 ], [ -2.35882, 53.74882 ], [ -2.35898, 53.74906 ], [ -2.35903, 53.74913 ], [ -2.3591, 53.74924 ], [ -2.35915, 53.74929 ], [ -2.35932, 53.74942 ], [ -2.35942, 53.74948 ], [ -2.35994, 53.74978 ], [ -2.36013, 53.74987 ], [ -2.36028, 53.74996 ], [ -2.36042, 53.75006 ], [ -2.36057, 53.7502 ], [ -2.3606, 53.75026 ], [ -2.36066, 53.75042 ], [ -2.3607, 53.75048 ], [ -2.36075, 53.75059 ], [ -2.3609, 53.7509 ], [ -2.36092, 53.75094 ], [ -2.36094, 53.75098 ], [ -2.36098, 53.75112 ], [ -2.36098, 53.75118 ], [ -2.36098, 53.75122 ], [ -2.36096, 53.75126 ], [ -2.36086, 53.75149 ], [ -2.36081, 53.75158 ], [ -2.36075, 53.75166 ], [ -2.36069, 53.75176 ], [ -2.36065, 53.75185 ], [ -2.36062, 53.75192 ], [ -2.36062, 53.75198 ], [ -2.36063, 53.75205 ], [ -2.36065, 53.75212 ], [ -2.36084, 53.75259 ], [ -2.3609, 53.75273 ], [ -2.36113, 53.75329 ], [ -2.36114, 53.75332 ], [ -2.3612, 53.75345 ], [ -2.3611964, 53.7534479 ], [ -2.36127, 53.7535 ], [ -2.3613, 53.75353 ], [ -2.36143, 53.75366 ], [ -2.3615, 53.75376 ], [ -2.36164, 53.75389 ], [ -2.36185, 53.75407 ], [ -2.36189, 53.75411 ], [ -2.36204, 53.75428 ], [ -2.36215, 53.7544 ], [ -2.36234, 53.75462 ], [ -2.36249, 53.75477 ], [ -2.36257, 53.75484 ], [ -2.36264, 53.7549 ], [ -2.36277, 53.75499 ], [ -2.36283, 53.75505 ], [ -2.36287, 53.75508 ], [ -2.36293, 53.75511 ], [ -2.36311, 53.75521 ], [ -2.3633, 53.75531 ], [ -2.36387, 53.75562 ], [ -2.36394, 53.75565 ], [ -2.36409, 53.75572 ], [ -2.36423, 53.75576 ], [ -2.3643, 53.75578 ], [ -2.36437, 53.75579 ], [ -2.36447, 53.75581 ], [ -2.36455, 53.75581 ], [ -2.36457, 53.75581 ], [ -2.36461, 53.75581 ], [ -2.36467, 53.7558 ], [ -2.36477, 53.75578 ], [ -2.3647704, 53.7557785 ], [ -2.36487, 53.75586 ], [ -2.36502, 53.756 ], [ -2.36553, 53.75641 ], [ -2.36589, 53.75671 ], [ -2.36618, 53.75694 ], [ -2.36634, 53.75706 ], [ -2.36642, 53.75712 ], [ -2.36649, 53.75719 ], [ -2.36658, 53.75727 ], [ -2.36689, 53.75753 ], [ -2.36713, 53.75771 ], [ -2.36723, 53.7578 ], [ -2.36735, 53.7579 ], [ -2.3675, 53.75808 ], [ -2.36752, 53.75811 ], [ -2.36762, 53.75822 ], [ -2.36766, 53.75831 ], [ -2.36771, 53.75841 ], [ -2.36778, 53.75857 ], [ -2.36781, 53.75863 ], [ -2.36798, 53.75918 ], [ -2.36802, 53.75934 ], [ -2.36817, 53.75988 ], [ -2.36831, 53.76013 ], [ -2.36834, 53.76017 ], [ -2.36864, 53.7605 ], [ -2.36877, 53.76063 ], [ -2.36905, 53.76092 ], [ -2.36946, 53.76135 ], [ -2.36949, 53.76137 ], [ -2.36984, 53.76175 ], [ -2.37004, 53.76195 ], [ -2.37022, 53.76215 ], [ -2.37024, 53.76217 ], [ -2.37056, 53.76249 ], [ -2.37064, 53.76257 ], [ -2.37065, 53.76256 ], [ -2.37066, 53.76256 ], [ -2.37067, 53.76256 ], [ -2.37068, 53.76256 ], [ -2.37069, 53.76256 ], [ -2.3707, 53.76256 ], [ -2.3707, 53.76257 ], [ -2.37071, 53.76257 ], [ -2.37072, 53.76257 ], [ -2.37072, 53.76258 ], [ -2.37073, 53.76258 ], [ -2.37074, 53.76259 ], [ -2.37074, 53.7626 ], [ -2.37074, 53.76261 ], [ -2.37074, 53.76262 ], [ -2.37073, 53.76262 ], [ -2.37073, 53.76263 ], [ -2.37072, 53.76263 ], [ -2.37071, 53.76263 ], [ -2.37071, 53.76264 ], [ -2.37097, 53.76294 ], [ -2.37144, 53.7635 ], [ -2.37155, 53.76363 ], [ -2.37181, 53.76395 ], [ -2.37223, 53.76443 ], [ -2.37262, 53.76491 ], [ -2.37299, 53.76537 ], [ -2.37308, 53.7655 ], [ -2.37335, 53.76586 ], [ -2.37348, 53.76602 ], [ -2.37361, 53.76618 ], [ -2.37371, 53.7663 ], [ -2.37387, 53.7665 ], [ -2.37396, 53.76658 ], [ -2.37421, 53.76681 ], [ -2.37469, 53.76714 ], [ -2.37488, 53.76726 ], [ -2.37517, 53.76743 ], [ -2.37566, 53.76773 ], [ -2.37621, 53.76803 ], [ -2.3764, 53.76815 ], [ -2.37684, 53.76843 ], [ -2.37694, 53.76849 ], [ -2.37749, 53.76882 ], [ -2.37803, 53.76913 ], [ -2.37814, 53.76919 ], [ -2.37857, 53.7694 ], [ -2.37928, 53.76984 ], [ -2.37944, 53.76993 ], [ -2.37996, 53.77029 ], [ -2.38031, 53.77051 ], [ -2.38034, 53.77052 ], [ -2.38038, 53.77055 ], [ -2.38061, 53.7707 ], [ -2.38079, 53.77082 ], [ -2.381, 53.77096 ], [ -2.38129, 53.77122 ], [ -2.38141, 53.77134 ], [ -2.38163, 53.77154 ], [ -2.38198, 53.7719 ], [ -2.38208, 53.772 ], [ -2.38215, 53.77209 ], [ -2.38221, 53.77217 ], [ -2.38226, 53.77224 ], [ -2.3823, 53.77235 ], [ -2.38233, 53.77244 ], [ -2.38235, 53.77254 ], [ -2.38238, 53.77263 ], [ -2.38244, 53.77281 ], [ -2.3826, 53.77333 ], [ -2.38268, 53.7736 ], [ -2.3827, 53.77368 ], [ -2.38281, 53.7741 ], [ -2.38282, 53.77416 ], [ -2.38283, 53.77421 ], [ -2.38285, 53.77425 ], [ -2.38294, 53.77464 ], [ -2.38305, 53.77507 ], [ -2.38314, 53.77542 ], [ -2.38324, 53.77581 ], [ -2.38333, 53.77616 ], [ -2.38345, 53.77663 ], [ -2.38373, 53.77771 ], [ -2.38393, 53.77846 ], [ -2.38398, 53.77862 ], [ -2.38403, 53.77878 ], [ -2.38405, 53.77886 ], [ -2.38404, 53.77887 ], [ -2.38402, 53.77901 ], [ -2.384, 53.77912 ], [ -2.38397, 53.77927 ], [ -2.38396, 53.77929 ], [ -2.38393, 53.77943 ], [ -2.38389, 53.77958 ], [ -2.38382, 53.77979 ], [ -2.38373, 53.78002 ], [ -2.3837, 53.78009 ], [ -2.38353, 53.78046 ], [ -2.38313, 53.78131 ], [ -2.38262, 53.7824 ], [ -2.38261, 53.78243 ], [ -2.38253, 53.78261 ], [ -2.38248, 53.78272 ], [ -2.38245, 53.78281 ], [ -2.38244, 53.78288 ], [ -2.38242, 53.78311 ], [ -2.3824, 53.7833 ], [ -2.38239, 53.78346 ], [ -2.38239, 53.78348 ], [ -2.38236, 53.78374 ], [ -2.38237, 53.78383 ], [ -2.38238, 53.78389 ], [ -2.38242, 53.78401 ], [ -2.38247, 53.78411 ], [ -2.38257, 53.78428 ], [ -2.38264, 53.78437 ], [ -2.3827, 53.78445 ], [ -2.38283, 53.78462 ], [ -2.38307, 53.78488 ], [ -2.38343, 53.78521 ], [ -2.38348, 53.78526 ], [ -2.38365, 53.78543 ], [ -2.3838, 53.78557 ], [ -2.3839, 53.78567 ], [ -2.38398, 53.78575 ], [ -2.38407, 53.78587 ], [ -2.38412, 53.78595 ], [ -2.38418, 53.78605 ], [ -2.38422, 53.78614 ], [ -2.38429, 53.78632 ], [ -2.38434, 53.78659 ], [ -2.38441, 53.78694 ], [ -2.38445, 53.78707 ], [ -2.38449, 53.78715 ], [ -2.38465, 53.78754 ], [ -2.38471, 53.78765 ], [ -2.38476, 53.78774 ], [ -2.38484, 53.78787 ], [ -2.38501, 53.78813 ], [ -2.38514, 53.78833 ], [ -2.38531, 53.78861 ], [ -2.3855, 53.7889 ], [ -2.3856, 53.78906 ], [ -2.3857, 53.78921 ], [ -2.38584, 53.78939 ], [ -2.38599, 53.78963 ], [ -2.38629, 53.7901 ], [ -2.38643, 53.79033 ], [ -2.38653, 53.79051 ], [ -2.38667, 53.79084 ], [ -2.38697, 53.79142 ], [ -2.38706, 53.79158 ], [ -2.38719, 53.79177 ], [ -2.38729, 53.79192 ], [ -2.38738, 53.79205 ], [ -2.38744, 53.79212 ], [ -2.38749, 53.79218 ], [ -2.38757, 53.79228 ], [ -2.38772, 53.79244 ], [ -2.38776, 53.79249 ], [ -2.38804, 53.79276 ], [ -2.3881, 53.79283 ], [ -2.38813, 53.79286 ], [ -2.38826, 53.79299 ], [ -2.38832, 53.79306 ], [ -2.38835, 53.79311 ], [ -2.38841, 53.79322 ], [ -2.38848, 53.79336 ], [ -2.38852, 53.79344 ], [ -2.38855, 53.79354 ], [ -2.38857, 53.79363 ], [ -2.38859, 53.79371 ], [ -2.38859, 53.79376 ], [ -2.38859, 53.79381 ], [ -2.38856, 53.79394 ], [ -2.38846, 53.79429 ], [ -2.38845, 53.79432 ], [ -2.38809, 53.79549 ], [ -2.38769, 53.79682 ], [ -2.38766, 53.79694 ], [ -2.38763, 53.79708 ], [ -2.38763, 53.79723 ], [ -2.38765, 53.79735 ], [ -2.38765, 53.79736 ], [ -2.38772, 53.79756 ], [ -2.38783, 53.79781 ], [ -2.3879, 53.79795 ], [ -2.38803, 53.79829 ], [ -2.38807, 53.79843 ], [ -2.3881, 53.79853 ], [ -2.38811, 53.79861 ], [ -2.38812, 53.79869 ], [ -2.38812, 53.79897 ], [ -2.38812, 53.79902 ], [ -2.38813, 53.79927 ], [ -2.38811, 53.79956 ], [ -2.3881, 53.8 ], [ -2.38804, 53.80073 ], [ -2.38801, 53.80111 ], [ -2.388, 53.80117 ], [ -2.38793, 53.80181 ], [ -2.38792, 53.80206 ], [ -2.38791, 53.80213 ], [ -2.38793, 53.80235 ], [ -2.38794, 53.80242 ], [ -2.38798, 53.80278 ], [ -2.38802, 53.8032 ], [ -2.38803, 53.80332 ], [ -2.38803, 53.80367 ], [ -2.38802, 53.80393 ], [ -2.38798, 53.80415 ], [ -2.38797, 53.80422 ], [ -2.38788, 53.80484 ], [ -2.38786, 53.80493 ], [ -2.38783, 53.80511 ], [ -2.38778, 53.80543 ], [ -2.38772, 53.80583 ], [ -2.38769, 53.80601 ], [ -2.38767, 53.80619 ], [ -2.38766, 53.80627 ], [ -2.38765, 53.80637 ], [ -2.38764, 53.80658 ], [ -2.38763, 53.80702 ], [ -2.38762, 53.80767 ], [ -2.3876, 53.80839 ], [ -2.38759, 53.80873 ], [ -2.38759, 53.80945 ], [ -2.38759, 53.80956 ], [ -2.38759, 53.80963 ], [ -2.38758, 53.80974 ], [ -2.38757, 53.80992 ], [ -2.38756, 53.81001 ], [ -2.38754, 53.8101 ], [ -2.38749, 53.81028 ], [ -2.38744, 53.81046 ], [ -2.38742, 53.81052 ], [ -2.38742, 53.81054 ], [ -2.38736, 53.8107 ], [ -2.3873, 53.81087 ], [ -2.38729, 53.8109 ], [ -2.38727, 53.81098 ], [ -2.38725, 53.81107 ], [ -2.38724, 53.81116 ], [ -2.38724, 53.81125 ], [ -2.38725, 53.81134 ], [ -2.3873, 53.81161 ], [ -2.3874, 53.81198 ], [ -2.38749, 53.81225 ], [ -2.3874946, 53.8122481 ], [ -2.38756, 53.81241 ], [ -2.38761, 53.81251 ], [ -2.38765, 53.8126 ], [ -2.38773, 53.81269 ], [ -2.38778, 53.81274 ], [ -2.38797, 53.81292 ], [ -2.38857, 53.81348 ], [ -2.38893, 53.81381 ], [ -2.38958, 53.81445 ], [ -2.38994, 53.81483 ], [ -2.39017, 53.81508 ], [ -2.39076, 53.81578 ], [ -2.39089, 53.81593 ], [ -2.39112, 53.81618 ], [ -2.39149, 53.81657 ], [ -2.39166, 53.81672 ], [ -2.39175, 53.8168 ], [ -2.39258, 53.81743 ], [ -2.39262, 53.81746 ], [ -2.39281, 53.8176 ], [ -2.39299, 53.81775 ], [ -2.39347, 53.81816 ], [ -2.39362, 53.81827 ], [ -2.39375, 53.81843 ], [ -2.3944, 53.81895 ], [ -2.39447, 53.81901 ], [ -2.39464, 53.81916 ], [ -2.3948, 53.81931 ], [ -2.39494, 53.81948 ], [ -2.39508, 53.81963 ], [ -2.39513, 53.81969 ], [ -2.39523, 53.81979 ], [ -2.39528, 53.81984 ], [ -2.39534, 53.81991 ], [ -2.39535, 53.81992 ], [ -2.39542, 53.82 ], [ -2.39548, 53.82007 ], [ -2.39554, 53.82015 ], [ -2.3958, 53.82055 ], [ -2.39591, 53.82073 ], [ -2.39601, 53.82089 ], [ -2.39632, 53.82146 ], [ -2.39634, 53.82148 ], [ -2.39636, 53.82152 ], [ -2.39642, 53.82164 ], [ -2.39646, 53.82173 ], [ -2.39649, 53.82182 ], [ -2.3966, 53.82193 ], [ -2.39663, 53.82206 ], [ -2.39669, 53.82231 ], [ -2.39674, 53.82255 ], [ -2.39674, 53.82263 ], [ -2.39674, 53.82264 ], [ -2.39674, 53.82282 ], [ -2.39674, 53.823 ], [ -2.39674, 53.82335 ], [ -2.39669, 53.8236 ], [ -2.39664, 53.82379 ], [ -2.3966, 53.82393 ], [ -2.39652, 53.82417 ], [ -2.39644, 53.82443 ], [ -2.39638, 53.8246 ], [ -2.39633, 53.82478 ], [ -2.39627, 53.82496 ], [ -2.39621, 53.82515 ], [ -2.39617, 53.82531 ], [ -2.39606, 53.82567 ], [ -2.39602, 53.82579 ], [ -2.39601, 53.82584 ], [ -2.39596, 53.82602 ], [ -2.39592, 53.82614 ], [ -2.39584, 53.82658 ], [ -2.3958, 53.82686 ], [ -2.39578, 53.82709 ], [ -2.39578, 53.82721 ], [ -2.39577, 53.82742 ], [ -2.39579, 53.8278 ], [ -2.39583, 53.82821 ], [ -2.39587, 53.82838 ], [ -2.39588, 53.82847 ], [ -2.39588, 53.82851 ], [ -2.39592, 53.82873 ], [ -2.39597, 53.82889 ], [ -2.39614, 53.82929 ], [ -2.39615, 53.82931 ], [ -2.39627, 53.8296 ], [ -2.39637, 53.82978 ], [ -2.39653, 53.83007 ], [ -2.39668, 53.8303 ], [ -2.39685, 53.83053 ], [ -2.39714, 53.83088 ], [ -2.39723, 53.83098 ], [ -2.39758, 53.83134 ], [ -2.39774, 53.83177 ], [ -2.397744, 53.8317738 ], [ -2.39775, 53.83188 ], [ -2.39779, 53.83198 ], [ -2.39775, 53.8321 ], [ -2.39772, 53.83214 ], [ -2.39768, 53.8322 ], [ -2.39762, 53.83224 ], [ -2.39756, 53.83228 ], [ -2.39756, 53.83229 ], [ -2.39735, 53.83241 ], [ -2.3973, 53.83244 ], [ -2.39715, 53.83252 ], [ -2.39676, 53.83276 ], [ -2.39646, 53.83295 ], [ -2.3963, 53.83307 ], [ -2.39615, 53.83319 ], [ -2.39589, 53.8334 ], [ -2.3956, 53.83366 ], [ -2.39545, 53.83381 ], [ -2.39534, 53.83392 ], [ -2.39514, 53.83412 ], [ -2.39512, 53.83415 ], [ -2.39493, 53.83435 ], [ -2.39475, 53.83457 ], [ -2.39442, 53.83501 ], [ -2.39424, 53.83526 ], [ -2.39404, 53.8356 ], [ -2.39404, 53.83561 ], [ -2.39395, 53.83577 ], [ -2.39386, 53.83594 ], [ -2.39377, 53.83615 ], [ -2.39372, 53.8363 ], [ -2.39361, 53.83655 ], [ -2.39348, 53.837 ], [ -2.39347, 53.83701 ], [ -2.39344, 53.83718 ], [ -2.39341, 53.83728 ], [ -2.39341, 53.83736 ], [ -2.39336, 53.83769 ], [ -2.39336, 53.83772 ], [ -2.39335, 53.83808 ], [ -2.39334, 53.83824 ], [ -2.39334, 53.83826 ], [ -2.39341, 53.8391 ], [ -2.39343, 53.83933 ], [ -2.39346, 53.83969 ], [ -2.39344, 53.83971 ], [ -2.39343, 53.83974 ], [ -2.39342, 53.83976 ], [ -2.39342, 53.83977 ], [ -2.39342, 53.83979 ], [ -2.39342, 53.8398 ], [ -2.39343, 53.83982 ], [ -2.39343, 53.83984 ], [ -2.39344, 53.83985 ], [ -2.39345, 53.83987 ], [ -2.39346, 53.83988 ], [ -2.39348, 53.8399 ], [ -2.3935, 53.83991 ], [ -2.39351, 53.83992 ], [ -2.39353, 53.83993 ], [ -2.39356, 53.83994 ], [ -2.39358, 53.83995 ], [ -2.39361, 53.83996 ], [ -2.39362, 53.8401 ], [ -2.39357, 53.84033 ], [ -2.39355, 53.84048 ], [ -2.39353, 53.84074 ], [ -2.39353, 53.84146 ], [ -2.39352, 53.84171 ], [ -2.39348, 53.84202 ], [ -2.3934, 53.84247 ], [ -2.39338, 53.84255 ], [ -2.39323, 53.8431 ], [ -2.39298, 53.84372 ], [ -2.39278, 53.84413 ], [ -2.39267, 53.84433 ], [ -2.39232, 53.8449 ], [ -2.39216, 53.84516 ], [ -2.39146, 53.84605 ], [ -2.39137, 53.84613 ], [ -2.39121, 53.84627 ], [ -2.39115, 53.84627 ], [ -2.39108, 53.84627 ], [ -2.39105, 53.84628 ], [ -2.39101, 53.84629 ], [ -2.39096, 53.8463 ], [ -2.39093, 53.84631 ], [ -2.39091, 53.84633 ], [ -2.39088, 53.84635 ], [ -2.39086, 53.84638 ], [ -2.39084, 53.8464 ], [ -2.39083, 53.84642 ], [ -2.39083, 53.84645 ], [ -2.39083, 53.84647 ], [ -2.39084, 53.8465 ], [ -2.39085, 53.84653 ], [ -2.39088, 53.84657 ], [ -2.39084, 53.84666 ], [ -2.39081, 53.84672 ], [ -2.39077, 53.84677 ], [ -2.3907, 53.84684 ], [ -2.39048, 53.84703 ], [ -2.38921, 53.84801 ], [ -2.38906, 53.84818 ], [ -2.38821, 53.8488 ], [ -2.3875, 53.84931 ], [ -2.38665, 53.84992 ], [ -2.38607, 53.85033 ], [ -2.38519, 53.85095 ], [ -2.38509, 53.85101 ], [ -2.38451, 53.85143 ], [ -2.38354, 53.85212 ], [ -2.38286, 53.85261 ], [ -2.38192, 53.85331 ], [ -2.38163, 53.85353 ], [ -2.38147, 53.85366 ], [ -2.38129, 53.8538 ], [ -2.3809, 53.85412 ], [ -2.38056, 53.85441 ], [ -2.37992, 53.85497 ], [ -2.37979, 53.85508 ], [ -2.37964, 53.85522 ], [ -2.37956, 53.85529 ], [ -2.3794, 53.85544 ], [ -2.37937, 53.85547 ], [ -2.37863, 53.85618 ], [ -2.3786, 53.85621 ], [ -2.37817, 53.85666 ], [ -2.37773, 53.85714 ], [ -2.37728, 53.85763 ], [ -2.37719, 53.85773 ], [ -2.37688, 53.85811 ], [ -2.37648, 53.8586 ], [ -2.37642, 53.85867 ], [ -2.37607, 53.85908 ], [ -2.3758, 53.85941 ], [ -2.37569, 53.85954 ], [ -2.37552, 53.85972 ], [ -2.37509, 53.8602 ], [ -2.3750895, 53.8602011 ], [ -2.37497, 53.8603 ], [ -2.37479, 53.86049 ], [ -2.37454, 53.86076 ], [ -2.37436, 53.86096 ], [ -2.37388, 53.86146 ], [ -2.37349, 53.8619 ], [ -2.37321, 53.86218 ], [ -2.37308, 53.86228 ], [ -2.373, 53.86229 ], [ -2.37293, 53.8623 ], [ -2.37288, 53.86231 ], [ -2.37284, 53.86233 ], [ -2.37278, 53.86235 ], [ -2.37271, 53.86239 ], [ -2.37269, 53.86241 ], [ -2.37267, 53.86243 ], [ -2.37265, 53.86244 ], [ -2.37264, 53.86246 ], [ -2.37262, 53.86248 ], [ -2.37261, 53.8625 ], [ -2.37259, 53.86255 ], [ -2.37258, 53.86259 ], [ -2.37258, 53.86262 ], [ -2.37259, 53.86265 ], [ -2.37261, 53.86268 ], [ -2.37263, 53.86271 ], [ -2.37265, 53.86274 ], [ -2.37271, 53.86278 ], [ -2.37257, 53.86297 ], [ -2.37169, 53.86407 ], [ -2.37144, 53.8644 ], [ -2.37131, 53.86461 ], [ -2.37102, 53.86492 ], [ -2.37079, 53.86516 ], [ -2.3705, 53.86546 ], [ -2.37018, 53.86578 ], [ -2.37004, 53.86593 ], [ -2.3693, 53.86667 ], [ -2.36873, 53.86716 ], [ -2.36855, 53.8673 ], [ -2.36848, 53.86737 ], [ -2.36791, 53.86785 ], [ -2.36708, 53.86855 ], [ -2.36661, 53.86892 ], [ -2.36625, 53.86921 ], [ -2.36609, 53.86934 ], [ -2.36553, 53.86979 ], [ -2.36541, 53.86989 ], [ -2.36471, 53.87049 ], [ -2.36434, 53.87081 ], [ -2.36432, 53.87083 ], [ -2.36373, 53.87134 ], [ -2.36325, 53.87177 ], [ -2.36287, 53.87216 ], [ -2.36285, 53.87217 ], [ -2.36221, 53.87281 ], [ -2.36196, 53.87308 ], [ -2.36109, 53.87408 ], [ -2.36037, 53.87499 ], [ -2.36014, 53.87529 ], [ -2.35987, 53.87566 ], [ -2.3596, 53.87601 ], [ -2.35946, 53.87621 ], [ -2.35929, 53.87645 ], [ -2.35896, 53.87695 ], [ -2.35843, 53.87783 ], [ -2.35793, 53.87863 ], [ -2.35776, 53.8789 ], [ -2.35749, 53.87931 ], [ -2.35735, 53.87956 ], [ -2.35706, 53.88009 ], [ -2.35678, 53.88056 ], [ -2.35653, 53.88098 ], [ -2.35637, 53.88124 ], [ -2.35601, 53.88183 ], [ -2.35552, 53.88258 ], [ -2.35548, 53.88264 ], [ -2.35479, 53.88362 ], [ -2.35478, 53.88364 ], [ -2.35434, 53.88426 ], [ -2.35397, 53.88475 ], [ -2.35378, 53.88499 ], [ -2.35333, 53.88556 ], [ -2.35325, 53.88564 ], [ -2.35311, 53.8858 ], [ -2.35281, 53.88614 ], [ -2.35268, 53.88627 ], [ -2.35252, 53.88643 ], [ -2.35208, 53.88688 ], [ -2.35128, 53.88763 ], [ -2.35118, 53.88771 ], [ -2.35041, 53.88841 ], [ -2.3501, 53.8887 ], [ -2.34961, 53.88917 ], [ -2.34913, 53.88963 ], [ -2.34754, 53.89116 ], [ -2.34738, 53.89132 ], [ -2.34724, 53.89145 ], [ -2.34606, 53.89257 ], [ -2.34569, 53.89306 ], [ -2.34558, 53.89321 ], [ -2.34523, 53.89376 ], [ -2.34508, 53.89408 ], [ -2.34494, 53.89437 ], [ -2.3448, 53.89478 ], [ -2.34477, 53.89496 ], [ -2.34473, 53.89514 ], [ -2.34473, 53.89515 ], [ -2.34465, 53.89577 ], [ -2.34465, 53.89586 ], [ -2.34466, 53.89604 ], [ -2.34467, 53.89622 ], [ -2.34468, 53.89637 ], [ -2.34485, 53.89716 ], [ -2.34499, 53.89759 ], [ -2.34521, 53.89836 ], [ -2.34535, 53.89895 ], [ -2.34542, 53.89927 ], [ -2.34554, 53.89984 ], [ -2.34566, 53.90048 ], [ -2.34573, 53.90093 ], [ -2.34577, 53.90106 ], [ -2.34583, 53.90131 ], [ -2.34602, 53.90204 ], [ -2.34608, 53.90229 ], [ -2.34623, 53.90293 ], [ -2.34627, 53.90325 ], [ -2.3463, 53.90347 ], [ -2.34629, 53.90366 ], [ -2.34628, 53.90381 ], [ -2.34624, 53.90395 ], [ -2.34618, 53.90415 ], [ -2.34607, 53.90437 ], [ -2.34592, 53.90463 ], [ -2.34577, 53.90482 ], [ -2.34577, 53.90483 ], [ -2.34563, 53.90499 ], [ -2.34548, 53.90515 ], [ -2.34535, 53.90531 ], [ -2.34503, 53.90564 ], [ -2.34485, 53.90573 ], [ -2.34477, 53.9058 ], [ -2.34469, 53.90587 ], [ -2.34454, 53.90598 ], [ -2.34432, 53.90612 ], [ -2.34428, 53.90615 ], [ -2.34412, 53.90624 ], [ -2.34396, 53.90632 ], [ -2.34375, 53.90642 ], [ -2.34352, 53.90651 ], [ -2.34319, 53.90663 ], [ -2.34296, 53.90675 ], [ -2.34217, 53.90703 ], [ -2.3421, 53.90705 ], [ -2.3417, 53.90719 ], [ -2.34164, 53.90721 ], [ -2.34139, 53.90731 ], [ -2.34121, 53.90737 ], [ -2.34073, 53.90756 ], [ -2.34062, 53.90761 ], [ -2.34037, 53.90771 ], [ -2.34018, 53.90779 ], [ -2.33988, 53.90793 ], [ -2.33964, 53.90803 ], [ -2.3394, 53.90814 ], [ -2.3393995, 53.908144 ], [ -2.33963, 53.90836 ], [ -2.33974, 53.90847 ], [ -2.3398, 53.90855 ], [ -2.33983, 53.9086 ], [ -2.33985, 53.90865 ], [ -2.33987, 53.9087 ], [ -2.33989, 53.90878 ], [ -2.34, 53.90917 ], [ -2.34003, 53.90925 ], [ -2.34005, 53.9093 ], [ -2.34013, 53.9094 ], [ -2.34017, 53.90944 ], [ -2.34019, 53.90946 ], [ -2.34023, 53.9095 ], [ -2.34026, 53.90953 ], [ -2.3405, 53.90968 ], [ -2.34097, 53.90996 ], [ -2.34115, 53.91007 ], [ -2.34142, 53.91027 ], [ -2.34153, 53.91038 ], [ -2.34163, 53.9105 ], [ -2.34169, 53.91057 ], [ -2.34195, 53.9109 ], [ -2.34201, 53.91098 ], [ -2.34227, 53.91144 ], [ -2.34228, 53.91147 ], [ -2.34232, 53.91155 ], [ -2.34235, 53.91163 ], [ -2.34238, 53.91173 ], [ -2.3424, 53.91186 ], [ -2.3424, 53.91199 ], [ -2.34241, 53.9121 ], [ -2.34241, 53.9123 ], [ -2.34241, 53.91234 ], [ -2.34242, 53.91237 ], [ -2.34243, 53.91247 ], [ -2.34248, 53.91292 ], [ -2.34251, 53.91331 ], [ -2.34251, 53.91335 ], [ -2.3425, 53.9134 ], [ -2.34248, 53.91346 ], [ -2.34246, 53.91351 ], [ -2.34235, 53.91371 ], [ -2.34229, 53.91381 ], [ -2.34223, 53.91389 ], [ -2.34167, 53.91468 ], [ -2.34162, 53.91476 ], [ -2.34148, 53.91499 ], [ -2.3414844, 53.9149904 ], [ -2.34159, 53.91501 ], [ -2.34167, 53.91502 ], [ -2.34171, 53.91502 ], [ -2.34176, 53.91502 ], [ -2.3419, 53.915 ], [ -2.34214, 53.91498 ], [ -2.34239, 53.91497 ], [ -2.34254, 53.91496 ], [ -2.34265, 53.91496 ], [ -2.34276, 53.91495 ], [ -2.34306, 53.91494 ], [ -2.34343, 53.91491 ], [ -2.3438, 53.91488 ], [ -2.34408, 53.91486 ], [ -2.34412, 53.91487 ], [ -2.34416, 53.91488 ], [ -2.3442, 53.91489 ], [ -2.34421, 53.9149 ], [ -2.34422, 53.91491 ], [ -2.34424, 53.91493 ], [ -2.34424, 53.91494 ], [ -2.34424, 53.91495 ], [ -2.34427, 53.91508 ], [ -2.3443, 53.91526 ], [ -2.3443, 53.91527 ], [ -2.34432, 53.91533 ], [ -2.34434, 53.91536 ], [ -2.34435, 53.91538 ], [ -2.34438, 53.9154 ], [ -2.34441, 53.91542 ], [ -2.34445, 53.91544 ], [ -2.3445, 53.91546 ], [ -2.34462, 53.9155 ], [ -2.34467, 53.91551 ], [ -2.34471, 53.91553 ], [ -2.34498, 53.91559 ], [ -2.34509, 53.91561 ], [ -2.34516, 53.91561 ], [ -2.34525, 53.91561 ], [ -2.3452488, 53.9156107 ], [ -2.34527, 53.91571 ], [ -2.34528, 53.91578 ], [ -2.34527, 53.91584 ], [ -2.34525, 53.9159 ], [ -2.34511, 53.91623 ], [ -2.34497, 53.91656 ], [ -2.34483, 53.91698 ], [ -2.34472, 53.91731 ], [ -2.34465, 53.91746 ], [ -2.3446, 53.91754 ], [ -2.34458, 53.91758 ], [ -2.34454, 53.9177 ], [ -2.3445, 53.91788 ], [ -2.3445, 53.91804 ], [ -2.34448, 53.9182 ], [ -2.34446, 53.91851 ], [ -2.34444, 53.91871 ], [ -2.34445, 53.91881 ], [ -2.3445, 53.91905 ], [ -2.34451, 53.9191 ], [ -2.34462, 53.91952 ], [ -2.34465, 53.91965 ], [ -2.34466, 53.91978 ], [ -2.34468, 53.92016 ], [ -2.34469, 53.92049 ], [ -2.3447, 53.9207 ], [ -2.34468, 53.92097 ], [ -2.34468, 53.92112 ], [ -2.34469, 53.92138 ], [ -2.34472, 53.92158 ], [ -2.34473, 53.92168 ], [ -2.34476, 53.92175 ], [ -2.34479, 53.92181 ], [ -2.34486, 53.92192 ], [ -2.3449, 53.92198 ], [ -2.34496, 53.92208 ], [ -2.34498, 53.92213 ], [ -2.345, 53.9222 ], [ -2.34501, 53.92227 ], [ -2.34501, 53.92239 ], [ -2.345, 53.92249 ], [ -2.34497, 53.92261 ], [ -2.34494, 53.92268 ], [ -2.3449, 53.92279 ], [ -2.34485, 53.92285 ], [ -2.34465, 53.92311 ], [ -2.34444, 53.92334 ], [ -2.34429, 53.92353 ], [ -2.34427, 53.92355 ], [ -2.34421, 53.92366 ], [ -2.34407, 53.92399 ], [ -2.34392, 53.92439 ], [ -2.34384, 53.92457 ], [ -2.34375, 53.92478 ], [ -2.3436, 53.925 ], [ -2.34352, 53.92511 ], [ -2.34343, 53.92525 ], [ -2.34332, 53.92541 ], [ -2.3432, 53.92558 ], [ -2.34315, 53.92565 ], [ -2.34297, 53.92591 ], [ -2.34263, 53.92639 ], [ -2.34262, 53.92641 ], [ -2.34254, 53.92653 ], [ -2.34226, 53.92691 ], [ -2.34224, 53.92695 ], [ -2.34219, 53.92701 ], [ -2.34213, 53.92707 ], [ -2.34207, 53.92714 ], [ -2.34198, 53.92723 ], [ -2.34193, 53.92728 ], [ -2.34182, 53.92738 ], [ -2.34172, 53.92747 ], [ -2.34166, 53.92753 ], [ -2.34165, 53.92755 ], [ -2.34162, 53.9276 ], [ -2.3416, 53.92763 ], [ -2.34159, 53.92767 ], [ -2.34158, 53.92771 ], [ -2.34157, 53.92772 ], [ -2.34152, 53.92803 ], [ -2.34151, 53.9281 ], [ -2.34149, 53.92817 ], [ -2.34145, 53.92824 ], [ -2.3414, 53.92832 ], [ -2.34133, 53.9284 ], [ -2.34129, 53.92844 ], [ -2.34117, 53.92859 ], [ -2.34111, 53.92872 ], [ -2.3411, 53.92874 ], [ -2.34103, 53.92891 ], [ -2.34099, 53.92899 ], [ -2.34093, 53.92912 ], [ -2.34086, 53.92929 ], [ -2.34085, 53.92933 ], [ -2.34084, 53.92935 ], [ -2.34084, 53.92937 ], [ -2.340844, 53.9293693 ], [ -2.34084, 53.92943 ], [ -2.34084, 53.92973 ], [ -2.34085, 53.92987 ], [ -2.34084, 53.92991 ], [ -2.34084, 53.93007 ], [ -2.34084, 53.93009 ], [ -2.34084, 53.93027 ], [ -2.34084, 53.93035 ], [ -2.34085, 53.93045 ], [ -2.34085, 53.93057 ], [ -2.34087, 53.93062 ], [ -2.34091, 53.93075 ], [ -2.34095, 53.93083 ], [ -2.34104, 53.93097 ], [ -2.34108, 53.93103 ], [ -2.34115, 53.93114 ], [ -2.34116, 53.93116 ], [ -2.34119, 53.9312 ], [ -2.34126, 53.93134 ], [ -2.34132, 53.93147 ], [ -2.34136, 53.93158 ], [ -2.34138, 53.93165 ], [ -2.3414, 53.9317 ], [ -2.34146, 53.93183 ], [ -2.34151, 53.93195 ], [ -2.34153, 53.93201 ], [ -2.34159, 53.93219 ], [ -2.34165, 53.93236 ], [ -2.34165, 53.93237 ], [ -2.34172, 53.93254 ], [ -2.34173, 53.93258 ], [ -2.34173, 53.93261 ], [ -2.34172, 53.93268 ], [ -2.34167, 53.93278 ], [ -2.34163, 53.93284 ], [ -2.34154, 53.93298 ], [ -2.34153, 53.93301 ], [ -2.34144, 53.9332 ], [ -2.34139, 53.93339 ], [ -2.34135, 53.93355 ], [ -2.34133, 53.93368 ], [ -2.34133, 53.93371 ], [ -2.34134, 53.93383 ], [ -2.34136, 53.93395 ], [ -2.34138, 53.93404 ], [ -2.34139, 53.93407 ], [ -2.34141, 53.93411 ], [ -2.34148, 53.9342 ], [ -2.34152, 53.93425 ], [ -2.34157, 53.9343 ], [ -2.34163, 53.93434 ], [ -2.34167, 53.93438 ], [ -2.34168, 53.93438 ], [ -2.34184, 53.93449 ], [ -2.34188, 53.93452 ], [ -2.34189, 53.93453 ], [ -2.34193, 53.93457 ], [ -2.34196, 53.93459 ], [ -2.34198, 53.93461 ], [ -2.34203, 53.93468 ], [ -2.34215, 53.93484 ], [ -2.34227, 53.93501 ], [ -2.34237, 53.93515 ], [ -2.34238, 53.93517 ], [ -2.34248, 53.93535 ], [ -2.3425, 53.93538 ], [ -2.34251, 53.93544 ], [ -2.34252, 53.93548 ], [ -2.34252, 53.93552 ], [ -2.34252, 53.93555 ], [ -2.34251, 53.9356 ], [ -2.34248, 53.9357 ], [ -2.34243, 53.93578 ], [ -2.34239, 53.93584 ], [ -2.34232, 53.93592 ], [ -2.34218, 53.93606 ], [ -2.34204, 53.9362 ], [ -2.34193, 53.93631 ], [ -2.34192, 53.93634 ], [ -2.34183, 53.93646 ], [ -2.34181, 53.93651 ], [ -2.34177, 53.93659 ], [ -2.34174, 53.93668 ], [ -2.34171, 53.93678 ], [ -2.34168, 53.93686 ], [ -2.34166, 53.93697 ], [ -2.34164, 53.93704 ], [ -2.3416, 53.93713 ], [ -2.34153, 53.93726 ], [ -2.34148, 53.93734 ], [ -2.34136, 53.93748 ], [ -2.3413, 53.93753 ], [ -2.34125, 53.93758 ], [ -2.34114, 53.93766 ], [ -2.34103, 53.93776 ], [ -2.34094, 53.93785 ], [ -2.34089, 53.93792 ], [ -2.34086, 53.93798 ], [ -2.34085, 53.938 ], [ -2.34084, 53.93801 ], [ -2.34084, 53.93803 ], [ -2.34082, 53.93812 ], [ -2.34082, 53.93822 ], [ -2.34081, 53.93828 ], [ -2.34078, 53.9384 ], [ -2.34077, 53.93846 ], [ -2.34075, 53.93851 ], [ -2.34074, 53.93853 ], [ -2.34073, 53.93856 ], [ -2.3407, 53.93862 ], [ -2.34066, 53.93867 ], [ -2.34062, 53.93871 ], [ -2.34052, 53.93879 ], [ -2.34041, 53.93886 ], [ -2.34034, 53.93889 ], [ -2.34015, 53.93896 ], [ -2.34004, 53.939 ], [ -2.33994, 53.93905 ], [ -2.33986, 53.93909 ], [ -2.3398, 53.93916 ], [ -2.33964, 53.93942 ], [ -2.3396, 53.93949 ], [ -2.33946, 53.93971 ], [ -2.3394, 53.93978 ], [ -2.3393, 53.93987 ], [ -2.33924, 53.9399 ], [ -2.33913, 53.93996 ], [ -2.33901, 53.94002 ], [ -2.3390091, 53.9400212 ], [ -2.33912, 53.94006 ], [ -2.33982, 53.94028 ], [ -2.3402, 53.94039 ], [ -2.34055, 53.9405 ], [ -2.34079, 53.94057 ], [ -2.34109, 53.94066 ], [ -2.34123, 53.94069 ], [ -2.34132, 53.9407 ], [ -2.34146, 53.94072 ], [ -2.34168, 53.94072 ], [ -2.34201, 53.9407 ], [ -2.34213, 53.94069 ], [ -2.34222, 53.94069 ], [ -2.34227, 53.94069 ], [ -2.34247, 53.94071 ], [ -2.34254, 53.94071 ], [ -2.34271, 53.94073 ], [ -2.34286, 53.94074 ], [ -2.34295, 53.94074 ], [ -2.34302, 53.94075 ], [ -2.3431, 53.94075 ], [ -2.34323, 53.94074 ], [ -2.34343, 53.94072 ], [ -2.34349, 53.94072 ], [ -2.34354, 53.94072 ], [ -2.34362, 53.94072 ], [ -2.34367, 53.94072 ], [ -2.34372, 53.94073 ], [ -2.34381, 53.94074 ], [ -2.34384, 53.94074 ], [ -2.34388, 53.94075 ], [ -2.34394, 53.94077 ], [ -2.34399, 53.94079 ], [ -2.34408, 53.94082 ], [ -2.34416, 53.94084 ], [ -2.34422, 53.94086 ], [ -2.3442214, 53.9408564 ], [ -2.34423, 53.94093 ], [ -2.34423, 53.94096 ], [ -2.34423, 53.94101 ], [ -2.34424, 53.94103 ], [ -2.34424, 53.94105 ], [ -2.34425, 53.94107 ], [ -2.34427, 53.94111 ], [ -2.34429, 53.94113 ], [ -2.34431, 53.94115 ], [ -2.34432, 53.94116 ], [ -2.34443, 53.9412 ], [ -2.34475, 53.94131 ], [ -2.34477, 53.94131 ], [ -2.34492, 53.94137 ], [ -2.34504, 53.94143 ], [ -2.3451, 53.94147 ], [ -2.34515, 53.94151 ], [ -2.34518, 53.94154 ], [ -2.34519, 53.94156 ], [ -2.3452, 53.94158 ], [ -2.34524, 53.9417 ], [ -2.34526, 53.94183 ], [ -2.34528, 53.94192 ], [ -2.34529, 53.94203 ], [ -2.34533, 53.94214 ], [ -2.3454, 53.94227 ], [ -2.34543, 53.94232 ], [ -2.34552, 53.94247 ], [ -2.34565, 53.94264 ], [ -2.34576, 53.94277 ], [ -2.34579, 53.94279 ], [ -2.34589, 53.94291 ], [ -2.34595, 53.943 ], [ -2.346, 53.94308 ], [ -2.34601, 53.94309 ], [ -2.34622, 53.94345 ], [ -2.34627, 53.94353 ], [ -2.3463, 53.9436 ], [ -2.34641, 53.94378 ], [ -2.34645, 53.94385 ], [ -2.34651, 53.94393 ], [ -2.34652, 53.94394 ], [ -2.34655, 53.94398 ], [ -2.34673, 53.94414 ], [ -2.34705, 53.94442 ], [ -2.34747, 53.94477 ], [ -2.34764, 53.9449 ], [ -2.34785, 53.94506 ], [ -2.34802, 53.94519 ], [ -2.34812, 53.94527 ], [ -2.34816, 53.94531 ], [ -2.34819, 53.94534 ], [ -2.34823, 53.9454 ], [ -2.34826, 53.94543 ], [ -2.34827, 53.94545 ], [ -2.34836, 53.94563 ], [ -2.34841, 53.94576 ], [ -2.34843, 53.94584 ], [ -2.34862, 53.9464 ], [ -2.34874, 53.94675 ], [ -2.34875, 53.94677 ], [ -2.34884, 53.94711 ], [ -2.349, 53.94768 ], [ -2.34902, 53.94771 ], [ -2.34904, 53.94774 ], [ -2.34906, 53.94776 ], [ -2.34912, 53.9478 ], [ -2.34927, 53.94785 ], [ -2.34948, 53.9479 ], [ -2.34949, 53.94791 ], [ -2.34974, 53.94797 ], [ -2.34999, 53.94802 ], [ -2.35014, 53.94804 ], [ -2.35029, 53.94806 ], [ -2.35036, 53.94807 ], [ -2.35067, 53.94809 ], [ -2.35073, 53.9481 ], [ -2.35085, 53.94811 ], [ -2.35097, 53.94812 ], [ -2.35127, 53.94814 ], [ -2.35157, 53.94817 ], [ -2.35163, 53.94817 ], [ -2.35203, 53.94821 ], [ -2.35211, 53.94821 ], [ -2.35217, 53.94822 ], [ -2.35218, 53.94822 ], [ -2.35222, 53.94823 ], [ -2.35229, 53.94826 ], [ -2.35244, 53.9483 ], [ -2.35245, 53.94831 ], [ -2.35255, 53.94835 ], [ -2.35269, 53.94842 ], [ -2.3527, 53.94842 ], [ -2.35287, 53.94852 ], [ -2.35291, 53.94854 ], [ -2.35295, 53.94857 ], [ -2.35307, 53.94864 ], [ -2.35312, 53.94867 ], [ -2.35353, 53.94894 ], [ -2.35381, 53.94912 ], [ -2.35414, 53.94934 ], [ -2.35428, 53.94943 ], [ -2.35435, 53.94947 ], [ -2.35456, 53.9496 ], [ -2.35458, 53.94961 ], [ -2.35498, 53.94986 ], [ -2.355, 53.94987 ], [ -2.35518, 53.95 ], [ -2.35538, 53.95014 ], [ -2.3555, 53.95023 ], [ -2.35557, 53.95028 ], [ -2.35577, 53.95041 ], [ -2.3558, 53.95044 ], [ -2.35608, 53.95062 ], [ -2.35638, 53.95081 ], [ -2.35674, 53.95103 ], [ -2.35693, 53.95114 ], [ -2.35715, 53.95128 ], [ -2.35716, 53.95129 ], [ -2.35736, 53.95142 ], [ -2.35754, 53.95154 ], [ -2.35768, 53.95163 ], [ -2.35788, 53.95176 ], [ -2.35794, 53.95181 ], [ -2.35797, 53.95183 ], [ -2.35803, 53.95187 ], [ -2.35811, 53.95194 ], [ -2.35814, 53.95197 ], [ -2.35818, 53.95201 ], [ -2.35823, 53.95208 ], [ -2.35827, 53.95214 ], [ -2.3583, 53.95218 ], [ -2.35836, 53.95225 ], [ -2.3584, 53.9523 ], [ -2.35851, 53.95241 ], [ -2.35855, 53.95245 ], [ -2.35859, 53.95249 ], [ -2.35867, 53.95256 ], [ -2.35885, 53.9527 ], [ -2.35907, 53.9529 ], [ -2.35924, 53.95305 ], [ -2.35957, 53.95335 ], [ -2.35973, 53.9535 ], [ -2.35974, 53.9535 ], [ -2.35981, 53.95359 ], [ -2.35997, 53.95375 ], [ -2.36002, 53.95381 ], [ -2.36006, 53.95387 ], [ -2.36011, 53.95395 ], [ -2.36013, 53.95399 ], [ -2.3602, 53.95412 ], [ -2.36022, 53.95416 ], [ -2.36023, 53.95422 ], [ -2.36028, 53.95446 ], [ -2.36032, 53.95482 ], [ -2.36033, 53.95487 ], [ -2.36037, 53.95501 ], [ -2.36045, 53.95516 ], [ -2.36052, 53.95531 ], [ -2.36073, 53.95568 ], [ -2.36109, 53.95628 ], [ -2.36112, 53.95632 ], [ -2.36132, 53.95666 ], [ -2.36182, 53.95752 ], [ -2.36187, 53.95759 ], [ -2.36222, 53.95817 ], [ -2.36257, 53.95875 ], [ -2.36269, 53.95898 ], [ -2.36296, 53.95954 ], [ -2.36319, 53.96001 ], [ -2.36339, 53.9604 ], [ -2.36357, 53.96075 ], [ -2.3638, 53.96127 ], [ -2.36382, 53.9613 ], [ -2.36382, 53.96145 ], [ -2.36383, 53.96152 ], [ -2.36383, 53.96171 ], [ -2.36381, 53.9619 ], [ -2.3638, 53.96199 ], [ -2.36381, 53.96207 ], [ -2.36384, 53.9621 ], [ -2.36385, 53.96213 ], [ -2.36389, 53.96217 ], [ -2.36392, 53.96218 ], [ -2.36397, 53.9622 ], [ -2.36408, 53.96223 ], [ -2.36429, 53.96226 ], [ -2.36429, 53.96227 ], [ -2.36444, 53.96229 ], [ -2.36466, 53.96233 ], [ -2.36473, 53.96235 ], [ -2.36485, 53.96238 ], [ -2.36498, 53.96244 ], [ -2.36506, 53.9625 ], [ -2.36507, 53.96251 ], [ -2.3651, 53.96254 ], [ -2.36518, 53.96264 ], [ -2.36536, 53.96288 ], [ -2.36544, 53.96299 ], [ -2.36552, 53.96309 ], [ -2.36558, 53.96317 ], [ -2.36565, 53.96325 ], [ -2.36572, 53.96333 ], [ -2.36573, 53.96333 ], [ -2.36587, 53.96348 ], [ -2.36594, 53.96356 ], [ -2.36596, 53.96358 ], [ -2.36616, 53.96381 ], [ -2.36623, 53.96388 ], [ -2.36632, 53.96399 ], [ -2.36637, 53.96404 ], [ -2.36661, 53.96427 ], [ -2.36673, 53.96437 ], [ -2.36681, 53.96442 ], [ -2.36692, 53.96447 ], [ -2.36695, 53.96448 ], [ -2.36706, 53.96453 ], [ -2.36725, 53.96459 ], [ -2.368, 53.96478 ], [ -2.36857, 53.96493 ], [ -2.36871, 53.96497 ], [ -2.36885, 53.965 ], [ -2.36914, 53.96508 ], [ -2.36955, 53.96518 ], [ -2.36966, 53.96521 ], [ -2.36983, 53.96526 ], [ -2.37, 53.9653 ], [ -2.37006, 53.96532 ], [ -2.37023, 53.96539 ], [ -2.37025, 53.9654 ], [ -2.37035, 53.96544 ], [ -2.37057, 53.96553 ], [ -2.3706, 53.96555 ], [ -2.37071, 53.96559 ], [ -2.37087, 53.96562 ], [ -2.37088, 53.96563 ], [ -2.37134, 53.96573 ], [ -2.37144, 53.96576 ], [ -2.37148, 53.96577 ], [ -2.3717, 53.96585 ], [ -2.37171, 53.96586 ], [ -2.37194, 53.96596 ], [ -2.37203, 53.966 ], [ -2.37218, 53.96607 ], [ -2.37243, 53.96618 ], [ -2.37255, 53.96624 ], [ -2.37295, 53.96639 ], [ -2.3729547, 53.9663879 ], [ -2.37296, 53.96642 ], [ -2.37298, 53.96645 ], [ -2.37304, 53.9665 ], [ -2.37316, 53.96667 ], [ -2.37328, 53.96683 ], [ -2.37359, 53.9672 ], [ -2.37398, 53.96767 ], [ -2.3742, 53.96802 ], [ -2.37439, 53.96837 ], [ -2.37442, 53.96842 ], [ -2.37455, 53.96872 ], [ -2.37462, 53.96889 ], [ -2.37466, 53.96897 ], [ -2.37476, 53.96926 ], [ -2.37481, 53.96941 ], [ -2.37482, 53.96952 ], [ -2.37482, 53.9696 ], [ -2.37482, 53.96964 ], [ -2.3748, 53.96989 ], [ -2.37474, 53.97037 ], [ -2.37466, 53.97067 ], [ -2.37463, 53.97084 ], [ -2.37444, 53.97127 ], [ -2.37432, 53.97155 ], [ -2.37423, 53.97175 ], [ -2.37409, 53.97203 ], [ -2.37387, 53.97229 ], [ -2.37364, 53.97255 ], [ -2.37355, 53.97265 ], [ -2.3735, 53.97273 ], [ -2.37346, 53.97281 ], [ -2.37345, 53.97286 ], [ -2.37344, 53.97296 ], [ -2.37348, 53.973 ], [ -2.37351, 53.97303 ], [ -2.37356, 53.97307 ], [ -2.37362, 53.97311 ], [ -2.37389, 53.97324 ], [ -2.37439, 53.97347 ], [ -2.37464, 53.97359 ], [ -2.37473, 53.97363 ], [ -2.37485, 53.9737 ], [ -2.37497, 53.97378 ], [ -2.37501, 53.97381 ], [ -2.37506, 53.97386 ], [ -2.37517, 53.97396 ], [ -2.37522, 53.97401 ], [ -2.37536, 53.97415 ], [ -2.37543, 53.97421 ], [ -2.37544, 53.97422 ], [ -2.37548, 53.97427 ], [ -2.37549, 53.97427 ], [ -2.37555, 53.97435 ], [ -2.3756, 53.9744 ], [ -2.37564, 53.97444 ], [ -2.37572, 53.97451 ], [ -2.37581, 53.97461 ], [ -2.37592, 53.97471 ], [ -2.37595, 53.97474 ], [ -2.37606, 53.97484 ], [ -2.37611, 53.97489 ], [ -2.37619, 53.97497 ], [ -2.37626, 53.97505 ], [ -2.37633, 53.97514 ], [ -2.37637, 53.97521 ], [ -2.37638, 53.97523 ], [ -2.37643, 53.97533 ], [ -2.37645, 53.97539 ], [ -2.37649, 53.97548 ], [ -2.37658, 53.97574 ], [ -2.37661, 53.97582 ], [ -2.37672, 53.9761 ], [ -2.3768, 53.97632 ], [ -2.37684, 53.97642 ], [ -2.3769, 53.97653 ], [ -2.37696, 53.97661 ], [ -2.37696, 53.97662 ], [ -2.37705, 53.9767 ], [ -2.37712, 53.97676 ], [ -2.37715, 53.97678 ], [ -2.37726, 53.97685 ], [ -2.37737, 53.97691 ], [ -2.3775, 53.97696 ], [ -2.37763, 53.97701 ], [ -2.37776, 53.97706 ], [ -2.37791, 53.97708 ], [ -2.37815, 53.97712 ], [ -2.37816, 53.97712 ], [ -2.37844, 53.97717 ], [ -2.37852, 53.97718 ], [ -2.37888, 53.97723 ], [ -2.37914, 53.97727 ], [ -2.3793, 53.9773 ], [ -2.37946, 53.97733 ], [ -2.37976, 53.9774 ], [ -2.37996, 53.97745 ], [ -2.38007, 53.9775 ], [ -2.3801, 53.97752 ], [ -2.38013, 53.97755 ], [ -2.38016, 53.97762 ], [ -2.38019, 53.97773 ], [ -2.3802, 53.97775 ], [ -2.38022, 53.97782 ], [ -2.38026, 53.97789 ], [ -2.38027, 53.9779 ], [ -2.38041, 53.97806 ], [ -2.38054, 53.97822 ], [ -2.38067, 53.97838 ], [ -2.3808, 53.97855 ], [ -2.38093, 53.97871 ], [ -2.38097, 53.97876 ], [ -2.38105, 53.97888 ], [ -2.38115, 53.97901 ], [ -2.38153, 53.97949 ], [ -2.38165, 53.97965 ], [ -2.38169, 53.9797 ], [ -2.38198, 53.98009 ], [ -2.38203, 53.98015 ], [ -2.38215, 53.98031 ], [ -2.38223, 53.98042 ], [ -2.38233, 53.98053 ], [ -2.38242, 53.98064 ], [ -2.38251, 53.98075 ], [ -2.38256, 53.9808 ], [ -2.38261, 53.98085 ], [ -2.38279, 53.98106 ], [ -2.38302, 53.98137 ], [ -2.38308, 53.98145 ], [ -2.3832, 53.98161 ], [ -2.38333, 53.98178 ], [ -2.38339, 53.98185 ], [ -2.38345, 53.98194 ], [ -2.38353, 53.98204 ], [ -2.38358, 53.9821 ], [ -2.38372, 53.98226 ], [ -2.38388, 53.98247 ], [ -2.38401, 53.98264 ], [ -2.38414, 53.9828 ], [ -2.38434, 53.98307 ], [ -2.38439, 53.98313 ], [ -2.38451, 53.9833 ], [ -2.38455, 53.98335 ], [ -2.38466, 53.98347 ], [ -2.38479, 53.98361 ], [ -2.38491, 53.98374 ], [ -2.38501, 53.98385 ], [ -2.38507, 53.98392 ], [ -2.38517, 53.98403 ], [ -2.38521, 53.98407 ], [ -2.38543, 53.98432 ], [ -2.38572, 53.98466 ], [ -2.38576, 53.98472 ], [ -2.38589, 53.98488 ], [ -2.3859, 53.98489 ], [ -2.38601, 53.98501 ], [ -2.38615, 53.98517 ], [ -2.38618, 53.9852 ], [ -2.38632, 53.98536 ], [ -2.38633, 53.98538 ], [ -2.38646, 53.98552 ], [ -2.3866, 53.98568 ], [ -2.38663, 53.98571 ], [ -2.38675, 53.98584 ], [ -2.38688, 53.98598 ], [ -2.38689, 53.98599 ], [ -2.38704, 53.98615 ], [ -2.38707, 53.98619 ], [ -2.38718, 53.98631 ], [ -2.38733, 53.98647 ], [ -2.38747, 53.98663 ], [ -2.38761, 53.98679 ], [ -2.38767, 53.98685 ], [ -2.38775, 53.98695 ], [ -2.38789, 53.98711 ], [ -2.38803, 53.98727 ], [ -2.38821, 53.98748 ], [ -2.38831, 53.98759 ], [ -2.38844, 53.98775 ], [ -2.38856, 53.98789 ], [ -2.38878, 53.98814 ], [ -2.38886, 53.98823 ], [ -2.38899, 53.98837 ], [ -2.38901, 53.98839 ], [ -2.38911, 53.98853 ], [ -2.38915, 53.9886 ], [ -2.38921, 53.9887 ], [ -2.38923, 53.98875 ], [ -2.38929, 53.98892 ], [ -2.38933, 53.98908 ], [ -2.38936, 53.98924 ], [ -2.38936, 53.98925 ], [ -2.38939, 53.9894 ], [ -2.38939, 53.98941 ], [ -2.38943, 53.98956 ], [ -2.38948, 53.98968 ], [ -2.38952, 53.98977 ], [ -2.38955, 53.98984 ], [ -2.38961, 53.98994 ], [ -2.38963, 53.98998 ], [ -2.38969, 53.99008 ], [ -2.38973, 53.99014 ], [ -2.38976, 53.99017 ], [ -2.38979, 53.9902 ], [ -2.38983, 53.99022 ], [ -2.38988, 53.99026 ], [ -2.3898799, 53.9902551 ], [ -2.38993, 53.99028 ], [ -2.38998, 53.99029 ], [ -2.39003, 53.99031 ], [ -2.39008, 53.99032 ], [ -2.3902, 53.99034 ], [ -2.39053, 53.99037 ], [ -2.39099, 53.99041 ], [ -2.39144, 53.99046 ], [ -2.39204, 53.99051 ], [ -2.39246, 53.99055 ], [ -2.39295, 53.99061 ], [ -2.39311, 53.99062 ], [ -2.39325, 53.99064 ], [ -2.3935, 53.99066 ], [ -2.39381, 53.99069 ], [ -2.39385, 53.9907 ], [ -2.39392, 53.99071 ], [ -2.39403, 53.99073 ], [ -2.39414, 53.99076 ], [ -2.39415, 53.99077 ], [ -2.39427, 53.99081 ], [ -2.39438, 53.99087 ], [ -2.39439, 53.99088 ], [ -2.39448, 53.99094 ], [ -2.39457, 53.99101 ], [ -2.39467, 53.99109 ], [ -2.39477, 53.99117 ], [ -2.39486, 53.99125 ], [ -2.39493, 53.99131 ], [ -2.39521, 53.99154 ], [ -2.39535, 53.99166 ], [ -2.3954, 53.9917 ], [ -2.39552, 53.99181 ], [ -2.39553, 53.99181 ], [ -2.39571, 53.99195 ], [ -2.39586, 53.99205 ], [ -2.39591, 53.99208 ], [ -2.396, 53.99213 ], [ -2.39613, 53.99221 ], [ -2.39613, 53.99222 ], [ -2.39626, 53.9923 ], [ -2.39633, 53.99235 ], [ -2.39638, 53.99238 ], [ -2.39645, 53.99244 ], [ -2.39651, 53.99249 ], [ -2.39652, 53.9925 ], [ -2.39661, 53.99261 ], [ -2.39666, 53.99265 ], [ -2.39668, 53.99267 ], [ -2.39676, 53.99274 ], [ -2.39684, 53.9928 ], [ -2.39691, 53.99284 ], [ -2.39701, 53.99289 ], [ -2.39707, 53.99291 ], [ -2.39708, 53.99292 ], [ -2.39716, 53.99295 ], [ -2.39727, 53.99298 ], [ -2.39734, 53.993 ], [ -2.39759, 53.99307 ], [ -2.39761, 53.99307 ], [ -2.39785, 53.99314 ], [ -2.39789, 53.99315 ], [ -2.39817, 53.99323 ], [ -2.39818, 53.99323 ], [ -2.39844, 53.9933 ], [ -2.39857, 53.99334 ], [ -2.39872, 53.99338 ], [ -2.39899, 53.99347 ], [ -2.399, 53.99347 ], [ -2.39924, 53.99354 ], [ -2.39926, 53.99355 ], [ -2.3994, 53.99358 ], [ -2.39951, 53.99361 ], [ -2.39955, 53.99361 ], [ -2.39962, 53.99362 ], [ -2.39973, 53.99363 ], [ -2.40016, 53.99363 ], [ -2.40077, 53.99364 ], [ -2.40107, 53.99364 ], [ -2.40138, 53.99364 ], [ -2.40169, 53.99364 ], [ -2.40199, 53.99364 ], [ -2.4021, 53.99365 ], [ -2.4022, 53.99365 ], [ -2.40224, 53.99365 ], [ -2.40251, 53.99365 ], [ -2.40253, 53.99365 ], [ -2.40294, 53.99365 ], [ -2.40302, 53.99365 ], [ -2.40307, 53.99366 ], [ -2.4031, 53.99368 ], [ -2.40315, 53.99372 ], [ -2.40316, 53.99375 ], [ -2.40317, 53.9938 ], [ -2.4032, 53.99439 ], [ -2.40321, 53.99458 ], [ -2.40323, 53.99471 ], [ -2.40326, 53.99481 ], [ -2.4033, 53.99489 ], [ -2.40332, 53.99493 ], [ -2.40341, 53.9951 ], [ -2.4035, 53.99527 ], [ -2.40358, 53.99544 ], [ -2.40371, 53.99569 ], [ -2.40384, 53.99596 ], [ -2.40398, 53.9962 ], [ -2.404, 53.99625 ], [ -2.40401, 53.9963 ], [ -2.40401, 53.99635 ], [ -2.40399, 53.99643 ], [ -2.40396, 53.9965 ], [ -2.40366, 53.99699 ], [ -2.40364, 53.99703 ], [ -2.40353, 53.9972 ], [ -2.40344, 53.99733 ], [ -2.40342, 53.99736 ], [ -2.40331, 53.99753 ], [ -2.40322, 53.99766 ], [ -2.4032, 53.9977 ], [ -2.40309, 53.99787 ], [ -2.40267, 53.9985 ], [ -2.40264, 53.99854 ], [ -2.40242, 53.99887 ], [ -2.40231, 53.99904 ], [ -2.40223, 53.99917 ], [ -2.4022, 53.99921 ], [ -2.40203, 53.99947 ], [ -2.40202, 53.99951 ], [ -2.40202, 53.99956 ], [ -2.40203, 53.99961 ], [ -2.40206, 53.99966 ], [ -2.4021, 53.99971 ], [ -2.40216, 53.99975 ], [ -2.40222, 53.9998 ], [ -2.40259, 54.00009 ], [ -2.40277, 54.00024 ], [ -2.40295, 54.00038 ], [ -2.40313, 54.00052 ], [ -2.40319, 54.00057 ], [ -2.40335, 54.00065 ], [ -2.40336, 54.00065 ], [ -2.40352, 54.00073 ], [ -2.40359, 54.00076 ], [ -2.40383, 54.00087 ], [ -2.40407, 54.00099 ], [ -2.40479, 54.00132 ], [ -2.40503, 54.00143 ], [ -2.40527, 54.00154 ], [ -2.40564, 54.00171 ], [ -2.40595, 54.00186 ], [ -2.40605, 54.0019 ], [ -2.40629, 54.00202 ], [ -2.40694, 54.00233 ], [ -2.40748, 54.00258 ], [ -2.40766, 54.00266 ], [ -2.40795, 54.00281 ], [ -2.40834, 54.00299 ], [ -2.40865, 54.00313 ], [ -2.40867, 54.00314 ], [ -2.40891, 54.00325 ], [ -2.40895, 54.00327 ], [ -2.4093, 54.00343 ], [ -2.40962, 54.00358 ], [ -2.40971, 54.00363 ], [ -2.40977, 54.00368 ], [ -2.40981, 54.00371 ], [ -2.4098149, 54.0037138 ], [ -2.40985, 54.00378 ], [ -2.40986, 54.00381 ], [ -2.40986, 54.00384 ], [ -2.40984, 54.00389 ], [ -2.4098, 54.00394 ], [ -2.40973, 54.004 ], [ -2.40954, 54.00414 ], [ -2.4095, 54.00417 ], [ -2.40932, 54.00431 ], [ -2.4093, 54.00432 ], [ -2.40914, 54.00444 ], [ -2.40897, 54.00456 ], [ -2.40893, 54.00459 ], [ -2.40874, 54.00473 ], [ -2.4086, 54.00484 ], [ -2.40856, 54.00487 ], [ -2.40837, 54.00502 ], [ -2.40819, 54.00516 ], [ -2.40808, 54.00524 ], [ -2.408, 54.0053 ], [ -2.40782, 54.00545 ], [ -2.40766, 54.00558 ], [ -2.40764, 54.00559 ], [ -2.40746, 54.00574 ], [ -2.40733, 54.00584 ], [ -2.40727, 54.00588 ], [ -2.4069, 54.00618 ], [ -2.40673, 54.00632 ], [ -2.40661, 54.00642 ], [ -2.40645, 54.00655 ], [ -2.40637, 54.00661 ], [ -2.40628, 54.00667 ], [ -2.40619, 54.00673 ], [ -2.40617, 54.00674 ], [ -2.4061, 54.00678 ], [ -2.40601, 54.00683 ], [ -2.40592, 54.00688 ], [ -2.40584, 54.00694 ], [ -2.40576, 54.007 ], [ -2.40569, 54.00707 ], [ -2.4055, 54.00723 ], [ -2.40541, 54.0073 ], [ -2.40536, 54.00734 ], [ -2.40523, 54.00745 ], [ -2.4051, 54.00755 ], [ -2.4049, 54.00772 ], [ -2.40454, 54.00801 ], [ -2.40442, 54.00811 ], [ -2.40425, 54.00823 ], [ -2.40416, 54.0083 ], [ -2.40406, 54.00837 ], [ -2.40397, 54.00844 ], [ -2.40379, 54.00858 ], [ -2.40378, 54.00859 ], [ -2.40363, 54.00871 ], [ -2.40351, 54.0088 ], [ -2.40342, 54.00887 ], [ -2.40335, 54.00893 ], [ -2.40324, 54.00902 ], [ -2.40316, 54.00908 ], [ -2.40305, 54.00917 ], [ -2.40294, 54.00925 ], [ -2.40283, 54.00933 ], [ -2.40276, 54.0094 ], [ -2.40267, 54.00948 ], [ -2.40237, 54.00974 ], [ -2.40233, 54.00977 ], [ -2.4022, 54.00988 ], [ -2.40215, 54.00991 ], [ -2.40192, 54.01008 ], [ -2.40172, 54.01022 ], [ -2.40157, 54.01033 ], [ -2.40148, 54.01039 ], [ -2.40119, 54.01062 ], [ -2.40073, 54.01098 ], [ -2.40051, 54.01116 ], [ -2.40046, 54.01122 ], [ -2.40042, 54.01127 ], [ -2.40041, 54.01129 ], [ -2.40041, 54.01132 ], [ -2.40041, 54.01136 ], [ -2.40044, 54.01139 ], [ -2.40049, 54.01143 ], [ -2.40083, 54.01159 ], [ -2.40099, 54.01166 ], [ -2.40111, 54.01172 ], [ -2.4012, 54.01177 ], [ -2.40145, 54.0119 ], [ -2.40157, 54.01196 ], [ -2.40181, 54.01207 ], [ -2.40191, 54.01212 ], [ -2.40205, 54.01219 ], [ -2.40221, 54.01226 ], [ -2.40228, 54.0123 ], [ -2.40239, 54.01236 ], [ -2.40252, 54.01242 ], [ -2.40271, 54.01252 ], [ -2.40274, 54.01254 ], [ -2.40284, 54.01259 ], [ -2.40318, 54.01277 ], [ -2.40339, 54.01288 ], [ -2.4036, 54.01299 ], [ -2.40365, 54.01302 ], [ -2.40382, 54.01311 ], [ -2.40388, 54.01314 ], [ -2.4041, 54.01325 ], [ -2.40411, 54.01326 ], [ -2.40433, 54.01338 ], [ -2.40449, 54.01347 ], [ -2.40455, 54.01351 ], [ -2.40476, 54.01362 ], [ -2.40477, 54.01363 ], [ -2.40499, 54.01376 ], [ -2.4052, 54.01388 ], [ -2.40538, 54.01398 ], [ -2.40555, 54.01407 ], [ -2.40565, 54.01413 ], [ -2.40574, 54.01419 ], [ -2.40582, 54.01425 ], [ -2.40588, 54.01432 ], [ -2.40593, 54.0144 ], [ -2.40598, 54.01448 ], [ -2.40605, 54.0146 ], [ -2.40605, 54.01461 ], [ -2.40607, 54.01465 ], [ -2.40612, 54.01477 ], [ -2.40616, 54.01491 ], [ -2.40619, 54.01504 ], [ -2.40622, 54.01514 ], [ -2.40626, 54.01524 ], [ -2.40637, 54.01549 ], [ -2.40639, 54.01552 ], [ -2.40646, 54.01566 ], [ -2.40646, 54.01567 ], [ -2.40654, 54.01584 ], [ -2.40664, 54.01605 ], [ -2.40669, 54.01618 ], [ -2.40671, 54.01625 ], [ -2.40675, 54.01635 ], [ -2.40675, 54.01636 ], [ -2.40679, 54.01645 ], [ -2.40681, 54.01654 ], [ -2.40682, 54.01655 ], [ -2.40687, 54.01669 ], [ -2.40693, 54.01683 ], [ -2.40697, 54.01693 ], [ -2.40702, 54.01702 ], [ -2.40705, 54.01706 ], [ -2.4071, 54.01715 ], [ -2.40715, 54.01723 ], [ -2.40721, 54.01733 ], [ -2.40731, 54.01748 ], [ -2.40735, 54.01757 ], [ -2.40739, 54.01763 ], [ -2.40741, 54.01768 ], [ -2.40743, 54.01774 ], [ -2.40742, 54.0178 ], [ -2.4074, 54.01787 ], [ -2.40738, 54.01792 ], [ -2.40736, 54.01795 ], [ -2.40732, 54.01803 ], [ -2.40727, 54.01808 ], [ -2.40713, 54.01824 ], [ -2.4067, 54.01872 ], [ -2.40642, 54.01904 ], [ -2.40635, 54.01912 ], [ -2.40632, 54.0192 ], [ -2.40632, 54.01921 ], [ -2.4063, 54.01928 ], [ -2.40629, 54.01936 ], [ -2.40628, 54.01945 ], [ -2.40629, 54.01975 ], [ -2.40629, 54.01993 ], [ -2.40629, 54.02011 ], [ -2.40629, 54.0204 ], [ -2.4063, 54.02047 ], [ -2.40631, 54.02054 ], [ -2.40634, 54.0206 ], [ -2.40636, 54.02064 ], [ -2.40637, 54.02067 ], [ -2.40641, 54.02073 ], [ -2.40645, 54.0208 ], [ -2.40646, 54.02081 ], [ -2.4065, 54.02086 ], [ -2.40657, 54.02096 ], [ -2.40659, 54.02098 ], [ -2.40665, 54.02105 ], [ -2.40669, 54.02111 ], [ -2.40673, 54.02117 ], [ -2.40675, 54.02124 ], [ -2.40676, 54.02131 ], [ -2.40677, 54.02142 ], [ -2.40677, 54.02146 ], [ -2.40678, 54.02152 ], [ -2.40679, 54.02158 ], [ -2.40681, 54.02163 ], [ -2.40682, 54.02164 ], [ -2.40686, 54.02168 ], [ -2.40692, 54.02173 ], [ -2.40699, 54.02178 ], [ -2.40715, 54.02189 ], [ -2.40718, 54.02192 ], [ -2.40722, 54.02195 ], [ -2.40727, 54.02201 ], [ -2.40734, 54.02208 ], [ -2.40735, 54.02209 ], [ -2.40741, 54.02217 ], [ -2.40745, 54.02223 ], [ -2.40745, 54.02225 ], [ -2.40747, 54.02229 ], [ -2.40747, 54.02235 ], [ -2.40745, 54.02241 ], [ -2.40745, 54.02242 ], [ -2.40743, 54.02247 ], [ -2.40739, 54.02257 ], [ -2.40737, 54.0226 ], [ -2.40731, 54.0227 ], [ -2.40727, 54.02277 ], [ -2.40726, 54.0228 ], [ -2.40723, 54.02286 ], [ -2.4072301, 54.0228647 ], [ -2.40722, 54.02293 ], [ -2.40722, 54.023 ], [ -2.40722, 54.02302 ], [ -2.40722, 54.02307 ], [ -2.40721, 54.02315 ], [ -2.40721, 54.0232 ], [ -2.40721, 54.02323 ], [ -2.4072, 54.02329 ], [ -2.40719, 54.02335 ], [ -2.40718, 54.02338 ], [ -2.40717, 54.02341 ], [ -2.40715, 54.02347 ], [ -2.40712, 54.02353 ], [ -2.4071, 54.02355 ], [ -2.40708, 54.02359 ], [ -2.40703, 54.02364 ], [ -2.407, 54.0237 ], [ -2.40699, 54.02372 ], [ -2.40696, 54.02375 ], [ -2.40694, 54.0238 ], [ -2.40693, 54.02385 ], [ -2.40693, 54.02389 ], [ -2.40693, 54.02391 ], [ -2.40694, 54.02397 ], [ -2.40696, 54.02404 ], [ -2.40698, 54.02407 ], [ -2.40703, 54.02418 ], [ -2.40704, 54.02424 ], [ -2.40704, 54.02425 ], [ -2.40705, 54.02429 ], [ -2.40704, 54.02435 ], [ -2.40701, 54.02441 ], [ -2.40697, 54.02446 ], [ -2.40695, 54.0245 ], [ -2.40694, 54.02454 ], [ -2.40694, 54.02459 ], [ -2.40696, 54.02464 ], [ -2.407, 54.02469 ], [ -2.40705, 54.02474 ], [ -2.40707, 54.02476 ], [ -2.40715, 54.02482 ], [ -2.40724, 54.02491 ], [ -2.40725, 54.02491 ], [ -2.40734, 54.025 ], [ -2.4075, 54.02514 ], [ -2.40758, 54.02521 ], [ -2.40762, 54.02524 ], [ -2.40788, 54.02543 ], [ -2.40797, 54.02548 ], [ -2.40816, 54.02562 ], [ -2.40836, 54.02576 ], [ -2.40856, 54.0259 ], [ -2.40857, 54.0259 ], [ -2.40865, 54.02596 ], [ -2.40872, 54.02601 ], [ -2.40875, 54.02604 ], [ -2.40879, 54.02607 ], [ -2.40885, 54.02612 ], [ -2.40891, 54.02618 ], [ -2.40898, 54.02624 ], [ -2.40907, 54.0263 ], [ -2.40911, 54.02633 ], [ -2.40924, 54.02642 ], [ -2.40931, 54.02646 ], [ -2.40946, 54.02655 ], [ -2.40974, 54.02672 ], [ -2.40976, 54.02674 ], [ -2.41003, 54.02691 ], [ -2.41014, 54.02699 ], [ -2.41025, 54.02707 ], [ -2.41034, 54.02713 ], [ -2.41038, 54.02716 ], [ -2.4105, 54.02725 ], [ -2.41053, 54.02727 ], [ -2.41066, 54.02737 ], [ -2.41071, 54.02741 ], [ -2.41077, 54.02746 ], [ -2.41084, 54.02753 ], [ -2.41088, 54.02756 ], [ -2.41095, 54.02764 ], [ -2.41104, 54.02775 ], [ -2.41118, 54.02791 ], [ -2.41124, 54.02798 ], [ -2.41129, 54.02805 ], [ -2.41132, 54.02808 ], [ -2.41138, 54.02819 ], [ -2.41145, 54.02832 ], [ -2.41149, 54.02839 ], [ -2.41152, 54.02845 ], [ -2.41157, 54.02856 ], [ -2.41158, 54.02858 ], [ -2.41164, 54.02873 ], [ -2.4117, 54.02887 ], [ -2.41171, 54.02891 ], [ -2.41174, 54.029 ], [ -2.41177, 54.02909 ], [ -2.41182, 54.02926 ], [ -2.41183, 54.02927 ], [ -2.41188, 54.02944 ], [ -2.4119, 54.0295 ], [ -2.41193, 54.02962 ], [ -2.41197, 54.02975 ], [ -2.41199, 54.02985 ], [ -2.41201, 54.02996 ], [ -2.41202, 54.02997 ], [ -2.41206, 54.03023 ], [ -2.41207, 54.03033 ], [ -2.41207, 54.03037 ], [ -2.41209, 54.03051 ], [ -2.41209, 54.03056 ], [ -2.4121, 54.03069 ], [ -2.4121, 54.03074 ], [ -2.41211, 54.03093 ], [ -2.41212, 54.03103 ], [ -2.41212, 54.03111 ], [ -2.41211, 54.03123 ], [ -2.41211, 54.03125 ], [ -2.41209, 54.03146 ], [ -2.41207, 54.03171 ], [ -2.41205, 54.03187 ], [ -2.41204, 54.03195 ], [ -2.41203, 54.03203 ], [ -2.41202, 54.03213 ], [ -2.41199, 54.03231 ], [ -2.41198, 54.03242 ], [ -2.41196, 54.03249 ], [ -2.41195, 54.03253 ], [ -2.41192, 54.03264 ], [ -2.41192, 54.03266 ], [ -2.41188, 54.03281 ], [ -2.41186, 54.03284 ], [ -2.41184, 54.03292 ], [ -2.41178, 54.03303 ], [ -2.41173, 54.03313 ], [ -2.41165, 54.03329 ], [ -2.4116, 54.03339 ], [ -2.41159, 54.03344 ], [ -2.41158, 54.03349 ], [ -2.41158, 54.03354 ], [ -2.41158, 54.0336 ], [ -2.41159, 54.03371 ], [ -2.41159, 54.03372 ], [ -2.41163, 54.03387 ], [ -2.41168, 54.03404 ], [ -2.4117, 54.03415 ], [ -2.41171, 54.03426 ], [ -2.41171, 54.03437 ], [ -2.41171, 54.03443 ], [ -2.41171, 54.03448 ], [ -2.4117, 54.03459 ], [ -2.4117, 54.03461 ], [ -2.41169, 54.0347 ], [ -2.41168, 54.03479 ], [ -2.41168, 54.03487 ], [ -2.41167, 54.03497 ], [ -2.41166, 54.03509 ], [ -2.41166, 54.03515 ], [ -2.41166, 54.03521 ], [ -2.41168, 54.03532 ], [ -2.41171, 54.03543 ], [ -2.41174, 54.03551 ], [ -2.41175, 54.03555 ], [ -2.41181, 54.03566 ], [ -2.41183, 54.03568 ], [ -2.41189, 54.03577 ], [ -2.41196, 54.03588 ], [ -2.41203, 54.03598 ], [ -2.41214, 54.03614 ], [ -2.41232, 54.0364 ], [ -2.41239, 54.03652 ], [ -2.41244, 54.03661 ], [ -2.41249, 54.03669 ], [ -2.41253, 54.03676 ], [ -2.41262, 54.0369 ], [ -2.41269, 54.037 ], [ -2.41277, 54.03708 ], [ -2.41286, 54.03716 ], [ -2.41288, 54.03717 ], [ -2.41297, 54.03723 ], [ -2.41309, 54.03729 ], [ -2.4131, 54.03729 ], [ -2.41322, 54.03735 ], [ -2.41335, 54.0374 ], [ -2.41349, 54.03744 ], [ -2.41364, 54.03746 ], [ -2.41379, 54.03749 ], [ -2.41394, 54.0375 ], [ -2.41409, 54.03753 ], [ -2.41423, 54.03756 ], [ -2.41436, 54.03759 ], [ -2.41448, 54.03763 ], [ -2.4145, 54.03764 ], [ -2.41459, 54.03768 ], [ -2.41469, 54.03774 ], [ -2.41472, 54.03776 ], [ -2.41478, 54.0378 ], [ -2.41486, 54.03787 ], [ -2.4149, 54.03791 ], [ -2.41494, 54.03794 ], [ -2.41503, 54.03802 ], [ -2.4152, 54.03819 ], [ -2.41522, 54.03821 ], [ -2.41533, 54.03833 ], [ -2.41536, 54.03837 ], [ -2.41545, 54.03848 ], [ -2.4155, 54.03853 ], [ -2.41557, 54.03862 ], [ -2.41563, 54.0387 ], [ -2.41575, 54.03886 ], [ -2.41582, 54.03895 ], [ -2.41587, 54.03903 ], [ -2.416, 54.03919 ], [ -2.41602, 54.03923 ], [ -2.41612, 54.03936 ], [ -2.41614, 54.03939 ], [ -2.41624, 54.03951 ], [ -2.41635, 54.03963 ], [ -2.41642, 54.03971 ], [ -2.4165, 54.03979 ], [ -2.41656, 54.03983 ], [ -2.4166, 54.03986 ], [ -2.41671, 54.03992 ], [ -2.41678, 54.03995 ], [ -2.41684, 54.03998 ], [ -2.41697, 54.04002 ], [ -2.41704, 54.04004 ], [ -2.41728, 54.04011 ], [ -2.41732, 54.04012 ], [ -2.4176, 54.0402 ], [ -2.41768, 54.04023 ], [ -2.41803, 54.04033 ], [ -2.41814, 54.04037 ], [ -2.41827, 54.04041 ], [ -2.41838, 54.04046 ], [ -2.41839, 54.04047 ], [ -2.41847, 54.04052 ], [ -2.41854, 54.04059 ], [ -2.41856, 54.04062 ], [ -2.41865, 54.04072 ], [ -2.4187, 54.04078 ], [ -2.41876, 54.04087 ], [ -2.41881, 54.04095 ], [ -2.41884, 54.04102 ], [ -2.41887, 54.04112 ], [ -2.41888, 54.04119 ], [ -2.41892, 54.0413 ], [ -2.41896, 54.04139 ], [ -2.41899, 54.04147 ], [ -2.41902, 54.04153 ], [ -2.41904, 54.0416 ], [ -2.41905, 54.04165 ], [ -2.41906, 54.04167 ], [ -2.41906, 54.0417 ], [ -2.41905, 54.04173 ], [ -2.41903, 54.04176 ], [ -2.419, 54.04178 ], [ -2.41896, 54.04181 ], [ -2.4189, 54.04186 ], [ -2.41883, 54.04191 ], [ -2.41878, 54.04196 ], [ -2.41877, 54.04197 ], [ -2.41872, 54.04203 ], [ -2.4187, 54.04209 ], [ -2.41869, 54.04213 ], [ -2.41866, 54.04225 ], [ -2.41864, 54.04231 ], [ -2.41863, 54.04231 ], [ -2.4186, 54.04238 ], [ -2.41853, 54.04248 ], [ -2.41853, 54.04249 ], [ -2.41841, 54.04263 ], [ -2.4184, 54.04264 ], [ -2.41828, 54.04278 ], [ -2.41813, 54.04294 ], [ -2.41811, 54.04296 ], [ -2.41796, 54.04311 ], [ -2.41793, 54.04314 ], [ -2.41784, 54.04321 ], [ -2.41778, 54.04326 ], [ -2.41775, 54.04329 ], [ -2.41765, 54.04336 ], [ -2.41759, 54.04339 ], [ -2.41754, 54.04342 ], [ -2.41744, 54.04348 ], [ -2.41733, 54.04354 ], [ -2.41723, 54.04359 ], [ -2.41716, 54.04365 ], [ -2.41715, 54.04366 ], [ -2.41712, 54.04369 ], [ -2.41709, 54.04373 ], [ -2.41705, 54.04382 ], [ -2.41695, 54.044 ], [ -2.41685, 54.04417 ], [ -2.4168, 54.04425 ], [ -2.41674, 54.04431 ], [ -2.41673, 54.04432 ], [ -2.41665, 54.04442 ], [ -2.4166, 54.04449 ], [ -2.41657, 54.04457 ], [ -2.41655, 54.04466 ], [ -2.41654, 54.04474 ], [ -2.41655, 54.04484 ], [ -2.41655, 54.04487 ], [ -2.41657, 54.04495 ], [ -2.41657, 54.04502 ], [ -2.41657, 54.04504 ], [ -2.41655, 54.04512 ], [ -2.41649, 54.04519 ], [ -2.41649, 54.0452 ], [ -2.41641, 54.04527 ], [ -2.41633, 54.04534 ], [ -2.41632, 54.04535 ], [ -2.41626, 54.04542 ], [ -2.41622, 54.0455 ], [ -2.41622, 54.04551 ], [ -2.41621, 54.04559 ], [ -2.41623, 54.04568 ], [ -2.41628, 54.04577 ], [ -2.41634, 54.04586 ], [ -2.41641, 54.04594 ], [ -2.4165, 54.04601 ], [ -2.41651, 54.04602 ], [ -2.41661, 54.04608 ], [ -2.41672, 54.04614 ], [ -2.41673, 54.04614 ], [ -2.41684, 54.04621 ], [ -2.41692, 54.04628 ], [ -2.41694, 54.04629 ], [ -2.41703, 54.04638 ], [ -2.41712, 54.04647 ], [ -2.4172, 54.04655 ], [ -2.41723, 54.04659 ], [ -2.41731, 54.04669 ], [ -2.41742, 54.04682 ], [ -2.41748, 54.04691 ], [ -2.41753, 54.047 ], [ -2.41761, 54.04713 ], [ -2.41765, 54.04722 ], [ -2.41766, 54.04726 ], [ -2.41768, 54.04731 ], [ -2.41769, 54.0474 ], [ -2.41769, 54.04744 ], [ -2.41769, 54.0475 ], [ -2.41767, 54.0476 ], [ -2.41767, 54.04762 ], [ -2.41765, 54.0477 ], [ -2.41764, 54.04779 ], [ -2.41763, 54.04781 ], [ -2.41763, 54.04791 ], [ -2.41763, 54.04802 ], [ -2.41764, 54.04812 ], [ -2.41765, 54.04823 ], [ -2.41767, 54.04851 ], [ -2.4177, 54.0488 ], [ -2.41772, 54.04905 ], [ -2.41773, 54.0492 ], [ -2.41773, 54.04923 ], [ -2.41775, 54.04932 ], [ -2.41777, 54.04941 ], [ -2.41777, 54.04943 ], [ -2.4178, 54.04954 ], [ -2.41782, 54.04959 ], [ -2.41785, 54.04966 ], [ -2.41789, 54.04977 ], [ -2.41795, 54.04989 ], [ -2.41798, 54.04993 ], [ -2.41804, 54.05006 ], [ -2.41817, 54.05029 ], [ -2.41824, 54.05039 ], [ -2.41828, 54.05044 ], [ -2.41832, 54.0505 ], [ -2.41843, 54.05059 ], [ -2.41843, 54.0506 ], [ -2.41854, 54.0507 ], [ -2.4186, 54.05075 ], [ -2.41878, 54.0509 ], [ -2.41882, 54.05093 ], [ -2.41911, 54.0512 ], [ -2.41915, 54.05125 ], [ -2.41926, 54.05135 ], [ -2.41928, 54.05137 ], [ -2.41934, 54.05146 ], [ -2.41939, 54.05152 ], [ -2.41941, 54.05154 ], [ -2.41948, 54.05163 ], [ -2.41954, 54.05167 ], [ -2.41958, 54.0517 ], [ -2.41968, 54.05177 ], [ -2.41973, 54.05181 ], [ -2.41976, 54.05183 ], [ -2.41982, 54.05192 ], [ -2.41984, 54.05198 ], [ -2.41989, 54.0521 ], [ -2.41997, 54.05233 ], [ -2.42001, 54.05243 ], [ -2.42003, 54.05251 ], [ -2.42011, 54.05273 ], [ -2.42016, 54.05286 ], [ -2.4202, 54.05297 ], [ -2.42023, 54.05304 ], [ -2.4203, 54.0532 ], [ -2.42038, 54.05337 ], [ -2.42038, 54.05338 ], [ -2.42043, 54.05355 ], [ -2.42043, 54.05356 ], [ -2.42048, 54.05374 ], [ -2.42051, 54.05386 ], [ -2.42054, 54.05392 ], [ -2.42061, 54.05409 ], [ -2.42069, 54.05433 ], [ -2.42073, 54.05444 ], [ -2.42077, 54.05455 ], [ -2.42078, 54.05462 ], [ -2.42078, 54.05465 ], [ -2.42079, 54.05476 ], [ -2.42078, 54.05486 ], [ -2.42075, 54.05498 ], [ -2.42072, 54.05508 ], [ -2.42069, 54.05515 ], [ -2.42067, 54.0552 ], [ -2.42061, 54.05533 ], [ -2.42053, 54.05548 ], [ -2.42034, 54.05583 ], [ -2.42033, 54.05584 ], [ -2.42028, 54.05595 ], [ -2.42025, 54.05602 ], [ -2.42022, 54.05607 ], [ -2.42017, 54.05619 ], [ -2.42014, 54.05626 ], [ -2.4201, 54.05637 ], [ -2.42004, 54.05654 ], [ -2.41999, 54.05665 ], [ -2.41985, 54.05706 ], [ -2.41985, 54.05707 ], [ -2.41978, 54.05723 ], [ -2.41978, 54.05724 ], [ -2.41971, 54.05738 ], [ -2.4197, 54.05742 ], [ -2.41965, 54.05751 ], [ -2.41964, 54.05758 ], [ -2.41964, 54.05759 ], [ -2.41963, 54.05765 ], [ -2.41963, 54.05775 ], [ -2.41964, 54.05777 ], [ -2.41966, 54.05795 ], [ -2.41967, 54.05801 ], [ -2.41967, 54.05817 ], [ -2.41966, 54.05826 ], [ -2.41965, 54.05831 ], [ -2.41963, 54.05839 ], [ -2.41959, 54.05848 ], [ -2.41957, 54.05853 ], [ -2.41955, 54.05857 ], [ -2.41954, 54.05862 ], [ -2.41953, 54.05867 ], [ -2.41953, 54.0587 ], [ -2.41954, 54.05877 ], [ -2.41957, 54.05887 ], [ -2.41957, 54.05888 ], [ -2.41961, 54.05896 ], [ -2.41967, 54.05905 ], [ -2.4197, 54.0591 ], [ -2.41977, 54.05923 ], [ -2.41981, 54.05932 ], [ -2.41983, 54.0594 ], [ -2.41983, 54.05941 ], [ -2.41983, 54.0595 ], [ -2.41982, 54.05958 ], [ -2.41982, 54.05959 ], [ -2.41979, 54.05969 ], [ -2.41975, 54.0598 ], [ -2.4197, 54.05993 ], [ -2.41964, 54.06011 ], [ -2.41958, 54.06028 ], [ -2.41954, 54.0604 ], [ -2.41951, 54.06052 ], [ -2.41943, 54.06078 ], [ -2.41937, 54.06099 ], [ -2.41919, 54.06152 ], [ -2.41919, 54.06154 ], [ -2.41897, 54.06205 ], [ -2.41885, 54.06233 ], [ -2.41884, 54.0624 ], [ -2.41878, 54.06266 ], [ -2.41875, 54.06281 ], [ -2.41874, 54.06283 ], [ -2.4187, 54.06301 ], [ -2.41865, 54.06319 ], [ -2.41864, 54.06321 ], [ -2.41856, 54.06355 ], [ -2.41851, 54.06372 ], [ -2.4185, 54.0638 ], [ -2.41847, 54.0639 ], [ -2.41843, 54.06408 ], [ -2.41841, 54.06413 ], [ -2.4184, 54.06426 ], [ -2.4184, 54.0643 ], [ -2.4184, 54.06441 ], [ -2.4184, 54.06444 ], [ -2.4184, 54.06448 ], [ -2.41847, 54.0647 ], [ -2.41854, 54.0649 ], [ -2.41856, 54.06497 ], [ -2.41862, 54.06515 ], [ -2.41873, 54.06552 ], [ -2.41885, 54.06585 ], [ -2.41897, 54.0662 ], [ -2.41904, 54.06638 ], [ -2.41909, 54.06654 ], [ -2.4191, 54.06656 ], [ -2.41915, 54.06669 ], [ -2.41924, 54.06691 ], [ -2.41928, 54.06702 ], [ -2.4195, 54.06752 ], [ -2.41954, 54.0676 ], [ -2.41962, 54.06778 ], [ -2.41968, 54.06791 ], [ -2.4197, 54.06795 ], [ -2.41975, 54.06808 ], [ -2.41982, 54.06826 ], [ -2.41984, 54.0683 ], [ -2.41987, 54.06848 ], [ -2.41994, 54.06884 ], [ -2.42007, 54.06937 ], [ -2.42016, 54.06979 ], [ -2.4202, 54.06992 ], [ -2.42032, 54.07014 ], [ -2.42039, 54.07031 ], [ -2.42042, 54.07038 ], [ -2.42051, 54.07072 ], [ -2.42053, 54.07081 ], [ -2.42056, 54.07099 ], [ -2.4206, 54.07116 ], [ -2.42062, 54.07126 ], [ -2.4207, 54.07188 ], [ -2.42071, 54.07197 ], [ -2.42074, 54.07206 ], [ -2.42079, 54.0722 ], [ -2.4208, 54.07224 ], [ -2.42087, 54.07247 ], [ -2.42086, 54.07259 ], [ -2.42086, 54.07265 ], [ -2.42084, 54.07279 ], [ -2.42083, 54.07313 ], [ -2.42082, 54.07316 ], [ -2.42083, 54.07369 ], [ -2.42084, 54.07475 ], [ -2.42084, 54.07493 ], [ -2.42085, 54.07501 ], [ -2.42083, 54.07565 ], [ -2.42082, 54.07572 ], [ -2.4208, 54.07586 ], [ -2.42078, 54.07602 ], [ -2.42078, 54.07604 ], [ -2.42075, 54.07622 ], [ -2.42073, 54.07631 ], [ -2.4207, 54.0764 ], [ -2.4206, 54.07671 ], [ -2.42058, 54.07675 ], [ -2.42051, 54.07693 ], [ -2.42045, 54.0771 ], [ -2.42038, 54.07729 ], [ -2.42029, 54.07745 ], [ -2.42007, 54.07799 ], [ -2.42, 54.07818 ], [ -2.41994, 54.07834 ], [ -2.41988, 54.07852 ], [ -2.41976, 54.07887 ], [ -2.41975, 54.0789 ], [ -2.41968, 54.07911 ], [ -2.41967, 54.07914 ], [ -2.41962, 54.07932 ], [ -2.41958, 54.07943 ], [ -2.41956, 54.0795 ], [ -2.41939, 54.08002 ], [ -2.41929, 54.08038 ], [ -2.41919, 54.08074 ], [ -2.41915, 54.08091 ], [ -2.41909, 54.08109 ], [ -2.41896, 54.08152 ], [ -2.41893, 54.08163 ], [ -2.41888, 54.0818 ], [ -2.41883, 54.08198 ], [ -2.41873, 54.08234 ], [ -2.41868, 54.08251 ], [ -2.41864, 54.08264 ], [ -2.41863, 54.08269 ], [ -2.41852, 54.08304 ], [ -2.41842, 54.0834 ], [ -2.41837, 54.08358 ], [ -2.41835, 54.08362 ], [ -2.41819, 54.08411 ], [ -2.41808, 54.08446 ], [ -2.41796, 54.08481 ], [ -2.41794, 54.08494 ], [ -2.41787, 54.08517 ], [ -2.41782, 54.08535 ], [ -2.41777, 54.08552 ], [ -2.41777, 54.08556 ], [ -2.41772, 54.0857 ], [ -2.41768, 54.08582 ], [ -2.41765, 54.08599 ], [ -2.41765, 54.08606 ], [ -2.41765, 54.08609 ], [ -2.41765, 54.08624 ], [ -2.41765, 54.08642 ], [ -2.41765, 54.08647 ], [ -2.41767, 54.0866 ], [ -2.41767, 54.08661 ], [ -2.41768, 54.08671 ], [ -2.41775, 54.08695 ], [ -2.41777, 54.08703 ], [ -2.41779, 54.08713 ], [ -2.41783, 54.08731 ], [ -2.41787, 54.08749 ], [ -2.41788, 54.08757 ], [ -2.41791, 54.08767 ], [ -2.41795, 54.08784 ], [ -2.41799, 54.08802 ], [ -2.41802, 54.08813 ], [ -2.41806, 54.08831 ], [ -2.41811, 54.08849 ], [ -2.41816, 54.08867 ], [ -2.4182, 54.08883 ], [ -2.41827, 54.08902 ], [ -2.41833, 54.0892 ], [ -2.41839, 54.08937 ], [ -2.41841, 54.08944 ], [ -2.41846, 54.08955 ], [ -2.41856, 54.08977 ], [ -2.41877, 54.09024 ], [ -2.41882, 54.09035 ], [ -2.41896, 54.09067 ], [ -2.41901, 54.09085 ], [ -2.41906, 54.09102 ], [ -2.41907, 54.09107 ], [ -2.41912, 54.0912 ], [ -2.41917, 54.09138 ], [ -2.41922, 54.09156 ], [ -2.41923, 54.09156 ], [ -2.41936, 54.09191 ], [ -2.41942, 54.09208 ], [ -2.41959, 54.09253 ], [ -2.4197, 54.09283 ], [ -2.41978, 54.09314 ], [ -2.41983, 54.09332 ], [ -2.41983, 54.09333 ], [ -2.41985, 54.0935 ], [ -2.41987, 54.09361 ], [ -2.41988, 54.09374 ], [ -2.41985, 54.09386 ], [ -2.41974, 54.09421 ], [ -2.41973, 54.09424 ], [ -2.41966, 54.09441 ], [ -2.41957, 54.09456 ], [ -2.41954, 54.09461 ], [ -2.41938, 54.0949 ], [ -2.41907, 54.09546 ], [ -2.41899, 54.09558 ], [ -2.41864, 54.09608 ], [ -2.41862, 54.09611 ], [ -2.41851, 54.09624 ], [ -2.41837, 54.0964 ], [ -2.41828, 54.09651 ], [ -2.41824, 54.09656 ], [ -2.4181, 54.09672 ], [ -2.41796, 54.09688 ], [ -2.41755, 54.09737 ], [ -2.41752, 54.0974 ], [ -2.41741, 54.09753 ], [ -2.41739, 54.09755 ], [ -2.41729, 54.09769 ], [ -2.41709, 54.09797 ], [ -2.4166, 54.0985 ], [ -2.41646, 54.09865 ], [ -2.41631, 54.09881 ], [ -2.41621, 54.09892 ], [ -2.41616, 54.09897 ], [ -2.416, 54.09912 ], [ -2.41585, 54.09928 ], [ -2.41569, 54.09943 ], [ -2.41554, 54.09959 ], [ -2.41537, 54.09974 ], [ -2.4152, 54.09989 ], [ -2.41504, 54.10004 ], [ -2.41489, 54.1002 ], [ -2.41473, 54.10037 ], [ -2.41461, 54.10052 ], [ -2.41448, 54.10068 ], [ -2.41438, 54.1008 ], [ -2.41434, 54.10084 ], [ -2.41421, 54.10101 ], [ -2.4141, 54.10114 ], [ -2.41396, 54.1013 ], [ -2.41372, 54.10159 ], [ -2.41369, 54.10163 ], [ -2.41326, 54.1021 ], [ -2.41314, 54.10224 ], [ -2.41311, 54.10226 ], [ -2.41288, 54.10247 ], [ -2.41276, 54.10255 ], [ -2.41265, 54.10263 ], [ -2.41246, 54.10273 ], [ -2.41195, 54.10292 ], [ -2.41188, 54.10295 ], [ -2.41178, 54.10298 ], [ -2.41154, 54.10305 ], [ -2.41139, 54.10307 ], [ -2.4113, 54.10308 ], [ -2.41117, 54.1031 ], [ -2.411, 54.10311 ], [ -2.41082, 54.10312 ], [ -2.41067, 54.10314 ], [ -2.41059, 54.10316 ], [ -2.41049, 54.1032 ], [ -2.4104, 54.10324 ], [ -2.41034, 54.10329 ], [ -2.4103, 54.10332 ], [ -2.41028, 54.10338 ], [ -2.41027, 54.1034 ], [ -2.41024, 54.10345 ], [ -2.41023, 54.10355 ], [ -2.41021, 54.10378 ], [ -2.41021, 54.10391 ], [ -2.4102089, 54.1039125 ], [ -2.41028, 54.10411 ], [ -2.4103, 54.10422 ], [ -2.4103, 54.10427 ], [ -2.4103, 54.10429 ], [ -2.41029, 54.10436 ], [ -2.41026, 54.10445 ], [ -2.41023, 54.10452 ], [ -2.41017, 54.10459 ], [ -2.41015, 54.10461 ], [ -2.41012, 54.10463 ], [ -2.41001, 54.10471 ], [ -2.40995, 54.10475 ], [ -2.40984, 54.10481 ], [ -2.40973, 54.10487 ], [ -2.40967, 54.10491 ], [ -2.40953, 54.10498 ], [ -2.40939, 54.10509 ], [ -2.40932, 54.10514 ], [ -2.4093224, 54.105143 ], [ -2.40954, 54.10527 ], [ -2.40969, 54.10536 ], [ -2.40976, 54.1054 ], [ -2.40978, 54.10542 ], [ -2.40981, 54.10545 ], [ -2.40996, 54.10554 ], [ -2.41011, 54.10563 ], [ -2.41049, 54.10585 ], [ -2.41053, 54.10587 ], [ -2.41092, 54.10611 ], [ -2.41095, 54.10612 ], [ -2.41114, 54.10623 ], [ -2.41157, 54.10648 ], [ -2.41201, 54.10674 ], [ -2.41223, 54.10686 ], [ -2.41246, 54.10699 ], [ -2.41268, 54.10711 ], [ -2.41271, 54.10713 ], [ -2.41312, 54.10736 ], [ -2.41334, 54.10748 ], [ -2.41342, 54.10753 ], [ -2.41356, 54.10761 ], [ -2.41378, 54.10774 ], [ -2.41414, 54.10795 ], [ -2.41466, 54.10824 ], [ -2.41467, 54.10824 ], [ -2.41483, 54.10838 ], [ -2.415, 54.10854 ], [ -2.41511, 54.10863 ], [ -2.41531, 54.10885 ], [ -2.41541, 54.10896 ], [ -2.41547, 54.10905 ], [ -2.41552, 54.10913 ], [ -2.41558, 54.10921 ], [ -2.41563, 54.10927 ], [ -2.41565, 54.10929 ], [ -2.4158, 54.10943 ], [ -2.41593, 54.10954 ], [ -2.41618, 54.10973 ], [ -2.41628, 54.10981 ], [ -2.41654, 54.11002 ], [ -2.41668, 54.11013 ], [ -2.41691, 54.11031 ], [ -2.41701, 54.11039 ], [ -2.41726, 54.11061 ], [ -2.41737, 54.11071 ], [ -2.41762, 54.11098 ], [ -2.41782, 54.11127 ], [ -2.41798, 54.11159 ], [ -2.41834, 54.11228 ], [ -2.41837, 54.11232 ], [ -2.41862, 54.11278 ], [ -2.41862, 54.11279 ], [ -2.41881, 54.11314 ], [ -2.4189, 54.1133 ], [ -2.41899, 54.11348 ], [ -2.41905, 54.11359 ], [ -2.41909, 54.11365 ], [ -2.41912, 54.1137 ], [ -2.41925, 54.11389 ], [ -2.41932, 54.11398 ], [ -2.41943, 54.11415 ], [ -2.41946, 54.11419 ], [ -2.41962, 54.11441 ], [ -2.41967, 54.11448 ], [ -2.41989, 54.11476 ], [ -2.41993, 54.11481 ], [ -2.42015, 54.1151 ], [ -2.42018, 54.11514 ], [ -2.42045, 54.11548 ], [ -2.42056, 54.11563 ], [ -2.42062, 54.1157 ], [ -2.42067, 54.11579 ], [ -2.42077, 54.11595 ], [ -2.42077, 54.11596 ], [ -2.42083, 54.11611 ], [ -2.42088, 54.11632 ], [ -2.42089, 54.11634 ], [ -2.42092, 54.1165 ], [ -2.42094, 54.11659 ], [ -2.42096, 54.11667 ], [ -2.421, 54.11681 ], [ -2.42101, 54.11685 ], [ -2.42101, 54.1169 ], [ -2.421, 54.11698 ], [ -2.42098, 54.11701 ], [ -2.42097, 54.11703 ], [ -2.42094, 54.11706 ], [ -2.42092, 54.11709 ], [ -2.42082, 54.11718 ], [ -2.42082, 54.11719 ], [ -2.42075, 54.11725 ], [ -2.42072, 54.1173 ], [ -2.4207, 54.11735 ], [ -2.42068, 54.1174 ], [ -2.42067, 54.11744 ], [ -2.42068, 54.11753 ], [ -2.42068, 54.11768 ], [ -2.42069, 54.11789 ], [ -2.4207, 54.11807 ], [ -2.4207, 54.11823 ], [ -2.4207, 54.11825 ], [ -2.4207, 54.11847 ], [ -2.42071, 54.11854 ], [ -2.42073, 54.11863 ], [ -2.42074, 54.11867 ], [ -2.42077, 54.11873 ], [ -2.42085, 54.11882 ], [ -2.42091, 54.11886 ], [ -2.42114, 54.11902 ], [ -2.42134, 54.11915 ], [ -2.42154, 54.11929 ], [ -2.42167, 54.11937 ], [ -2.42175, 54.11942 ], [ -2.42195, 54.11956 ], [ -2.42215, 54.11969 ], [ -2.42236, 54.11982 ], [ -2.42256, 54.11996 ], [ -2.42297, 54.12023 ], [ -2.42339, 54.12049 ], [ -2.42342, 54.1205 ], [ -2.42372, 54.1207 ], [ -2.42379, 54.12076 ], [ -2.42383, 54.1208 ], [ -2.42385, 54.12083 ], [ -2.42387, 54.12087 ], [ -2.42388, 54.12093 ], [ -2.42389, 54.12098 ], [ -2.42388, 54.12103 ], [ -2.42387, 54.12107 ], [ -2.42385, 54.12115 ], [ -2.42379, 54.12129 ], [ -2.42378, 54.12131 ], [ -2.42372, 54.12146 ], [ -2.42369, 54.12152 ], [ -2.42368, 54.12155 ], [ -2.42367, 54.12159 ], [ -2.42367, 54.12162 ], [ -2.42367, 54.12164 ], [ -2.42369, 54.1217 ], [ -2.42372, 54.12175 ], [ -2.42375, 54.12181 ], [ -2.4237515, 54.1218114 ], [ -2.42395, 54.12188 ], [ -2.424, 54.12189 ], [ -2.42405, 54.12192 ], [ -2.42426, 54.12201 ], [ -2.42431, 54.12204 ], [ -2.42499, 54.12237 ], [ -2.42521, 54.12247 ], [ -2.42569, 54.12269 ], [ -2.42593, 54.12281 ], [ -2.42618, 54.12293 ], [ -2.4264, 54.12303 ], [ -2.42664, 54.12314 ], [ -2.42678, 54.12321 ], [ -2.42763, 54.12355 ], [ -2.4279, 54.12366 ], [ -2.42812, 54.12376 ], [ -2.42872, 54.12403 ], [ -2.42912, 54.12421 ], [ -2.42937, 54.12431 ], [ -2.42961, 54.12442 ], [ -2.42964, 54.12443 ], [ -2.42986, 54.12453 ], [ -2.43011, 54.12463 ], [ -2.43032, 54.12472 ], [ -2.43036, 54.12474 ], [ -2.4306, 54.12485 ], [ -2.43184, 54.12537 ], [ -2.43184, 54.12538 ], [ -2.43236, 54.12557 ], [ -2.43248, 54.12564 ], [ -2.43256, 54.12573 ], [ -2.4325625, 54.1257292 ], [ -2.4328, 54.12577 ], [ -2.43312, 54.12584 ], [ -2.43343, 54.12591 ], [ -2.43373, 54.12598 ], [ -2.434, 54.12605 ], [ -2.43429, 54.12612 ], [ -2.43516, 54.12635 ], [ -2.43567, 54.12647 ], [ -2.43638, 54.12663 ], [ -2.43691, 54.12675 ], [ -2.43725, 54.12681 ], [ -2.43746, 54.12685 ], [ -2.43754, 54.12686 ], [ -2.43784, 54.12692 ], [ -2.43813, 54.12697 ], [ -2.43816, 54.12697 ], [ -2.43842, 54.12702 ], [ -2.43936, 54.1272 ], [ -2.43993, 54.1273 ], [ -2.44027, 54.12737 ], [ -2.44095, 54.12753 ], [ -2.44139, 54.12764 ], [ -2.44164, 54.12771 ], [ -2.44203, 54.12784 ], [ -2.44217, 54.12788 ], [ -2.44252, 54.12798 ], [ -2.44359, 54.1283 ], [ -2.44386, 54.12839 ], [ -2.44406, 54.12845 ], [ -2.44434, 54.12854 ], [ -2.44493, 54.12874 ], [ -2.44512, 54.1288 ], [ -2.44588, 54.12903 ], [ -2.44747, 54.12953 ], [ -2.44765, 54.12958 ], [ -2.44792, 54.12967 ], [ -2.4482, 54.12975 ], [ -2.44876, 54.12993 ], [ -2.44915, 54.13008 ], [ -2.44925, 54.13012 ], [ -2.44938, 54.13017 ], [ -2.4495, 54.13022 ], [ -2.44972, 54.13032 ], [ -2.45047, 54.13066 ], [ -2.45066, 54.13075 ], [ -2.45139, 54.13108 ], [ -2.45176, 54.13126 ], [ -2.45198, 54.13137 ], [ -2.45208, 54.13144 ], [ -2.45219, 54.13153 ], [ -2.45228, 54.13159 ], [ -2.45295, 54.13208 ], [ -2.45316, 54.13222 ], [ -2.45335, 54.13236 ], [ -2.45362, 54.13256 ], [ -2.45393, 54.13278 ], [ -2.45413, 54.13292 ], [ -2.45456, 54.13323 ], [ -2.45471, 54.13334 ], [ -2.45554, 54.13394 ], [ -2.45585, 54.13419 ], [ -2.45618, 54.13444 ], [ -2.45706, 54.13519 ], [ -2.45709, 54.13522 ], [ -2.45779, 54.13581 ], [ -2.45805, 54.13604 ], [ -2.45824, 54.1362 ], [ -2.45858, 54.13649 ], [ -2.45874, 54.13662 ], [ -2.45906, 54.1369 ], [ -2.45909, 54.13693 ], [ -2.45936, 54.1372 ], [ -2.45951, 54.13737 ], [ -2.45966, 54.13757 ], [ -2.45967, 54.13758 ], [ -2.45978, 54.13773 ], [ -2.45978, 54.13774 ], [ -2.46026, 54.1384 ], [ -2.46038, 54.13857 ], [ -2.46052, 54.13877 ], [ -2.46073, 54.13906 ], [ -2.46085, 54.13923 ], [ -2.46097, 54.1394 ], [ -2.4612, 54.13973 ], [ -2.46132, 54.13989 ], [ -2.46144, 54.14006 ], [ -2.46156, 54.14023 ], [ -2.46165, 54.14035 ], [ -2.46168, 54.14039 ], [ -2.4619, 54.14068 ], [ -2.46192, 54.14072 ], [ -2.46204, 54.14089 ], [ -2.46215, 54.14105 ], [ -2.46218, 54.14109 ], [ -2.46242, 54.14144 ], [ -2.46244, 54.14147 ], [ -2.46266, 54.14177 ], [ -2.46279, 54.14193 ], [ -2.46307, 54.1423 ], [ -2.4633, 54.14264 ], [ -2.4634, 54.14277 ], [ -2.46344, 54.14285 ], [ -2.46349, 54.14294 ], [ -2.46354, 54.14302 ], [ -2.46357, 54.1431 ], [ -2.4636, 54.14315 ], [ -2.46369, 54.14336 ], [ -2.46393, 54.14389 ], [ -2.46415, 54.14431 ], [ -2.46416, 54.14433 ], [ -2.4642, 54.14438 ], [ -2.46424, 54.14443 ], [ -2.4643, 54.14448 ], [ -2.46434, 54.14451 ], [ -2.46441, 54.14455 ], [ -2.46451, 54.1446 ], [ -2.46461, 54.14465 ], [ -2.46474, 54.14471 ], [ -2.46486, 54.14476 ], [ -2.46503, 54.14481 ], [ -2.46604, 54.14518 ], [ -2.46683, 54.14547 ], [ -2.46701, 54.14554 ], [ -2.46735, 54.14566 ], [ -2.46787, 54.14585 ], [ -2.46834, 54.14603 ], [ -2.46849, 54.14609 ], [ -2.46885, 54.14622 ], [ -2.46907, 54.1463 ], [ -2.46951, 54.14647 ], [ -2.46955, 54.14648 ], [ -2.47004, 54.14665 ], [ -2.47081, 54.14693 ], [ -2.47088, 54.14695 ], [ -2.47119, 54.14707 ], [ -2.47176, 54.14729 ], [ -2.47321, 54.14786 ], [ -2.47417, 54.14819 ], [ -2.4744, 54.14828 ], [ -2.47448, 54.1483 ], [ -2.47493, 54.14846 ], [ -2.47572, 54.14873 ], [ -2.47617, 54.14888 ], [ -2.47662, 54.14903 ], [ -2.47674, 54.14907 ], [ -2.47688, 54.14912 ], [ -2.47698, 54.14916 ], [ -2.47711, 54.14922 ], [ -2.47722, 54.1493 ], [ -2.47732, 54.14937 ], [ -2.47735, 54.1494 ], [ -2.47741, 54.14947 ], [ -2.47746, 54.14952 ], [ -2.47749, 54.14956 ], [ -2.47755, 54.14963 ], [ -2.47759, 54.14968 ], [ -2.47781, 54.14995 ], [ -2.47792, 54.15006 ], [ -2.47803, 54.15014 ], [ -2.4782, 54.15024 ], [ -2.4783, 54.15028 ], [ -2.47854, 54.15035 ], [ -2.47873, 54.1504 ], [ -2.47901, 54.15047 ], [ -2.47911, 54.1505 ], [ -2.4793, 54.15054 ], [ -2.47974, 54.15065 ], [ -2.48015, 54.15074 ], [ -2.48016, 54.15074 ], [ -2.48045, 54.15078 ], [ -2.48072, 54.15083 ], [ -2.48075, 54.15083 ], [ -2.48104, 54.15087 ], [ -2.48124, 54.1509 ], [ -2.48145, 54.15093 ], [ -2.48224, 54.15106 ], [ -2.48273, 54.15113 ], [ -2.48285, 54.15114 ], [ -2.48303, 54.15117 ], [ -2.48332, 54.15122 ], [ -2.48349, 54.15125 ], [ -2.48361, 54.15128 ], [ -2.48368, 54.15129 ], [ -2.48409, 54.1514 ], [ -2.48457, 54.15156 ], [ -2.48521, 54.15179 ], [ -2.48523, 54.15179 ], [ -2.48553, 54.15191 ], [ -2.48575, 54.15199 ], [ -2.48627, 54.15217 ], [ -2.48628, 54.15218 ], [ -2.48723, 54.1525 ], [ -2.48733, 54.15254 ], [ -2.48759, 54.15263 ], [ -2.48838, 54.15291 ], [ -2.48874, 54.15304 ], [ -2.48933, 54.15324 ], [ -2.48995, 54.15353 ], [ -2.49057, 54.15384 ], [ -2.49081, 54.15395 ], [ -2.49151, 54.1543 ], [ -2.49175, 54.15442 ], [ -2.49222, 54.15465 ], [ -2.49269, 54.15488 ], [ -2.49281, 54.15494 ], [ -2.49338, 54.15524 ], [ -2.49361, 54.15536 ], [ -2.49406, 54.1556 ], [ -2.49521, 54.1562 ], [ -2.49658, 54.15692 ], [ -2.49749, 54.1574 ], [ -2.49767, 54.15749 ], [ -2.49883, 54.15806 ], [ -2.49915, 54.15819 ], [ -2.4994, 54.15829 ], [ -2.49952, 54.15834 ], [ -2.49966, 54.1584 ], [ -2.50015, 54.15861 ], [ -2.50055, 54.15881 ], [ -2.50094, 54.15906 ], [ -2.5014, 54.15936 ], [ -2.50201, 54.1597 ], [ -2.50241, 54.15991 ], [ -2.5027, 54.16007 ], [ -2.50298, 54.16027 ], [ -2.50326, 54.1605 ], [ -2.50335, 54.16058 ], [ -2.50367, 54.16085 ], [ -2.50404, 54.1611 ], [ -2.50443, 54.16127 ], [ -2.50463, 54.16134 ], [ -2.50492, 54.16143 ], [ -2.50503, 54.16145 ], [ -2.50511, 54.16148 ], [ -2.50538, 54.16157 ], [ -2.5062, 54.16182 ], [ -2.50647, 54.1619 ], [ -2.50663, 54.16195 ], [ -2.50675, 54.16198 ], [ -2.50703, 54.16206 ], [ -2.5073, 54.16213 ], [ -2.50731, 54.16213 ], [ -2.5075, 54.16218 ], [ -2.50786, 54.16226 ], [ -2.50788, 54.16226 ], [ -2.50817, 54.1623 ], [ -2.50845, 54.16235 ], [ -2.50847, 54.16235 ], [ -2.50877, 54.16239 ], [ -2.50896, 54.16241 ], [ -2.50939, 54.16245 ], [ -2.50968, 54.16249 ], [ -2.50997, 54.16254 ], [ -2.51026, 54.16261 ], [ -2.51036, 54.16264 ], [ -2.51074, 54.16273 ], [ -2.51083, 54.16276 ], [ -2.51163, 54.16301 ], [ -2.51182, 54.16307 ], [ -2.51208, 54.16318 ], [ -2.51239, 54.16332 ], [ -2.51261, 54.16344 ], [ -2.51284, 54.16356 ], [ -2.51307, 54.16368 ], [ -2.51309, 54.16369 ], [ -2.51337, 54.16381 ], [ -2.51358, 54.16388 ], [ -2.51366, 54.1639 ], [ -2.51396, 54.164 ], [ -2.51413, 54.16404 ], [ -2.51439, 54.16411 ], [ -2.51511, 54.16429 ], [ -2.51554, 54.1644 ], [ -2.51646, 54.16463 ], [ -2.5171, 54.16481 ], [ -2.51715, 54.16482 ], [ -2.51778, 54.16502 ], [ -2.51875, 54.16536 ], [ -2.51901, 54.16545 ], [ -2.52006, 54.16582 ], [ -2.52032, 54.16592 ], [ -2.52053, 54.16599 ], [ -2.52058, 54.16601 ], [ -2.52161, 54.16641 ], [ -2.52221, 54.16662 ], [ -2.52253, 54.1667 ], [ -2.52269, 54.16674 ], [ -2.52292, 54.16679 ], [ -2.52316, 54.16684 ], [ -2.52367, 54.16693 ], [ -2.5241, 54.16702 ], [ -2.52415, 54.16703 ], [ -2.52443, 54.1671 ], [ -2.5245, 54.16711 ], [ -2.52471, 54.16717 ], [ -2.5249, 54.16723 ], [ -2.52545, 54.1674 ], [ -2.52552, 54.16743 ], [ -2.52579, 54.16752 ], [ -2.52623, 54.16767 ], [ -2.52685, 54.16788 ], [ -2.52739, 54.16805 ], [ -2.52776, 54.16817 ], [ -2.52841, 54.16841 ], [ -2.52896, 54.16862 ], [ -2.52922, 54.16871 ], [ -2.52953, 54.16883 ], [ -2.52998, 54.169 ], [ -2.5302, 54.16908 ], [ -2.53049, 54.16921 ], [ -2.53074, 54.16933 ], [ -2.5308, 54.16936 ], [ -2.53178, 54.1698 ], [ -2.53196, 54.16987 ], [ -2.53221, 54.16997 ], [ -2.53235, 54.17003 ], [ -2.53288, 54.17023 ], [ -2.53331, 54.17036 ], [ -2.53425, 54.17063 ], [ -2.5348, 54.17077 ], [ -2.53512, 54.17087 ], [ -2.53539, 54.17095 ], [ -2.5355, 54.17098 ], [ -2.53593, 54.17112 ], [ -2.53596, 54.17113 ], [ -2.53619, 54.17122 ], [ -2.53721, 54.17162 ], [ -2.53764, 54.17179 ], [ -2.53827, 54.17205 ], [ -2.53944, 54.1725 ], [ -2.53959, 54.17256 ], [ -2.54001, 54.17273 ], [ -2.5401, 54.17276 ], [ -2.54026, 54.17282 ], [ -2.54027, 54.17282 ], [ -2.54044, 54.17288 ], [ -2.54058, 54.17292 ], [ -2.54077, 54.17298 ], [ -2.54081, 54.17299 ], [ -2.54107, 54.17305 ], [ -2.54127, 54.17311 ], [ -2.54175, 54.17324 ], [ -2.54187, 54.17328 ], [ -2.54201, 54.17332 ], [ -2.54225, 54.17341 ], [ -2.54245, 54.17349 ], [ -2.54255, 54.17353 ], [ -2.54271, 54.1736 ], [ -2.54294, 54.1737 ], [ -2.54317, 54.17382 ], [ -2.54326, 54.17387 ], [ -2.54339, 54.17395 ], [ -2.54346, 54.17399 ], [ -2.54393, 54.17429 ], [ -2.544, 54.17433 ], [ -2.54423, 54.17446 ], [ -2.54444, 54.17457 ], [ -2.54526, 54.17497 ], [ -2.54548, 54.17506 ], [ -2.54602, 54.17529 ], [ -2.54605, 54.1753 ], [ -2.54626, 54.17539 ], [ -2.54701, 54.17571 ], [ -2.54707, 54.17573 ], [ -2.54775, 54.176 ], [ -2.54778, 54.17601 ], [ -2.54838, 54.17623 ], [ -2.54882, 54.17639 ], [ -2.54928, 54.17655 ], [ -2.54967, 54.17668 ], [ -2.54994, 54.17677 ], [ -2.55066, 54.17702 ], [ -2.55084, 54.17709 ], [ -2.55103, 54.17717 ], [ -2.55116, 54.17722 ], [ -2.55133, 54.1773 ], [ -2.55146, 54.17736 ], [ -2.55156, 54.17741 ], [ -2.55169, 54.17748 ], [ -2.55172, 54.1775 ], [ -2.55187, 54.17759 ], [ -2.55207, 54.17769 ], [ -2.5523, 54.17785 ], [ -2.55251, 54.178 ], [ -2.55271, 54.17815 ], [ -2.55299, 54.17834 ], [ -2.55326, 54.17854 ], [ -2.55384, 54.17901 ], [ -2.55387, 54.17903 ], [ -2.55402, 54.17915 ], [ -2.55442, 54.17947 ], [ -2.55511, 54.18002 ], [ -2.55546, 54.18026 ], [ -2.55572, 54.18044 ], [ -2.55614, 54.1807 ], [ -2.55667, 54.18101 ], [ -2.55678, 54.18107 ], [ -2.55689, 54.18113 ], [ -2.55716, 54.18127 ], [ -2.55743, 54.18142 ], [ -2.55797, 54.18172 ], [ -2.55813, 54.1818 ], [ -2.55857, 54.18205 ], [ -2.5588, 54.18217 ], [ -2.55903, 54.18229 ], [ -2.55908, 54.18232 ], [ -2.55925, 54.18242 ], [ -2.55947, 54.18254 ], [ -2.55952, 54.18258 ], [ -2.5596, 54.18261 ], [ -2.55995, 54.1828 ], [ -2.56058, 54.18316 ], [ -2.56071, 54.18326 ], [ -2.56079, 54.18331 ], [ -2.56081, 54.18332 ], [ -2.561, 54.18348 ], [ -2.56111, 54.18358 ], [ -2.56121, 54.18368 ], [ -2.5614, 54.18384 ], [ -2.56146, 54.18389 ], [ -2.56168, 54.18404 ], [ -2.56189, 54.18418 ], [ -2.56198, 54.18424 ], [ -2.56212, 54.18432 ], [ -2.56232, 54.18443 ], [ -2.56237, 54.18445 ], [ -2.56259, 54.18458 ], [ -2.56277, 54.18468 ], [ -2.5629, 54.18476 ], [ -2.563, 54.18482 ], [ -2.56328, 54.18502 ], [ -2.56342, 54.18513 ], [ -2.5636, 54.18525 ], [ -2.56376, 54.18536 ], [ -2.56389, 54.18544 ], [ -2.56399, 54.1855 ], [ -2.56414, 54.18558 ], [ -2.56427, 54.18565 ], [ -2.56435, 54.18569 ], [ -2.56447, 54.18575 ], [ -2.56466, 54.18582 ], [ -2.56512, 54.18601 ], [ -2.56538, 54.18611 ], [ -2.56549, 54.18615 ], [ -2.56587, 54.18632 ], [ -2.56591, 54.18634 ], [ -2.56602, 54.18639 ], [ -2.56611, 54.18643 ], [ -2.56614, 54.18645 ], [ -2.56634, 54.18655 ], [ -2.56642, 54.18659 ], [ -2.56663, 54.18672 ], [ -2.56678, 54.1868 ], [ -2.56685, 54.18685 ], [ -2.56699, 54.18694 ], [ -2.56709, 54.18701 ], [ -2.56729, 54.18715 ], [ -2.56747, 54.1873 ], [ -2.5676, 54.1874 ], [ -2.56763, 54.18743 ], [ -2.56773, 54.18751 ], [ -2.56786, 54.18763 ], [ -2.56789, 54.18766 ], [ -2.56815, 54.18793 ], [ -2.56829, 54.18806 ], [ -2.56843, 54.18819 ], [ -2.56863, 54.18835 ], [ -2.56868, 54.1884 ], [ -2.56883, 54.1885 ], [ -2.56909, 54.18869 ], [ -2.5690872, 54.1886854 ], [ -2.56891, 54.18879 ], [ -2.56884, 54.18884 ], [ -2.5688, 54.18887 ], [ -2.56877, 54.1889 ], [ -2.56875, 54.18893 ], [ -2.56873, 54.18897 ], [ -2.56873, 54.18906 ], [ -2.56873, 54.18931 ], [ -2.56875, 54.18963 ], [ -2.56879, 54.18994 ], [ -2.5688, 54.19005 ], [ -2.56881, 54.19022 ], [ -2.5688068, 54.1902168 ], [ -2.5688, 54.19032 ], [ -2.5688, 54.19044 ], [ -2.56879, 54.19053 ], [ -2.56875, 54.19062 ], [ -2.56869, 54.19073 ], [ -2.56864, 54.19082 ], [ -2.56864, 54.19086 ], [ -2.56864, 54.19089 ], [ -2.56864, 54.1909 ], [ -2.56866, 54.19101 ], [ -2.56872, 54.19118 ], [ -2.56877, 54.19132 ], [ -2.56885, 54.19155 ], [ -2.56886, 54.19161 ], [ -2.56887, 54.19169 ], [ -2.56888, 54.19179 ], [ -2.56888, 54.1919 ], [ -2.56889, 54.19231 ], [ -2.56889, 54.19251 ], [ -2.56889, 54.19262 ], [ -2.5689, 54.19287 ], [ -2.5689, 54.19291 ], [ -2.5689, 54.19305 ], [ -2.5689, 54.19328 ], [ -2.56892, 54.19341 ], [ -2.56894, 54.19359 ], [ -2.56894, 54.19363 ], [ -2.56895, 54.19377 ], [ -2.56896, 54.19389 ], [ -2.56899, 54.19415 ], [ -2.56903, 54.19437 ], [ -2.56904, 54.19448 ], [ -2.56906, 54.19469 ], [ -2.56907, 54.19484 ], [ -2.56909, 54.19502 ], [ -2.56909, 54.19513 ], [ -2.56912, 54.19552 ], [ -2.56914, 54.19574 ], [ -2.56915, 54.19585 ], [ -2.56915, 54.19593 ], [ -2.56916, 54.19626 ], [ -2.56917, 54.19646 ], [ -2.5691682, 54.1964605 ], [ -2.56917, 54.19651 ], [ -2.56917, 54.19671 ], [ -2.56918, 54.19697 ], [ -2.56918, 54.19722 ], [ -2.56918, 54.1974 ], [ -2.56918, 54.19748 ], [ -2.56918, 54.19754 ], [ -2.56919, 54.19772 ], [ -2.56921, 54.19793 ], [ -2.56921, 54.19826 ], [ -2.56922, 54.19844 ], [ -2.56922, 54.19846 ], [ -2.56921, 54.19875 ], [ -2.5692, 54.19898 ], [ -2.5692, 54.19903 ], [ -2.5692, 54.1992 ], [ -2.56922, 54.19934 ], [ -2.56923, 54.19943 ], [ -2.56927, 54.19967 ], [ -2.56928, 54.1997 ], [ -2.56934, 54.20005 ], [ -2.56937, 54.2003 ], [ -2.5694, 54.20066 ], [ -2.56941, 54.2009 ], [ -2.56941, 54.20096 ], [ -2.5694, 54.20115 ], [ -2.56945, 54.20152 ], [ -2.56947, 54.20185 ], [ -2.56948, 54.202 ], [ -2.56948, 54.20232 ], [ -2.56953, 54.20261 ], [ -2.56954, 54.20286 ], [ -2.56955, 54.20296 ], [ -2.56957, 54.20336 ], [ -2.56958, 54.20362 ], [ -2.5696, 54.20392 ], [ -2.56961, 54.20417 ], [ -2.56961, 54.20437 ], [ -2.56962, 54.20458 ], [ -2.56962, 54.2049 ], [ -2.56964, 54.20503 ], [ -2.56965, 54.20516 ], [ -2.56966, 54.20521 ], [ -2.5697, 54.20544 ], [ -2.56973, 54.20557 ], [ -2.56974, 54.20563 ], [ -2.56975, 54.20575 ], [ -2.56979, 54.20598 ], [ -2.56985, 54.20629 ], [ -2.56986, 54.20635 ], [ -2.56989, 54.20647 ], [ -2.56993, 54.20668 ], [ -2.56997, 54.20682 ], [ -2.57, 54.20691 ], [ -2.57002, 54.207 ], [ -2.57003, 54.20706 ], [ -2.57006, 54.20726 ], [ -2.57006, 54.20736 ], [ -2.57006, 54.20745 ], [ -2.57007, 54.20753 ], [ -2.57008, 54.20761 ], [ -2.57009, 54.20794 ], [ -2.5701, 54.20805 ], [ -2.57011, 54.20812 ], [ -2.57014, 54.20823 ], [ -2.57018, 54.2084 ], [ -2.57024, 54.20855 ], [ -2.57025, 54.20858 ], [ -2.57031, 54.20874 ], [ -2.57035, 54.20888 ], [ -2.57036, 54.20894 ], [ -2.57039, 54.20908 ], [ -2.5704, 54.20929 ], [ -2.5704, 54.20933 ], [ -2.57042, 54.20947 ], [ -2.57043, 54.20952 ], [ -2.57047, 54.20965 ], [ -2.5705, 54.20976 ], [ -2.57052, 54.20983 ], [ -2.57055, 54.20991 ], [ -2.57057, 54.21001 ], [ -2.57059, 54.21008 ], [ -2.57061, 54.21028 ], [ -2.57067, 54.21054 ], [ -2.57068, 54.21059 ], [ -2.57071, 54.21072 ], [ -2.57075, 54.21088 ], [ -2.57075, 54.2109 ], [ -2.5708, 54.21108 ], [ -2.57083, 54.21116 ], [ -2.57093, 54.21142 ], [ -2.57093, 54.21143 ], [ -2.57097, 54.21156 ], [ -2.57097, 54.21175 ], [ -2.57097, 54.21178 ], [ -2.57098, 54.21199 ], [ -2.57104, 54.21223 ], [ -2.57106, 54.21232 ], [ -2.57112, 54.21258 ], [ -2.57118, 54.21286 ], [ -2.57122, 54.21303 ], [ -2.57122, 54.21306 ], [ -2.57126, 54.21321 ], [ -2.57129, 54.21334 ], [ -2.57131, 54.21339 ], [ -2.57135, 54.21349 ], [ -2.57139, 54.21356 ], [ -2.57149, 54.21373 ], [ -2.5714899, 54.2137335 ], [ -2.57164, 54.21393 ], [ -2.57191, 54.21416 ], [ -2.57198, 54.21421 ], [ -2.57217, 54.21435 ], [ -2.57223, 54.21439 ], [ -2.57237, 54.21449 ], [ -2.57255, 54.21461 ], [ -2.57267, 54.21471 ], [ -2.57272, 54.21478 ], [ -2.57277, 54.21483 ], [ -2.57284, 54.21495 ], [ -2.57289, 54.21509 ], [ -2.57291, 54.21512 ], [ -2.57298, 54.21526 ], [ -2.573, 54.21529 ], [ -2.5731, 54.21546 ], [ -2.57311, 54.21547 ], [ -2.57328, 54.21575 ], [ -2.57332, 54.2158 ], [ -2.57338, 54.21588 ], [ -2.57346, 54.21596 ], [ -2.5734642, 54.2159588 ], [ -2.57367, 54.21598 ], [ -2.57386, 54.21593 ], [ -2.574, 54.21588 ], [ -2.5740032, 54.2158847 ], [ -2.57425, 54.21599 ], [ -2.5744, 54.21608 ], [ -2.57464, 54.2162 ], [ -2.57471, 54.21623 ], [ -2.57488, 54.21631 ], [ -2.57496, 54.21635 ], [ -2.57512, 54.21643 ], [ -2.57523, 54.21648 ], [ -2.57537, 54.21653 ], [ -2.57551, 54.21658 ], [ -2.57564, 54.2166 ], [ -2.5757, 54.21661 ], [ -2.57577, 54.21662 ], [ -2.57589, 54.21663 ], [ -2.57595, 54.21662 ], [ -2.57608, 54.21662 ], [ -2.57625, 54.2166 ], [ -2.57631, 54.21659 ], [ -2.5765, 54.21657 ], [ -2.57655, 54.21657 ], [ -2.57674, 54.21656 ], [ -2.57686, 54.21655 ], [ -2.577, 54.21655 ], [ -2.57716, 54.21652 ], [ -2.5771637, 54.2165238 ], [ -2.57723, 54.21667 ], [ -2.57726, 54.21671 ], [ -2.5773, 54.21684 ], [ -2.57731, 54.21687 ], [ -2.57734, 54.21702 ], [ -2.57735, 54.21703 ], [ -2.57739, 54.21731 ], [ -2.57741, 54.21738 ], [ -2.57748, 54.21767 ], [ -2.57753, 54.21785 ], [ -2.57755, 54.21791 ], [ -2.5776, 54.21809 ], [ -2.57767, 54.21826 ], [ -2.57775, 54.21844 ], [ -2.57791, 54.2187 ], [ -2.57795, 54.21878 ], [ -2.57803, 54.21893 ], [ -2.57804, 54.21895 ], [ -2.57812, 54.21912 ], [ -2.5782, 54.2193 ], [ -2.5782, 54.21931 ], [ -2.57828, 54.21947 ], [ -2.57834, 54.21959 ], [ -2.57836, 54.21964 ], [ -2.57852, 54.21995 ], [ -2.57872, 54.22027 ], [ -2.57876, 54.22032 ], [ -2.57885, 54.22046 ], [ -2.57886, 54.22049 ], [ -2.579, 54.22077 ], [ -2.57904, 54.22084 ], [ -2.5792, 54.22115 ], [ -2.57922, 54.22118 ], [ -2.57933, 54.22135 ], [ -2.57935, 54.22138 ], [ -2.57945, 54.22151 ], [ -2.57957, 54.22168 ], [ -2.57962, 54.22174 ], [ -2.57971, 54.22184 ], [ -2.57995, 54.2221 ], [ -2.58, 54.22216 ], [ -2.58013, 54.22232 ], [ -2.58019, 54.2224 ], [ -2.58028, 54.22248 ], [ -2.58044, 54.22263 ], [ -2.58049, 54.22267 ], [ -2.58061, 54.22278 ], [ -2.58073, 54.2229 ], [ -2.58076, 54.22294 ], [ -2.58088, 54.22309 ], [ -2.58089, 54.2231 ], [ -2.58101, 54.22327 ], [ -2.5811, 54.22339 ], [ -2.58113, 54.22343 ], [ -2.58127, 54.22367 ], [ -2.58131, 54.22373 ], [ -2.58144, 54.22392 ], [ -2.58171, 54.22431 ], [ -2.58193, 54.22463 ], [ -2.58193, 54.22464 ], [ -2.58203, 54.2248 ], [ -2.5821, 54.22492 ], [ -2.58212, 54.22497 ], [ -2.58218, 54.22514 ], [ -2.58222, 54.22532 ], [ -2.58225, 54.22546 ], [ -2.58226, 54.2255 ], [ -2.5823, 54.22569 ], [ -2.58233, 54.22582 ], [ -2.58233, 54.22586 ], [ -2.58233, 54.22603 ], [ -2.58231, 54.22623 ], [ -2.58228, 54.2264 ], [ -2.58226, 54.22647 ], [ -2.58225, 54.22658 ], [ -2.58222, 54.2268 ], [ -2.5822, 54.2271 ], [ -2.5822, 54.22711 ], [ -2.58219, 54.22736 ], [ -2.58218, 54.22752 ], [ -2.58222, 54.22765 ], [ -2.58225, 54.22774 ], [ -2.58232, 54.22791 ], [ -2.58236, 54.22804 ], [ -2.58237, 54.22813 ], [ -2.58238, 54.22818 ], [ -2.58239, 54.22826 ], [ -2.58239, 54.22836 ], [ -2.58235, 54.22851 ], [ -2.58231, 54.22866 ], [ -2.58224, 54.22882 ], [ -2.58216, 54.22897 ], [ -2.58213, 54.22906 ], [ -2.58209, 54.22919 ], [ -2.58208, 54.22924 ], [ -2.58205, 54.22941 ], [ -2.58205, 54.22942 ], [ -2.58201, 54.22964 ], [ -2.58198, 54.22999 ], [ -2.58196, 54.23032 ], [ -2.58196, 54.23048 ], [ -2.58196, 54.2305 ], [ -2.58198, 54.23068 ], [ -2.58198, 54.23077 ], [ -2.58198, 54.23086 ], [ -2.58197, 54.23089 ], [ -2.58193, 54.23098 ], [ -2.58188, 54.23109 ], [ -2.58182, 54.23119 ], [ -2.58181, 54.2312 ], [ -2.58175, 54.23128 ], [ -2.58162, 54.23143 ], [ -2.58155, 54.23153 ], [ -2.58147, 54.23163 ], [ -2.58143, 54.23169 ], [ -2.58139, 54.23176 ], [ -2.58135, 54.23187 ], [ -2.58133, 54.2319 ], [ -2.58131, 54.23196 ], [ -2.58125, 54.23209 ], [ -2.5812, 54.23222 ], [ -2.58113, 54.23241 ], [ -2.58112, 54.23244 ], [ -2.58107, 54.23257 ], [ -2.58102, 54.23273 ], [ -2.58098, 54.23291 ], [ -2.58098, 54.23292 ], [ -2.58096, 54.23305 ], [ -2.58096, 54.2331 ], [ -2.58095, 54.23321 ], [ -2.58095, 54.23328 ], [ -2.58094, 54.23334 ], [ -2.58093, 54.2334 ], [ -2.58094, 54.23346 ], [ -2.58094, 54.23347 ], [ -2.58094, 54.23364 ], [ -2.58095, 54.2337 ], [ -2.58099, 54.23395 ], [ -2.58099, 54.234 ], [ -2.58099, 54.23401 ], [ -2.58102, 54.23414 ], [ -2.58102, 54.2343 ], [ -2.58099, 54.23445 ], [ -2.58097, 54.23454 ], [ -2.58097, 54.23455 ], [ -2.58093, 54.23469 ], [ -2.58092, 54.23472 ], [ -2.58089, 54.23484 ], [ -2.58083, 54.23507 ], [ -2.58079, 54.23522 ], [ -2.58077, 54.23532 ], [ -2.58074, 54.23547 ], [ -2.58067, 54.23576 ], [ -2.58063, 54.23598 ], [ -2.58059, 54.23616 ], [ -2.58057, 54.23622 ], [ -2.58054, 54.23629 ], [ -2.58053, 54.23632 ], [ -2.58047, 54.23643 ], [ -2.58045, 54.23646 ], [ -2.58038, 54.23657 ], [ -2.58034, 54.23662 ], [ -2.58031, 54.23668 ], [ -2.58028, 54.23675 ], [ -2.58027, 54.23679 ], [ -2.58026, 54.23684 ], [ -2.58026, 54.23691 ], [ -2.58027, 54.23695 ], [ -2.58028, 54.23699 ], [ -2.58031, 54.23705 ], [ -2.58033, 54.23708 ], [ -2.58041, 54.23717 ], [ -2.58043, 54.23719 ], [ -2.58058, 54.23735 ], [ -2.58063, 54.2374 ], [ -2.58077, 54.23754 ], [ -2.58082, 54.2376 ], [ -2.58087, 54.23765 ], [ -2.58108, 54.23787 ], [ -2.58126, 54.23811 ], [ -2.58127, 54.23812 ], [ -2.58143, 54.23838 ], [ -2.58155, 54.23862 ], [ -2.58157, 54.23867 ], [ -2.58168, 54.23889 ], [ -2.58169, 54.23893 ], [ -2.5818, 54.23913 ], [ -2.5819, 54.23934 ], [ -2.58196, 54.23947 ], [ -2.58204, 54.23965 ], [ -2.5821, 54.23978 ], [ -2.58224, 54.24006 ], [ -2.5823, 54.24017 ], [ -2.58241, 54.2404 ], [ -2.58247, 54.24052 ], [ -2.58251, 54.2406 ], [ -2.58263, 54.24087 ], [ -2.58267, 54.24095 ], [ -2.58271, 54.24104 ], [ -2.58271, 54.24105 ], [ -2.58279, 54.24124 ], [ -2.58283, 54.24133 ], [ -2.58285, 54.24139 ], [ -2.58289, 54.24152 ], [ -2.58295, 54.24174 ], [ -2.58295, 54.24175 ], [ -2.58297, 54.24187 ], [ -2.58297, 54.24192 ], [ -2.58298, 54.24195 ], [ -2.58299, 54.24203 ], [ -2.58299, 54.2421 ], [ -2.58301, 54.24231 ], [ -2.58302, 54.24254 ], [ -2.58305, 54.24293 ], [ -2.58306, 54.243 ], [ -2.58307, 54.24336 ], [ -2.58308, 54.24346 ], [ -2.58312, 54.24391 ], [ -2.58312, 54.24408 ], [ -2.58312, 54.24414 ], [ -2.58313, 54.24434 ], [ -2.58315, 54.24444 ], [ -2.58317, 54.24462 ], [ -2.58319, 54.24476 ], [ -2.58322, 54.24495 ], [ -2.58325, 54.24516 ], [ -2.58327, 54.24532 ], [ -2.58327, 54.24534 ], [ -2.58331, 54.24558 ], [ -2.58333, 54.24577 ], [ -2.58334, 54.24595 ], [ -2.5834, 54.24623 ], [ -2.58347, 54.24646 ], [ -2.5835, 54.24657 ], [ -2.58356, 54.2467 ], [ -2.58361, 54.24676 ], [ -2.58363, 54.24683 ], [ -2.58368, 54.2469 ], [ -2.58373, 54.24697 ], [ -2.58378, 54.24703 ], [ -2.58385, 54.24712 ], [ -2.58387, 54.24715 ], [ -2.58396, 54.24728 ], [ -2.584, 54.24738 ], [ -2.58402, 54.24745 ], [ -2.58403, 54.24751 ], [ -2.58403, 54.24757 ], [ -2.58402, 54.24761 ], [ -2.58401, 54.24767 ], [ -2.584, 54.24774 ], [ -2.58398, 54.2478 ], [ -2.58393, 54.24789 ], [ -2.58385, 54.24799 ], [ -2.58381, 54.24805 ], [ -2.58376, 54.24815 ], [ -2.58374, 54.24819 ], [ -2.58372, 54.24826 ], [ -2.58371, 54.24837 ], [ -2.58371, 54.24843 ], [ -2.58371, 54.24857 ], [ -2.5837, 54.24873 ], [ -2.5837, 54.24876 ], [ -2.5837, 54.24891 ], [ -2.5837, 54.2491 ], [ -2.58372, 54.24927 ], [ -2.58378, 54.24963 ], [ -2.5838, 54.24981 ], [ -2.58381, 54.24983 ], [ -2.58381, 54.24988 ], [ -2.58386, 54.25025 ], [ -2.58389, 54.25053 ], [ -2.5839, 54.25068 ], [ -2.5839, 54.25069 ], [ -2.5839, 54.25071 ], [ -2.5839, 54.25089 ], [ -2.58389, 54.25107 ], [ -2.58389, 54.25125 ], [ -2.58388, 54.25142 ], [ -2.58388, 54.2515 ], [ -2.58386, 54.2516 ], [ -2.58385, 54.25165 ], [ -2.58383, 54.25176 ], [ -2.58381, 54.25185 ], [ -2.58376, 54.25196 ], [ -2.58373, 54.25203 ], [ -2.58366, 54.25212 ], [ -2.58358, 54.25221 ], [ -2.58338, 54.2524 ], [ -2.58335, 54.25244 ], [ -2.58331, 54.25248 ], [ -2.58325, 54.25258 ], [ -2.58324, 54.25261 ], [ -2.58318, 54.25271 ], [ -2.58315, 54.25278 ], [ -2.58311, 54.25286 ], [ -2.58305, 54.253 ], [ -2.58299, 54.25315 ], [ -2.58289, 54.25339 ], [ -2.58278, 54.25358 ], [ -2.58271, 54.25372 ], [ -2.58268, 54.25382 ], [ -2.58267, 54.25386 ], [ -2.58265, 54.25398 ], [ -2.58265, 54.25408 ], [ -2.58267, 54.25436 ], [ -2.58269, 54.25454 ], [ -2.58269, 54.25458 ], [ -2.58271, 54.2549 ], [ -2.58272, 54.25497 ], [ -2.58273, 54.25512 ], [ -2.58274, 54.25526 ], [ -2.58277, 54.25544 ], [ -2.58279, 54.25553 ], [ -2.5829, 54.25591 ], [ -2.58293, 54.25597 ], [ -2.583, 54.25614 ], [ -2.58306, 54.25631 ], [ -2.58306, 54.25632 ], [ -2.58309, 54.25645 ], [ -2.5831, 54.2565 ], [ -2.58313, 54.25668 ], [ -2.58314, 54.2567 ], [ -2.58318, 54.25683 ], [ -2.58324, 54.25696 ], [ -2.58327, 54.25703 ], [ -2.58329, 54.25708 ], [ -2.58333, 54.25721 ], [ -2.58336, 54.25732 ], [ -2.58337, 54.25738 ], [ -2.58341, 54.25756 ], [ -2.58341, 54.25757 ], [ -2.58341, 54.25769 ], [ -2.58341, 54.25774 ], [ -2.5834, 54.25781 ], [ -2.58339, 54.25792 ], [ -2.58338, 54.25794 ], [ -2.58334, 54.25812 ], [ -2.58324, 54.25848 ], [ -2.5832, 54.25868 ], [ -2.58314, 54.25894 ], [ -2.58312, 54.25903 ], [ -2.58311, 54.25907 ], [ -2.58309, 54.25917 ], [ -2.583, 54.25934 ], [ -2.58292, 54.2596 ], [ -2.58287, 54.25976 ], [ -2.58282, 54.25995 ], [ -2.58278, 54.26009 ], [ -2.58273, 54.26022 ], [ -2.58267, 54.26034 ], [ -2.5826, 54.26048 ], [ -2.58252, 54.26061 ], [ -2.58226, 54.26102 ], [ -2.58214, 54.26125 ], [ -2.58205, 54.26142 ], [ -2.58199, 54.26153 ], [ -2.58195, 54.26163 ], [ -2.58187, 54.26183 ], [ -2.58183, 54.26194 ], [ -2.58178, 54.26207 ], [ -2.58177, 54.26212 ], [ -2.58171, 54.2623 ], [ -2.58167, 54.26245 ], [ -2.58163, 54.26257 ], [ -2.5816, 54.26265 ], [ -2.58157, 54.26274 ], [ -2.58153, 54.26283 ], [ -2.58151, 54.26287 ], [ -2.58145, 54.26298 ], [ -2.58144, 54.263 ], [ -2.58133, 54.2632 ], [ -2.58121, 54.26336 ], [ -2.58117, 54.26342 ], [ -2.5811, 54.26353 ], [ -2.58102, 54.26365 ], [ -2.58099, 54.2637 ], [ -2.58098, 54.26371 ], [ -2.58087, 54.26386 ], [ -2.58086, 54.26388 ], [ -2.58076, 54.26403 ], [ -2.58062, 54.26426 ], [ -2.58058, 54.26431 ], [ -2.58054, 54.26437 ], [ -2.5805, 54.26443 ], [ -2.58044, 54.26454 ], [ -2.5804, 54.2646 ], [ -2.58034, 54.26471 ], [ -2.58031, 54.26477 ], [ -2.58026, 54.26489 ], [ -2.58023, 54.26495 ], [ -2.58018, 54.26514 ], [ -2.58016, 54.26526 ], [ -2.58015, 54.2653 ], [ -2.58012, 54.26548 ], [ -2.5801, 54.26566 ], [ -2.58009, 54.26572 ], [ -2.58007, 54.26584 ], [ -2.58005, 54.26595 ], [ -2.58004, 54.26602 ], [ -2.58001, 54.26619 ], [ -2.58001, 54.26623 ], [ -2.57998, 54.26633 ], [ -2.57996, 54.26637 ], [ -2.57995, 54.26641 ], [ -2.57991, 54.26649 ], [ -2.57986, 54.26656 ], [ -2.57981, 54.26666 ], [ -2.57978, 54.26672 ], [ -2.57975, 54.26677 ], [ -2.57973, 54.26684 ], [ -2.57972, 54.26689 ], [ -2.57972, 54.2669 ], [ -2.57971, 54.26696 ], [ -2.57971, 54.26721 ], [ -2.57971, 54.26725 ], [ -2.57972, 54.26733 ], [ -2.57971, 54.26744 ], [ -2.5797, 54.26757 ], [ -2.5797, 54.26761 ], [ -2.57967, 54.26782 ], [ -2.57963, 54.26807 ], [ -2.57962, 54.26815 ], [ -2.57959, 54.26833 ], [ -2.57958, 54.26843 ], [ -2.57957, 54.26846 ], [ -2.57955, 54.26856 ], [ -2.57954, 54.26871 ], [ -2.57955, 54.26888 ], [ -2.57955, 54.26892 ], [ -2.57956, 54.2691 ], [ -2.57956, 54.26915 ], [ -2.57957, 54.26928 ], [ -2.57957, 54.26938 ], [ -2.57958, 54.26943 ], [ -2.57958, 54.26946 ], [ -2.5796, 54.26952 ], [ -2.57963, 54.26959 ], [ -2.57965, 54.26963 ], [ -2.57968, 54.26969 ], [ -2.57974, 54.26976 ], [ -2.57997, 54.27002 ], [ -2.58012, 54.27018 ], [ -2.58021, 54.27027 ], [ -2.58025, 54.27032 ], [ -2.58034, 54.27044 ], [ -2.58039, 54.2705 ], [ -2.58045, 54.2706 ], [ -2.58054, 54.27074 ], [ -2.58056, 54.27077 ], [ -2.58061, 54.27086 ], [ -2.58065, 54.27094 ], [ -2.58067, 54.27099 ], [ -2.5807, 54.2711 ], [ -2.58071, 54.27117 ], [ -2.58071, 54.2713 ], [ -2.58071, 54.27144 ], [ -2.5807, 54.27148 ], [ -2.58068, 54.27184 ], [ -2.58066, 54.27202 ], [ -2.58065, 54.2722 ], [ -2.58065, 54.27223 ], [ -2.58063, 54.27238 ], [ -2.5806, 54.27268 ], [ -2.58056, 54.27298 ], [ -2.58057, 54.27299 ], [ -2.58056, 54.2731 ], [ -2.58054, 54.27319 ], [ -2.58051, 54.27328 ], [ -2.58046, 54.27337 ], [ -2.58045, 54.27345 ], [ -2.58044, 54.27351 ], [ -2.58041, 54.27366 ], [ -2.58041, 54.27402 ], [ -2.58043, 54.27422 ], [ -2.58048, 54.27466 ], [ -2.58048, 54.27469 ], [ -2.58054, 54.275 ], [ -2.58053, 54.27503 ], [ -2.58057, 54.27527 ], [ -2.58057, 54.27531 ], [ -2.58056, 54.27548 ], [ -2.58055, 54.27556 ], [ -2.58045, 54.27607 ], [ -2.58044, 54.27609 ], [ -2.58042, 54.2762 ], [ -2.58032, 54.27661 ], [ -2.58032, 54.27663 ], [ -2.58025, 54.27678 ], [ -2.58014, 54.27697 ], [ -2.58001, 54.2772 ], [ -2.57983, 54.27754 ], [ -2.57977, 54.27766 ], [ -2.57974, 54.27773 ], [ -2.57961, 54.27805 ], [ -2.57954, 54.27818 ], [ -2.57953, 54.27819 ], [ -2.57945, 54.27834 ], [ -2.57933, 54.27852 ], [ -2.57928, 54.2786 ], [ -2.57922, 54.27869 ], [ -2.57911, 54.27886 ], [ -2.5791, 54.27887 ], [ -2.57901, 54.27902 ], [ -2.579, 54.27902 ], [ -2.5789, 54.27919 ], [ -2.57887, 54.27923 ], [ -2.57877, 54.2794 ], [ -2.57865, 54.27965 ], [ -2.5786, 54.27976 ], [ -2.57854, 54.27987 ], [ -2.57841, 54.28008 ], [ -2.57822, 54.28036 ], [ -2.57816, 54.28045 ], [ -2.57814, 54.2805 ], [ -2.57811, 54.28071 ], [ -2.57812, 54.28082 ], [ -2.57813, 54.281 ], [ -2.57813, 54.28104 ], [ -2.57813, 54.28118 ], [ -2.57811, 54.28143 ], [ -2.57805, 54.28223 ], [ -2.57805, 54.28226 ], [ -2.57803, 54.28249 ], [ -2.57801, 54.28261 ], [ -2.57798, 54.28287 ], [ -2.57792, 54.28306 ], [ -2.5778, 54.28329 ], [ -2.57779, 54.28332 ], [ -2.5777, 54.28349 ], [ -2.57769, 54.28349 ], [ -2.5776, 54.28366 ], [ -2.5775, 54.28383 ], [ -2.5774, 54.28399 ], [ -2.57715, 54.28436 ], [ -2.57704, 54.2845 ], [ -2.57691, 54.28466 ], [ -2.57678, 54.28483 ], [ -2.57677, 54.28484 ], [ -2.57662, 54.28504 ], [ -2.57631, 54.28544 ], [ -2.57627, 54.28549 ], [ -2.57609, 54.28572 ], [ -2.57596, 54.28586 ], [ -2.57587, 54.28596 ], [ -2.57556, 54.28615 ], [ -2.57519, 54.28633 ], [ -2.57513, 54.28636 ], [ -2.575, 54.28642 ], [ -2.57492, 54.28648 ], [ -2.57487, 54.28652 ], [ -2.57479, 54.28662 ], [ -2.57474, 54.28673 ], [ -2.57471, 54.28682 ], [ -2.57465, 54.287 ], [ -2.57463, 54.28708 ], [ -2.57459, 54.28717 ], [ -2.57455, 54.28726 ], [ -2.57451, 54.28734 ], [ -2.57444, 54.28745 ], [ -2.57433, 54.28761 ], [ -2.57424, 54.28772 ], [ -2.57412, 54.28784 ], [ -2.57411, 54.28785 ], [ -2.57396, 54.28799 ], [ -2.57383, 54.28814 ], [ -2.57368, 54.28831 ], [ -2.57356, 54.28845 ], [ -2.57337, 54.28874 ], [ -2.57333, 54.28881 ], [ -2.57322, 54.28898 ], [ -2.57301, 54.28931 ], [ -2.57291, 54.28948 ], [ -2.57286, 54.28956 ], [ -2.57281, 54.28965 ], [ -2.57272, 54.28982 ], [ -2.57239, 54.29038 ], [ -2.57222, 54.29069 ], [ -2.57205, 54.291 ], [ -2.572, 54.29108 ], [ -2.57182, 54.29138 ], [ -2.57157, 54.29175 ], [ -2.57141, 54.29196 ], [ -2.57136, 54.29203 ], [ -2.57111, 54.29234 ], [ -2.57098, 54.2925 ], [ -2.57087, 54.29267 ], [ -2.57075, 54.29286 ], [ -2.57074, 54.29288 ], [ -2.57065, 54.29306 ], [ -2.57062, 54.29314 ], [ -2.57052, 54.29335 ], [ -2.57049, 54.2934 ], [ -2.57043, 54.29352 ], [ -2.5703, 54.29377 ], [ -2.57024, 54.29392 ], [ -2.57017, 54.2941 ], [ -2.57009, 54.29427 ], [ -2.57008, 54.2943 ], [ -2.57001, 54.29448 ], [ -2.56994, 54.29469 ], [ -2.56986, 54.29498 ], [ -2.56982, 54.29507 ], [ -2.56975, 54.29522 ], [ -2.56967, 54.29532 ], [ -2.56965, 54.29536 ], [ -2.56955, 54.29548 ], [ -2.56954, 54.29549 ], [ -2.56942, 54.29563 ], [ -2.5694, 54.29565 ], [ -2.56931, 54.29576 ], [ -2.56928, 54.29581 ], [ -2.56922, 54.29596 ], [ -2.56921, 54.29606 ], [ -2.56921, 54.29617 ], [ -2.56922, 54.29618 ], [ -2.56927, 54.29631 ], [ -2.56937, 54.29646 ], [ -2.56941, 54.29651 ], [ -2.56949, 54.2966 ], [ -2.56959, 54.29671 ], [ -2.56975, 54.29691 ], [ -2.56984, 54.29703 ], [ -2.56991, 54.29714 ], [ -2.57, 54.2973 ], [ -2.57002, 54.29733 ], [ -2.5701, 54.29749 ], [ -2.57011, 54.2975 ], [ -2.57019, 54.29766 ], [ -2.5702, 54.29767 ], [ -2.57029, 54.29784 ], [ -2.5703, 54.29784 ], [ -2.57045, 54.29809 ], [ -2.57051, 54.29818 ], [ -2.57063, 54.29835 ], [ -2.57067, 54.29842 ], [ -2.57073, 54.29852 ], [ -2.57073, 54.29853 ], [ -2.57078, 54.29862 ], [ -2.5708, 54.29869 ], [ -2.57081, 54.29877 ], [ -2.57081, 54.29885 ], [ -2.57081, 54.29887 ], [ -2.5708, 54.29894 ], [ -2.57078, 54.299 ], [ -2.57077, 54.29905 ], [ -2.57076, 54.29907 ], [ -2.57072, 54.29919 ], [ -2.57063, 54.2994 ], [ -2.57062, 54.29943 ], [ -2.57048, 54.29971 ], [ -2.57038, 54.2999 ], [ -2.57026, 54.30015 ], [ -2.5702, 54.30026 ], [ -2.5702, 54.30028 ], [ -2.57014, 54.30044 ], [ -2.57013, 54.30046 ], [ -2.57007, 54.30062 ], [ -2.57006, 54.30066 ], [ -2.56996, 54.30092 ], [ -2.56994, 54.30097 ], [ -2.56986, 54.30114 ], [ -2.56985, 54.30117 ], [ -2.56979, 54.30132 ], [ -2.56972, 54.30147 ], [ -2.56972, 54.30149 ], [ -2.56967, 54.30162 ], [ -2.56967, 54.30167 ], [ -2.56966, 54.30173 ], [ -2.56969, 54.3018 ], [ -2.56972, 54.30184 ], [ -2.56977, 54.30191 ], [ -2.56988, 54.30201 ], [ -2.5699, 54.30203 ], [ -2.57003, 54.30217 ], [ -2.57019, 54.30233 ], [ -2.57036, 54.30247 ], [ -2.57054, 54.30262 ], [ -2.57072, 54.30276 ], [ -2.57073, 54.30278 ], [ -2.57089, 54.30291 ], [ -2.57104, 54.30303 ], [ -2.57124, 54.30321 ], [ -2.5713, 54.30326 ], [ -2.57141, 54.30336 ], [ -2.57158, 54.30351 ], [ -2.57176, 54.30365 ], [ -2.57182, 54.3037 ], [ -2.57215, 54.30394 ], [ -2.5723, 54.30405 ], [ -2.57234, 54.30408 ], [ -2.57257, 54.30425 ], [ -2.57272, 54.30436 ], [ -2.57295, 54.30453 ], [ -2.57311, 54.30464 ], [ -2.57329, 54.30477 ], [ -2.5733, 54.30478 ], [ -2.5737, 54.30505 ], [ -2.57374, 54.30509 ], [ -2.5739, 54.30519 ], [ -2.57397, 54.30524 ], [ -2.57427, 54.30545 ], [ -2.57451, 54.30561 ], [ -2.57464, 54.30569 ], [ -2.57483, 54.30582 ], [ -2.5749, 54.30587 ], [ -2.57495, 54.30591 ], [ -2.57506, 54.306 ], [ -2.57513, 54.30606 ], [ -2.57516, 54.30613 ], [ -2.57517, 54.30622 ], [ -2.5751737, 54.3062202 ], [ -2.57538, 54.30631 ], [ -2.57556, 54.30649 ], [ -2.57557, 54.30649 ], [ -2.57572, 54.30665 ], [ -2.57587, 54.3068 ], [ -2.57602, 54.30696 ], [ -2.57611, 54.30706 ], [ -2.57662, 54.30759 ], [ -2.57677, 54.30775 ], [ -2.57691, 54.3079 ], [ -2.57696, 54.30795 ], [ -2.57706, 54.30806 ], [ -2.57721, 54.30822 ], [ -2.57725, 54.30825 ], [ -2.57737, 54.30838 ], [ -2.57759, 54.30861 ], [ -2.57775, 54.30876 ], [ -2.57785, 54.30885 ], [ -2.57803, 54.30902 ], [ -2.57804, 54.30903 ], [ -2.57819, 54.30916 ], [ -2.5782, 54.30917 ], [ -2.57873, 54.30964 ], [ -2.57888, 54.30977 ], [ -2.57912, 54.30997 ], [ -2.57952, 54.31033 ], [ -2.57966, 54.31046 ], [ -2.57973, 54.31053 ], [ -2.5799, 54.31072 ], [ -2.58001, 54.31084 ], [ -2.58019, 54.31102 ], [ -2.58026, 54.31107 ], [ -2.58034, 54.31111 ], [ -2.58037, 54.31112 ], [ -2.58044, 54.31115 ], [ -2.58062, 54.3112 ], [ -2.58065, 54.3112 ], [ -2.58117, 54.31132 ], [ -2.58168, 54.31143 ], [ -2.5818, 54.31146 ], [ -2.58207, 54.31151 ], [ -2.58209, 54.31152 ], [ -2.58232, 54.31156 ], [ -2.58238, 54.31157 ], [ -2.58249, 54.3116 ], [ -2.58262, 54.31162 ], [ -2.58285, 54.31164 ], [ -2.58299, 54.31173 ], [ -2.58315, 54.31185 ], [ -2.58325, 54.31191 ], [ -2.58331, 54.31196 ], [ -2.58345, 54.31203 ], [ -2.58347, 54.31204 ], [ -2.58358, 54.31209 ], [ -2.5837, 54.31214 ], [ -2.58372, 54.31214 ], [ -2.5838, 54.3122 ], [ -2.58385, 54.31223 ], [ -2.58389, 54.31228 ], [ -2.58395, 54.31236 ], [ -2.58397, 54.31241 ], [ -2.58399, 54.31245 ], [ -2.58401, 54.3125 ], [ -2.58401, 54.31255 ], [ -2.58401, 54.3126 ], [ -2.58401, 54.31266 ], [ -2.58398, 54.31276 ], [ -2.58396, 54.31282 ], [ -2.58394, 54.31287 ], [ -2.5839, 54.31299 ], [ -2.58385, 54.31313 ], [ -2.58385, 54.31317 ], [ -2.58383, 54.31335 ], [ -2.58383, 54.31336 ], [ -2.58387, 54.31367 ], [ -2.58387, 54.31371 ], [ -2.58387, 54.31384 ], [ -2.58385, 54.31401 ], [ -2.58384, 54.31407 ], [ -2.58381, 54.31421 ], [ -2.58377, 54.31437 ], [ -2.58376, 54.31442 ], [ -2.58374, 54.31455 ], [ -2.58373, 54.3146 ], [ -2.58371, 54.31477 ], [ -2.58371, 54.31478 ], [ -2.58372, 54.31496 ], [ -2.58372, 54.3151 ], [ -2.58373, 54.31514 ], [ -2.58375, 54.31524 ], [ -2.58378, 54.31538 ], [ -2.58382, 54.3155 ], [ -2.58386, 54.31561 ], [ -2.58388, 54.31567 ], [ -2.58392, 54.31578 ], [ -2.58394, 54.31585 ], [ -2.58394, 54.31587 ], [ -2.58395, 54.31598 ], [ -2.58395, 54.31611 ], [ -2.58395, 54.31629 ], [ -2.58397, 54.31638 ], [ -2.58397, 54.31639 ], [ -2.584, 54.31646 ], [ -2.58403, 54.31651 ], [ -2.58409, 54.31659 ], [ -2.58415, 54.31663 ], [ -2.58421, 54.31667 ], [ -2.58426, 54.31669 ], [ -2.58431, 54.31672 ], [ -2.58443, 54.31676 ], [ -2.58452, 54.31679 ], [ -2.58456, 54.31681 ], [ -2.58465, 54.31686 ], [ -2.5847, 54.31688 ], [ -2.5848, 54.31697 ], [ -2.58488, 54.31708 ], [ -2.58501, 54.31732 ], [ -2.58517, 54.3176 ], [ -2.58517, 54.31762 ], [ -2.5852, 54.31777 ], [ -2.58519, 54.3178 ], [ -2.58516, 54.3179 ], [ -2.58506, 54.31815 ], [ -2.58495, 54.31832 ], [ -2.58486, 54.31849 ], [ -2.58478, 54.31866 ], [ -2.58476, 54.31872 ], [ -2.58472, 54.31884 ], [ -2.58472, 54.31886 ], [ -2.58471, 54.31902 ], [ -2.58471, 54.3191 ], [ -2.58473, 54.31917 ], [ -2.58474, 54.3192 ], [ -2.58475, 54.31923 ], [ -2.58477, 54.31925 ], [ -2.58479, 54.31927 ], [ -2.58483, 54.3193 ], [ -2.5849, 54.31935 ], [ -2.5848987, 54.3193502 ], [ -2.58472, 54.31951 ], [ -2.58439, 54.31982 ], [ -2.58394, 54.3202 ], [ -2.58377, 54.32035 ], [ -2.58376, 54.32035 ], [ -2.58349, 54.32051 ], [ -2.58329, 54.32061 ], [ -2.58316, 54.32068 ], [ -2.58293, 54.32081 ], [ -2.58278, 54.32091 ], [ -2.58268, 54.32099 ], [ -2.58266, 54.32101 ], [ -2.5824, 54.32124 ], [ -2.5823, 54.32132 ], [ -2.58221, 54.32137 ], [ -2.58213, 54.32142 ], [ -2.58203, 54.32149 ], [ -2.5819, 54.32154 ], [ -2.58181, 54.32158 ], [ -2.58162, 54.32162 ], [ -2.58139, 54.32166 ], [ -2.58133, 54.32167 ], [ -2.58105, 54.32172 ], [ -2.58073, 54.32175 ], [ -2.58051, 54.32178 ], [ -2.58022, 54.32181 ], [ -2.58004, 54.32183 ], [ -2.5799, 54.32185 ], [ -2.57969, 54.32187 ], [ -2.57959, 54.32188 ], [ -2.57932, 54.32192 ], [ -2.579, 54.32198 ], [ -2.57895, 54.32199 ], [ -2.57871, 54.32204 ], [ -2.57863, 54.32206 ], [ -2.57842, 54.32209 ], [ -2.57841, 54.32209 ], [ -2.57821, 54.32212 ], [ -2.57812, 54.32214 ], [ -2.57807, 54.32215 ], [ -2.5779, 54.32218 ], [ -2.57783, 54.3222 ], [ -2.57776, 54.32221 ], [ -2.57762, 54.32226 ], [ -2.57755, 54.32228 ], [ -2.5775, 54.3223 ], [ -2.57738, 54.32234 ], [ -2.57729, 54.32238 ], [ -2.57728, 54.32238 ], [ -2.57718, 54.32241 ], [ -2.57707, 54.32245 ], [ -2.5769, 54.32249 ], [ -2.57678, 54.32252 ], [ -2.57673, 54.32253 ], [ -2.57661, 54.32255 ], [ -2.57644, 54.32259 ], [ -2.57643, 54.32259 ], [ -2.57624, 54.32262 ], [ -2.57615, 54.32264 ], [ -2.57603, 54.32266 ], [ -2.57587, 54.32269 ], [ -2.57585, 54.32269 ], [ -2.57579, 54.3227 ], [ -2.57573, 54.32272 ], [ -2.57565, 54.32273 ], [ -2.57559, 54.32275 ], [ -2.57557, 54.32276 ], [ -2.57545, 54.3228 ], [ -2.5753, 54.32285 ], [ -2.57527, 54.32286 ], [ -2.5751, 54.32292 ], [ -2.57504, 54.32294 ], [ -2.57502, 54.32295 ], [ -2.57493, 54.32298 ], [ -2.57484, 54.32302 ], [ -2.57478, 54.32304 ], [ -2.57478, 54.32305 ], [ -2.57472, 54.32308 ], [ -2.57465, 54.32312 ], [ -2.57458, 54.32316 ], [ -2.57457, 54.32317 ], [ -2.57452, 54.32321 ], [ -2.57445, 54.32327 ], [ -2.5744, 54.32332 ], [ -2.57436, 54.32336 ], [ -2.57433, 54.32341 ], [ -2.57432, 54.32342 ], [ -2.57429, 54.32346 ], [ -2.57426, 54.32353 ], [ -2.57422, 54.32359 ], [ -2.5742, 54.32362 ], [ -2.57416, 54.32368 ], [ -2.57413, 54.32371 ], [ -2.57408, 54.32374 ], [ -2.5740758, 54.3237399 ], [ -2.57411, 54.32378 ], [ -2.57413, 54.3238 ], [ -2.57414, 54.32383 ], [ -2.57414, 54.32386 ], [ -2.57414, 54.32391 ], [ -2.57413, 54.32398 ], [ -2.57412, 54.32409 ], [ -2.57408, 54.32425 ], [ -2.57407, 54.32428 ], [ -2.57403, 54.32445 ], [ -2.57398, 54.32463 ], [ -2.57391, 54.3249 ], [ -2.57389, 54.32499 ], [ -2.57378, 54.32544 ], [ -2.57376, 54.32552 ], [ -2.57372, 54.3257 ], [ -2.57369, 54.32588 ], [ -2.57366, 54.326 ], [ -2.57362, 54.32616 ], [ -2.5736, 54.32623 ], [ -2.57353, 54.32641 ], [ -2.57353, 54.32642 ], [ -2.57346, 54.32657 ], [ -2.57333, 54.32673 ], [ -2.57332, 54.32675 ], [ -2.57318, 54.32691 ], [ -2.57303, 54.32706 ], [ -2.57275, 54.32738 ], [ -2.57261, 54.32754 ], [ -2.57246, 54.3277 ], [ -2.57218, 54.32802 ], [ -2.57216, 54.32804 ], [ -2.57206, 54.32819 ], [ -2.5718, 54.32855 ], [ -2.57167, 54.32868 ], [ -2.57136, 54.32899 ], [ -2.57122, 54.32913 ], [ -2.57108, 54.32931 ], [ -2.57083, 54.32962 ], [ -2.57071, 54.3298 ], [ -2.57059, 54.32997 ], [ -2.57058, 54.32999 ], [ -2.57052, 54.33009 ], [ -2.57052, 54.33012 ], [ -2.57052, 54.33016 ], [ -2.57053, 54.3302 ], [ -2.57056, 54.33029 ], [ -2.57057, 54.33032 ], [ -2.57062, 54.3304 ], [ -2.57067, 54.33049 ], [ -2.57071, 54.33054 ], [ -2.5708, 54.3307 ], [ -2.57082, 54.33077 ], [ -2.57084, 54.33083 ], [ -2.57085, 54.33086 ], [ -2.57089, 54.33098 ], [ -2.57092, 54.33113 ], [ -2.57094, 54.33125 ], [ -2.57093, 54.33131 ], [ -2.5709, 54.33149 ], [ -2.57087, 54.33166 ], [ -2.57086, 54.33171 ], [ -2.57086, 54.33187 ], [ -2.57086, 54.33188 ], [ -2.57086, 54.33205 ], [ -2.57086, 54.33211 ], [ -2.57089, 54.33223 ], [ -2.57096, 54.3324 ], [ -2.57102, 54.33255 ], [ -2.57111, 54.33274 ], [ -2.57116, 54.33286 ], [ -2.57121, 54.33294 ], [ -2.57123, 54.33298 ], [ -2.57128, 54.33307 ], [ -2.57129, 54.3331 ], [ -2.57139, 54.33327 ], [ -2.57142, 54.33332 ], [ -2.57144, 54.33337 ], [ -2.5715, 54.33347 ], [ -2.57159, 54.33361 ], [ -2.5716, 54.33361 ], [ -2.5716, 54.33362 ], [ -2.57171, 54.33377 ], [ -2.57178, 54.33387 ], [ -2.57182, 54.33394 ], [ -2.57198, 54.33418 ], [ -2.57203, 54.33428 ], [ -2.5721, 54.33439 ], [ -2.57213, 54.33445 ], [ -2.57224, 54.33468 ], [ -2.57228, 54.3348 ], [ -2.57234, 54.33497 ], [ -2.57234, 54.33498 ], [ -2.57237, 54.33503 ], [ -2.57243, 54.33515 ], [ -2.57251, 54.33525 ], [ -2.57256, 54.33531 ], [ -2.57266, 54.33542 ], [ -2.5727, 54.33547 ], [ -2.57274, 54.33551 ], [ -2.57281, 54.33561 ], [ -2.57282, 54.33563 ], [ -2.57288, 54.33573 ], [ -2.5729, 54.33577 ], [ -2.57293, 54.3358 ], [ -2.57294, 54.33582 ], [ -2.57297, 54.33585 ], [ -2.57307, 54.33592 ], [ -2.57311, 54.33595 ], [ -2.57317, 54.33599 ], [ -2.57324, 54.33603 ], [ -2.57328, 54.33609 ], [ -2.57329, 54.33609 ], [ -2.57331, 54.33613 ], [ -2.57332, 54.33617 ], [ -2.57335, 54.33625 ], [ -2.57336, 54.33627 ], [ -2.57337, 54.33629 ], [ -2.57337, 54.3363 ], [ -2.57338, 54.33633 ], [ -2.57341, 54.33637 ], [ -2.57343, 54.33641 ], [ -2.57354, 54.33652 ], [ -2.57362, 54.33659 ], [ -2.57368, 54.33665 ], [ -2.57375, 54.33671 ], [ -2.57379, 54.33674 ], [ -2.57386, 54.33679 ], [ -2.57397, 54.33688 ], [ -2.5741, 54.33699 ], [ -2.57413, 54.33704 ], [ -2.57421, 54.33714 ], [ -2.57425, 54.3372 ], [ -2.57428, 54.33726 ], [ -2.57432, 54.33738 ], [ -2.57438, 54.33752 ], [ -2.57439, 54.33755 ], [ -2.57439, 54.33757 ], [ -2.57441, 54.33764 ], [ -2.57442, 54.33773 ], [ -2.57443, 54.33778 ], [ -2.57444, 54.33796 ], [ -2.57444, 54.33801 ], [ -2.57445, 54.33809 ], [ -2.57445, 54.33813 ], [ -2.57449, 54.33823 ], [ -2.57452, 54.33828 ], [ -2.57458, 54.33836 ], [ -2.57467, 54.33847 ], [ -2.57474, 54.33857 ], [ -2.57476, 54.3386 ], [ -2.57488, 54.33876 ], [ -2.57492, 54.33882 ], [ -2.57499, 54.33893 ], [ -2.57503, 54.33898 ], [ -2.57504, 54.339 ], [ -2.57509, 54.3391 ], [ -2.57514, 54.33917 ], [ -2.5752, 54.33927 ], [ -2.57525, 54.33934 ], [ -2.57532, 54.33943 ], [ -2.57539, 54.33955 ], [ -2.57555, 54.33973 ], [ -2.57558, 54.33976 ], [ -2.57572, 54.33992 ], [ -2.57582, 54.34004 ], [ -2.57585, 54.34008 ], [ -2.57596, 54.34025 ], [ -2.57603, 54.34035 ], [ -2.57607, 54.34042 ], [ -2.57615, 54.34059 ], [ -2.57615, 54.3406 ], [ -2.57618, 54.34068 ], [ -2.57619, 54.34077 ], [ -2.57619, 54.34079 ], [ -2.57621, 54.34096 ], [ -2.57624, 54.34102 ], [ -2.5763, 54.34108 ], [ -2.57634, 54.34111 ], [ -2.57637, 54.34113 ], [ -2.57647, 54.34119 ], [ -2.57656, 54.34123 ], [ -2.57666, 54.34128 ], [ -2.57687, 54.34133 ], [ -2.57702, 54.34135 ], [ -2.57712, 54.34137 ], [ -2.57715, 54.34138 ], [ -2.57729, 54.3414 ], [ -2.57741, 54.34144 ], [ -2.57742, 54.34144 ], [ -2.57751, 54.34147 ], [ -2.57761, 54.3415 ], [ -2.57768, 54.34152 ], [ -2.5777, 54.34153 ], [ -2.57781, 54.34157 ], [ -2.5779, 54.34163 ], [ -2.57792, 54.34164 ], [ -2.57801, 54.3417 ], [ -2.57811, 54.34178 ], [ -2.57813, 54.34179 ], [ -2.57816, 54.34183 ], [ -2.57819, 54.34187 ], [ -2.57821, 54.34191 ], [ -2.57821, 54.34195 ], [ -2.5782, 54.34197 ], [ -2.57819, 54.342 ], [ -2.57811, 54.34209 ], [ -2.57809, 54.34211 ], [ -2.57808, 54.34213 ], [ -2.578, 54.34221 ], [ -2.57795, 54.34227 ], [ -2.57793, 54.3423 ], [ -2.57789, 54.34237 ], [ -2.57786, 54.34244 ], [ -2.57781, 54.34262 ], [ -2.57781, 54.34263 ], [ -2.57776, 54.3428 ], [ -2.57774, 54.34288 ], [ -2.57774, 54.34292 ], [ -2.57775, 54.34295 ], [ -2.57775, 54.34299 ], [ -2.57777, 54.34307 ], [ -2.57782, 54.34318 ], [ -2.57787, 54.34326 ], [ -2.57791, 54.34332 ], [ -2.57795, 54.34338 ], [ -2.57802, 54.34346 ], [ -2.57804, 54.34348 ], [ -2.57807, 54.3435 ], [ -2.57811, 54.34357 ], [ -2.57813, 54.3436 ], [ -2.57815, 54.34363 ], [ -2.57815, 54.34365 ], [ -2.57815, 54.34367 ], [ -2.57816, 54.3437 ], [ -2.57815, 54.34376 ], [ -2.57812, 54.34383 ], [ -2.57811, 54.34385 ], [ -2.5781, 54.34386 ], [ -2.57803, 54.34396 ], [ -2.57801, 54.34399 ], [ -2.57797, 54.34405 ], [ -2.57795, 54.34408 ], [ -2.57794, 54.34411 ], [ -2.57793, 54.34414 ], [ -2.57792, 54.34416 ], [ -2.57792, 54.34417 ], [ -2.57791, 54.3442 ], [ -2.57792, 54.34429 ], [ -2.57794, 54.34434 ], [ -2.57795, 54.34437 ], [ -2.57801, 54.34449 ], [ -2.57803, 54.34452 ], [ -2.57806, 54.34455 ], [ -2.57807, 54.34456 ], [ -2.57814, 54.34463 ], [ -2.57816, 54.34465 ], [ -2.5783, 54.34474 ], [ -2.57835, 54.34477 ], [ -2.57837, 54.34479 ], [ -2.57839, 54.3448 ], [ -2.57842, 54.34483 ], [ -2.57845, 54.34486 ], [ -2.57848, 54.34489 ], [ -2.57851, 54.34494 ], [ -2.57852, 54.34496 ], [ -2.57857, 54.34502 ], [ -2.57862, 54.34509 ], [ -2.57868, 54.34517 ], [ -2.57875, 54.34524 ], [ -2.57877, 54.34527 ], [ -2.57882, 54.34533 ], [ -2.57887, 54.3454 ], [ -2.57888, 54.34544 ], [ -2.5789, 54.34546 ], [ -2.57892, 54.34549 ], [ -2.57895, 54.34555 ], [ -2.57897, 54.34561 ], [ -2.57898, 54.34564 ], [ -2.57904, 54.34579 ], [ -2.57908, 54.3459 ], [ -2.5791, 54.34596 ], [ -2.5791, 54.34599 ], [ -2.57911, 54.34605 ], [ -2.57912, 54.34614 ], [ -2.57913, 54.34625 ], [ -2.57912, 54.34632 ], [ -2.57912, 54.34637 ], [ -2.57911, 54.34647 ], [ -2.5791, 54.34649 ], [ -2.5791, 54.3465 ], [ -2.5791, 54.34652 ], [ -2.5791, 54.34656 ], [ -2.57911, 54.34662 ], [ -2.57913, 54.34668 ], [ -2.57915, 54.34678 ], [ -2.57919, 54.34686 ], [ -2.57923, 54.34695 ], [ -2.57925, 54.34698 ], [ -2.57927, 54.34703 ], [ -2.57931, 54.34713 ], [ -2.57934, 54.3472 ], [ -2.57936, 54.34725 ], [ -2.57942, 54.34738 ], [ -2.57944, 54.34742 ], [ -2.57952, 54.34755 ], [ -2.57959, 54.34765 ], [ -2.5797, 54.34779 ], [ -2.57979, 54.34788 ], [ -2.57985, 54.34795 ], [ -2.57999, 54.34811 ], [ -2.58016, 54.34832 ], [ -2.58035, 54.3486 ], [ -2.58041, 54.3487 ], [ -2.58042, 54.34873 ], [ -2.5805, 54.34883 ], [ -2.58055, 54.34889 ], [ -2.58064, 54.349 ], [ -2.58072, 54.3491 ], [ -2.58077, 54.34915 ], [ -2.58082, 54.3492 ], [ -2.58087, 54.34925 ], [ -2.58095, 54.34933 ], [ -2.58105, 54.3494 ], [ -2.58106, 54.34941 ], [ -2.58116, 54.34949 ], [ -2.58135, 54.34964 ], [ -2.5814, 54.34968 ], [ -2.58146, 54.34972 ], [ -2.58148, 54.34973 ], [ -2.58154, 54.34976 ], [ -2.58159, 54.34978 ], [ -2.5817, 54.34983 ], [ -2.58176, 54.34985 ], [ -2.58178, 54.34986 ], [ -2.58205, 54.34994 ], [ -2.58231, 54.35003 ], [ -2.58238, 54.35006 ], [ -2.58257, 54.35013 ], [ -2.58273, 54.35019 ], [ -2.5828, 54.35023 ], [ -2.58282, 54.35024 ], [ -2.58285, 54.35025 ], [ -2.5829, 54.35029 ], [ -2.58295, 54.35032 ], [ -2.58299, 54.35035 ], [ -2.58302, 54.35038 ], [ -2.58303, 54.35039 ], [ -2.58306, 54.35043 ], [ -2.58312, 54.35049 ], [ -2.58316, 54.35054 ], [ -2.58319, 54.35056 ], [ -2.58331, 54.35069 ], [ -2.58338, 54.35076 ], [ -2.5835, 54.35087 ], [ -2.58365, 54.35099 ], [ -2.58374, 54.35105 ], [ -2.58382, 54.3511 ], [ -2.58385, 54.35113 ], [ -2.58393, 54.35118 ], [ -2.58405, 54.35124 ], [ -2.58408, 54.35125 ], [ -2.58421, 54.35129 ], [ -2.58434, 54.35132 ], [ -2.58436, 54.35133 ], [ -2.58446, 54.35134 ], [ -2.58465, 54.35138 ], [ -2.58472, 54.35139 ], [ -2.58478, 54.3514 ], [ -2.58483, 54.35141 ], [ -2.58487, 54.35143 ], [ -2.58493, 54.35145 ], [ -2.58498, 54.35147 ], [ -2.58505, 54.35151 ], [ -2.58514, 54.35157 ], [ -2.58515, 54.35158 ], [ -2.58528, 54.35168 ], [ -2.58532, 54.35173 ], [ -2.58541, 54.35182 ], [ -2.58556, 54.35197 ], [ -2.5856, 54.352 ], [ -2.58565, 54.35204 ], [ -2.58575, 54.3521 ], [ -2.58583, 54.35213 ], [ -2.58588, 54.35215 ], [ -2.58613, 54.35225 ], [ -2.58621, 54.35229 ], [ -2.58626, 54.35232 ], [ -2.58629, 54.35234 ], [ -2.58633, 54.35239 ], [ -2.58634, 54.35243 ], [ -2.58635, 54.35252 ], [ -2.58633, 54.35262 ], [ -2.58631, 54.35267 ], [ -2.58625, 54.3528 ], [ -2.58621, 54.35295 ], [ -2.58618, 54.35302 ], [ -2.58612, 54.35318 ], [ -2.58612, 54.3532 ], [ -2.58606, 54.35334 ], [ -2.586, 54.35351 ], [ -2.58599, 54.35355 ], [ -2.58593, 54.35369 ], [ -2.58592, 54.35372 ], [ -2.58586, 54.35388 ], [ -2.58585, 54.3539 ], [ -2.58583, 54.35406 ], [ -2.58583, 54.35408 ], [ -2.58584, 54.35412 ], [ -2.58588, 54.35426 ], [ -2.58595, 54.35439 ], [ -2.58597, 54.35443 ], [ -2.58611, 54.35469 ], [ -2.58615, 54.35477 ], [ -2.58624, 54.35495 ], [ -2.58629, 54.35503 ], [ -2.58643, 54.35542 ], [ -2.58648, 54.35552 ], [ -2.58658, 54.35563 ], [ -2.58659, 54.35564 ], [ -2.5867, 54.35577 ], [ -2.58672, 54.35579 ], [ -2.58687, 54.35595 ], [ -2.58701, 54.35611 ], [ -2.58705, 54.35616 ], [ -2.58715, 54.35627 ], [ -2.58718, 54.35631 ], [ -2.58731, 54.35643 ], [ -2.58737, 54.35648 ], [ -2.58749, 54.35657 ], [ -2.58767, 54.35672 ], [ -2.58796, 54.35693 ], [ -2.58806, 54.357 ], [ -2.58826, 54.35714 ], [ -2.58845, 54.35727 ], [ -2.58865, 54.35741 ], [ -2.58866, 54.35742 ], [ -2.58885, 54.35755 ], [ -2.58898, 54.35763 ], [ -2.58905, 54.35769 ], [ -2.58924, 54.35783 ], [ -2.58944, 54.35797 ], [ -2.58961, 54.35809 ], [ -2.59007, 54.3584 ], [ -2.59021, 54.35853 ], [ -2.5904, 54.35868 ], [ -2.59053, 54.35883 ], [ -2.59065, 54.35896 ], [ -2.59067, 54.35899 ], [ -2.59083, 54.3592 ], [ -2.59085, 54.35922 ], [ -2.59101, 54.35943 ], [ -2.59124, 54.35971 ], [ -2.59129, 54.35977 ], [ -2.59136, 54.35988 ], [ -2.59148, 54.36005 ], [ -2.59154, 54.36015 ], [ -2.59158, 54.36022 ], [ -2.59162, 54.36028 ], [ -2.59168, 54.36039 ], [ -2.59172, 54.36044 ], [ -2.59176, 54.36053 ], [ -2.59178, 54.36056 ], [ -2.59186, 54.36071 ], [ -2.59187, 54.36073 ], [ -2.59193, 54.36087 ], [ -2.59194, 54.3609 ], [ -2.59196, 54.36095 ], [ -2.59198, 54.36108 ], [ -2.59201, 54.36126 ], [ -2.59202, 54.36131 ], [ -2.59203, 54.36144 ], [ -2.59208, 54.3618 ], [ -2.5921, 54.36198 ], [ -2.59212, 54.36216 ], [ -2.59213, 54.36228 ], [ -2.59214, 54.36234 ], [ -2.59215, 54.36252 ], [ -2.59216, 54.36259 ], [ -2.59218, 54.3627 ], [ -2.5922, 54.36276 ], [ -2.59226, 54.36292 ], [ -2.59232, 54.36306 ], [ -2.59238, 54.36318 ], [ -2.59246, 54.36336 ], [ -2.59253, 54.36353 ], [ -2.59261, 54.36369 ], [ -2.59261, 54.36371 ], [ -2.59268, 54.36388 ], [ -2.59275, 54.36406 ], [ -2.59286, 54.36441 ], [ -2.5929, 54.36464 ], [ -2.59293, 54.36482 ], [ -2.59294, 54.36484 ], [ -2.59297, 54.36518 ], [ -2.59299, 54.36536 ], [ -2.593, 54.36546 ], [ -2.59301, 54.36554 ], [ -2.59302, 54.36565 ], [ -2.59302, 54.36568 ], [ -2.59302, 54.36572 ], [ -2.59304, 54.3659 ], [ -2.59306, 54.36606 ], [ -2.59306, 54.36612 ], [ -2.59307, 54.36621 ], [ -2.59308, 54.3663 ], [ -2.59309, 54.36648 ], [ -2.59311, 54.36666 ], [ -2.59312, 54.36671 ], [ -2.59305, 54.36701 ], [ -2.59302, 54.36713 ], [ -2.593, 54.36719 ], [ -2.59292, 54.36737 ], [ -2.59285, 54.36752 ], [ -2.59284, 54.36754 ], [ -2.59272, 54.3677 ], [ -2.59265, 54.3678 ], [ -2.59229, 54.36819 ], [ -2.59213, 54.36834 ], [ -2.59196, 54.36848 ], [ -2.59187, 54.36856 ], [ -2.59178, 54.36863 ], [ -2.5916, 54.36878 ], [ -2.59155, 54.36881 ], [ -2.59124, 54.36917 ], [ -2.59117, 54.36926 ], [ -2.59105, 54.36942 ], [ -2.591, 54.36949 ], [ -2.59096, 54.36959 ], [ -2.59089, 54.36977 ], [ -2.59088, 54.36981 ], [ -2.59087, 54.36995 ], [ -2.59086, 54.37013 ], [ -2.59085, 54.3702 ], [ -2.59087, 54.37031 ], [ -2.5909, 54.37055 ], [ -2.59097, 54.37066 ], [ -2.59109, 54.37082 ], [ -2.59111, 54.37085 ], [ -2.59123, 54.37098 ], [ -2.59125, 54.371 ], [ -2.59133, 54.37106 ], [ -2.59144, 54.37111 ], [ -2.59155, 54.37117 ], [ -2.59192, 54.37134 ], [ -2.59199, 54.37138 ], [ -2.59216, 54.37145 ], [ -2.59243, 54.37156 ], [ -2.59269, 54.37162 ], [ -2.59293, 54.37169 ], [ -2.59297, 54.37171 ], [ -2.59318, 54.37184 ], [ -2.59326, 54.3719 ], [ -2.59335, 54.37199 ], [ -2.59349, 54.37215 ], [ -2.59355, 54.37222 ], [ -2.59362, 54.37231 ], [ -2.59369, 54.37243 ], [ -2.59373, 54.37248 ], [ -2.59383, 54.37265 ], [ -2.59394, 54.37282 ], [ -2.59403, 54.37297 ], [ -2.59407, 54.37303 ], [ -2.59437, 54.37354 ], [ -2.59443, 54.37365 ], [ -2.59447, 54.37371 ], [ -2.59455, 54.37389 ], [ -2.59464, 54.37406 ], [ -2.59473, 54.37423 ], [ -2.59482, 54.3744 ], [ -2.59488, 54.37452 ], [ -2.595, 54.37475 ], [ -2.59509, 54.37492 ], [ -2.59518, 54.37509 ], [ -2.59523, 54.37517 ], [ -2.59542, 54.37553 ], [ -2.59548, 54.3756 ], [ -2.59559, 54.37571 ], [ -2.59562, 54.37576 ], [ -2.59573, 54.37594 ], [ -2.59575, 54.37621 ], [ -2.59574, 54.37642 ], [ -2.59574, 54.37655 ], [ -2.59574, 54.37669 ], [ -2.59567, 54.37696 ], [ -2.59561, 54.37716 ], [ -2.59549, 54.37738 ], [ -2.59539, 54.37747 ], [ -2.59523, 54.37762 ], [ -2.59517, 54.37768 ], [ -2.59496, 54.3779 ], [ -2.59482, 54.3781 ], [ -2.59482, 54.37814 ], [ -2.59484, 54.37837 ], [ -2.59488, 54.37856 ], [ -2.59488, 54.37868 ], [ -2.59488, 54.37876 ], [ -2.59487, 54.37886 ], [ -2.59487, 54.37888 ], [ -2.59486, 54.37902 ], [ -2.59486, 54.37904 ], [ -2.59487, 54.37913 ], [ -2.5949, 54.3793 ], [ -2.59494, 54.37951 ], [ -2.59497, 54.37967 ], [ -2.595, 54.37976 ], [ -2.59503, 54.37986 ], [ -2.59515, 54.38003 ], [ -2.59539, 54.38029 ], [ -2.59551, 54.3804 ], [ -2.59561, 54.3805 ], [ -2.59568, 54.38055 ], [ -2.59586, 54.38072 ], [ -2.59598, 54.38086 ], [ -2.596, 54.38088 ], [ -2.59602, 54.38092 ], [ -2.59615, 54.38115 ], [ -2.59618, 54.3812 ], [ -2.59631, 54.38137 ], [ -2.59632, 54.38139 ], [ -2.59647, 54.38156 ], [ -2.59659, 54.38172 ], [ -2.59666, 54.38186 ], [ -2.59667, 54.38193 ], [ -2.59668, 54.38198 ], [ -2.59667, 54.38222 ], [ -2.59667, 54.38226 ], [ -2.59666, 54.3824 ], [ -2.59664, 54.38255 ], [ -2.59664, 54.38258 ], [ -2.5966, 54.38276 ], [ -2.59657, 54.38284 ], [ -2.59654, 54.3829 ], [ -2.59644, 54.38305 ], [ -2.59641, 54.3831 ], [ -2.59639, 54.38314 ], [ -2.59637, 54.3832 ], [ -2.59636, 54.38324 ], [ -2.59636, 54.38328 ], [ -2.59636, 54.38331 ], [ -2.59637, 54.38336 ], [ -2.59638, 54.38348 ], [ -2.59642, 54.38364 ], [ -2.59646, 54.38381 ], [ -2.59647, 54.38384 ], [ -2.59652, 54.38397 ], [ -2.59653, 54.38399 ], [ -2.59655, 54.38405 ], [ -2.59662, 54.38416 ], [ -2.59666, 54.38422 ], [ -2.59673, 54.38433 ], [ -2.5967341, 54.3843288 ], [ -2.59659, 54.38443 ], [ -2.59645, 54.38453 ], [ -2.59644, 54.38454 ], [ -2.59629, 54.38464 ], [ -2.59625, 54.38468 ], [ -2.59618, 54.38474 ], [ -2.59614, 54.3848 ], [ -2.5961, 54.38484 ], [ -2.59593, 54.38504 ], [ -2.59577, 54.3853 ], [ -2.59574, 54.38534 ], [ -2.59564, 54.38551 ], [ -2.5956, 54.38558 ], [ -2.59549, 54.38584 ], [ -2.59542, 54.38603 ], [ -2.59536, 54.38617 ], [ -2.59531, 54.38635 ], [ -2.5953, 54.38638 ], [ -2.59525, 54.38656 ], [ -2.59524, 54.38662 ], [ -2.59522, 54.38674 ], [ -2.5952, 54.38688 ], [ -2.5952, 54.3871 ], [ -2.5952, 54.38711 ], [ -2.59519, 54.38724 ], [ -2.59518, 54.38728 ], [ -2.59516, 54.38737 ], [ -2.59513, 54.38744 ], [ -2.59508, 54.38751 ], [ -2.59494, 54.38766 ], [ -2.59479, 54.38782 ], [ -2.59467, 54.38798 ], [ -2.59462, 54.3881 ], [ -2.59461, 54.38811 ], [ -2.59455, 54.38826 ], [ -2.59448, 54.38852 ], [ -2.59446, 54.38862 ], [ -2.59446, 54.38864 ], [ -2.59445, 54.38868 ], [ -2.59444, 54.38871 ], [ -2.59445, 54.38882 ], [ -2.59447, 54.38894 ], [ -2.59448, 54.389 ], [ -2.5945, 54.3891 ], [ -2.59452, 54.38917 ], [ -2.59454, 54.3893 ], [ -2.59456, 54.38935 ], [ -2.59458, 54.38942 ], [ -2.59463, 54.38952 ], [ -2.59472, 54.38965 ], [ -2.59476, 54.38969 ], [ -2.59486, 54.38981 ], [ -2.5949, 54.38985 ], [ -2.59507, 54.39 ], [ -2.59511, 54.39004 ], [ -2.59523, 54.39016 ], [ -2.59531, 54.39024 ], [ -2.59539, 54.39031 ], [ -2.59556, 54.39046 ], [ -2.59558, 54.39047 ], [ -2.59572, 54.39061 ], [ -2.59592, 54.3908 ], [ -2.59612, 54.39097 ], [ -2.59628, 54.3911 ], [ -2.5964, 54.39121 ], [ -2.59659, 54.39138 ], [ -2.59674, 54.39151 ], [ -2.59676, 54.39153 ], [ -2.59692, 54.39165 ], [ -2.59693, 54.39166 ], [ -2.59713, 54.39179 ], [ -2.59722, 54.39186 ], [ -2.59753, 54.39206 ], [ -2.5979, 54.39227 ], [ -2.59821, 54.39244 ], [ -2.59832, 54.3925 ], [ -2.59894, 54.39281 ], [ -2.59915, 54.3929 ], [ -2.59939, 54.39302 ], [ -2.59948, 54.39306 ], [ -2.59963, 54.39312 ], [ -2.60013, 54.39334 ], [ -2.60016, 54.39335 ], [ -2.60037, 54.39345 ], [ -2.60062, 54.39356 ], [ -2.60086, 54.39367 ], [ -2.601, 54.39374 ], [ -2.60136, 54.39391 ], [ -2.60183, 54.39411 ], [ -2.60185, 54.39412 ], [ -2.60237, 54.39439 ], [ -2.60275, 54.3946 ], [ -2.60284, 54.39464 ], [ -2.60296, 54.39473 ], [ -2.60317, 54.39486 ], [ -2.60327, 54.39493 ], [ -2.60347, 54.39509 ], [ -2.60353, 54.39515 ], [ -2.60368, 54.3953 ], [ -2.60368, 54.39531 ], [ -2.60384, 54.39546 ], [ -2.60394, 54.39556 ], [ -2.60399, 54.39562 ], [ -2.60412, 54.39578 ], [ -2.60425, 54.39595 ], [ -2.60435, 54.39607 ], [ -2.60438, 54.39611 ], [ -2.60449, 54.39628 ], [ -2.60461, 54.39644 ], [ -2.60473, 54.39661 ], [ -2.60474, 54.39662 ], [ -2.60491, 54.39695 ], [ -2.60498, 54.39708 ], [ -2.605, 54.39712 ], [ -2.60509, 54.3973 ], [ -2.60525, 54.39763 ], [ -2.60525, 54.39764 ], [ -2.60536, 54.398 ], [ -2.60543, 54.39836 ], [ -2.60545, 54.39846 ], [ -2.60547, 54.39853 ], [ -2.60551, 54.39871 ], [ -2.60558, 54.39896 ], [ -2.60561, 54.39907 ], [ -2.60562, 54.39915 ], [ -2.60563, 54.39925 ], [ -2.60563, 54.39937 ], [ -2.60564, 54.39943 ], [ -2.60562, 54.39982 ], [ -2.60557, 54.40013 ], [ -2.60554, 54.40042 ], [ -2.60553, 54.40044 ], [ -2.60549, 54.40061 ], [ -2.60546, 54.40072 ], [ -2.60545, 54.40079 ], [ -2.60537, 54.40114 ], [ -2.60535, 54.40147 ], [ -2.60538, 54.40195 ], [ -2.60544, 54.40233 ], [ -2.60547, 54.40259 ], [ -2.6055, 54.4028 ], [ -2.60552, 54.40294 ], [ -2.60553, 54.40309 ], [ -2.60555, 54.4033 ], [ -2.60557, 54.40348 ], [ -2.60559, 54.40379 ], [ -2.60559, 54.40384 ], [ -2.60561, 54.4042 ], [ -2.60561, 54.40422 ], [ -2.60561, 54.40438 ], [ -2.60561, 54.40456 ], [ -2.60561, 54.40458 ], [ -2.6056, 54.40492 ], [ -2.6056, 54.4051 ], [ -2.60561, 54.40528 ], [ -2.60562, 54.40533 ], [ -2.60565, 54.40546 ], [ -2.60566, 54.4055 ], [ -2.60571, 54.40564 ], [ -2.60573, 54.40569 ], [ -2.60581, 54.40581 ], [ -2.60587, 54.40591 ], [ -2.60592, 54.40597 ], [ -2.60617, 54.4063 ], [ -2.60619, 54.40633 ], [ -2.6063, 54.40647 ], [ -2.60636, 54.40654 ], [ -2.60643, 54.40663 ], [ -2.60646, 54.40668 ], [ -2.60649, 54.40673 ], [ -2.60654, 54.4068 ], [ -2.6066, 54.4069 ], [ -2.60666, 54.40701 ], [ -2.60668, 54.4071 ], [ -2.6067, 54.40719 ], [ -2.60671, 54.40721 ], [ -2.60669, 54.40736 ], [ -2.60668, 54.40744 ], [ -2.60666, 54.40754 ], [ -2.60666, 54.40757 ], [ -2.60662, 54.40767 ], [ -2.6066, 54.40772 ], [ -2.60657, 54.40776 ], [ -2.60648, 54.40789 ], [ -2.60645, 54.40792 ], [ -2.60627, 54.40809 ], [ -2.60598, 54.4083 ], [ -2.60571, 54.40844 ], [ -2.60536, 54.40862 ], [ -2.60528, 54.40866 ], [ -2.60511, 54.40875 ], [ -2.60505, 54.40879 ], [ -2.60483, 54.40891 ], [ -2.60457, 54.40907 ], [ -2.60442, 54.40916 ], [ -2.6044, 54.40917 ], [ -2.60424, 54.4093 ], [ -2.6041, 54.40941 ], [ -2.604, 54.40952 ], [ -2.60391, 54.40963 ], [ -2.6039, 54.40964 ], [ -2.60379, 54.40979 ], [ -2.60367, 54.40996 ], [ -2.60364, 54.41001 ], [ -2.6034, 54.41036 ], [ -2.60326, 54.41064 ], [ -2.60316, 54.41081 ], [ -2.60276, 54.41149 ], [ -2.60266, 54.41166 ], [ -2.60258, 54.41181 ], [ -2.60248, 54.412 ], [ -2.60239, 54.41217 ], [ -2.60222, 54.41252 ], [ -2.60201, 54.41305 ], [ -2.602, 54.41307 ], [ -2.60195, 54.41322 ], [ -2.6019, 54.4134 ], [ -2.60184, 54.41358 ], [ -2.60181, 54.41366 ], [ -2.60179, 54.41375 ], [ -2.60172, 54.4141 ], [ -2.6017, 54.41429 ], [ -2.60169, 54.41439 ], [ -2.60172, 54.41483 ], [ -2.60173, 54.41496 ], [ -2.60181, 54.41555 ], [ -2.60184, 54.41569 ], [ -2.60189, 54.41608 ], [ -2.60191, 54.41625 ], [ -2.60191, 54.41626 ], [ -2.60191, 54.41644 ], [ -2.60191, 54.41662 ], [ -2.60191, 54.41663 ], [ -2.60187, 54.41674 ], [ -2.60183, 54.41685 ], [ -2.60175, 54.41697 ], [ -2.6017, 54.41703 ], [ -2.60161, 54.41713 ], [ -2.60152, 54.41721 ], [ -2.60127, 54.41739 ], [ -2.6011, 54.41749 ], [ -2.60101, 54.41754 ], [ -2.60096, 54.41757 ], [ -2.60082, 54.41763 ], [ -2.6008193, 54.4176331 ], [ -2.60087, 54.4177 ], [ -2.6009, 54.41774 ], [ -2.60091, 54.41779 ], [ -2.60091, 54.41783 ], [ -2.6009, 54.41787 ], [ -2.60085, 54.41797 ], [ -2.60078, 54.41809 ], [ -2.60073, 54.41818 ], [ -2.60071, 54.41824 ], [ -2.60068, 54.41836 ], [ -2.60067, 54.41843 ], [ -2.60065, 54.4186 ], [ -2.60065, 54.41872 ], [ -2.60064, 54.4188 ], [ -2.60065, 54.41887 ], [ -2.60065, 54.4189 ], [ -2.60066, 54.41895 ], [ -2.60072, 54.41907 ], [ -2.60073, 54.41908 ], [ -2.60081, 54.41918 ], [ -2.60091, 54.41929 ], [ -2.60103, 54.41939 ], [ -2.60116, 54.4195 ], [ -2.6012, 54.41953 ], [ -2.60134, 54.41966 ], [ -2.60137, 54.41969 ], [ -2.60152, 54.41985 ], [ -2.60169, 54.41999 ], [ -2.60175, 54.42004 ], [ -2.60183, 54.42011 ], [ -2.60185, 54.42014 ], [ -2.60188, 54.42019 ], [ -2.60191, 54.42025 ], [ -2.60194, 54.42031 ], [ -2.60194, 54.4204 ], [ -2.60197, 54.42049 ], [ -2.60198, 54.42053 ], [ -2.60207, 54.42063 ], [ -2.60209, 54.42066 ], [ -2.6022, 54.42077 ], [ -2.60224, 54.42082 ], [ -2.60233, 54.42092 ], [ -2.60236, 54.42096 ], [ -2.60239, 54.42098 ], [ -2.60241, 54.421 ], [ -2.6025, 54.42106 ], [ -2.60256, 54.4211 ], [ -2.60259, 54.42114 ], [ -2.60261, 54.42118 ], [ -2.6026, 54.42126 ], [ -2.6026, 54.42133 ], [ -2.60262, 54.42142 ], [ -2.60263, 54.42147 ], [ -2.60265, 54.42152 ], [ -2.60273, 54.42166 ], [ -2.6029, 54.42187 ], [ -2.60298, 54.42197 ], [ -2.60312, 54.42213 ], [ -2.60326, 54.42229 ], [ -2.60338, 54.42243 ], [ -2.6034, 54.42245 ], [ -2.60345, 54.42251 ], [ -2.6035, 54.42259 ], [ -2.60352, 54.42262 ], [ -2.60354, 54.42268 ], [ -2.6036, 54.42279 ], [ -2.60361, 54.42283 ], [ -2.60369, 54.42296 ], [ -2.6037, 54.42299 ], [ -2.60381, 54.42312 ], [ -2.60382, 54.42313 ], [ -2.60395, 54.42327 ], [ -2.60414, 54.42343 ], [ -2.60415, 54.42344 ], [ -2.6042, 54.42348 ], [ -2.60421, 54.42352 ], [ -2.60421, 54.42354 ], [ -2.60422, 54.42355 ], [ -2.60421, 54.42358 ], [ -2.60419, 54.4236 ], [ -2.60416, 54.42363 ], [ -2.60407, 54.42369 ], [ -2.604, 54.42374 ], [ -2.60377, 54.42382 ], [ -2.60364, 54.42385 ], [ -2.60345, 54.4239 ], [ -2.60328, 54.42395 ], [ -2.60309, 54.42402 ], [ -2.60296, 54.42407 ], [ -2.60287, 54.42412 ], [ -2.6028, 54.42416 ], [ -2.60277, 54.4242 ], [ -2.60275, 54.42424 ], [ -2.60275, 54.42428 ], [ -2.60275, 54.42429 ], [ -2.60275, 54.42432 ], [ -2.60279, 54.42443 ], [ -2.6028, 54.42447 ], [ -2.60283, 54.42458 ], [ -2.6029, 54.42489 ], [ -2.6029, 54.4249 ], [ -2.60292, 54.42505 ], [ -2.60292, 54.42516 ], [ -2.60291, 54.42519 ], [ -2.60288, 54.42531 ], [ -2.60287, 54.42536 ], [ -2.60286, 54.42543 ], [ -2.60282, 54.42554 ], [ -2.60277, 54.42565 ], [ -2.60276, 54.42572 ], [ -2.60275, 54.42579 ], [ -2.60273, 54.42586 ], [ -2.6027277, 54.4258645 ], [ -2.60283, 54.42588 ], [ -2.60289, 54.42591 ], [ -2.60296, 54.42595 ], [ -2.60307, 54.42601 ], [ -2.6032, 54.42608 ], [ -2.60329, 54.42614 ], [ -2.60335, 54.42617 ], [ -2.60341, 54.42622 ], [ -2.60346, 54.42627 ], [ -2.60354, 54.42636 ], [ -2.60362, 54.42643 ], [ -2.60363, 54.42644 ], [ -2.60373, 54.42648 ], [ -2.60381, 54.42652 ], [ -2.60388, 54.42654 ], [ -2.60398, 54.42658 ], [ -2.60417, 54.42664 ], [ -2.60434, 54.42671 ], [ -2.60439, 54.42674 ], [ -2.60445, 54.42677 ], [ -2.60456, 54.42683 ], [ -2.60481, 54.42701 ], [ -2.60489, 54.42707 ], [ -2.60497, 54.42716 ], [ -2.60512, 54.42732 ], [ -2.60513, 54.42733 ], [ -2.60527, 54.42748 ], [ -2.60533, 54.42754 ], [ -2.60542, 54.42763 ], [ -2.60549, 54.42771 ], [ -2.60558, 54.42779 ], [ -2.6056, 54.42781 ], [ -2.60573, 54.42792 ], [ -2.60574, 54.42794 ], [ -2.60579, 54.42801 ], [ -2.60583, 54.42808 ], [ -2.60585, 54.42811 ], [ -2.60587, 54.42813 ], [ -2.60594, 54.4282 ], [ -2.606, 54.42823 ], [ -2.60604, 54.42825 ], [ -2.6061, 54.42827 ], [ -2.60626, 54.42837 ], [ -2.60633, 54.42842 ], [ -2.60646, 54.42853 ], [ -2.60661, 54.42867 ], [ -2.60695, 54.42897 ], [ -2.60703, 54.42904 ], [ -2.60715, 54.4291 ], [ -2.60744, 54.42926 ], [ -2.60778, 54.4295 ], [ -2.60779, 54.4295 ], [ -2.60786, 54.42962 ], [ -2.60788, 54.42966 ], [ -2.60793, 54.42975 ], [ -2.60795, 54.42984 ], [ -2.60797, 54.42988 ], [ -2.60806, 54.43001 ], [ -2.60821, 54.43015 ], [ -2.60823, 54.43016 ], [ -2.60838, 54.43028 ], [ -2.6084, 54.43031 ], [ -2.60854, 54.43044 ], [ -2.60856, 54.43046 ], [ -2.60868, 54.43063 ], [ -2.60873, 54.43069 ], [ -2.6088, 54.43079 ], [ -2.60885, 54.43086 ], [ -2.60893, 54.43096 ], [ -2.60895, 54.43098 ], [ -2.60906, 54.43108 ], [ -2.6092, 54.43117 ], [ -2.60932, 54.43123 ], [ -2.60938, 54.43125 ], [ -2.60953, 54.43136 ], [ -2.60968, 54.4315 ], [ -2.60969, 54.43151 ], [ -2.60974, 54.43157 ], [ -2.60975, 54.43168 ], [ -2.60975, 54.43172 ], [ -2.60976, 54.43204 ], [ -2.60977, 54.4322 ], [ -2.60978, 54.43222 ], [ -2.60983, 54.4324 ], [ -2.60992, 54.43257 ], [ -2.60992, 54.43259 ], [ -2.61002, 54.43274 ], [ -2.61003, 54.43275 ], [ -2.61015, 54.43291 ], [ -2.61017, 54.43293 ], [ -2.6103, 54.43306 ], [ -2.61041, 54.43317 ], [ -2.61066, 54.43336 ], [ -2.61067, 54.43336 ], [ -2.61102, 54.43362 ], [ -2.61105, 54.43364 ], [ -2.61114, 54.4337 ], [ -2.61122, 54.43378 ], [ -2.61128, 54.43383 ], [ -2.61136, 54.43394 ], [ -2.61144, 54.43407 ], [ -2.61148, 54.43411 ], [ -2.61162, 54.43427 ], [ -2.61171, 54.43436 ], [ -2.61177, 54.43443 ], [ -2.61191, 54.43459 ], [ -2.61196, 54.43465 ], [ -2.6121, 54.43482 ], [ -2.61231, 54.43507 ], [ -2.61235, 54.43515 ], [ -2.61236, 54.43515 ], [ -2.61237, 54.43528 ], [ -2.61238, 54.43533 ], [ -2.61242, 54.43551 ], [ -2.61245, 54.43566 ], [ -2.61245, 54.43569 ], [ -2.61249, 54.43587 ], [ -2.61249, 54.43588 ], [ -2.61253, 54.43594 ], [ -2.61259, 54.43599 ], [ -2.61263, 54.43602 ], [ -2.61272, 54.43607 ], [ -2.61288, 54.43612 ], [ -2.61289, 54.43613 ], [ -2.61317, 54.4362 ], [ -2.61344, 54.43628 ], [ -2.61349, 54.4363 ], [ -2.61367, 54.4364 ], [ -2.6139, 54.43652 ], [ -2.61407, 54.43667 ], [ -2.61409, 54.43668 ], [ -2.6142, 54.43684 ], [ -2.61425, 54.43691 ], [ -2.6143, 54.437 ], [ -2.6144, 54.43718 ], [ -2.61441, 54.4372 ], [ -2.61446, 54.43743 ], [ -2.61445, 54.43753 ], [ -2.61445, 54.43762 ], [ -2.61441, 54.43771 ], [ -2.61438, 54.4378 ], [ -2.61435, 54.43789 ], [ -2.61429, 54.43806 ], [ -2.61427, 54.43812 ], [ -2.61424, 54.43824 ], [ -2.61421, 54.43835 ], [ -2.61421, 54.43842 ], [ -2.61423, 54.43854 ], [ -2.61427, 54.43859 ], [ -2.61435, 54.43869 ], [ -2.61444, 54.43874 ], [ -2.61465, 54.43887 ], [ -2.61493, 54.43895 ], [ -2.61508, 54.43899 ], [ -2.61521, 54.43903 ], [ -2.61546, 54.43911 ], [ -2.61568, 54.43926 ], [ -2.61586, 54.43942 ], [ -2.61603, 54.43955 ], [ -2.61621, 54.4397 ], [ -2.61637, 54.43983 ], [ -2.61639, 54.43984 ], [ -2.61657, 54.43999 ], [ -2.61662, 54.44003 ], [ -2.61675, 54.4401 ], [ -2.61679, 54.44011 ], [ -2.617, 54.44019 ], [ -2.61706, 54.44021 ], [ -2.61733, 54.44029 ], [ -2.61756, 54.44036 ], [ -2.6176, 54.44038 ], [ -2.61769, 54.44042 ], [ -2.61782, 54.44049 ], [ -2.6178161, 54.4404945 ], [ -2.61797, 54.44058 ], [ -2.618, 54.4406 ], [ -2.61818, 54.44075 ], [ -2.61835, 54.4409 ], [ -2.61839, 54.44093 ], [ -2.61858, 54.44111 ], [ -2.61877, 54.4413 ], [ -2.61883, 54.44136 ], [ -2.61911, 54.44168 ], [ -2.61924, 54.44184 ], [ -2.61936, 54.44201 ], [ -2.61943, 54.44211 ], [ -2.61947, 54.44218 ], [ -2.61948, 54.4422 ], [ -2.61951, 54.44227 ], [ -2.61951, 54.44236 ], [ -2.61951, 54.44244 ], [ -2.6195, 54.44254 ], [ -2.6195, 54.44259 ], [ -2.61949, 54.44272 ], [ -2.61947, 54.4429 ], [ -2.61945, 54.44302 ], [ -2.61946, 54.44307 ], [ -2.61946, 54.44316 ], [ -2.61946, 54.44325 ], [ -2.61946, 54.44338 ], [ -2.61947, 54.44342 ], [ -2.61948, 54.44343 ], [ -2.61958, 54.44357 ], [ -2.61959, 54.4436 ], [ -2.61967, 54.44372 ], [ -2.6197, 54.44377 ], [ -2.6198, 54.44394 ], [ -2.61985, 54.44403 ], [ -2.61991, 54.44411 ], [ -2.61991, 54.44412 ], [ -2.61997, 54.44418 ], [ -2.62007, 54.44426 ], [ -2.62018, 54.44435 ], [ -2.62026, 54.4444 ], [ -2.62046, 54.44453 ], [ -2.62047, 54.44453 ], [ -2.62087, 54.44467 ], [ -2.62099, 54.44472 ], [ -2.62101, 54.44473 ], [ -2.62122, 54.44485 ], [ -2.62133, 54.4449 ], [ -2.62144, 54.44497 ], [ -2.62154, 54.44503 ], [ -2.6216, 54.44508 ], [ -2.62166, 54.44513 ], [ -2.62189, 54.44527 ], [ -2.62213, 54.44545 ], [ -2.62226, 54.44555 ], [ -2.62246, 54.44575 ], [ -2.62254, 54.44583 ], [ -2.6226, 54.44591 ], [ -2.62271, 54.44608 ], [ -2.62276, 54.44616 ], [ -2.62295, 54.44641 ], [ -2.62307, 54.44658 ], [ -2.6232, 54.44674 ], [ -2.62326, 54.44682 ], [ -2.62331, 54.44691 ], [ -2.62341, 54.44708 ], [ -2.62349, 54.4472 ], [ -2.62352, 54.44725 ], [ -2.62362, 54.44742 ], [ -2.62372, 54.44759 ], [ -2.62379, 54.4477 ], [ -2.62381, 54.44776 ], [ -2.62387, 54.44794 ], [ -2.62393, 54.44811 ], [ -2.62397, 54.44825 ], [ -2.62398, 54.44829 ], [ -2.62402, 54.44847 ], [ -2.62411, 54.44883 ], [ -2.62412, 54.4489 ], [ -2.62416, 54.449 ], [ -2.62427, 54.44929 ], [ -2.62441, 54.44952 ], [ -2.62446, 54.44961 ], [ -2.62458, 54.4498 ], [ -2.62468, 54.44997 ], [ -2.62479, 54.45014 ], [ -2.62479, 54.45015 ], [ -2.62495, 54.45048 ], [ -2.62503, 54.45066 ], [ -2.62511, 54.45083 ], [ -2.62519, 54.451 ], [ -2.62527, 54.45131 ], [ -2.62529, 54.45154 ], [ -2.62531, 54.45172 ], [ -2.62532, 54.45178 ], [ -2.62532, 54.4519 ], [ -2.62531, 54.45211 ], [ -2.62525, 54.45244 ], [ -2.62524, 54.45249 ], [ -2.62525, 54.45262 ], [ -2.62526, 54.45271 ], [ -2.6253, 54.45294 ], [ -2.62533, 54.45304 ], [ -2.62546, 54.45324 ], [ -2.62562, 54.45348 ], [ -2.6257, 54.4536 ], [ -2.62572, 54.45365 ], [ -2.62575, 54.4537 ], [ -2.62576, 54.45381 ], [ -2.62571, 54.454 ], [ -2.62564, 54.45417 ], [ -2.62548, 54.45446 ], [ -2.62546, 54.45454 ], [ -2.62541, 54.4547 ], [ -2.62541, 54.45472 ], [ -2.62534, 54.45497 ], [ -2.62534, 54.45513 ], [ -2.62535, 54.45525 ], [ -2.62535, 54.45532 ], [ -2.62537, 54.45543 ], [ -2.62539, 54.4555 ], [ -2.62542, 54.45559 ], [ -2.62542, 54.45561 ], [ -2.62544, 54.45573 ], [ -2.62543, 54.45579 ], [ -2.62541, 54.45591 ], [ -2.62539, 54.45597 ], [ -2.62537, 54.45603 ], [ -2.62525, 54.45644 ], [ -2.62519, 54.45668 ], [ -2.62518, 54.45671 ], [ -2.62516, 54.45691 ], [ -2.62516, 54.45703 ], [ -2.62516, 54.45712 ], [ -2.62517, 54.45723 ], [ -2.62519, 54.45733 ], [ -2.62522, 54.45739 ], [ -2.62522, 54.4574 ], [ -2.62525, 54.45747 ], [ -2.62532, 54.45754 ], [ -2.62545, 54.45762 ], [ -2.62558, 54.45766 ], [ -2.62566, 54.45769 ], [ -2.62571, 54.45772 ], [ -2.62574, 54.45775 ], [ -2.62575, 54.45776 ], [ -2.62575, 54.45778 ], [ -2.62575, 54.45779 ], [ -2.62574, 54.45781 ], [ -2.62572, 54.45783 ], [ -2.62571, 54.45785 ], [ -2.62569, 54.45788 ], [ -2.62565, 54.45791 ], [ -2.6256, 54.45796 ], [ -2.6256003, 54.4579565 ], [ -2.62602, 54.45812 ], [ -2.62637, 54.45827 ], [ -2.62648, 54.45833 ], [ -2.62656, 54.45839 ], [ -2.62663, 54.45845 ], [ -2.62679, 54.4586 ], [ -2.62686, 54.4587 ], [ -2.62688, 54.45873 ], [ -2.62696, 54.45886 ], [ -2.62696, 54.45887 ], [ -2.62702, 54.45904 ], [ -2.62703, 54.45916 ], [ -2.62702, 54.45926 ], [ -2.627, 54.45935 ], [ -2.62697, 54.4594 ], [ -2.62693, 54.4595 ], [ -2.62688, 54.45958 ], [ -2.62683, 54.45965 ], [ -2.62679, 54.45975 ], [ -2.62675, 54.45985 ], [ -2.62673, 54.45997 ], [ -2.62678, 54.46015 ], [ -2.62685, 54.46028 ], [ -2.62693, 54.4604 ], [ -2.6271, 54.46057 ], [ -2.62713, 54.46059 ], [ -2.62733, 54.46073 ], [ -2.6275, 54.46084 ], [ -2.62776, 54.46099 ], [ -2.62799, 54.46111 ], [ -2.62806, 54.46115 ], [ -2.62816, 54.46126 ], [ -2.62829, 54.46142 ], [ -2.62831, 54.46144 ], [ -2.62848, 54.46157 ], [ -2.6285, 54.46158 ], [ -2.62866, 54.46171 ], [ -2.62867, 54.46171 ], [ -2.62879, 54.46183 ], [ -2.6288, 54.46187 ], [ -2.62881, 54.46194 ], [ -2.62881, 54.46205 ], [ -2.62878, 54.46217 ], [ -2.62878, 54.46223 ], [ -2.62877, 54.46239 ], [ -2.62878, 54.46256 ], [ -2.62878, 54.46259 ], [ -2.6288, 54.46265 ], [ -2.62883, 54.46276 ], [ -2.62885, 54.46287 ], [ -2.62888, 54.46294 ], [ -2.62895, 54.46308 ], [ -2.62895, 54.46311 ], [ -2.62899, 54.46327 ], [ -2.629, 54.46337 ], [ -2.62895, 54.46342 ], [ -2.62888, 54.46344 ], [ -2.6288836, 54.4634422 ], [ -2.6286, 54.46337 ], [ -2.62835, 54.46331 ], [ -2.62831, 54.4633 ], [ -2.62772, 54.46319 ], [ -2.62743, 54.46314 ], [ -2.62714, 54.46308 ], [ -2.62695, 54.46305 ], [ -2.62684, 54.46304 ], [ -2.62653, 54.46304 ], [ -2.62646, 54.46304 ], [ -2.62622, 54.46305 ], [ -2.62591, 54.46307 ], [ -2.6256, 54.46308 ], [ -2.62532, 54.46309 ], [ -2.62498, 54.4631 ], [ -2.62467, 54.46311 ], [ -2.62439, 54.46312 ], [ -2.62436, 54.46312 ], [ -2.62406, 54.46314 ], [ -2.62404, 54.46314 ], [ -2.62389, 54.46319 ], [ -2.62379, 54.46323 ], [ -2.62367, 54.46328 ], [ -2.62354, 54.46331 ], [ -2.62336, 54.4633 ], [ -2.62324, 54.46327 ], [ -2.6231, 54.46318 ], [ -2.62283, 54.46299 ], [ -2.62257, 54.46279 ], [ -2.62246, 54.4627 ], [ -2.62227, 54.46256 ], [ -2.62189, 54.46227 ], [ -2.6217, 54.46213 ], [ -2.62107, 54.46165 ], [ -2.62087, 54.46152 ], [ -2.62071, 54.46144 ], [ -2.62058, 54.46138 ], [ -2.62045, 54.46135 ], [ -2.62035, 54.46133 ], [ -2.62015, 54.46131 ], [ -2.62009, 54.4613 ], [ -2.61984, 54.46131 ], [ -2.61983, 54.46131 ], [ -2.61959, 54.46133 ], [ -2.61954, 54.46134 ], [ -2.61858, 54.46144 ], [ -2.6185754, 54.4614413 ], [ -2.61871, 54.46155 ], [ -2.61884, 54.46166 ], [ -2.61891, 54.46169 ], [ -2.61931, 54.4619 ], [ -2.61937, 54.46193 ], [ -2.61943, 54.46196 ], [ -2.61961, 54.46205 ], [ -2.61966, 54.46207 ], [ -2.61985, 54.46216 ], [ -2.6199, 54.46219 ], [ -2.62006, 54.46227 ], [ -2.62013, 54.46231 ], [ -2.62053, 54.46257 ], [ -2.62122, 54.46302 ], [ -2.62131, 54.46309 ], [ -2.62135, 54.46312 ], [ -2.62171, 54.46341 ], [ -2.62172, 54.46341 ], [ -2.62185, 54.46353 ], [ -2.62189, 54.46356 ], [ -2.62206, 54.46371 ], [ -2.62223, 54.46386 ], [ -2.62236, 54.46398 ], [ -2.62241, 54.46403 ], [ -2.62251, 54.46413 ], [ -2.6227, 54.46434 ], [ -2.62297, 54.46465 ], [ -2.62356, 54.46521 ], [ -2.62377, 54.46537 ], [ -2.62381, 54.46541 ], [ -2.62395, 54.46552 ], [ -2.62413, 54.46566 ], [ -2.62422, 54.46573 ], [ -2.62436, 54.46584 ], [ -2.62526, 54.46651 ], [ -2.62546, 54.46666 ], [ -2.62551, 54.46669 ], [ -2.62565, 54.4668 ], [ -2.6257, 54.46683 ], [ -2.62622, 54.46721 ], [ -2.6268, 54.46765 ], [ -2.62684, 54.46768 ], [ -2.62693, 54.46775 ], [ -2.62699, 54.46779 ], [ -2.62703, 54.46782 ], [ -2.62717, 54.46793 ], [ -2.6274, 54.46811 ], [ -2.62746, 54.46815 ], [ -2.62754, 54.46823 ], [ -2.62777, 54.46844 ], [ -2.62807, 54.46874 ], [ -2.62842, 54.4691 ], [ -2.62847, 54.46916 ], [ -2.6285, 54.4692 ], [ -2.62862, 54.46932 ], [ -2.62897, 54.46971 ], [ -2.62908, 54.46983 ], [ -2.6293, 54.4701 ], [ -2.6295, 54.47031 ], [ -2.62962, 54.47045 ], [ -2.62986, 54.47071 ], [ -2.62993, 54.47079 ], [ -2.63, 54.47087 ], [ -2.63007, 54.4711 ], [ -2.63008, 54.47115 ], [ -2.63008, 54.47127 ], [ -2.63006, 54.47145 ], [ -2.63001, 54.47163 ], [ -2.63, 54.47166 ], [ -2.63002, 54.47185 ], [ -2.6301, 54.47198 ], [ -2.63023, 54.47215 ], [ -2.63037, 54.47233 ], [ -2.63062, 54.47263 ], [ -2.63075, 54.4728 ], [ -2.63076, 54.47281 ], [ -2.63089, 54.47296 ], [ -2.63103, 54.47312 ], [ -2.63111, 54.4732 ], [ -2.63117, 54.47328 ], [ -2.63167, 54.47394 ], [ -2.63198, 54.47434 ], [ -2.6324, 54.47493 ], [ -2.63252, 54.47509 ], [ -2.63276, 54.47543 ], [ -2.6329, 54.47562 ], [ -2.63299, 54.47576 ], [ -2.63309, 54.47593 ], [ -2.6332, 54.4761 ], [ -2.63327, 54.47621 ], [ -2.6333, 54.47627 ], [ -2.6334, 54.47646 ], [ -2.6336, 54.47674 ], [ -2.63371, 54.47695 ], [ -2.6338, 54.47709 ], [ -2.63407, 54.47763 ], [ -2.63412, 54.47771 ], [ -2.63415, 54.47781 ], [ -2.63432, 54.47821 ], [ -2.63453, 54.4788 ], [ -2.63466, 54.4792 ], [ -2.63466, 54.4794 ], [ -2.63466, 54.47946 ], [ -2.63456, 54.47975 ], [ -2.63454, 54.47981 ], [ -2.63447, 54.47992 ], [ -2.63435, 54.48009 ], [ -2.6343, 54.48016 ], [ -2.63421, 54.48024 ], [ -2.63404, 54.48039 ], [ -2.63402, 54.48041 ], [ -2.63357, 54.48073 ], [ -2.63345, 54.48081 ], [ -2.6334476, 54.4808117 ], [ -2.63366, 54.48096 ], [ -2.63386, 54.48116 ], [ -2.634, 54.4813 ], [ -2.63412, 54.48152 ], [ -2.63421, 54.48178 ], [ -2.63427, 54.48195 ], [ -2.63433, 54.48213 ], [ -2.63438, 54.48229 ], [ -2.63439, 54.48231 ], [ -2.63447, 54.48248 ], [ -2.6345, 54.48254 ], [ -2.63458, 54.48265 ], [ -2.6347, 54.4828 ], [ -2.63488, 54.48296 ], [ -2.63494, 54.48301 ], [ -2.63508, 54.4831 ], [ -2.63526, 54.4832 ], [ -2.6355, 54.48332 ], [ -2.63569, 54.48339 ], [ -2.63587, 54.48345 ], [ -2.63608, 54.48351 ], [ -2.63624, 54.48355 ], [ -2.63637, 54.48357 ], [ -2.63666, 54.48363 ], [ -2.63667, 54.48364 ], [ -2.63695, 54.4837 ], [ -2.63709, 54.48372 ], [ -2.63724, 54.48376 ], [ -2.6375, 54.48382 ], [ -2.63752, 54.48383 ], [ -2.63779, 54.48392 ], [ -2.63784, 54.48394 ], [ -2.63789, 54.48396 ], [ -2.638, 54.48399 ], [ -2.63828, 54.48413 ], [ -2.63845, 54.48424 ], [ -2.63861, 54.48437 ], [ -2.63874, 54.48448 ], [ -2.63891, 54.48462 ], [ -2.63898, 54.48468 ], [ -2.63946, 54.48518 ], [ -2.63953, 54.48525 ], [ -2.6397, 54.4854 ], [ -2.63986, 54.48555 ], [ -2.64002, 54.48571 ], [ -2.64011, 54.48579 ], [ -2.64043, 54.48611 ], [ -2.64067, 54.48636 ], [ -2.64093, 54.48676 ], [ -2.64095, 54.48679 ], [ -2.64112, 54.48705 ], [ -2.64137, 54.48739 ], [ -2.64141, 54.48743 ], [ -2.6417, 54.48775 ], [ -2.64184, 54.48791 ], [ -2.64193, 54.48801 ], [ -2.64217, 54.48827 ], [ -2.64219, 54.4883 ], [ -2.64225, 54.48839 ], [ -2.64244, 54.48868 ], [ -2.64256, 54.48889 ], [ -2.64257, 54.4889 ], [ -2.64268, 54.489 ], [ -2.64284, 54.48912 ], [ -2.64332, 54.48943 ], [ -2.64335, 54.48945 ], [ -2.64355, 54.48959 ], [ -2.64374, 54.48972 ], [ -2.64375, 54.48973 ], [ -2.64402, 54.48995 ], [ -2.64403, 54.48996 ], [ -2.64432, 54.49023 ], [ -2.64447, 54.49043 ], [ -2.6446, 54.49066 ], [ -2.64461, 54.49068 ], [ -2.64461, 54.49069 ], [ -2.64474, 54.49088 ], [ -2.64492, 54.4911 ], [ -2.64498, 54.49117 ], [ -2.64519, 54.49144 ], [ -2.64541, 54.49179 ], [ -2.64543, 54.49184 ], [ -2.64554, 54.49213 ], [ -2.64559, 54.49219 ], [ -2.6457, 54.49235 ], [ -2.64587, 54.49247 ], [ -2.6459, 54.49249 ], [ -2.64611, 54.49262 ], [ -2.64613, 54.49263 ], [ -2.64631, 54.49276 ], [ -2.64636, 54.49279 ], [ -2.64651, 54.4929 ], [ -2.64673, 54.49307 ], [ -2.64688, 54.49321 ], [ -2.64697, 54.49329 ], [ -2.64717, 54.49344 ], [ -2.64735, 54.49355 ], [ -2.64752, 54.49365 ], [ -2.64757, 54.49369 ], [ -2.64775, 54.49382 ], [ -2.64783, 54.49388 ], [ -2.64795, 54.49398 ], [ -2.64812, 54.49412 ], [ -2.64813, 54.49413 ], [ -2.64827, 54.49423 ], [ -2.64832, 54.49427 ], [ -2.64843, 54.49433 ], [ -2.64852, 54.49439 ], [ -2.6486, 54.49443 ], [ -2.64869, 54.49448 ], [ -2.64886, 54.49456 ], [ -2.64901, 54.49463 ], [ -2.64914, 54.49469 ], [ -2.64924, 54.49475 ], [ -2.64971, 54.49499 ], [ -2.64979, 54.49503 ], [ -2.64995, 54.4951 ], [ -2.65043, 54.49533 ], [ -2.65047, 54.49535 ], [ -2.65068, 54.49544 ], [ -2.65093, 54.49554 ], [ -2.65132, 54.4957 ], [ -2.65144, 54.49575 ], [ -2.6518, 54.49589 ], [ -2.65194, 54.49596 ], [ -2.65219, 54.49606 ], [ -2.6526, 54.49624 ], [ -2.65271, 54.4963 ], [ -2.65275, 54.49633 ], [ -2.65278, 54.49635 ], [ -2.65285, 54.49643 ], [ -2.65287, 54.49648 ], [ -2.65288, 54.49654 ], [ -2.65287, 54.4966 ], [ -2.65284, 54.49667 ], [ -2.65278, 54.4968 ], [ -2.65269, 54.49703 ], [ -2.65266, 54.49714 ], [ -2.65266, 54.49722 ], [ -2.65266, 54.49729 ], [ -2.65267, 54.49732 ], [ -2.65267, 54.49733 ], [ -2.65269, 54.49739 ], [ -2.65272, 54.49749 ], [ -2.65272, 54.49751 ], [ -2.6528, 54.49767 ], [ -2.65285, 54.49776 ], [ -2.65302, 54.49814 ], [ -2.65318, 54.49848 ], [ -2.65337, 54.49888 ], [ -2.65345, 54.49905 ], [ -2.65354, 54.49923 ], [ -2.65354, 54.49924 ], [ -2.65363, 54.4994 ], [ -2.6537, 54.49954 ], [ -2.65388, 54.49984 ], [ -2.65393, 54.49991 ], [ -2.65404, 54.50008 ], [ -2.65407, 54.50013 ], [ -2.65414, 54.50025 ], [ -2.65439, 54.50063 ], [ -2.65456, 54.50089 ], [ -2.65464, 54.50101 ], [ -2.6547, 54.50109 ], [ -2.65479, 54.50118 ], [ -2.65487, 54.50124 ], [ -2.65492, 54.50127 ], [ -2.65507, 54.50138 ], [ -2.65526, 54.50151 ], [ -2.65527, 54.50152 ], [ -2.65547, 54.50165 ], [ -2.6558, 54.50185 ], [ -2.6561, 54.50205 ], [ -2.6562, 54.50211 ], [ -2.65672, 54.50245 ], [ -2.65714, 54.50271 ], [ -2.65735, 54.50284 ], [ -2.6574, 54.50288 ], [ -2.65776, 54.50311 ], [ -2.65819, 54.5034 ], [ -2.65926, 54.50408 ], [ -2.65942, 54.50418 ], [ -2.65981, 54.50445 ], [ -2.65992, 54.50453 ], [ -2.65996, 54.50457 ], [ -2.66, 54.50461 ], [ -2.66005, 54.50465 ], [ -2.66008, 54.5047 ], [ -2.66012, 54.50474 ], [ -2.66015, 54.50479 ], [ -2.66017, 54.50483 ], [ -2.6602, 54.50487 ], [ -2.66022, 54.50492 ], [ -2.66024, 54.50501 ], [ -2.66025, 54.50515 ], [ -2.66026, 54.50531 ], [ -2.66025, 54.5055 ], [ -2.6602546, 54.5054963 ], [ -2.6605, 54.50551 ], [ -2.66072, 54.50553 ], [ -2.66087, 54.50555 ], [ -2.66109, 54.50558 ], [ -2.66117, 54.50559 ], [ -2.66146, 54.50564 ], [ -2.66154, 54.50566 ], [ -2.66175, 54.50571 ], [ -2.66215, 54.5058 ], [ -2.66299, 54.50605 ], [ -2.66373, 54.50627 ], [ -2.66392, 54.50631 ], [ -2.66413, 54.50636 ], [ -2.66433, 54.50639 ], [ -2.66456, 54.50644 ], [ -2.66458, 54.50644 ], [ -2.66481, 54.50647 ], [ -2.66488, 54.50647 ], [ -2.66505, 54.5065 ], [ -2.66563, 54.50655 ], [ -2.66624, 54.50662 ], [ -2.66654, 54.50665 ], [ -2.66755, 54.50676 ], [ -2.66835, 54.50685 ], [ -2.66857, 54.50688 ], [ -2.66878, 54.5069 ], [ -2.66899, 54.50692 ], [ -2.6693, 54.50695 ], [ -2.66947, 54.50696 ], [ -2.6694744, 54.5069638 ], [ -2.66946, 54.50739 ], [ -2.66947, 54.50743 ], [ -2.66953, 54.50869 ], [ -2.66957, 54.50959 ], [ -2.66958, 54.50977 ], [ -2.66967, 54.51318 ], [ -2.66968, 54.51336 ], [ -2.66971, 54.51462 ], [ -2.66973, 54.51516 ], [ -2.66975, 54.51591 ], [ -2.66975, 54.51598 ], [ -2.66976, 54.5167 ], [ -2.66976, 54.51684 ], [ -2.66976, 54.51688 ], [ -2.66977, 54.51738 ], [ -2.66977, 54.51774 ], [ -2.66979, 54.51794 ], [ -2.66981, 54.51807 ], [ -2.66983, 54.51815 ], [ -2.66985, 54.51826 ], [ -2.66988, 54.5184 ], [ -2.67, 54.51881 ], [ -2.6702, 54.51945 ], [ -2.67049, 54.52019 ], [ -2.67064, 54.52057 ], [ -2.671, 54.52128 ], [ -2.67131, 54.5217 ], [ -2.67134, 54.52173 ], [ -2.67197, 54.52242 ], [ -2.67206, 54.5225 ], [ -2.67236, 54.52281 ], [ -2.67267, 54.52312 ], [ -2.67284, 54.5233 ], [ -2.67298, 54.52346 ], [ -2.67305, 54.52354 ], [ -2.67324, 54.52386 ], [ -2.67344, 54.52419 ], [ -2.67393, 54.52501 ], [ -2.67404, 54.52521 ], [ -2.67428, 54.52564 ], [ -2.67473, 54.52641 ], [ -2.67486, 54.52663 ], [ -2.67526, 54.52732 ], [ -2.67543, 54.52762 ], [ -2.67556, 54.52782 ], [ -2.67592, 54.52843 ], [ -2.676, 54.52856 ], [ -2.67628, 54.529 ], [ -2.6766, 54.52949 ], [ -2.67695, 54.53001 ], [ -2.6774, 54.53068 ], [ -2.67761, 54.53103 ], [ -2.67769, 54.53118 ], [ -2.67776, 54.53133 ], [ -2.6778, 54.53142 ], [ -2.67784, 54.53153 ], [ -2.67789, 54.53171 ], [ -2.6779, 54.53173 ], [ -2.67799, 54.53209 ], [ -2.67804, 54.53224 ], [ -2.67809, 54.53242 ], [ -2.67809, 54.53244 ], [ -2.67821, 54.53285 ], [ -2.67823, 54.53299 ], [ -2.67828, 54.53316 ], [ -2.67836, 54.53339 ], [ -2.6785, 54.53374 ], [ -2.67852, 54.53379 ], [ -2.67854, 54.53383 ], [ -2.67866, 54.53414 ], [ -2.67873, 54.53435 ], [ -2.67879, 54.53471 ], [ -2.6788, 54.53496 ], [ -2.67882, 54.53515 ], [ -2.67883, 54.53519 ], [ -2.67885, 54.53532 ], [ -2.67891, 54.53571 ], [ -2.67893, 54.53586 ], [ -2.67896, 54.53604 ], [ -2.67897, 54.53607 ], [ -2.67899, 54.53622 ], [ -2.679, 54.53627 ], [ -2.67907, 54.53667 ], [ -2.67909, 54.53678 ], [ -2.67912, 54.53693 ], [ -2.67916, 54.53711 ], [ -2.67916, 54.53714 ], [ -2.67922, 54.53739 ], [ -2.67923, 54.53747 ], [ -2.67926, 54.53757 ], [ -2.67928, 54.53764 ], [ -2.67929, 54.53767 ], [ -2.67933, 54.53783 ], [ -2.67939, 54.53802 ], [ -2.67939, 54.53803 ], [ -2.67944, 54.53816 ], [ -2.67945, 54.53818 ], [ -2.67947, 54.53824 ], [ -2.67953, 54.53838 ], [ -2.67959, 54.53851 ], [ -2.67968, 54.5387 ], [ -2.67969, 54.53873 ], [ -2.67976, 54.53887 ], [ -2.67981, 54.53898 ], [ -2.67984, 54.53905 ], [ -2.67985, 54.53907 ], [ -2.67996, 54.53929 ], [ -2.68, 54.53939 ], [ -2.68009, 54.53957 ], [ -2.6801, 54.53961 ], [ -2.68025, 54.53991 ], [ -2.6803, 54.54004 ], [ -2.68034, 54.54011 ], [ -2.68034, 54.54012 ], [ -2.68037, 54.54021 ], [ -2.68039, 54.54026 ], [ -2.6804, 54.54029 ], [ -2.68043, 54.54037 ], [ -2.68045, 54.54044 ], [ -2.68046, 54.54047 ], [ -2.6805, 54.54062 ], [ -2.68051, 54.54065 ], [ -2.68055, 54.54077 ], [ -2.68056, 54.54079 ], [ -2.68057, 54.54082 ], [ -2.6806, 54.54097 ], [ -2.68061, 54.541 ], [ -2.68065, 54.54115 ], [ -2.68066, 54.54118 ], [ -2.6807, 54.54133 ], [ -2.68073, 54.54147 ], [ -2.68079, 54.54171 ], [ -2.68083, 54.54189 ], [ -2.68086, 54.542 ], [ -2.68088, 54.54207 ], [ -2.68094, 54.54237 ], [ -2.68103, 54.54277 ], [ -2.68111, 54.543 ], [ -2.68117, 54.54318 ], [ -2.68121, 54.54329 ], [ -2.6813, 54.54353 ], [ -2.68136, 54.5437 ], [ -2.68141, 54.54383 ], [ -2.68143, 54.54388 ], [ -2.68157, 54.54423 ], [ -2.68176, 54.54473 ], [ -2.68195, 54.54519 ], [ -2.68207, 54.5455 ], [ -2.68234, 54.54616 ], [ -2.68242, 54.54636 ], [ -2.68254, 54.54668 ], [ -2.68261, 54.54682 ], [ -2.68262, 54.54686 ], [ -2.68265, 54.54692 ], [ -2.6827, 54.547 ], [ -2.68275, 54.5471 ], [ -2.68279, 54.54715 ], [ -2.68281, 54.54718 ], [ -2.68293, 54.54733 ], [ -2.68306, 54.54748 ], [ -2.68317, 54.5476 ], [ -2.68324, 54.54768 ], [ -2.6834, 54.54784 ], [ -2.68347, 54.54791 ], [ -2.68354, 54.54799 ], [ -2.68368, 54.54816 ], [ -2.68382, 54.54832 ], [ -2.68389, 54.5484 ], [ -2.68395, 54.54848 ], [ -2.68406, 54.54865 ], [ -2.68409, 54.54868 ], [ -2.68417, 54.54882 ], [ -2.68431, 54.54905 ], [ -2.68439, 54.54922 ], [ -2.68455, 54.54958 ], [ -2.68457, 54.54963 ], [ -2.68476, 54.5501 ], [ -2.68482, 54.55025 ], [ -2.68486, 54.55036 ], [ -2.68489, 54.55042 ], [ -2.68497, 54.5506 ], [ -2.68504, 54.55077 ], [ -2.68519, 54.55112 ], [ -2.68527, 54.5513 ], [ -2.68531, 54.5514 ], [ -2.68534, 54.55147 ], [ -2.68541, 54.55165 ], [ -2.68549, 54.55185 ], [ -2.68556, 54.552 ], [ -2.6856, 54.5521 ], [ -2.68564, 54.55217 ], [ -2.68571, 54.5523 ], [ -2.68584, 54.55254 ], [ -2.68592, 54.55267 ], [ -2.686, 54.55279 ], [ -2.68618, 54.55307 ], [ -2.68648, 54.55352 ], [ -2.68686, 54.55419 ], [ -2.68696, 54.55436 ], [ -2.68704, 54.55449 ], [ -2.68715, 54.55475 ], [ -2.68733, 54.55521 ], [ -2.68748, 54.5556 ], [ -2.68758, 54.55594 ], [ -2.68759, 54.55599 ], [ -2.68762, 54.55612 ], [ -2.68763, 54.55619 ], [ -2.68766, 54.5564 ], [ -2.68767, 54.55653 ], [ -2.68768, 54.55699 ], [ -2.68768, 54.55723 ], [ -2.68765, 54.55791 ], [ -2.68765, 54.55799 ], [ -2.68764, 54.55809 ], [ -2.68764, 54.55815 ], [ -2.68763, 54.55858 ], [ -2.68762, 54.55863 ], [ -2.68762, 54.5588 ], [ -2.68762, 54.55881 ], [ -2.68761, 54.55917 ], [ -2.68758, 54.56007 ], [ -2.68757, 54.56025 ], [ -2.68756, 54.56061 ], [ -2.68756, 54.56079 ], [ -2.68755, 54.56097 ], [ -2.68753, 54.56155 ], [ -2.68751, 54.56273 ], [ -2.6875, 54.56298 ], [ -2.6875, 54.56327 ], [ -2.6875, 54.56345 ], [ -2.68748, 54.56434 ], [ -2.68748, 54.56459 ], [ -2.68746, 54.5647 ], [ -2.68744, 54.56487 ], [ -2.68743, 54.56488 ], [ -2.68733, 54.56524 ], [ -2.6873, 54.56534 ], [ -2.68719, 54.56559 ], [ -2.68711, 54.56576 ], [ -2.68694, 54.56611 ], [ -2.68689, 54.56622 ], [ -2.68683, 54.56633 ], [ -2.68674, 54.56651 ], [ -2.68662, 54.56674 ], [ -2.68644, 54.56714 ], [ -2.68635, 54.56737 ], [ -2.68632, 54.56746 ], [ -2.68631, 54.5675 ], [ -2.68628, 54.56761 ], [ -2.68626, 54.5677 ], [ -2.68626, 54.56779 ], [ -2.68625, 54.56801 ], [ -2.68626, 54.56815 ], [ -2.68627, 54.56817 ], [ -2.68629, 54.56828 ], [ -2.68631, 54.56835 ], [ -2.68632, 54.5684 ], [ -2.68635, 54.56846 ], [ -2.6865, 54.56876 ], [ -2.68656, 54.56887 ], [ -2.68661, 54.56896 ], [ -2.6868, 54.56918 ], [ -2.68703, 54.56942 ], [ -2.68727, 54.56964 ], [ -2.68744, 54.5698 ], [ -2.68801, 54.57031 ], [ -2.68859, 54.57106 ], [ -2.68905, 54.57165 ], [ -2.68951, 54.57225 ], [ -2.68955, 54.57231 ], [ -2.68993, 54.57281 ], [ -2.69005, 54.57297 ], [ -2.69018, 54.57313 ], [ -2.6903, 54.5733 ], [ -2.6905, 54.57356 ], [ -2.69082, 54.57394 ], [ -2.69083, 54.57395 ], [ -2.69098, 54.57411 ], [ -2.69114, 54.57426 ], [ -2.69129, 54.57442 ], [ -2.69147, 54.57457 ], [ -2.69164, 54.57472 ], [ -2.69252, 54.57546 ], [ -2.69253, 54.57547 ], [ -2.69266, 54.57562 ], [ -2.69271, 54.57568 ], [ -2.69296, 54.57608 ], [ -2.69316, 54.57632 ], [ -2.69344, 54.57658 ], [ -2.69376, 54.57685 ], [ -2.69429, 54.57732 ], [ -2.69431, 54.57734 ], [ -2.69445, 54.5775 ], [ -2.69532, 54.57845 ], [ -2.69547, 54.57861 ], [ -2.69558, 54.57873 ], [ -2.69587, 54.57912 ], [ -2.69622, 54.5798 ], [ -2.69638, 54.58014 ], [ -2.69674, 54.58089 ], [ -2.69708, 54.58157 ], [ -2.69728, 54.58194 ], [ -2.69733, 54.58206 ], [ -2.69739, 54.58226 ], [ -2.6974, 54.58227 ], [ -2.69743, 54.58241 ], [ -2.69745, 54.58251 ], [ -2.69745, 54.58259 ], [ -2.69745, 54.58263 ], [ -2.69745, 54.58276 ], [ -2.69744, 54.58287 ], [ -2.69744, 54.58293 ], [ -2.69742, 54.58298 ], [ -2.69731, 54.58345 ], [ -2.69726, 54.5837 ], [ -2.69725, 54.58375 ], [ -2.69723, 54.58388 ], [ -2.69723, 54.5839 ], [ -2.69722, 54.58399 ], [ -2.69722, 54.5842 ], [ -2.69723, 54.5843 ], [ -2.69725, 54.5844 ], [ -2.69735, 54.58472 ], [ -2.69736, 54.58477 ], [ -2.69741, 54.58491 ], [ -2.69742, 54.58495 ], [ -2.69748, 54.58512 ], [ -2.69759, 54.58548 ], [ -2.69765, 54.58565 ], [ -2.6977, 54.58581 ], [ -2.69771, 54.58583 ], [ -2.69776, 54.58601 ], [ -2.69796, 54.58665 ], [ -2.69818, 54.58724 ], [ -2.69822, 54.58735 ], [ -2.69831, 54.58759 ], [ -2.69855, 54.58826 ], [ -2.69862, 54.58847 ], [ -2.69873, 54.58883 ], [ -2.69876, 54.58892 ], [ -2.69879, 54.58901 ], [ -2.69901, 54.58975 ], [ -2.69906, 54.58989 ], [ -2.69933, 54.59077 ], [ -2.69956, 54.59148 ], [ -2.69962, 54.59166 ], [ -2.69962, 54.59167 ], [ -2.69978, 54.59219 ], [ -2.69985, 54.59237 ], [ -2.69994, 54.5926 ], [ -2.69999, 54.59271 ], [ -2.70003, 54.59279 ], [ -2.70038, 54.59339 ], [ -2.7006, 54.59374 ], [ -2.7007, 54.59391 ], [ -2.70077, 54.59401 ], [ -2.70084, 54.59414 ], [ -2.70091, 54.5943 ], [ -2.70099, 54.59452 ], [ -2.70101, 54.59459 ], [ -2.70102, 54.59468 ], [ -2.70104, 54.59482 ], [ -2.70108, 54.59512 ], [ -2.70112, 54.5956 ], [ -2.70113, 54.59572 ], [ -2.70117, 54.5961 ], [ -2.70119, 54.59617 ], [ -2.7012, 54.59623 ], [ -2.70123, 54.5963 ], [ -2.70126, 54.59637 ], [ -2.70132, 54.59645 ], [ -2.70142, 54.59656 ], [ -2.70153, 54.59665 ], [ -2.70164, 54.59674 ], [ -2.70175, 54.59682 ], [ -2.70204, 54.59696 ], [ -2.70258, 54.59714 ], [ -2.70281, 54.59722 ], [ -2.70285, 54.59723 ], [ -2.70362, 54.59749 ], [ -2.70388, 54.59763 ], [ -2.70401, 54.59772 ], [ -2.70411, 54.5978 ], [ -2.70424, 54.59792 ], [ -2.70442, 54.59814 ], [ -2.70449, 54.59822 ], [ -2.70456, 54.5983 ], [ -2.70467, 54.59843 ], [ -2.70487, 54.59861 ], [ -2.7049, 54.59864 ], [ -2.70497, 54.59869 ], [ -2.70524, 54.5989 ], [ -2.70532, 54.59896 ], [ -2.70562, 54.59916 ], [ -2.70582, 54.59928 ], [ -2.70609, 54.59942 ], [ -2.70632, 54.59954 ], [ -2.70655, 54.59966 ], [ -2.70701, 54.5999 ], [ -2.70707, 54.59993 ], [ -2.70722, 54.60003 ], [ -2.70736, 54.60013 ], [ -2.70739, 54.60015 ], [ -2.70753, 54.60025 ], [ -2.7076, 54.60032 ], [ -2.70777, 54.60047 ], [ -2.70786, 54.60055 ], [ -2.70792, 54.60062 ], [ -2.70805, 54.60076 ], [ -2.70831, 54.60104 ], [ -2.7085, 54.60126 ], [ -2.70868, 54.60147 ], [ -2.70873, 54.60152 ], [ -2.70894, 54.6017 ], [ -2.70895, 54.60171 ], [ -2.7091, 54.60182 ], [ -2.70933, 54.60196 ], [ -2.70953, 54.60205 ], [ -2.70986, 54.60219 ], [ -2.71091, 54.60261 ], [ -2.71199, 54.60309 ], [ -2.71227, 54.60323 ], [ -2.71268, 54.60346 ], [ -2.71336, 54.60383 ], [ -2.71401, 54.60426 ], [ -2.71413, 54.60436 ], [ -2.71415, 54.60438 ], [ -2.71443, 54.60462 ], [ -2.71471, 54.60491 ], [ -2.71501, 54.60527 ], [ -2.71521, 54.60552 ], [ -2.7154, 54.60578 ], [ -2.71543, 54.60582 ], [ -2.71577, 54.60631 ], [ -2.71597, 54.60661 ], [ -2.71621, 54.60699 ], [ -2.71623, 54.60702 ], [ -2.71642, 54.60733 ], [ -2.7165, 54.60746 ], [ -2.71652, 54.6075 ], [ -2.71672, 54.60784 ], [ -2.71679, 54.60795 ], [ -2.71682, 54.60801 ], [ -2.71702, 54.60838 ], [ -2.71717, 54.60873 ], [ -2.71723, 54.60895 ], [ -2.71725, 54.60915 ], [ -2.71725, 54.6092 ], [ -2.71723, 54.60956 ], [ -2.71721, 54.60996 ], [ -2.71711, 54.61064 ], [ -2.71708, 54.61082 ], [ -2.71694, 54.61171 ], [ -2.71693, 54.61179 ], [ -2.71685, 54.61207 ], [ -2.71678, 54.61225 ], [ -2.71664, 54.61256 ], [ -2.71648, 54.61283 ], [ -2.71644, 54.6129 ], [ -2.71624, 54.61318 ], [ -2.71622, 54.6132 ], [ -2.71612, 54.61335 ], [ -2.71597, 54.61356 ], [ -2.71582, 54.61378 ], [ -2.71561, 54.61407 ], [ -2.71548, 54.61451 ], [ -2.71539, 54.61499 ], [ -2.71542, 54.61515 ], [ -2.71545, 54.61533 ], [ -2.71545, 54.61536 ], [ -2.71575, 54.61637 ], [ -2.71591, 54.61723 ], [ -2.7159, 54.61782 ], [ -2.71587, 54.618 ], [ -2.71567, 54.61908 ], [ -2.71564, 54.61925 ], [ -2.71564, 54.61926 ], [ -2.71555, 54.61961 ], [ -2.71543, 54.62015 ], [ -2.71546, 54.62051 ], [ -2.71547, 54.62068 ], [ -2.71549, 54.62086 ], [ -2.7155, 54.62104 ], [ -2.71552, 54.62122 ], [ -2.71553, 54.62134 ], [ -2.71562, 54.62169 ], [ -2.71562, 54.6217 ], [ -2.71583, 54.62248 ], [ -2.71593, 54.62276 ], [ -2.71619, 54.62346 ], [ -2.71625, 54.62364 ], [ -2.71641, 54.62407 ], [ -2.71645, 54.62414 ], [ -2.7166, 54.62439 ], [ -2.7167, 54.62456 ], [ -2.7168, 54.62473 ], [ -2.71731, 54.62573 ], [ -2.71757, 54.62618 ], [ -2.7179, 54.62678 ], [ -2.71859, 54.62799 ], [ -2.71874, 54.62824 ], [ -2.71879, 54.62833 ], [ -2.71889, 54.6285 ], [ -2.71914, 54.62893 ], [ -2.71934, 54.62919 ], [ -2.71941, 54.62928 ], [ -2.71949, 54.62936 ], [ -2.71963, 54.6295 ], [ -2.71972, 54.62958 ], [ -2.71984, 54.6297 ], [ -2.72034, 54.63016 ], [ -2.72084, 54.63064 ], [ -2.72116, 54.63095 ], [ -2.72147, 54.63126 ], [ -2.72149, 54.63129 ], [ -2.72153, 54.63133 ], [ -2.72166, 54.63144 ], [ -2.7217, 54.63148 ], [ -2.72186, 54.63164 ], [ -2.72202, 54.63179 ], [ -2.72245, 54.63218 ], [ -2.72267, 54.63232 ], [ -2.72301, 54.63254 ], [ -2.72307, 54.63258 ], [ -2.72354, 54.63286 ], [ -2.72362, 54.63292 ], [ -2.72386, 54.63306 ], [ -2.72399, 54.63315 ], [ -2.72424, 54.63332 ], [ -2.72446, 54.63347 ], [ -2.72474, 54.63372 ], [ -2.72478, 54.63376 ], [ -2.72489, 54.63388 ], [ -2.72504, 54.63404 ], [ -2.7252, 54.6342 ], [ -2.72521, 54.63421 ], [ -2.72536, 54.63437 ], [ -2.72552, 54.63451 ], [ -2.72567, 54.63467 ], [ -2.72581, 54.63481 ], [ -2.72588, 54.63488 ], [ -2.72596, 54.63498 ], [ -2.72605, 54.63511 ], [ -2.72633, 54.63561 ], [ -2.72639, 54.6357 ], [ -2.72644, 54.63576 ], [ -2.72654, 54.63586 ], [ -2.72669, 54.636 ], [ -2.72679, 54.63609 ], [ -2.72697, 54.63624 ], [ -2.72701, 54.63627 ], [ -2.72703, 54.6363 ], [ -2.72705, 54.63633 ], [ -2.72707, 54.63638 ], [ -2.72708, 54.63643 ], [ -2.72708, 54.63647 ], [ -2.72706, 54.63653 ], [ -2.72702, 54.6366 ], [ -2.72691, 54.63676 ], [ -2.72688, 54.6368 ], [ -2.72685, 54.63684 ], [ -2.72683, 54.63688 ], [ -2.72682, 54.63692 ], [ -2.72681, 54.63697 ], [ -2.72681, 54.63702 ], [ -2.72682, 54.63705 ], [ -2.72683, 54.63709 ], [ -2.72686, 54.63715 ], [ -2.72706, 54.63749 ], [ -2.72723, 54.63776 ], [ -2.72749, 54.63817 ], [ -2.72762, 54.63836 ], [ -2.72765, 54.6384 ], [ -2.72772, 54.63849 ], [ -2.72773, 54.6385 ], [ -2.72783, 54.6386 ], [ -2.72789, 54.63865 ], [ -2.7282, 54.63896 ], [ -2.72845, 54.63924 ], [ -2.7286, 54.6394 ], [ -2.7287, 54.63952 ], [ -2.72874, 54.63956 ], [ -2.72901, 54.63988 ], [ -2.72915, 54.64004 ], [ -2.72944, 54.64038 ], [ -2.7295, 54.64045 ], [ -2.72954, 54.64052 ], [ -2.7296, 54.64062 ], [ -2.72965, 54.6407 ], [ -2.7299, 54.64112 ], [ -2.73, 54.64126 ], [ -2.73008, 54.64138 ], [ -2.73012, 54.64142 ], [ -2.73052, 54.64185 ], [ -2.73069, 54.642 ], [ -2.73095, 54.64222 ], [ -2.7311, 54.64232 ], [ -2.73153, 54.64261 ], [ -2.73179, 54.64276 ], [ -2.73212, 54.64295 ], [ -2.73245, 54.64314 ], [ -2.73279, 54.64332 ], [ -2.73314, 54.64352 ], [ -2.73324, 54.64357 ], [ -2.73339, 54.64366 ], [ -2.73345, 54.6437 ], [ -2.73399, 54.64405 ], [ -2.73472, 54.6445 ], [ -2.73507, 54.64473 ], [ -2.73526, 54.64486 ], [ -2.73535, 54.64494 ], [ -2.73544, 54.64501 ], [ -2.73556, 54.64512 ], [ -2.73566, 54.64523 ], [ -2.73595, 54.64558 ], [ -2.73604, 54.6457 ], [ -2.73613, 54.64583 ], [ -2.73618, 54.64589 ], [ -2.73621, 54.64593 ], [ -2.73628, 54.64598 ], [ -2.73633, 54.64602 ], [ -2.73635, 54.64604 ], [ -2.73642, 54.64608 ], [ -2.73649, 54.64613 ], [ -2.73653, 54.64615 ], [ -2.73656, 54.64617 ], [ -2.73666, 54.64622 ], [ -2.73676, 54.64627 ], [ -2.73684, 54.6463 ], [ -2.73708, 54.64637 ], [ -2.73736, 54.64645 ], [ -2.73746, 54.64648 ], [ -2.73768, 54.64652 ], [ -2.73824, 54.6466 ], [ -2.73846, 54.64665 ], [ -2.73872, 54.64671 ], [ -2.73884, 54.64676 ], [ -2.73894, 54.64681 ], [ -2.73902, 54.64685 ], [ -2.73908, 54.64689 ], [ -2.73914, 54.64694 ], [ -2.73916, 54.64696 ], [ -2.73921, 54.64702 ], [ -2.73927, 54.64713 ], [ -2.73928, 54.64714 ], [ -2.73931, 54.64722 ], [ -2.73932, 54.64731 ], [ -2.73932, 54.64743 ], [ -2.73932, 54.64767 ], [ -2.73932, 54.64779 ], [ -2.73934, 54.64792 ], [ -2.73937, 54.64799 ], [ -2.73945, 54.6482 ], [ -2.73955, 54.64837 ], [ -2.73965, 54.64854 ], [ -2.73966, 54.64857 ], [ -2.73965, 54.64857 ], [ -2.73965, 54.64858 ], [ -2.73964, 54.64858 ], [ -2.73963, 54.64858 ], [ -2.73962, 54.64858 ], [ -2.73962, 54.64859 ], [ -2.73961, 54.64859 ], [ -2.7396, 54.6486 ], [ -2.73959, 54.6486 ], [ -2.73959, 54.64861 ], [ -2.73958, 54.64861 ], [ -2.73958, 54.64862 ], [ -2.73958, 54.64863 ], [ -2.73957, 54.64864 ], [ -2.73957, 54.64865 ], [ -2.73958, 54.64865 ], [ -2.73958, 54.64866 ], [ -2.73958, 54.64867 ], [ -2.73959, 54.64867 ], [ -2.73959, 54.64868 ], [ -2.7396, 54.64868 ], [ -2.7396, 54.64869 ], [ -2.73961, 54.64869 ], [ -2.73961, 54.6487 ], [ -2.73962, 54.6487 ], [ -2.73963, 54.6487 ], [ -2.73964, 54.64871 ], [ -2.73965, 54.64871 ], [ -2.73966, 54.64871 ], [ -2.73967, 54.64871 ], [ -2.73968, 54.64871 ], [ -2.73968, 54.64872 ], [ -2.73969, 54.64872 ], [ -2.7397, 54.64872 ], [ -2.73971, 54.64872 ], [ -2.73972, 54.64872 ], [ -2.73973, 54.64871 ], [ -2.73974, 54.64871 ], [ -2.73975, 54.64871 ], [ -2.73977, 54.64871 ], [ -2.7399, 54.64886 ], [ -2.74043, 54.64945 ], [ -2.74065, 54.64976 ], [ -2.74107, 54.65032 ], [ -2.74142, 54.65075 ], [ -2.74156, 54.65091 ], [ -2.74156, 54.65092 ], [ -2.74178, 54.65119 ], [ -2.74184, 54.65126 ], [ -2.7419, 54.65135 ], [ -2.7419, 54.65137 ], [ -2.74195, 54.65148 ], [ -2.74198, 54.65153 ], [ -2.74199, 54.65156 ], [ -2.74206, 54.6517 ], [ -2.74213, 54.65183 ], [ -2.74221, 54.65201 ], [ -2.74229, 54.65218 ], [ -2.74237, 54.65236 ], [ -2.74241, 54.65244 ], [ -2.74244, 54.65251 ], [ -2.74245, 54.65255 ], [ -2.74248, 54.65264 ], [ -2.74249, 54.65269 ], [ -2.74249, 54.65274 ], [ -2.7425, 54.6528 ], [ -2.7425, 54.65286 ], [ -2.7425, 54.65297 ], [ -2.74248, 54.65313 ], [ -2.74245, 54.65328 ], [ -2.74236, 54.65366 ], [ -2.74243, 54.65377 ], [ -2.74246, 54.6538 ], [ -2.74249, 54.65385 ], [ -2.74252, 54.65388 ], [ -2.74257, 54.65392 ], [ -2.74266, 54.65397 ], [ -2.74274, 54.65401 ], [ -2.74275, 54.65401 ], [ -2.74288, 54.65408 ], [ -2.74298, 54.65413 ], [ -2.7431, 54.65415 ], [ -2.74321, 54.65418 ], [ -2.74334, 54.65422 ], [ -2.74342, 54.65426 ], [ -2.74351, 54.65432 ], [ -2.74359, 54.65439 ], [ -2.74365, 54.65447 ], [ -2.74369, 54.65454 ], [ -2.74371, 54.65466 ], [ -2.7437, 54.65473 ], [ -2.74369, 54.65478 ], [ -2.74367, 54.65484 ], [ -2.74363, 54.65492 ], [ -2.74367, 54.65509 ], [ -2.74368, 54.65515 ], [ -2.74369, 54.65519 ], [ -2.74372, 54.65526 ], [ -2.74373, 54.65528 ], [ -2.74375, 54.65534 ], [ -2.74378, 54.65542 ], [ -2.74396, 54.65567 ], [ -2.744, 54.65572 ], [ -2.74414, 54.65592 ], [ -2.74426, 54.65608 ], [ -2.74437, 54.65625 ], [ -2.74449, 54.65641 ], [ -2.74453, 54.65648 ], [ -2.7446, 54.65658 ], [ -2.7447, 54.65672 ], [ -2.74488, 54.65698 ], [ -2.74509, 54.65724 ], [ -2.74542, 54.65762 ], [ -2.74554, 54.65776 ], [ -2.74582, 54.65805 ], [ -2.74617, 54.65843 ], [ -2.74642, 54.6587 ], [ -2.74657, 54.65885 ], [ -2.74716, 54.65949 ], [ -2.74754, 54.6599 ], [ -2.74761, 54.65999 ], [ -2.74774, 54.66016 ], [ -2.74784, 54.6603 ], [ -2.74816, 54.66072 ], [ -2.74853, 54.66113 ], [ -2.74892, 54.6616 ], [ -2.74919, 54.66177 ], [ -2.74941, 54.66192 ], [ -2.74967, 54.66209 ], [ -2.74982, 54.66219 ], [ -2.74988, 54.66224 ], [ -2.74992, 54.66228 ], [ -2.74994, 54.66232 ], [ -2.74996, 54.66235 ], [ -2.75001, 54.66241 ], [ -2.75039, 54.6627 ], [ -2.75055, 54.66285 ], [ -2.75099, 54.66326 ], [ -2.75105, 54.66332 ], [ -2.75108, 54.66335 ], [ -2.7511, 54.66336 ], [ -2.75114, 54.6634 ], [ -2.7512, 54.66343 ], [ -2.75151, 54.66358 ], [ -2.75191, 54.6638 ], [ -2.75198, 54.66385 ], [ -2.75218, 54.66399 ], [ -2.75225, 54.66404 ], [ -2.75232, 54.66409 ], [ -2.75252, 54.66424 ], [ -2.75271, 54.66439 ], [ -2.75291, 54.66454 ], [ -2.7531, 54.66468 ], [ -2.75328, 54.66483 ], [ -2.75336, 54.66489 ], [ -2.75354, 54.66504 ], [ -2.75356, 54.66506 ], [ -2.75407, 54.66551 ], [ -2.75449, 54.66588 ], [ -2.75452, 54.66592 ], [ -2.75454, 54.66595 ], [ -2.75457, 54.66601 ], [ -2.75457, 54.66622 ], [ -2.75457, 54.66631 ], [ -2.7546, 54.66649 ], [ -2.75488, 54.66666 ], [ -2.75494, 54.66669 ], [ -2.75534, 54.66689 ], [ -2.75569, 54.66707 ], [ -2.75608, 54.66726 ], [ -2.75615, 54.66729 ], [ -2.7562, 54.66731 ], [ -2.75628, 54.66733 ], [ -2.7565, 54.66744 ], [ -2.75707, 54.66766 ], [ -2.75733, 54.66776 ], [ -2.75749, 54.66783 ], [ -2.75779, 54.668 ], [ -2.75824, 54.66826 ], [ -2.75901, 54.66871 ], [ -2.75915, 54.66882 ], [ -2.75924, 54.66892 ], [ -2.75944, 54.66924 ], [ -2.75948, 54.66931 ], [ -2.75962, 54.66952 ], [ -2.7596245, 54.6695194 ], [ -2.75964, 54.66952 ], [ -2.75965, 54.66952 ], [ -2.75966, 54.66952 ], [ -2.75967, 54.66952 ], [ -2.75968, 54.66952 ], [ -2.75969, 54.66952 ], [ -2.75969, 54.66953 ], [ -2.7597, 54.66953 ], [ -2.75971, 54.66953 ], [ -2.75972, 54.66954 ], [ -2.75973, 54.66955 ], [ -2.75973, 54.66956 ], [ -2.75973, 54.66957 ], [ -2.75973, 54.66958 ], [ -2.75973, 54.66959 ], [ -2.75972, 54.6696 ], [ -2.75971, 54.6696 ], [ -2.7597, 54.66961 ], [ -2.7597022, 54.6696098 ], [ -2.75977, 54.6697 ], [ -2.7599, 54.66986 ], [ -2.75991, 54.66988 ], [ -2.75998, 54.66995 ], [ -2.76009, 54.67006 ], [ -2.7602, 54.67019 ], [ -2.76024, 54.67041 ], [ -2.76023, 54.67055 ], [ -2.76022, 54.67103 ], [ -2.76013, 54.67144 ], [ -2.76003, 54.67222 ], [ -2.76, 54.67251 ], [ -2.76001, 54.6727 ], [ -2.7600102, 54.6726952 ], [ -2.75993, 54.67282 ], [ -2.75992, 54.67284 ], [ -2.7599, 54.67297 ], [ -2.7599, 54.67319 ], [ -2.75993, 54.67337 ], [ -2.76003, 54.67399 ], [ -2.76011, 54.67444 ], [ -2.76015, 54.67465 ], [ -2.76021, 54.675 ], [ -2.76032, 54.67534 ], [ -2.76033, 54.67536 ], [ -2.76042, 54.67551 ], [ -2.76043, 54.67554 ], [ -2.76046, 54.67559 ], [ -2.76069, 54.67605 ], [ -2.76071, 54.6761 ], [ -2.76077, 54.67623 ], [ -2.76085, 54.6764 ], [ -2.76094, 54.67657 ], [ -2.76102, 54.67675 ], [ -2.76107, 54.67686 ], [ -2.7612, 54.67709 ], [ -2.76129, 54.67726 ], [ -2.76146, 54.67761 ], [ -2.76155, 54.67778 ], [ -2.76164, 54.67795 ], [ -2.76167, 54.67801 ], [ -2.76173, 54.67813 ], [ -2.76182, 54.6783 ], [ -2.76191, 54.67847 ], [ -2.76199, 54.67864 ], [ -2.76226, 54.67918 ], [ -2.76231, 54.67928 ], [ -2.76249, 54.67962 ], [ -2.76258, 54.67979 ], [ -2.76266, 54.67997 ], [ -2.76283, 54.68031 ], [ -2.76287, 54.68039 ], [ -2.76291, 54.68049 ], [ -2.76299, 54.68066 ], [ -2.76337, 54.68154 ], [ -2.76352, 54.68187 ], [ -2.76359, 54.68207 ], [ -2.76374, 54.68242 ], [ -2.7638, 54.68258 ], [ -2.76381, 54.68259 ], [ -2.76389, 54.68277 ], [ -2.76396, 54.68294 ], [ -2.76412, 54.68329 ], [ -2.76419, 54.68346 ], [ -2.76431, 54.68374 ], [ -2.76442, 54.68399 ], [ -2.7645, 54.68416 ], [ -2.76454, 54.68425 ], [ -2.76465, 54.68451 ], [ -2.76471, 54.68463 ], [ -2.76473, 54.68468 ], [ -2.76489, 54.68505 ], [ -2.76502, 54.68536 ], [ -2.76504, 54.68538 ], [ -2.76519, 54.68572 ], [ -2.76534, 54.68603 ], [ -2.76541, 54.6862 ], [ -2.76543, 54.68625 ], [ -2.76548, 54.68637 ], [ -2.7655, 54.68643 ], [ -2.76554, 54.68654 ], [ -2.76557, 54.68664 ], [ -2.76559, 54.68675 ], [ -2.7656, 54.68678 ], [ -2.76561, 54.6869 ], [ -2.76561, 54.68696 ], [ -2.76561, 54.68705 ], [ -2.76559, 54.6872 ], [ -2.76558, 54.6875 ], [ -2.76558, 54.68752 ], [ -2.76556, 54.68767 ], [ -2.76556, 54.68768 ], [ -2.76555, 54.68778 ], [ -2.76555, 54.68809 ], [ -2.76554, 54.68818 ], [ -2.76553, 54.68822 ], [ -2.76552, 54.6884 ], [ -2.7655, 54.68858 ], [ -2.7655, 54.6886 ], [ -2.76549, 54.68873 ], [ -2.76549, 54.68876 ], [ -2.76549, 54.68894 ], [ -2.7655, 54.689 ], [ -2.76551, 54.68917 ], [ -2.76554, 54.68924 ], [ -2.76556, 54.68929 ], [ -2.76563, 54.68946 ], [ -2.76563, 54.68947 ], [ -2.76572, 54.68964 ], [ -2.76578, 54.68982 ], [ -2.76579, 54.68984 ], [ -2.76603, 54.69034 ], [ -2.76609, 54.69046 ], [ -2.76626, 54.69086 ], [ -2.76631, 54.69098 ], [ -2.76633, 54.69104 ], [ -2.76641, 54.69121 ], [ -2.76648, 54.69138 ], [ -2.76654, 54.69152 ], [ -2.76656, 54.69156 ], [ -2.76664, 54.69173 ], [ -2.76674, 54.69196 ], [ -2.7668, 54.69208 ], [ -2.76682, 54.69214 ], [ -2.76686, 54.69223 ], [ -2.76687, 54.69226 ], [ -2.76701, 54.6926 ], [ -2.76722, 54.69307 ], [ -2.7673, 54.69328 ], [ -2.76736, 54.69342 ], [ -2.76746, 54.69365 ], [ -2.7677, 54.69417 ], [ -2.76778, 54.69434 ], [ -2.76797, 54.69473 ], [ -2.76803, 54.69486 ], [ -2.7681, 54.69504 ], [ -2.76818, 54.69521 ], [ -2.76825, 54.69539 ], [ -2.76828, 54.69545 ], [ -2.76833, 54.69556 ], [ -2.7684, 54.69574 ], [ -2.76847, 54.69591 ], [ -2.76849, 54.69596 ], [ -2.76879, 54.69661 ], [ -2.76886, 54.69678 ], [ -2.76887, 54.69678 ], [ -2.769, 54.69707 ], [ -2.76912, 54.69729 ], [ -2.76922, 54.6974 ], [ -2.76934, 54.69747 ], [ -2.76951, 54.69756 ], [ -2.76964, 54.69764 ], [ -2.7696365, 54.6976436 ], [ -2.76965, 54.69768 ], [ -2.76967, 54.69776 ], [ -2.76972, 54.69788 ], [ -2.76978, 54.69796 ], [ -2.7699, 54.69805 ], [ -2.76998, 54.69808 ], [ -2.77008, 54.69811 ], [ -2.77021, 54.69815 ], [ -2.77036, 54.69845 ], [ -2.77027, 54.69872 ], [ -2.77018, 54.69903 ], [ -2.77018, 54.69907 ], [ -2.77017, 54.69966 ], [ -2.77021, 54.69984 ], [ -2.77024, 54.69991 ], [ -2.77033, 54.70008 ], [ -2.77043, 54.70027 ], [ -2.77059, 54.70058 ], [ -2.77136, 54.7024 ], [ -2.77204, 54.70391 ], [ -2.77211, 54.70405 ], [ -2.77236, 54.70461 ], [ -2.77258, 54.70511 ], [ -2.77294, 54.70601 ], [ -2.77337, 54.70695 ], [ -2.77345, 54.70712 ], [ -2.77362, 54.7076 ], [ -2.77387, 54.70824 ], [ -2.77406, 54.70868 ], [ -2.77413, 54.70885 ], [ -2.77429, 54.70921 ], [ -2.77445, 54.70949 ], [ -2.77457, 54.70972 ], [ -2.77468, 54.70994 ], [ -2.77482, 54.71024 ], [ -2.77483, 54.71026 ], [ -2.77503, 54.71072 ], [ -2.77539, 54.71151 ], [ -2.77568, 54.71216 ], [ -2.77575, 54.71233 ], [ -2.77596, 54.7128 ], [ -2.77599, 54.71285 ], [ -2.77632, 54.7136 ], [ -2.77661, 54.71425 ], [ -2.77675, 54.71459 ], [ -2.7768, 54.71471 ], [ -2.77694, 54.71506 ], [ -2.77709, 54.71541 ], [ -2.77721, 54.71571 ], [ -2.77738, 54.71611 ], [ -2.77765, 54.71662 ], [ -2.77816, 54.71776 ], [ -2.7783, 54.71807 ], [ -2.77837, 54.71823 ], [ -2.77838, 54.71825 ], [ -2.77851, 54.71853 ], [ -2.77854, 54.7186 ], [ -2.77861, 54.71875 ], [ -2.77861, 54.71877 ], [ -2.77863, 54.7188 ], [ -2.77873, 54.71907 ], [ -2.77875, 54.71912 ], [ -2.77881, 54.71928 ], [ -2.77881, 54.71929 ], [ -2.77887, 54.71947 ], [ -2.77889, 54.71952 ], [ -2.77891, 54.71964 ], [ -2.77894, 54.71983 ], [ -2.77898, 54.72001 ], [ -2.77898, 54.72005 ], [ -2.77899, 54.72017 ], [ -2.779, 54.72019 ], [ -2.77901, 54.72037 ], [ -2.77902, 54.72047 ], [ -2.77902, 54.72051 ], [ -2.77902, 54.72055 ], [ -2.77902, 54.72073 ], [ -2.77903, 54.72114 ], [ -2.77899, 54.72141 ], [ -2.77899, 54.72145 ], [ -2.77895, 54.72169 ], [ -2.77895, 54.72177 ], [ -2.77894, 54.72181 ], [ -2.77893, 54.72199 ], [ -2.77892, 54.72213 ], [ -2.77891, 54.72216 ], [ -2.77891, 54.72217 ], [ -2.77889, 54.72234 ], [ -2.7789, 54.72252 ], [ -2.7789, 54.72256 ], [ -2.77893, 54.72267 ], [ -2.77897, 54.72282 ], [ -2.77898, 54.72285 ], [ -2.77899, 54.72288 ], [ -2.77902, 54.72295 ], [ -2.77917, 54.72323 ], [ -2.77924, 54.72336 ], [ -2.77926, 54.7234 ], [ -2.7794, 54.72364 ], [ -2.77944, 54.72371 ], [ -2.77945, 54.72374 ], [ -2.77953, 54.72388 ], [ -2.77955, 54.72391 ], [ -2.77962, 54.72405 ], [ -2.77964, 54.72408 ], [ -2.77972, 54.72422 ], [ -2.77974, 54.72425 ], [ -2.77984, 54.72445 ], [ -2.77991, 54.7246 ], [ -2.78002, 54.72481 ], [ -2.78012, 54.72504 ], [ -2.7802, 54.72519 ], [ -2.7803, 54.72539 ], [ -2.78057, 54.72591 ], [ -2.78075, 54.72626 ], [ -2.78088, 54.72651 ], [ -2.78101, 54.72679 ], [ -2.78118, 54.7271 ], [ -2.78128, 54.72727 ], [ -2.78137, 54.72744 ], [ -2.7814, 54.72749 ], [ -2.78157, 54.72778 ], [ -2.78206, 54.72864 ], [ -2.78217, 54.72884 ], [ -2.78236, 54.72908 ], [ -2.78276, 54.72946 ], [ -2.7829, 54.7296 ], [ -2.78307, 54.72975 ], [ -2.78326, 54.72992 ], [ -2.78348, 54.73022 ], [ -2.7836, 54.73047 ], [ -2.78364, 54.73058 ], [ -2.78377, 54.73093 ], [ -2.78397, 54.73145 ], [ -2.78404, 54.73162 ], [ -2.78425, 54.73216 ], [ -2.78431, 54.73233 ], [ -2.78438, 54.73251 ], [ -2.7844, 54.73254 ], [ -2.78472, 54.7332 ], [ -2.78524, 54.73424 ], [ -2.78528, 54.73432 ], [ -2.78542, 54.73458 ], [ -2.78596, 54.73559 ], [ -2.78597, 54.73561 ], [ -2.78625, 54.73613 ], [ -2.78658, 54.73682 ], [ -2.7866, 54.73688 ], [ -2.78685, 54.73749 ], [ -2.78691, 54.73761 ], [ -2.78723, 54.73831 ], [ -2.78731, 54.73848 ], [ -2.78758, 54.7391 ], [ -2.788, 54.74005 ], [ -2.78805, 54.74015 ], [ -2.78808, 54.74022 ], [ -2.78831, 54.74074 ], [ -2.78847, 54.74109 ], [ -2.78878, 54.74179 ], [ -2.78885, 54.74193 ], [ -2.78886, 54.74196 ], [ -2.78926, 54.74283 ], [ -2.78929, 54.74288 ], [ -2.78942, 54.74318 ], [ -2.78952, 54.74341 ], [ -2.78966, 54.74376 ], [ -2.78989, 54.74425 ], [ -2.78997, 54.74442 ], [ -2.78998, 54.74445 ], [ -2.79005, 54.74459 ], [ -2.79013, 54.74477 ], [ -2.79058, 54.74572 ], [ -2.7907, 54.74598 ], [ -2.79078, 54.74615 ], [ -2.79087, 54.74633 ], [ -2.79109, 54.7468 ], [ -2.79122, 54.74702 ], [ -2.79137, 54.74729 ], [ -2.79141, 54.74736 ], [ -2.79161, 54.7477 ], [ -2.7917, 54.74786 ], [ -2.79213, 54.74855 ], [ -2.79267, 54.74939 ], [ -2.79278, 54.74956 ], [ -2.79288, 54.74973 ], [ -2.79296, 54.74985 ], [ -2.79299, 54.7499 ], [ -2.79309, 54.75007 ], [ -2.79315, 54.75016 ], [ -2.79318, 54.75024 ], [ -2.79322, 54.75032 ], [ -2.79325, 54.75042 ], [ -2.79327, 54.75049 ], [ -2.79335, 54.75077 ], [ -2.79337, 54.75087 ], [ -2.79339, 54.75095 ], [ -2.79343, 54.7511 ], [ -2.79344, 54.75114 ], [ -2.79346, 54.75125 ], [ -2.79347, 54.75133 ], [ -2.79349, 54.75143 ], [ -2.79352, 54.75154 ], [ -2.79356, 54.75179 ], [ -2.79358, 54.7519 ], [ -2.79359, 54.75197 ], [ -2.79363, 54.75215 ], [ -2.79364, 54.75219 ], [ -2.79367, 54.75233 ], [ -2.79371, 54.7525 ], [ -2.79375, 54.75268 ], [ -2.79377, 54.75275 ], [ -2.79393, 54.75321 ], [ -2.79398, 54.75335 ], [ -2.79399, 54.75339 ], [ -2.79407, 54.75356 ], [ -2.79415, 54.75372 ], [ -2.79454, 54.75457 ], [ -2.79462, 54.75474 ], [ -2.79488, 54.75531 ], [ -2.79513, 54.75588 ], [ -2.79531, 54.75628 ], [ -2.79554, 54.75681 ], [ -2.79585, 54.75751 ], [ -2.79593, 54.75768 ], [ -2.79601, 54.75785 ], [ -2.79647, 54.75888 ], [ -2.79648, 54.7589 ], [ -2.79717, 54.76046 ], [ -2.79725, 54.76064 ], [ -2.79747, 54.76114 ], [ -2.79757, 54.76138 ], [ -2.79788, 54.7621 ], [ -2.79799, 54.76234 ], [ -2.79821, 54.76287 ], [ -2.79857, 54.76366 ], [ -2.79864, 54.76383 ], [ -2.79903, 54.7647 ], [ -2.79935, 54.76549 ], [ -2.7994, 54.7657 ], [ -2.79942, 54.76585 ], [ -2.79943, 54.76599 ], [ -2.79942, 54.76648 ], [ -2.7994, 54.76676 ], [ -2.79939, 54.76704 ], [ -2.79941, 54.76731 ], [ -2.79943, 54.76748 ], [ -2.79944, 54.7675 ], [ -2.79947, 54.76766 ], [ -2.79947, 54.76769 ], [ -2.79956, 54.76802 ], [ -2.79957, 54.76806 ], [ -2.79961, 54.76818 ], [ -2.79961, 54.7682 ], [ -2.79968, 54.76838 ], [ -2.7998, 54.76866 ], [ -2.79996, 54.76901 ], [ -2.79999, 54.76907 ], [ -2.80006, 54.76918 ], [ -2.80009, 54.76924 ], [ -2.80023, 54.76948 ], [ -2.80031, 54.76964 ], [ -2.80037, 54.76971 ], [ -2.80045, 54.76982 ], [ -2.80052, 54.76991 ], [ -2.80055, 54.76995 ], [ -2.80069, 54.77012 ], [ -2.80081, 54.77022 ], [ -2.80081, 54.77023 ], [ -2.80093, 54.77032 ], [ -2.80118, 54.77051 ], [ -2.80145, 54.77071 ], [ -2.80159, 54.77082 ], [ -2.80168, 54.77089 ], [ -2.80174, 54.77096 ], [ -2.8018, 54.77102 ], [ -2.80185, 54.77109 ], [ -2.80187, 54.77112 ], [ -2.8019, 54.77116 ], [ -2.80197, 54.77125 ], [ -2.80199, 54.77128 ], [ -2.80203, 54.77135 ], [ -2.8021, 54.77149 ], [ -2.80217, 54.77163 ], [ -2.80218, 54.77165 ], [ -2.80223, 54.77175 ], [ -2.80225, 54.7718 ], [ -2.80227, 54.77185 ], [ -2.80237, 54.77207 ], [ -2.8024, 54.77215 ], [ -2.80248, 54.77232 ], [ -2.80266, 54.77273 ], [ -2.80272, 54.77284 ], [ -2.80304, 54.77358 ], [ -2.80309, 54.77372 ], [ -2.80317, 54.77389 ], [ -2.80325, 54.77407 ], [ -2.80353, 54.77471 ], [ -2.80363, 54.77494 ], [ -2.80364, 54.77495 ], [ -2.80377, 54.7752 ], [ -2.8039, 54.7754 ], [ -2.80393, 54.77545 ], [ -2.80403, 54.7756 ], [ -2.80429, 54.77595 ], [ -2.80432, 54.77599 ], [ -2.80441, 54.77611 ], [ -2.80453, 54.77628 ], [ -2.80465, 54.77644 ], [ -2.80473, 54.77656 ], [ -2.80515, 54.7771 ], [ -2.80541, 54.77743 ], [ -2.80554, 54.77759 ], [ -2.80567, 54.77776 ], [ -2.80604, 54.77824 ], [ -2.80665, 54.77908 ], [ -2.80689, 54.77941 ], [ -2.80701, 54.77958 ], [ -2.8079, 54.7808 ], [ -2.80803, 54.78098 ], [ -2.8080333, 54.780979 ], [ -2.80819, 54.78112 ], [ -2.80857, 54.78163 ], [ -2.80902, 54.78221 ], [ -2.80926, 54.78252 ], [ -2.80964, 54.78304 ], [ -2.80974, 54.78317 ], [ -2.81019, 54.78375 ], [ -2.8103, 54.7839 ], [ -2.81079, 54.78452 ], [ -2.81092, 54.78468 ], [ -2.81116, 54.78497 ], [ -2.81133, 54.78518 ], [ -2.8115, 54.78538 ], [ -2.81167, 54.78556 ], [ -2.81215, 54.78608 ], [ -2.81241, 54.78633 ], [ -2.81272, 54.78665 ], [ -2.81271, 54.7867 ], [ -2.81297, 54.78694 ], [ -2.81304, 54.78701 ], [ -2.81319, 54.78715 ], [ -2.81364, 54.78753 ], [ -2.81412, 54.78789 ], [ -2.8143, 54.78804 ], [ -2.81449, 54.78818 ], [ -2.81468, 54.78832 ], [ -2.81486, 54.78847 ], [ -2.81505, 54.78861 ], [ -2.81512, 54.78867 ], [ -2.81542, 54.7889 ], [ -2.8156, 54.78905 ], [ -2.81578, 54.78919 ], [ -2.81615, 54.78948 ], [ -2.81634, 54.78963 ], [ -2.81635, 54.78964 ], [ -2.81651, 54.78978 ], [ -2.81669, 54.78992 ], [ -2.81691, 54.79011 ], [ -2.81736, 54.79053 ], [ -2.81753, 54.79069 ], [ -2.81766, 54.79081 ], [ -2.818, 54.79117 ], [ -2.81826, 54.79148 ], [ -2.81844, 54.79168 ], [ -2.81859, 54.79188 ], [ -2.81909, 54.79254 ], [ -2.81913, 54.79259 ], [ -2.81921, 54.7927 ], [ -2.81933, 54.79287 ], [ -2.81944, 54.79304 ], [ -2.8195, 54.79311 ], [ -2.81955, 54.79321 ], [ -2.81979, 54.79358 ], [ -2.81987, 54.79373 ], [ -2.8206, 54.79514 ], [ -2.82067, 54.79527 ], [ -2.82075, 54.79544 ], [ -2.82084, 54.79561 ], [ -2.82097, 54.79586 ], [ -2.82109, 54.79613 ], [ -2.82132, 54.79649 ], [ -2.82152, 54.7968 ], [ -2.82163, 54.79695 ], [ -2.82213, 54.79753 ], [ -2.82237, 54.79777 ], [ -2.82251, 54.79793 ], [ -2.82276, 54.79819 ], [ -2.82315, 54.79856 ], [ -2.82384, 54.79926 ], [ -2.82393, 54.79935 ], [ -2.82425, 54.79966 ], [ -2.82489, 54.80028 ], [ -2.82517, 54.80055 ], [ -2.82548, 54.80084 ], [ -2.82588, 54.80121 ], [ -2.82616, 54.80148 ], [ -2.82632, 54.80164 ], [ -2.82671, 54.80202 ], [ -2.82679, 54.8021 ], [ -2.82694, 54.80226 ], [ -2.82709, 54.80242 ], [ -2.82724, 54.80258 ], [ -2.82738, 54.80274 ], [ -2.8279, 54.80328 ], [ -2.82844, 54.80386 ], [ -2.82849, 54.80392 ], [ -2.82865, 54.80407 ], [ -2.82881, 54.80423 ], [ -2.82884, 54.80426 ], [ -2.82958, 54.80501 ], [ -2.82996, 54.80538 ], [ -2.83003, 54.80546 ], [ -2.83044, 54.80587 ], [ -2.83091, 54.80634 ], [ -2.83111, 54.80655 ], [ -2.83136, 54.80681 ], [ -2.83142, 54.80687 ], [ -2.83158, 54.80704 ], [ -2.83174, 54.8072 ], [ -2.83179, 54.80725 ], [ -2.83195, 54.8074 ], [ -2.83196, 54.80741 ], [ -2.83211, 54.80756 ], [ -2.83221, 54.80766 ], [ -2.83229, 54.80774 ], [ -2.83253, 54.80797 ], [ -2.83269, 54.80813 ], [ -2.83272, 54.80816 ], [ -2.83286, 54.8083 ], [ -2.83297, 54.80842 ], [ -2.83314, 54.80857 ], [ -2.83316, 54.80859 ], [ -2.83327, 54.8087 ], [ -2.8334, 54.80883 ], [ -2.83349, 54.80895 ], [ -2.83381, 54.80943 ], [ -2.83393, 54.80959 ], [ -2.83399, 54.80969 ], [ -2.83414, 54.8099 ], [ -2.83423, 54.81003 ], [ -2.83436, 54.81019 ], [ -2.83446, 54.81032 ], [ -2.83458, 54.81044 ], [ -2.83496, 54.81082 ], [ -2.83527, 54.81112 ], [ -2.8356, 54.81144 ], [ -2.83576, 54.8116 ], [ -2.83578, 54.81161 ], [ -2.83608, 54.8119 ], [ -2.83624, 54.81206 ], [ -2.83634, 54.81215 ], [ -2.83664, 54.81244 ], [ -2.8368, 54.81259 ], [ -2.83696, 54.81275 ], [ -2.83711, 54.8129 ], [ -2.83727, 54.81306 ], [ -2.83748, 54.81326 ], [ -2.83774, 54.81352 ], [ -2.83783, 54.81362 ], [ -2.83873, 54.81455 ], [ -2.83889, 54.81472 ], [ -2.83904, 54.81488 ], [ -2.8395, 54.81533 ], [ -2.83972, 54.81555 ], [ -2.84033, 54.8162 ], [ -2.84083, 54.8167 ], [ -2.84134, 54.81721 ], [ -2.84149, 54.81737 ], [ -2.8418, 54.81768 ], [ -2.84227, 54.81815 ], [ -2.84303, 54.81892 ], [ -2.84354, 54.81944 ], [ -2.84385, 54.81976 ], [ -2.844, 54.81992 ], [ -2.8447, 54.82064 ], [ -2.84505, 54.82102 ], [ -2.84568, 54.82174 ], [ -2.84579, 54.82186 ], [ -2.84633, 54.82249 ], [ -2.84646, 54.82265 ], [ -2.84688, 54.82313 ], [ -2.8469, 54.82315 ], [ -2.84759, 54.82385 ], [ -2.84777, 54.82405 ], [ -2.84847, 54.82485 ], [ -2.84904, 54.82549 ], [ -2.84923, 54.82573 ], [ -2.84931, 54.82582 ], [ -2.84989, 54.82646 ], [ -2.85003, 54.82662 ], [ -2.85004, 54.82663 ], [ -2.85046, 54.8271 ], [ -2.8509, 54.82757 ], [ -2.85109, 54.82778 ], [ -2.85134, 54.82805 ], [ -2.85139, 54.82811 ], [ -2.85216, 54.82902 ], [ -2.8527, 54.82967 ], [ -2.85276, 54.82975 ], [ -2.85323, 54.83032 ], [ -2.85337, 54.83048 ], [ -2.85346, 54.8306 ], [ -2.85376, 54.83097 ], [ -2.85403, 54.83133 ], [ -2.85462, 54.83207 ], [ -2.85479, 54.83228 ], [ -2.85498, 54.83253 ], [ -2.85582, 54.83359 ], [ -2.85598, 54.8338 ], [ -2.85673, 54.83475 ], [ -2.85688, 54.83493 ], [ -2.85769, 54.83596 ], [ -2.85781, 54.83611 ], [ -2.85792, 54.83625 ], [ -2.85801, 54.83636 ], [ -2.85804, 54.83642 ], [ -2.85807, 54.83648 ], [ -2.85809, 54.83656 ], [ -2.85813, 54.8368 ], [ -2.85813, 54.83697 ], [ -2.85812, 54.83716 ], [ -2.85811, 54.83721 ], [ -2.85807, 54.83739 ], [ -2.85804, 54.83757 ], [ -2.85801, 54.83775 ], [ -2.85797, 54.83793 ], [ -2.85794, 54.8381 ], [ -2.85794, 54.83811 ], [ -2.85791, 54.83828 ], [ -2.85787, 54.83852 ], [ -2.85785, 54.83864 ], [ -2.85782, 54.83882 ], [ -2.85778, 54.839 ], [ -2.85768, 54.83954 ], [ -2.85764, 54.83991 ], [ -2.85762, 54.83995 ], [ -2.85753, 54.84025 ], [ -2.85752, 54.84041 ], [ -2.85752, 54.84048 ], [ -2.85762, 54.84078 ], [ -2.85769, 54.84102 ], [ -2.85775, 54.84115 ], [ -2.85783, 54.84132 ], [ -2.85789, 54.84146 ], [ -2.85804, 54.84166 ], [ -2.85816, 54.84183 ], [ -2.85824, 54.84194 ], [ -2.85864, 54.84245 ], [ -2.8589, 54.84282 ], [ -2.85936, 54.84342 ], [ -2.85942, 54.8435 ], [ -2.85948, 54.84358 ], [ -2.85961, 54.84375 ], [ -2.85974, 54.84391 ], [ -2.85988, 54.84409 ], [ -2.86003, 54.84423 ], [ -2.86019, 54.84438 ], [ -2.86036, 54.84453 ], [ -2.86061, 54.84477 ], [ -2.86133, 54.84546 ], [ -2.86149, 54.84561 ], [ -2.86201, 54.8461 ], [ -2.86214, 54.84622 ], [ -2.86241, 54.84647 ], [ -2.86248, 54.84652 ], [ -2.86325, 54.84709 ], [ -2.86384, 54.84753 ], [ -2.86419, 54.8478 ], [ -2.86483, 54.84822 ], [ -2.86643, 54.8493 ], [ -2.86688, 54.84958 ], [ -2.86709, 54.84972 ], [ -2.86801, 54.85031 ], [ -2.86852, 54.85067 ], [ -2.86908, 54.85104 ], [ -2.86984, 54.85159 ], [ -2.87003, 54.85173 ], [ -2.87043, 54.85202 ], [ -2.871, 54.85244 ], [ -2.87157, 54.85286 ], [ -2.87171, 54.85296 ], [ -2.87176, 54.85301 ], [ -2.87211, 54.85331 ], [ -2.87245, 54.8536 ], [ -2.87263, 54.85375 ], [ -2.8728, 54.8539 ], [ -2.87315, 54.8542 ], [ -2.87408, 54.85497 ], [ -2.87414, 54.85502 ], [ -2.87425, 54.85512 ], [ -2.87528, 54.85602 ], [ -2.87542, 54.85614 ], [ -2.8755, 54.85621 ], [ -2.87589, 54.85656 ], [ -2.87611, 54.85669 ], [ -2.87626, 54.85679 ], [ -2.8762602, 54.8567894 ], [ -2.87661, 54.85687 ], [ -2.87684, 54.85691 ], [ -2.87703, 54.85691 ], [ -2.87726, 54.8569 ], [ -2.8774, 54.85686 ], [ -2.8776, 54.85681 ], [ -2.87786, 54.85682 ], [ -2.87808, 54.85683 ], [ -2.87843, 54.85687 ], [ -2.87861, 54.85689 ], [ -2.87877, 54.85691 ], [ -2.87884, 54.85692 ], [ -2.87914, 54.85695 ], [ -2.87944, 54.85701 ], [ -2.8796, 54.85705 ], [ -2.87976, 54.85711 ], [ -2.87985, 54.85716 ], [ -2.87993, 54.85729 ], [ -2.87996, 54.85739 ], [ -2.87995, 54.8575 ], [ -2.87992, 54.85766 ], [ -2.87988, 54.85782 ], [ -2.87995, 54.85795 ], [ -2.88002, 54.85805 ], [ -2.88009, 54.85812 ], [ -2.88019, 54.85819 ], [ -2.88043, 54.85838 ], [ -2.88051, 54.85844 ], [ -2.88069, 54.85858 ], [ -2.88076, 54.85865 ], [ -2.88085, 54.85875 ], [ -2.88092, 54.85884 ], [ -2.88095, 54.85891 ], [ -2.88103, 54.85913 ], [ -2.88108, 54.85925 ], [ -2.88126, 54.85988 ], [ -2.88159, 54.86075 ], [ -2.88165, 54.86088 ], [ -2.88179, 54.86118 ], [ -2.88196, 54.86143 ], [ -2.88206, 54.86155 ], [ -2.88206, 54.86156 ], [ -2.88221, 54.86172 ], [ -2.88236, 54.86186 ], [ -2.88243, 54.86193 ], [ -2.88254, 54.86201 ], [ -2.88272, 54.86214 ], [ -2.88283, 54.86222 ], [ -2.88301, 54.86232 ], [ -2.88328, 54.86246 ], [ -2.88343, 54.86253 ], [ -2.88389, 54.86273 ], [ -2.88417, 54.86284 ], [ -2.88426, 54.86288 ], [ -2.88497, 54.86316 ], [ -2.88538, 54.86332 ], [ -2.88673, 54.86391 ], [ -2.88698, 54.86402 ], [ -2.88798, 54.86445 ], [ -2.88804, 54.86448 ], [ -2.8892, 54.86501 ], [ -2.88926, 54.86504 ], [ -2.88973, 54.86529 ], [ -2.89014, 54.86555 ], [ -2.89026, 54.86566 ], [ -2.89067, 54.86593 ], [ -2.89088, 54.86606 ], [ -2.89092, 54.86609 ], [ -2.89124, 54.8663 ], [ -2.89148, 54.86643 ], [ -2.89152, 54.86646 ], [ -2.89174, 54.86657 ], [ -2.892, 54.86669 ], [ -2.89248, 54.86692 ], [ -2.89252, 54.86694 ], [ -2.89286, 54.86711 ], [ -2.89316, 54.86728 ], [ -2.89336, 54.86742 ], [ -2.89353, 54.86757 ], [ -2.89378, 54.86782 ], [ -2.89393, 54.86798 ], [ -2.89423, 54.86831 ], [ -2.89428, 54.86837 ], [ -2.89436, 54.86846 ], [ -2.89445, 54.86856 ], [ -2.8947, 54.86889 ], [ -2.89502, 54.86923 ], [ -2.89525, 54.86944 ], [ -2.89557, 54.86972 ], [ -2.89575, 54.86987 ], [ -2.89597, 54.87003 ], [ -2.89608, 54.87011 ], [ -2.89651, 54.87041 ], [ -2.89657, 54.87044 ], [ -2.89803, 54.87144 ], [ -2.89827, 54.87161 ], [ -2.89888, 54.87203 ], [ -2.89968, 54.87257 ], [ -2.89983, 54.87267 ], [ -2.90171, 54.87383 ], [ -2.9021, 54.87411 ], [ -2.90229, 54.87425 ], [ -2.90264, 54.8745 ], [ -2.90309, 54.8748 ], [ -2.90391, 54.87535 ], [ -2.90442, 54.87569 ], [ -2.90507, 54.8761 ], [ -2.90548, 54.87637 ], [ -2.90578, 54.87657 ], [ -2.90598, 54.87671 ], [ -2.90633, 54.87694 ], [ -2.90649, 54.87704 ], [ -2.90655, 54.87707 ], [ -2.90726, 54.87754 ], [ -2.90733, 54.87759 ], [ -2.90793, 54.87798 ], [ -2.90875, 54.87852 ], [ -2.9089, 54.87862 ], [ -2.90933, 54.8789 ], [ -2.90953, 54.87904 ], [ -2.90975, 54.87918 ], [ -2.90981, 54.87922 ], [ -2.91056, 54.87972 ], [ -2.91068, 54.87979 ], [ -2.91098, 54.87998 ], [ -2.91137, 54.88022 ], [ -2.91148, 54.88029 ], [ -2.91163, 54.88038 ], [ -2.91173, 54.88045 ], [ -2.91188, 54.88055 ], [ -2.91194, 54.8806 ], [ -2.91199, 54.88064 ], [ -2.91221, 54.88085 ], [ -2.91251, 54.88109 ], [ -2.91272, 54.88126 ], [ -2.91307, 54.88154 ], [ -2.91328, 54.88168 ], [ -2.91354, 54.88188 ], [ -2.9143, 54.88243 ], [ -2.91521, 54.88305 ], [ -2.9157, 54.88335 ], [ -2.9159, 54.88348 ], [ -2.91611, 54.88361 ], [ -2.91639, 54.88379 ], [ -2.91645, 54.8839 ], [ -2.91676, 54.8841 ], [ -2.91699, 54.88422 ], [ -2.91719, 54.88427 ], [ -2.91733, 54.88436 ], [ -2.91747, 54.88446 ], [ -2.91785, 54.88472 ], [ -2.91796, 54.88479 ], [ -2.91805, 54.88484 ], [ -2.91809, 54.88486 ], [ -2.91813, 54.88488 ], [ -2.91825, 54.88494 ], [ -2.91868, 54.88514 ], [ -2.91933, 54.88543 ], [ -2.91945, 54.88548 ], [ -2.91982, 54.88564 ], [ -2.92009, 54.88575 ], [ -2.92027, 54.88583 ], [ -2.92046, 54.88591 ], [ -2.92063, 54.88599 ], [ -2.9208, 54.88607 ], [ -2.92113, 54.88622 ], [ -2.92145, 54.88637 ], [ -2.92186, 54.88656 ], [ -2.92255, 54.88689 ], [ -2.92263, 54.88692 ], [ -2.92281, 54.88699 ], [ -2.92321, 54.88715 ], [ -2.92341, 54.88725 ], [ -2.9236, 54.88734 ], [ -2.92378, 54.88743 ], [ -2.92384, 54.88746 ], [ -2.92412, 54.8876 ], [ -2.92413, 54.88761 ], [ -2.9245, 54.88781 ], [ -2.92476, 54.88794 ], [ -2.92486, 54.88799 ], [ -2.92592, 54.88849 ], [ -2.92608, 54.88857 ], [ -2.92654, 54.88878 ], [ -2.92656, 54.8888 ], [ -2.9267, 54.88885 ], [ -2.9269, 54.88892 ], [ -2.92702, 54.88898 ], [ -2.92729, 54.88912 ], [ -2.92742, 54.88919 ], [ -2.92755, 54.88926 ], [ -2.9278, 54.88938 ], [ -2.92792, 54.88944 ], [ -2.92916, 54.89007 ], [ -2.92926, 54.89012 ], [ -2.92964, 54.89031 ], [ -2.93036, 54.89065 ], [ -2.93085, 54.8909 ], [ -2.93116, 54.89103 ], [ -2.9317, 54.89127 ], [ -2.93191, 54.89137 ], [ -2.93231, 54.89156 ], [ -2.93264, 54.89169 ], [ -2.93284, 54.89174 ], [ -2.9328365, 54.891744 ], [ -2.93273, 54.89184 ], [ -2.93262, 54.89194 ], [ -2.93256, 54.89199 ], [ -2.93254, 54.89202 ], [ -2.93253, 54.89205 ], [ -2.93252, 54.89208 ], [ -2.93252, 54.89211 ], [ -2.93252, 54.89212 ], [ -2.93252, 54.89216 ], [ -2.93253, 54.89219 ], [ -2.93256, 54.89223 ], [ -2.93258, 54.89226 ], [ -2.93262, 54.89229 ], [ -2.93266, 54.89232 ], [ -2.9327, 54.89235 ], [ -2.9327014, 54.8923454 ], [ -2.93273, 54.89234 ], [ -2.93276, 54.89234 ], [ -2.93279, 54.89234 ], [ -2.93281, 54.89235 ], [ -2.93286, 54.89236 ], [ -2.93292, 54.89238 ], [ -2.93297, 54.89241 ], [ -2.93299, 54.89244 ], [ -2.93302, 54.89256 ], [ -2.93304, 54.89263 ], [ -2.9331, 54.89283 ], [ -2.93318, 54.89309 ], [ -2.93322, 54.89327 ], [ -2.93333, 54.89391 ], [ -2.93334, 54.89398 ], [ -2.93343, 54.89436 ], [ -2.93347, 54.89457 ], [ -2.93352, 54.89479 ], [ -2.93359, 54.89507 ], [ -2.9335894, 54.8950744 ], [ -2.93362, 54.89526 ], [ -2.93365, 54.89543 ], [ -2.93371, 54.89585 ], [ -2.93373, 54.89599 ], [ -2.9338, 54.89649 ], [ -2.93377, 54.89655 ], [ -2.93378, 54.89661 ], [ -2.93379, 54.89668 ], [ -2.93381, 54.89674 ], [ -2.93382, 54.89678 ], [ -2.93386, 54.89682 ], [ -2.93395, 54.89762 ], [ -2.93418, 54.89777 ], [ -2.93419, 54.89781 ], [ -2.93433, 54.89787 ], [ -2.93446, 54.89792 ], [ -2.93464, 54.89797 ], [ -2.93496, 54.89804 ], [ -2.93517, 54.8981 ], [ -2.93533, 54.89812 ], [ -2.9353277, 54.8981243 ], [ -2.93532, 54.89814 ], [ -2.93515, 54.8984 ], [ -2.93526, 54.89842 ], [ -2.9353, 54.89843 ], [ -2.93532, 54.89844 ], [ -2.93536, 54.89846 ], [ -2.93537, 54.89849 ], [ -2.93538, 54.8985 ], [ -2.93538, 54.89853 ], [ -2.93537, 54.89856 ], [ -2.93533, 54.89865 ], [ -2.9353318, 54.8986526 ], [ -2.93572, 54.89871 ], [ -2.93569, 54.89878 ], [ -2.93559, 54.89902 ], [ -2.93557, 54.89906 ], [ -2.93554, 54.89917 ], [ -2.93553, 54.89925 ], [ -2.93553, 54.8993 ], [ -2.93554, 54.89937 ], [ -2.93557, 54.89944 ], [ -2.93559, 54.89953 ], [ -2.9356, 54.8996 ], [ -2.9356, 54.89966 ], [ -2.9356037, 54.8996578 ], [ -2.93574, 54.8998 ], [ -2.93578, 54.89984 ], [ -2.9358, 54.89987 ], [ -2.93586, 54.89992 ], [ -2.93644, 54.9005 ], [ -2.93648, 54.90054 ], [ -2.93654, 54.90059 ], [ -2.93666, 54.90071 ], [ -2.93688, 54.90093 ], [ -2.93694, 54.90098 ], [ -2.93701, 54.90105 ], [ -2.93712, 54.90116 ], [ -2.93719, 54.90125 ], [ -2.93724, 54.9013 ], [ -2.93728, 54.90136 ], [ -2.93731, 54.90142 ], [ -2.93732, 54.90145 ], [ -2.93732, 54.90147 ], [ -2.93734, 54.90153 ], [ -2.93736, 54.90161 ], [ -2.93737, 54.90167 ], [ -2.93738, 54.90173 ], [ -2.93739, 54.90179 ], [ -2.93739, 54.90186 ], [ -2.93738, 54.90191 ], [ -2.93737, 54.90196 ], [ -2.93735, 54.90208 ], [ -2.93727, 54.90229 ], [ -2.93724, 54.90239 ], [ -2.93722, 54.9025 ], [ -2.9372, 54.9026 ], [ -2.93719, 54.9027 ], [ -2.93718, 54.90278 ], [ -2.93714, 54.90311 ], [ -2.93711, 54.90332 ], [ -2.93707, 54.90363 ], [ -2.93706, 54.90367 ], [ -2.93705, 54.90373 ], [ -2.93703, 54.90382 ], [ -2.93703, 54.90391 ], [ -2.93702, 54.90399 ], [ -2.93703, 54.90402 ], [ -2.93703, 54.9041 ], [ -2.93704, 54.90418 ], [ -2.93705, 54.90425 ], [ -2.93711, 54.90461 ], [ -2.93713, 54.90474 ], [ -2.93714, 54.90484 ], [ -2.93719, 54.90546 ], [ -2.93721, 54.90572 ], [ -2.93722, 54.90609 ], [ -2.93727, 54.90661 ], [ -2.93729, 54.90676 ], [ -2.93731, 54.90692 ], [ -2.93741, 54.90785 ], [ -2.93743, 54.9081 ], [ -2.93746, 54.90835 ], [ -2.93754, 54.90902 ], [ -2.93757, 54.90928 ], [ -2.93761, 54.90944 ], [ -2.93765, 54.9096 ], [ -2.9377, 54.90976 ], [ -2.93772, 54.90983 ], [ -2.93775, 54.90991 ], [ -2.93776, 54.90994 ], [ -2.9378, 54.91003 ], [ -2.93784, 54.91011 ], [ -2.93789, 54.9102 ], [ -2.93796, 54.91031 ], [ -2.93798, 54.91034 ], [ -2.9381, 54.91052 ], [ -2.93813, 54.91055 ], [ -2.93823, 54.91066 ], [ -2.93842, 54.91086 ], [ -2.93855, 54.91098 ], [ -2.93904, 54.91144 ], [ -2.93917, 54.91158 ], [ -2.93926, 54.91167 ], [ -2.93934, 54.91173 ], [ -2.93952, 54.91188 ], [ -2.93969, 54.91201 ], [ -2.93997, 54.91223 ], [ -2.94004, 54.91229 ], [ -2.94013, 54.91236 ], [ -2.94018, 54.91241 ], [ -2.94031, 54.91253 ], [ -2.94049, 54.91271 ], [ -2.94058, 54.91279 ], [ -2.94065, 54.91288 ], [ -2.94071, 54.91295 ], [ -2.94077, 54.91303 ], [ -2.94078, 54.91306 ], [ -2.94091, 54.91325 ], [ -2.94098, 54.91336 ], [ -2.94113, 54.91368 ], [ -2.94121, 54.91387 ], [ -2.94127, 54.91402 ], [ -2.94128, 54.91405 ], [ -2.94132, 54.91412 ], [ -2.94146, 54.91445 ], [ -2.94151, 54.91457 ], [ -2.94158, 54.91473 ], [ -2.94161, 54.9148 ], [ -2.94166, 54.91492 ], [ -2.94173, 54.91507 ], [ -2.94181, 54.91528 ], [ -2.94191, 54.91549 ], [ -2.94204, 54.91576 ], [ -2.9421, 54.9159 ], [ -2.94215, 54.91602 ], [ -2.94239, 54.91655 ], [ -2.94243, 54.91664 ], [ -2.94255, 54.91691 ], [ -2.94259, 54.917 ], [ -2.94262, 54.91706 ], [ -2.94271, 54.91728 ], [ -2.9429, 54.9177 ], [ -2.94334, 54.91867 ], [ -2.94363, 54.91933 ], [ -2.94376, 54.91975 ], [ -2.94377, 54.91977 ], [ -2.94388, 54.92012 ], [ -2.94395, 54.92035 ], [ -2.94439, 54.92194 ], [ -2.94442, 54.92206 ], [ -2.9445, 54.92233 ], [ -2.94467, 54.92298 ], [ -2.94469, 54.92303 ], [ -2.94473, 54.92316 ], [ -2.94473, 54.92319 ], [ -2.94476, 54.92328 ], [ -2.9448, 54.92343 ], [ -2.94483, 54.92352 ], [ -2.94484, 54.92358 ], [ -2.94506, 54.92421 ], [ -2.94509, 54.9243 ], [ -2.94516, 54.92447 ], [ -2.9452, 54.92459 ], [ -2.94531, 54.92485 ], [ -2.94545, 54.92515 ], [ -2.9454465, 54.9251467 ], [ -2.94549, 54.92514 ], [ -2.94555, 54.92514 ], [ -2.94559, 54.92514 ], [ -2.9456, 54.92514 ], [ -2.94563, 54.92515 ], [ -2.94564, 54.92515 ], [ -2.94565, 54.92517 ], [ -2.94566, 54.92519 ], [ -2.94572, 54.92529 ], [ -2.94583, 54.92542 ], [ -2.94604, 54.92558 ], [ -2.94622, 54.9257 ], [ -2.94634, 54.92577 ], [ -2.9464, 54.92581 ], [ -2.94644, 54.92583 ], [ -2.94646, 54.92585 ], [ -2.94659, 54.92592 ], [ -2.94667, 54.92597 ], [ -2.94668, 54.92598 ], [ -2.94668, 54.926 ], [ -2.94668, 54.92606 ], [ -2.94668, 54.92609 ], [ -2.94668, 54.92611 ], [ -2.94669, 54.92612 ], [ -2.94671, 54.92613 ], [ -2.94674, 54.92615 ], [ -2.94678, 54.92618 ], [ -2.94685, 54.92621 ], [ -2.94688, 54.92624 ], [ -2.94689, 54.92624 ], [ -2.94688, 54.92624 ], [ -2.94687, 54.92624 ], [ -2.94686, 54.92624 ], [ -2.94684, 54.92624 ], [ -2.94683, 54.92624 ], [ -2.94682, 54.92624 ], [ -2.94682, 54.92625 ], [ -2.94681, 54.92625 ], [ -2.94681, 54.92626 ], [ -2.94681, 54.92631 ], [ -2.94682, 54.92633 ], [ -2.9468155, 54.9263323 ], [ -2.94685, 54.92633 ], [ -2.947, 54.92636 ], [ -2.94705, 54.92637 ], [ -2.94712, 54.92639 ], [ -2.94724, 54.92644 ], [ -2.94736, 54.92649 ], [ -2.94867, 54.92725 ], [ -2.94905, 54.92745 ], [ -2.9491, 54.92748 ], [ -2.94909, 54.92748 ], [ -2.94909, 54.92749 ], [ -2.94908, 54.92749 ], [ -2.94908, 54.9275 ], [ -2.94907, 54.9275 ], [ -2.94907, 54.92751 ], [ -2.94907, 54.92752 ], [ -2.94907, 54.92753 ], [ -2.94907, 54.92754 ], [ -2.94907, 54.92755 ], [ -2.94908, 54.92755 ], [ -2.94908, 54.92756 ], [ -2.94909, 54.92756 ], [ -2.94909, 54.92757 ], [ -2.9491, 54.92757 ], [ -2.94911, 54.92757 ], [ -2.94911, 54.92758 ], [ -2.94912, 54.92758 ], [ -2.94913, 54.92758 ], [ -2.94913, 54.92759 ], [ -2.94914, 54.92759 ], [ -2.94915, 54.92759 ], [ -2.94916, 54.92759 ], [ -2.94917, 54.92759 ], [ -2.94918, 54.92759 ], [ -2.94919, 54.92759 ], [ -2.9492, 54.92759 ], [ -2.94921, 54.92759 ], [ -2.94922, 54.92759 ], [ -2.94923, 54.92759 ], [ -2.94924, 54.92759 ], [ -2.94925, 54.92759 ], [ -2.94925, 54.92758 ], [ -2.94926, 54.92758 ], [ -2.95031, 54.92822 ], [ -2.95045, 54.92831 ], [ -2.95056, 54.92833 ], [ -2.95073, 54.92841 ], [ -2.95092, 54.92856 ], [ -2.95097, 54.92856 ], [ -2.95099, 54.92856 ], [ -2.95101, 54.92856 ], [ -2.95103, 54.92856 ], [ -2.95107, 54.92856 ], [ -2.95116, 54.92857 ], [ -2.95122, 54.92859 ], [ -2.95126, 54.9286 ], [ -2.9513, 54.92862 ], [ -2.95135, 54.92865 ], [ -2.95139, 54.92869 ], [ -2.95142, 54.92872 ], [ -2.95144, 54.92876 ], [ -2.95145, 54.92879 ], [ -2.95146, 54.92882 ], [ -2.95146, 54.92886 ], [ -2.95146, 54.92889 ], [ -2.95145, 54.92893 ], [ -2.95144, 54.92896 ], [ -2.95177, 54.92912 ], [ -2.95185, 54.92917 ], [ -2.95184, 54.92923 ], [ -2.95242, 54.92952 ], [ -2.95273, 54.92964 ], [ -2.95295, 54.92974 ], [ -2.95345, 54.92992 ], [ -2.95368, 54.93001 ], [ -2.95371, 54.93002 ], [ -2.95376, 54.93004 ], [ -2.95447, 54.93033 ], [ -2.95506, 54.93058 ], [ -2.95524, 54.93065 ], [ -2.9555, 54.93075 ], [ -2.95576, 54.93085 ], [ -2.95658, 54.93117 ], [ -2.95736, 54.93149 ], [ -2.95753, 54.93159 ], [ -2.95804, 54.93188 ], [ -2.95857, 54.93226 ], [ -2.95864, 54.9323 ], [ -2.95874, 54.93241 ], [ -2.95911, 54.93276 ], [ -2.95931, 54.93297 ], [ -2.9595, 54.93323 ], [ -2.95958, 54.93337 ], [ -2.95964, 54.93347 ], [ -2.95982, 54.93377 ], [ -2.95993, 54.93389 ], [ -2.9601, 54.934 ], [ -2.96012, 54.93401 ], [ -2.96037, 54.93412 ], [ -2.96063, 54.93426 ], [ -2.9608, 54.93438 ], [ -2.96085, 54.93441 ], [ -2.96098, 54.93452 ], [ -2.96113, 54.93464 ], [ -2.96132, 54.93482 ], [ -2.96172, 54.93521 ], [ -2.96175, 54.93523 ], [ -2.96232, 54.93575 ], [ -2.96249, 54.93591 ], [ -2.96322, 54.93662 ], [ -2.96325, 54.93665 ], [ -2.96374, 54.93706 ], [ -2.96383, 54.93714 ], [ -2.96392, 54.93721 ], [ -2.964, 54.93729 ], [ -2.96409, 54.93736 ], [ -2.96427, 54.93751 ], [ -2.96477, 54.93794 ], [ -2.96529, 54.93841 ], [ -2.96546, 54.93857 ], [ -2.96571, 54.9388 ], [ -2.96579, 54.93887 ], [ -2.96596, 54.93902 ], [ -2.96637, 54.93941 ], [ -2.9666, 54.93962 ], [ -2.96697, 54.93991 ], [ -2.96744, 54.94029 ], [ -2.96785, 54.94057 ], [ -2.96794, 54.94061 ], [ -2.96816, 54.94074 ], [ -2.96854, 54.94089 ], [ -2.96858, 54.94091 ], [ -2.9687, 54.94094 ], [ -2.96892, 54.94099 ], [ -2.9692, 54.94103 ], [ -2.96946, 54.94104 ], [ -2.97052, 54.9411 ], [ -2.9705152, 54.9411 ], [ -2.97064, 54.94149 ], [ -2.97068, 54.94159 ], [ -2.97085, 54.94185 ], [ -2.97109, 54.94215 ], [ -2.97111, 54.94217 ], [ -2.97131, 54.94243 ], [ -2.97146, 54.94267 ], [ -2.97147, 54.94269 ], [ -2.97152, 54.94285 ], [ -2.97158, 54.94305 ], [ -2.97161, 54.94318 ], [ -2.97161, 54.9432 ], [ -2.97165, 54.94342 ], [ -2.97169, 54.9437 ], [ -2.97176, 54.94391 ], [ -2.9718, 54.94407 ], [ -2.97196, 54.94444 ], [ -2.97202, 54.94456 ], [ -2.97244, 54.94517 ], [ -2.97283, 54.94563 ], [ -2.97317, 54.94595 ], [ -2.97352, 54.94621 ], [ -2.97392, 54.94645 ], [ -2.97395, 54.94646 ], [ -2.97409, 54.94653 ], [ -2.97419, 54.94658 ], [ -2.97471, 54.94681 ], [ -2.97555, 54.94714 ], [ -2.97595, 54.94733 ], [ -2.97599, 54.94734 ], [ -2.97635, 54.94754 ], [ -2.97661, 54.94771 ], [ -2.97666, 54.94774 ], [ -2.97681, 54.94785 ], [ -2.97699, 54.94799 ], [ -2.97767, 54.9485 ], [ -2.97776, 54.94856 ], [ -2.97798, 54.94869 ], [ -2.97814, 54.94878 ], [ -2.97852, 54.94897 ], [ -2.97881, 54.9491 ], [ -2.97893, 54.94916 ], [ -2.97941, 54.94936 ], [ -2.97944, 54.94937 ], [ -2.97968, 54.94948 ], [ -2.97993, 54.94959 ], [ -2.97996, 54.94961 ], [ -2.98046, 54.94992 ], [ -2.98072, 54.95012 ], [ -2.9809, 54.9503 ], [ -2.98095, 54.95035 ], [ -2.98115, 54.9506 ], [ -2.98116, 54.95062 ], [ -2.98127, 54.95079 ], [ -2.98128, 54.95081 ], [ -2.98138, 54.95099 ], [ -2.9814, 54.95104 ], [ -2.9815, 54.95131 ], [ -2.98159, 54.9516 ], [ -2.98172, 54.95203 ], [ -2.98181, 54.95222 ], [ -2.9819, 54.95236 ], [ -2.98192, 54.9524 ], [ -2.98202, 54.95253 ], [ -2.98208, 54.9526 ], [ -2.98232, 54.95284 ], [ -2.98252, 54.95298 ], [ -2.98257, 54.95302 ], [ -2.98272, 54.95312 ], [ -2.98276, 54.95315 ], [ -2.98294, 54.95325 ], [ -2.983, 54.95328 ], [ -2.9833, 54.95344 ], [ -2.98341, 54.95349 ], [ -2.98368, 54.95363 ], [ -2.98389, 54.95372 ], [ -2.98407, 54.95381 ], [ -2.98412, 54.95384 ], [ -2.98436, 54.95396 ], [ -2.98448, 54.95402 ], [ -2.98459, 54.95408 ], [ -2.98479, 54.95419 ], [ -2.98482, 54.9542 ], [ -2.98497, 54.9543 ], [ -2.98503, 54.95434 ], [ -2.98529, 54.9545 ], [ -2.98563, 54.95473 ], [ -2.98597, 54.95497 ], [ -2.98623, 54.95516 ], [ -2.98669, 54.95564 ], [ -2.98676, 54.95571 ], [ -2.98697, 54.95596 ], [ -2.98711, 54.95612 ], [ -2.98719, 54.95621 ], [ -2.98724, 54.95628 ], [ -2.98736, 54.95645 ], [ -2.98748, 54.95661 ], [ -2.98771, 54.95692 ], [ -2.98788, 54.9571 ], [ -2.98802, 54.95726 ], [ -2.98816, 54.95742 ], [ -2.98817, 54.95742 ], [ -2.98841, 54.95766 ], [ -2.98849, 54.95773 ], [ -2.98873, 54.95794 ], [ -2.98909, 54.95822 ], [ -2.98938, 54.95847 ], [ -2.98953, 54.95859 ], [ -2.98956, 54.95862 ], [ -2.98972, 54.95877 ], [ -2.98988, 54.95893 ], [ -2.99022, 54.95926 ], [ -2.99073, 54.95968 ], [ -2.99181, 54.96056 ], [ -2.99364, 54.96207 ], [ -2.99379, 54.96218 ], [ -2.99398, 54.96233 ], [ -2.99416, 54.96247 ], [ -2.99442, 54.96267 ], [ -2.99529, 54.96333 ], [ -2.99548, 54.96348 ], [ -2.99598, 54.96386 ], [ -2.99624, 54.96405 ], [ -2.99682, 54.96447 ], [ -2.99702, 54.96461 ], [ -2.99837, 54.9656 ], [ -2.99872, 54.96583 ], [ -2.99895, 54.96595 ], [ -2.99906, 54.96601 ], [ -2.99939, 54.9662 ], [ -2.99961, 54.96633 ], [ -3.00001, 54.96658 ], [ -3.00031, 54.96676 ], [ -3.00045, 54.96687 ], [ -3.00054, 54.96695 ], [ -3.00115, 54.96747 ], [ -3.00166, 54.96792 ], [ -3.0016616, 54.9679245 ], [ -3.00189, 54.96784 ], [ -3.00197, 54.96781 ], [ -3.00217, 54.96777 ], [ -3.0023, 54.96774 ], [ -3.00257, 54.9677 ], [ -3.00309, 54.96769 ], [ -3.00317, 54.96769 ], [ -3.00341, 54.96769 ], [ -3.00365, 54.96769 ], [ -3.00408, 54.96767 ], [ -3.0040784, 54.9676664 ], [ -3.00407, 54.96778 ], [ -3.00403, 54.96821 ], [ -3.00402, 54.96822 ], [ -3.00387, 54.96907 ], [ -3.00382, 54.96951 ], [ -3.00383, 54.96964 ], [ -3.00384, 54.96974 ], [ -3.00386, 54.96982 ], [ -3.00392, 54.97003 ], [ -3.00406, 54.97034 ], [ -3.00407, 54.97038 ], [ -3.00419, 54.97051 ], [ -3.00456, 54.97094 ], [ -3.00461, 54.971 ], [ -3.00499, 54.97141 ], [ -3.00522, 54.97166 ], [ -3.00584, 54.97217 ], [ -3.00637, 54.97255 ], [ -3.00656, 54.97269 ], [ -3.00695, 54.97297 ], [ -3.00714, 54.97311 ], [ -3.00715, 54.97311 ], [ -3.00773, 54.97353 ], [ -3.00792, 54.97368 ], [ -3.00851, 54.9741 ], [ -3.00852, 54.97411 ], [ -3.00887, 54.97432 ], [ -3.00969, 54.97475 ], [ -3.01006, 54.97495 ], [ -3.01036, 54.97511 ], [ -3.01103, 54.97549 ], [ -3.01118, 54.97558 ], [ -3.01226, 54.97605 ], [ -3.01359, 54.97652 ], [ -3.01385, 54.97662 ], [ -3.01412, 54.97671 ], [ -3.01492, 54.977 ], [ -3.01518, 54.9771 ], [ -3.01545, 54.97719 ], [ -3.0155, 54.97721 ], [ -3.01598, 54.97738 ], [ -3.01625, 54.97747 ], [ -3.01706, 54.97775 ], [ -3.01717, 54.97779 ], [ -3.01733, 54.97784 ], [ -3.01849, 54.97822 ], [ -3.01862, 54.97826 ], [ -3.01945, 54.97853 ], [ -3.01999, 54.97871 ], [ -3.0208, 54.97898 ], [ -3.02099, 54.97905 ], [ -3.02108, 54.97907 ], [ -3.02244, 54.97951 ], [ -3.02289, 54.97966 ], [ -3.02335, 54.9798 ], [ -3.02402, 54.98002 ], [ -3.02455, 54.98024 ], [ -3.02481, 54.98034 ], [ -3.02532, 54.98055 ], [ -3.02558, 54.98065 ], [ -3.02609, 54.98085 ], [ -3.02635, 54.98096 ], [ -3.02701, 54.98122 ], [ -3.02735, 54.98139 ], [ -3.0276, 54.9815 ], [ -3.02832, 54.98184 ], [ -3.02935, 54.98239 ], [ -3.03003, 54.98276 ], [ -3.03049, 54.98301 ], [ -3.03095, 54.98325 ], [ -3.0314, 54.9835 ], [ -3.0316, 54.98361 ], [ -3.03163, 54.98362 ], [ -3.03187, 54.98374 ], [ -3.03211, 54.98386 ], [ -3.0322, 54.9839 ], [ -3.03235, 54.98397 ], [ -3.0326, 54.98408 ], [ -3.03284, 54.9842 ], [ -3.03308, 54.98431 ], [ -3.03334, 54.98443 ], [ -3.03382, 54.98465 ], [ -3.03406, 54.98476 ], [ -3.0343, 54.98487 ], [ -3.0343, 54.98488 ], [ -3.03516, 54.98529 ], [ -3.03568, 54.98555 ], [ -3.03619, 54.98582 ], [ -3.03642, 54.98595 ], [ -3.03653, 54.98601 ], [ -3.03664, 54.98607 ], [ -3.03706, 54.98631 ], [ -3.03751, 54.98659 ], [ -3.03779, 54.98676 ], [ -3.03794, 54.98685 ], [ -3.03816, 54.98698 ], [ -3.0383, 54.98707 ], [ -3.03838, 54.98711 ], [ -3.0386, 54.98724 ], [ -3.03878, 54.98733 ], [ -3.03883, 54.98736 ], [ -3.03906, 54.98748 ], [ -3.03911, 54.98751 ], [ -3.0393, 54.98759 ], [ -3.03955, 54.9877 ], [ -3.03993, 54.98786 ], [ -3.04033, 54.98801 ], [ -3.04109, 54.98828 ], [ -3.04112, 54.9883 ], [ -3.04139, 54.98839 ], [ -3.04146, 54.98842 ], [ -3.04166, 54.98849 ], [ -3.04192, 54.98858 ], [ -3.04219, 54.98867 ], [ -3.04246, 54.98877 ], [ -3.04273, 54.98886 ], [ -3.04274, 54.98887 ], [ -3.04299, 54.98896 ], [ -3.04334, 54.98908 ], [ -3.04396, 54.98924 ], [ -3.0444, 54.98932 ], [ -3.04442, 54.98932 ], [ -3.04472, 54.98936 ], [ -3.04485, 54.98938 ], [ -3.04503, 54.98939 ], [ -3.04578, 54.98946 ], [ -3.04608, 54.98949 ], [ -3.04633, 54.98953 ], [ -3.04657, 54.98956 ], [ -3.04665, 54.98958 ], [ -3.04686, 54.98963 ], [ -3.04694, 54.98965 ], [ -3.04729, 54.98976 ], [ -3.04762, 54.9899 ], [ -3.04812, 54.99016 ], [ -3.04859, 54.99045 ], [ -3.04902, 54.99071 ], [ -3.04967, 54.9911 ], [ -3.04977, 54.99117 ], [ -3.04986, 54.99125 ], [ -3.05003, 54.9914 ], [ -3.0501, 54.99146 ], [ -3.05016, 54.99155 ], [ -3.05021, 54.99161 ], [ -3.05025, 54.99169 ], [ -3.05026, 54.99172 ], [ -3.05035, 54.9919 ], [ -3.0503505, 54.9919007 ], [ -3.05064, 54.99187 ], [ -3.0512, 54.99192 ], [ -3.05155, 54.992 ], [ -3.05169, 54.99202 ], [ -3.05209, 54.99214 ], [ -3.05232, 54.99227 ], [ -3.05248, 54.99237 ], [ -3.05281, 54.9926 ], [ -3.05293, 54.9927 ], [ -3.0533, 54.99304 ], [ -3.05356, 54.99327 ], [ -3.05367, 54.99338 ], [ -3.05378, 54.99347 ], [ -3.05416, 54.99374 ], [ -3.05422, 54.99378 ], [ -3.05473, 54.99409 ], [ -3.05486, 54.99415 ], [ -3.05497, 54.9942 ], [ -3.05505, 54.99423 ], [ -3.05513, 54.99426 ], [ -3.05514, 54.99426 ], [ -3.05557, 54.99446 ], [ -3.05588, 54.99456 ], [ -3.05619, 54.99465 ], [ -3.05658, 54.9948 ], [ -3.0572, 54.995 ], [ -3.05724, 54.99501 ], [ -3.05764, 54.99519 ], [ -3.05799, 54.99539 ], [ -3.05806, 54.99543 ], [ -3.05814, 54.99547 ], [ -3.05824, 54.99551 ], [ -3.05837, 54.99555 ], [ -3.05835, 54.99558 ], [ -3.05834, 54.99559 ], [ -3.05833, 54.99561 ], [ -3.05833, 54.99562 ], [ -3.05833, 54.99564 ], [ -3.05834, 54.99566 ], [ -3.05836, 54.9957 ], [ -3.05839, 54.99571 ], [ -3.05841, 54.99572 ], [ -3.05842, 54.99573 ], [ -3.05844, 54.99574 ], [ -3.05847, 54.99575 ], [ -3.05851, 54.99576 ], [ -3.05856, 54.99576 ], [ -3.05859, 54.99576 ], [ -3.05861, 54.99576 ], [ -3.05864, 54.99575 ], [ -3.05866, 54.99574 ], [ -3.05869, 54.99574 ], [ -3.05871, 54.99573 ], [ -3.05873, 54.99572 ], [ -3.05875, 54.9957 ], [ -3.05883, 54.99574 ], [ -3.05891, 54.99577 ], [ -3.05898, 54.9958 ], [ -3.05904, 54.99583 ], [ -3.0591, 54.99587 ], [ -3.05918, 54.99593 ], [ -3.05934, 54.99605 ], [ -3.05958, 54.99625 ], [ -3.06028, 54.99694 ], [ -3.06061, 54.99728 ], [ -3.06065, 54.99732 ], [ -3.06073, 54.99741 ], [ -3.06097, 54.99766 ], [ -3.06103, 54.99773 ], [ -3.06116, 54.99789 ], [ -3.06122, 54.99796 ], [ -3.06129, 54.99805 ], [ -3.06173, 54.99866 ], [ -3.06183, 54.99879 ], [ -3.06216, 54.99934 ], [ -3.06216, 54.99935 ], [ -3.06247, 54.99987 ], [ -3.06257, 55.00002 ], [ -3.06267, 55.00018 ], [ -3.06296, 55.0005 ], [ -3.06301, 55.00055 ], [ -3.06306, 55.00059 ], [ -3.06323, 55.00072 ], [ -3.06344, 55.00088 ], [ -3.06362, 55.001 ], [ -3.06378, 55.00111 ], [ -3.06383, 55.00114 ], [ -3.06394, 55.00121 ], [ -3.06414, 55.00134 ], [ -3.0647, 55.00169 ], [ -3.06475, 55.00172 ], [ -3.06482, 55.00176 ], [ -3.06504, 55.00189 ], [ -3.0655, 55.0021 ], [ -3.06568, 55.00218 ], [ -3.0659, 55.00225 ], [ -3.06599, 55.00229 ], [ -3.06629, 55.0024 ], [ -3.0662881, 55.0023961 ], [ -3.06608, 55.00252 ], [ -3.06602, 55.00254 ], [ -3.06591, 55.00256 ], [ -3.06579, 55.00259 ], [ -3.0655, 55.00264 ], [ -3.06545, 55.00265 ], [ -3.06537, 55.00268 ], [ -3.06526, 55.00271 ], [ -3.06517, 55.00275 ], [ -3.06511, 55.00277 ], [ -3.06502, 55.00282 ], [ -3.06484, 55.00297 ], [ -3.06462, 55.00314 ], [ -3.06433, 55.00342 ], [ -3.06418, 55.00358 ], [ -3.0641, 55.00365 ], [ -3.06402, 55.00373 ], [ -3.06386, 55.00389 ], [ -3.06371, 55.00404 ], [ -3.06354, 55.00421 ], [ -3.06308, 55.00468 ], [ -3.06271, 55.00504 ], [ -3.0627148, 55.0050441 ], [ -3.06329, 55.00521 ], [ -3.0645, 55.00553 ], [ -3.0648, 55.00561 ], [ -3.06512, 55.0057 ], [ -3.06622, 55.00597 ], [ -3.06624, 55.00597 ], [ -3.06691, 55.00614 ], [ -3.06766, 55.00633 ], [ -3.06768, 55.00633 ], [ -3.06794, 55.0064 ], [ -3.06796, 55.00641 ], [ -3.06852, 55.00655 ], [ -3.0688, 55.00662 ], [ -3.06883, 55.00662 ], [ -3.06995, 55.00691 ], [ -3.06997, 55.00691 ], [ -3.07417, 55.00797 ], [ -3.07485, 55.00815 ], [ -3.07512, 55.00821 ], [ -3.07686, 55.00865 ], [ -3.0778, 55.00889 ], [ -3.08028, 55.00952 ], [ -3.08143, 55.00981 ], [ -3.08172, 55.00989 ], [ -3.08471, 55.01065 ], [ -3.08553, 55.01087 ], [ -3.08582, 55.01094 ], [ -3.08754, 55.01138 ], [ -3.08783, 55.01145 ], [ -3.0884, 55.0116 ], [ -3.08869, 55.01167 ], [ -3.08926, 55.01182 ], [ -3.08955, 55.01189 ], [ -3.09069, 55.01218 ], [ -3.09166, 55.01243 ], [ -3.09241, 55.01262 ], [ -3.09356, 55.01292 ], [ -3.09384, 55.01299 ], [ -3.09413, 55.01306 ], [ -3.09528, 55.01335 ], [ -3.09671, 55.01372 ], [ -3.09699, 55.01379 ], [ -3.09728, 55.01387 ], [ -3.09871, 55.01423 ], [ -3.09908, 55.01433 ], [ -3.10022, 55.01461 ], [ -3.10051, 55.01469 ], [ -3.1008, 55.01476 ], [ -3.10108, 55.01483 ], [ -3.10367, 55.01548 ], [ -3.10485, 55.01579 ], [ -3.10571, 55.01601 ], [ -3.10746, 55.01646 ], [ -3.10786, 55.01656 ], [ -3.10951, 55.01697 ], [ -3.10995, 55.0171 ], [ -3.11057, 55.01726 ], [ -3.11088, 55.01734 ], [ -3.11231, 55.01771 ], [ -3.11259, 55.01778 ], [ -3.11403, 55.01815 ], [ -3.11526, 55.01846 ], [ -3.11575, 55.01858 ], [ -3.11778, 55.01909 ], [ -3.11833, 55.01923 ], [ -3.11857, 55.01929 ], [ -3.1195, 55.01955 ], [ -3.12074, 55.01987 ], [ -3.12102, 55.01994 ], [ -3.12153, 55.02007 ], [ -3.12154, 55.02007 ], [ -3.12159, 55.02009 ], [ -3.12182, 55.02015 ], [ -3.12188, 55.02016 ], [ -3.12212, 55.02022 ], [ -3.12273, 55.02039 ], [ -3.12353, 55.02059 ], [ -3.12379, 55.02065 ], [ -3.12439, 55.02081 ], [ -3.12468, 55.02089 ], [ -3.12668, 55.02141 ], [ -3.12754, 55.02163 ], [ -3.12836, 55.02184 ], [ -3.12856, 55.02189 ], [ -3.12881, 55.02197 ], [ -3.12902, 55.02205 ], [ -3.12921, 55.02213 ], [ -3.1294, 55.02223 ], [ -3.12959, 55.02233 ], [ -3.13012, 55.02259 ], [ -3.13033, 55.02269 ], [ -3.13072, 55.02288 ], [ -3.13098, 55.023 ], [ -3.13103, 55.02302 ], [ -3.13111, 55.02304 ], [ -3.13111, 55.02305 ], [ -3.13111, 55.02306 ], [ -3.13111, 55.02307 ], [ -3.13111, 55.02308 ], [ -3.13112, 55.02308 ], [ -3.13112, 55.02309 ], [ -3.13113, 55.02309 ], [ -3.13114, 55.02309 ], [ -3.13115, 55.0231 ], [ -3.13116, 55.0231 ], [ -3.13117, 55.0231 ], [ -3.13118, 55.0231 ], [ -3.13119, 55.0231 ], [ -3.1312, 55.0231 ], [ -3.13121, 55.0231 ], [ -3.13121, 55.02309 ], [ -3.13122, 55.02309 ], [ -3.13123, 55.02309 ], [ -3.13133, 55.02313 ], [ -3.1319, 55.02328 ], [ -3.13247, 55.02343 ], [ -3.13254, 55.02345 ], [ -3.13365, 55.02375 ], [ -3.13377, 55.02378 ], [ -3.13519, 55.02414 ], [ -3.13568, 55.02424 ], [ -3.1374, 55.02463 ], [ -3.13744, 55.02464 ], [ -3.13828, 55.0248 ], [ -3.139, 55.02491 ], [ -3.13929, 55.02496 ], [ -3.13957, 55.025 ], [ -3.14007, 55.02505 ], [ -3.14081, 55.02516 ], [ -3.14109, 55.02519 ], [ -3.14132, 55.02524 ], [ -3.14142, 55.02527 ], [ -3.14151, 55.02529 ], [ -3.14196, 55.02544 ], [ -3.1424, 55.02558 ], [ -3.14262, 55.02566 ], [ -3.14317, 55.02587 ], [ -3.1433, 55.02591 ], [ -3.14338, 55.02594 ], [ -3.14356, 55.02601 ], [ -3.14406, 55.02621 ], [ -3.14447, 55.02635 ], [ -3.14474, 55.02643 ], [ -3.14494, 55.02648 ], [ -3.1454, 55.02661 ], [ -3.14564, 55.02667 ], [ -3.14645, 55.02685 ], [ -3.14659, 55.02687 ], [ -3.14835, 55.02719 ], [ -3.14882, 55.02727 ], [ -3.14924, 55.02735 ], [ -3.14984, 55.02747 ], [ -3.15068, 55.02764 ], [ -3.15075, 55.02765 ], [ -3.15104, 55.02772 ], [ -3.15192, 55.02791 ], [ -3.15221, 55.02797 ], [ -3.15251, 55.02803 ], [ -3.15366, 55.02828 ], [ -3.15427, 55.02842 ], [ -3.15573, 55.02874 ], [ -3.15602, 55.02881 ], [ -3.15653, 55.02892 ], [ -3.15706, 55.02902 ], [ -3.15751, 55.0291 ], [ -3.15763, 55.02912 ], [ -3.15781, 55.02915 ], [ -3.15811, 55.0292 ], [ -3.15841, 55.02925 ], [ -3.15863, 55.02928 ], [ -3.15912, 55.02935 ], [ -3.1602, 55.02953 ], [ -3.16104, 55.02974 ], [ -3.16232, 55.03007 ], [ -3.16412, 55.03056 ], [ -3.16422, 55.03059 ], [ -3.1645, 55.03067 ], [ -3.16591, 55.03106 ], [ -3.16799, 55.03165 ], [ -3.16815, 55.0317 ], [ -3.16884, 55.03194 ], [ -3.16988, 55.03232 ], [ -3.17001, 55.03238 ], [ -3.17065, 55.0327 ], [ -3.17106, 55.03291 ], [ -3.17143, 55.03313 ], [ -3.17171, 55.03329 ], [ -3.17205, 55.03354 ], [ -3.17218, 55.03363 ], [ -3.17224, 55.03368 ], [ -3.17243, 55.03382 ], [ -3.17272, 55.03404 ], [ -3.17308, 55.03434 ], [ -3.17314, 55.03441 ], [ -3.17329, 55.03457 ], [ -3.17339, 55.03468 ], [ -3.17343, 55.03473 ], [ -3.1742, 55.03565 ], [ -3.17425, 55.0357 ], [ -3.17447, 55.03598 ], [ -3.17451, 55.03603 ], [ -3.17479, 55.03635 ], [ -3.17494, 55.03651 ], [ -3.17508, 55.03667 ], [ -3.17521, 55.03682 ], [ -3.17588, 55.03744 ], [ -3.17617, 55.03769 ], [ -3.17637, 55.03786 ], [ -3.17661, 55.03803 ], [ -3.1768, 55.03817 ], [ -3.17712, 55.03841 ], [ -3.17719, 55.03846 ], [ -3.17738, 55.0386 ], [ -3.17777, 55.03888 ], [ -3.17797, 55.03902 ], [ -3.17865, 55.03953 ], [ -3.17925, 55.03993 ], [ -3.18007, 55.04045 ], [ -3.18078, 55.04086 ], [ -3.1811, 55.04103 ], [ -3.18133, 55.04115 ], [ -3.18148, 55.04123 ], [ -3.18156, 55.04127 ], [ -3.18228, 55.04162 ], [ -3.18242, 55.04169 ], [ -3.18252, 55.04174 ], [ -3.18277, 55.04185 ], [ -3.18354, 55.0422 ], [ -3.18386, 55.04233 ], [ -3.1841, 55.04244 ], [ -3.18476, 55.04271 ], [ -3.18565, 55.04305 ], [ -3.18573, 55.04308 ], [ -3.18617, 55.04325 ], [ -3.18643, 55.04336 ], [ -3.18669, 55.04346 ], [ -3.18694, 55.04356 ], [ -3.18923, 55.0445 ], [ -3.18952, 55.04459 ], [ -3.18979, 55.04467 ], [ -3.1909, 55.04502 ], [ -3.19115, 55.04509 ], [ -3.19118, 55.0451 ], [ -3.19177, 55.04521 ], [ -3.19207, 55.04527 ], [ -3.19237, 55.04533 ], [ -3.19356, 55.04555 ], [ -3.19386, 55.04561 ], [ -3.19522, 55.04587 ], [ -3.19564, 55.04596 ], [ -3.1968, 55.0462 ], [ -3.19773, 55.04635 ], [ -3.19803, 55.0464 ], [ -3.19879, 55.04651 ], [ -3.19925, 55.04655 ], [ -3.19933, 55.04656 ], [ -3.201, 55.0466 ], [ -3.20109, 55.04661 ], [ -3.20131, 55.04662 ], [ -3.20163, 55.04664 ], [ -3.20196, 55.04666 ], [ -3.20224, 55.04671 ], [ -3.20292, 55.04684 ], [ -3.20339, 55.04699 ], [ -3.20362, 55.04706 ], [ -3.20367, 55.04708 ], [ -3.2042, 55.04727 ], [ -3.20446, 55.04737 ], [ -3.20447, 55.04737 ], [ -3.20467, 55.0475 ], [ -3.20511, 55.04779 ], [ -3.20546, 55.04806 ], [ -3.20554, 55.04812 ], [ -3.20578, 55.0483 ], [ -3.20585, 55.04835 ], [ -3.20586, 55.04836 ], [ -3.20605, 55.04851 ], [ -3.20624, 55.04867 ], [ -3.20658, 55.04895 ], [ -3.20677, 55.0491 ], [ -3.20687, 55.04918 ], [ -3.20697, 55.04924 ], [ -3.20717, 55.04936 ], [ -3.20762, 55.04963 ], [ -3.20828, 55.04989 ], [ -3.20867, 55.05002 ], [ -3.20871, 55.05003 ], [ -3.20892, 55.05013 ], [ -3.20898, 55.05016 ], [ -3.20917, 55.05024 ], [ -3.20981, 55.05051 ], [ -3.21007, 55.05061 ], [ -3.21199, 55.05136 ], [ -3.21275, 55.05168 ], [ -3.21301, 55.05178 ], [ -3.21332, 55.05191 ], [ -3.21377, 55.0521 ], [ -3.21388, 55.05215 ], [ -3.21469, 55.05248 ], [ -3.21516, 55.05267 ], [ -3.21592, 55.05299 ], [ -3.21617, 55.0531 ], [ -3.21633, 55.05316 ], [ -3.21668, 55.05331 ], [ -3.21694, 55.05341 ], [ -3.2172, 55.05351 ], [ -3.21745, 55.05362 ], [ -3.21793, 55.05381 ], [ -3.21826, 55.05394 ], [ -3.21846, 55.05401 ], [ -3.21875, 55.05412 ], [ -3.21901, 55.05422 ], [ -3.21928, 55.05432 ], [ -3.21994, 55.05457 ], [ -3.22066, 55.05489 ], [ -3.22067, 55.0549 ], [ -3.22094, 55.05499 ], [ -3.22121, 55.05509 ], [ -3.22147, 55.05518 ], [ -3.22174, 55.05527 ], [ -3.2218, 55.0553 ], [ -3.22201, 55.05537 ], [ -3.22228, 55.05546 ], [ -3.22255, 55.05555 ], [ -3.2231, 55.05573 ], [ -3.22347, 55.05585 ], [ -3.22364, 55.05591 ], [ -3.22447, 55.05616 ], [ -3.22474, 55.05625 ], [ -3.22475, 55.05625 ], [ -3.22503, 55.05633 ], [ -3.22531, 55.05641 ], [ -3.22559, 55.05649 ], [ -3.22587, 55.05657 ], [ -3.22614, 55.05665 ], [ -3.22615, 55.05665 ], [ -3.22643, 55.05673 ], [ -3.22721, 55.05694 ], [ -3.22784, 55.05713 ], [ -3.22828, 55.05726 ], [ -3.22956, 55.05757 ], [ -3.22985, 55.05764 ], [ -3.22986, 55.05765 ], [ -3.23121, 55.05791 ], [ -3.23208, 55.05811 ], [ -3.23274, 55.05821 ], [ -3.23306, 55.05824 ], [ -3.23351, 55.05827 ], [ -3.23414, 55.05831 ], [ -3.23522, 55.05831 ], [ -3.23606, 55.05831 ], [ -3.23714, 55.05822 ], [ -3.23738, 55.0582 ], [ -3.23815, 55.05811 ], [ -3.23924, 55.05787 ], [ -3.24034, 55.05763 ], [ -3.24041, 55.05761 ], [ -3.2413, 55.05744 ], [ -3.2416, 55.05738 ], [ -3.24278, 55.05715 ], [ -3.24301, 55.05711 ], [ -3.24472, 55.05687 ], [ -3.24485, 55.05687 ], [ -3.24516, 55.05685 ], [ -3.24641, 55.05679 ], [ -3.24664, 55.05678 ], [ -3.24826, 55.05684 ], [ -3.24829, 55.05684 ], [ -3.2486, 55.05687 ], [ -3.24891, 55.05691 ], [ -3.24976, 55.057 ], [ -3.25043, 55.05713 ], [ -3.25064, 55.05717 ], [ -3.25072, 55.05719 ], [ -3.25118, 55.05729 ], [ -3.25129, 55.05734 ], [ -3.25153, 55.05745 ], [ -3.25178, 55.05757 ], [ -3.25181, 55.05758 ], [ -3.25201, 55.05769 ], [ -3.25246, 55.05794 ], [ -3.25247, 55.05794 ], [ -3.2527, 55.05805 ], [ -3.25294, 55.05817 ], [ -3.25314, 55.05826 ], [ -3.25332, 55.05832 ], [ -3.25383, 55.05841 ], [ -3.25427, 55.05847 ], [ -3.25443, 55.05848 ], [ -3.25458, 55.05848 ], [ -3.25488, 55.05847 ], [ -3.25494, 55.05847 ], [ -3.25508, 55.05846 ], [ -3.25524, 55.05843 ], [ -3.25539, 55.05841 ], [ -3.25555, 55.05838 ], [ -3.25568, 55.05836 ], [ -3.25606, 55.05826 ], [ -3.25729, 55.05793 ], [ -3.25755, 55.05787 ], [ -3.2577, 55.05785 ], [ -3.25785, 55.05783 ], [ -3.25798, 55.05782 ], [ -3.25806, 55.05782 ], [ -3.25827, 55.05783 ], [ -3.25866, 55.05786 ], [ -3.2589, 55.0579 ], [ -3.25991, 55.05812 ], [ -3.26067, 55.05826 ], [ -3.26079, 55.05829 ], [ -3.26109, 55.05836 ], [ -3.26124, 55.0584 ], [ -3.26147, 55.05844 ], [ -3.26167, 55.05847 ], [ -3.26184, 55.05848 ], [ -3.26199, 55.05849 ], [ -3.26371, 55.05847 ], [ -3.26386, 55.05847 ], [ -3.2639, 55.05847 ], [ -3.26412, 55.0585 ], [ -3.26418, 55.05851 ], [ -3.26433, 55.05854 ], [ -3.26453, 55.0586 ], [ -3.26524, 55.05888 ], [ -3.26561, 55.05904 ], [ -3.26586, 55.05914 ], [ -3.26678, 55.05958 ], [ -3.2677, 55.06002 ], [ -3.26791, 55.06015 ], [ -3.26976, 55.0613 ], [ -3.27003, 55.06147 ], [ -3.2701, 55.06151 ], [ -3.27038, 55.06172 ], [ -3.27117, 55.06233 ], [ -3.27136, 55.06248 ], [ -3.27159, 55.06266 ], [ -3.27213, 55.0631 ], [ -3.27226, 55.06321 ], [ -3.27246, 55.06338 ], [ -3.27249, 55.06337 ], [ -3.2725, 55.06336 ], [ -3.27251, 55.06336 ], [ -3.27252, 55.06336 ], [ -3.27253, 55.06336 ], [ -3.27254, 55.06336 ], [ -3.27255, 55.06336 ], [ -3.27256, 55.06336 ], [ -3.27257, 55.06336 ], [ -3.27258, 55.06336 ], [ -3.27259, 55.06336 ], [ -3.2726, 55.06336 ], [ -3.27261, 55.06336 ], [ -3.27262, 55.06336 ], [ -3.27263, 55.06336 ], [ -3.27264, 55.06337 ], [ -3.27265, 55.06337 ], [ -3.27266, 55.06337 ], [ -3.27267, 55.06337 ], [ -3.27268, 55.06338 ], [ -3.27269, 55.06338 ], [ -3.2727, 55.06339 ], [ -3.27271, 55.06339 ], [ -3.27271, 55.0634 ], [ -3.27272, 55.0634 ], [ -3.27273, 55.06341 ], [ -3.27274, 55.06341 ], [ -3.27274, 55.06342 ], [ -3.27275, 55.06343 ], [ -3.27275, 55.06344 ], [ -3.27276, 55.06344 ], [ -3.27276, 55.06345 ], [ -3.27276, 55.06346 ], [ -3.27276, 55.06347 ], [ -3.27276, 55.06348 ], [ -3.27276, 55.06349 ], [ -3.27275, 55.0635 ], [ -3.27275, 55.06352 ], [ -3.2733, 55.06369 ], [ -3.2746, 55.06418 ], [ -3.27523, 55.06438 ], [ -3.2755, 55.06446 ], [ -3.27882, 55.06549 ], [ -3.2791, 55.06558 ], [ -3.27937, 55.06566 ], [ -3.27978, 55.06579 ], [ -3.27992, 55.06584 ], [ -3.28046, 55.06602 ], [ -3.28154, 55.06639 ], [ -3.28181, 55.06649 ], [ -3.28209, 55.06658 ], [ -3.28263, 55.06677 ], [ -3.28451, 55.06742 ], [ -3.28478, 55.06751 ], [ -3.28505, 55.06761 ], [ -3.28551, 55.06776 ], [ -3.28559, 55.06779 ], [ -3.28586, 55.06788 ], [ -3.28667, 55.06816 ], [ -3.28694, 55.06825 ], [ -3.28835, 55.06874 ], [ -3.28964, 55.06917 ], [ -3.28991, 55.06926 ], [ -3.29098, 55.06962 ], [ -3.291, 55.06962 ], [ -3.2918, 55.0699 ], [ -3.29207, 55.07 ], [ -3.29368, 55.07056 ], [ -3.29393, 55.07065 ], [ -3.29395, 55.07065 ], [ -3.29422, 55.07074 ], [ -3.29624, 55.0714 ], [ -3.29625, 55.07141 ], [ -3.29725, 55.07169 ], [ -3.29751, 55.07177 ], [ -3.29753, 55.07177 ], [ -3.29809, 55.07194 ], [ -3.29837, 55.07202 ], [ -3.29917, 55.07225 ], [ -3.3002, 55.07254 ], [ -3.30045, 55.07262 ], [ -3.30137, 55.07289 ], [ -3.30156, 55.07295 ], [ -3.30184, 55.07304 ], [ -3.30274, 55.07331 ], [ -3.30376, 55.07365 ], [ -3.30402, 55.07375 ], [ -3.30429, 55.07385 ], [ -3.30482, 55.07404 ], [ -3.30528, 55.07421 ], [ -3.30658, 55.07474 ], [ -3.30686, 55.07487 ], [ -3.30855, 55.07566 ], [ -3.3091, 55.07595 ], [ -3.30956, 55.0762 ], [ -3.31007, 55.07647 ], [ -3.31087, 55.07697 ], [ -3.31109, 55.0771 ], [ -3.31129, 55.07723 ], [ -3.3113, 55.07723 ], [ -3.31173, 55.0775 ], [ -3.31195, 55.07764 ], [ -3.31253, 55.07805 ], [ -3.31274, 55.0782 ], [ -3.31293, 55.07834 ], [ -3.31313, 55.07848 ], [ -3.31347, 55.07872 ], [ -3.31388, 55.07906 ], [ -3.31457, 55.07963 ], [ -3.31578, 55.08077 ], [ -3.31579, 55.08078 ], [ -3.31622, 55.08124 ], [ -3.31663, 55.08169 ], [ -3.31703, 55.08222 ], [ -3.31716, 55.08238 ], [ -3.31745, 55.08276 ], [ -3.31763, 55.08305 ], [ -3.31775, 55.08324 ], [ -3.31806, 55.08373 ], [ -3.31822, 55.08398 ], [ -3.31824, 55.08404 ], [ -3.31848, 55.08456 ], [ -3.31857, 55.08473 ], [ -3.31865, 55.08491 ], [ -3.31905, 55.08585 ], [ -3.31909, 55.08595 ], [ -3.3193, 55.08648 ], [ -3.31947, 55.0869 ], [ -3.31983, 55.08783 ], [ -3.3199, 55.08801 ], [ -3.31998, 55.08823 ], [ -3.3201, 55.08854 ], [ -3.32024, 55.08889 ], [ -3.32032, 55.08909 ], [ -3.32038, 55.08924 ], [ -3.32067, 55.08994 ], [ -3.3207, 55.09001 ], [ -3.32075, 55.09011 ], [ -3.32087, 55.09041 ], [ -3.3211, 55.0908 ], [ -3.3212, 55.09097 ], [ -3.32129, 55.09111 ], [ -3.32131, 55.09114 ], [ -3.32144, 55.09131 ], [ -3.32155, 55.09146 ], [ -3.3217, 55.09163 ], [ -3.32183, 55.09179 ], [ -3.32184, 55.0918 ], [ -3.32199, 55.09195 ], [ -3.32207, 55.09204 ], [ -3.32232, 55.09228 ], [ -3.32279, 55.09272 ], [ -3.32379, 55.09342 ], [ -3.32385, 55.09346 ], [ -3.32449, 55.09383 ], [ -3.32468, 55.09393 ], [ -3.3249, 55.09404 ], [ -3.32491, 55.09405 ], [ -3.32515, 55.09417 ], [ -3.32516, 55.09417 ], [ -3.32532, 55.09425 ], [ -3.32615, 55.0946 ], [ -3.32713, 55.09497 ], [ -3.3274, 55.09507 ], [ -3.32753, 55.09512 ], [ -3.32766, 55.09517 ], [ -3.32847, 55.09544 ], [ -3.32956, 55.09581 ], [ -3.33003, 55.09597 ], [ -3.33101, 55.09631 ], [ -3.33111, 55.09635 ], [ -3.3318, 55.09659 ], [ -3.33192, 55.09662 ], [ -3.3325, 55.0968 ], [ -3.3333, 55.09705 ], [ -3.33357, 55.09714 ], [ -3.33369, 55.09718 ], [ -3.33384, 55.09723 ], [ -3.33405, 55.09731 ], [ -3.33441, 55.09745 ], [ -3.33485, 55.09766 ], [ -3.33527, 55.09788 ], [ -3.33529, 55.0979 ], [ -3.33595, 55.09833 ], [ -3.33606, 55.09842 ], [ -3.33626, 55.09859 ], [ -3.33634, 55.09866 ], [ -3.33656, 55.09885 ], [ -3.3369, 55.09923 ], [ -3.33745, 55.09988 ], [ -3.33759, 55.10004 ], [ -3.33762, 55.10007 ], [ -3.33775, 55.10019 ], [ -3.33798, 55.1004 ], [ -3.3381, 55.10049 ], [ -3.33826, 55.10062 ], [ -3.33829, 55.10064 ], [ -3.33849, 55.10077 ], [ -3.3387, 55.10091 ], [ -3.33992, 55.10173 ], [ -3.34033, 55.102 ], [ -3.34053, 55.10214 ], [ -3.34074, 55.10228 ], [ -3.34194, 55.10308 ], [ -3.34228, 55.10332 ], [ -3.34311, 55.10386 ], [ -3.34442, 55.10472 ], [ -3.34525, 55.10527 ], [ -3.34546, 55.1054 ], [ -3.34566, 55.10554 ], [ -3.3469, 55.10635 ], [ -3.34693, 55.10637 ], [ -3.34732, 55.10658 ], [ -3.34757, 55.10665 ], [ -3.3478, 55.10669 ], [ -3.34801, 55.1067 ], [ -3.34843, 55.10668 ], [ -3.3484277, 55.1066776 ], [ -3.34873, 55.10721 ], [ -3.34886, 55.10735 ], [ -3.349, 55.10751 ], [ -3.34935, 55.10786 ], [ -3.34984, 55.10821 ], [ -3.35036, 55.1086 ], [ -3.35048, 55.10867 ], [ -3.35108, 55.10903 ], [ -3.35185, 55.10935 ], [ -3.35209, 55.10945 ], [ -3.35231, 55.10952 ], [ -3.35234, 55.1095 ], [ -3.35235, 55.1095 ], [ -3.35236, 55.1095 ], [ -3.35236, 55.10949 ], [ -3.35237, 55.10949 ], [ -3.35238, 55.10949 ], [ -3.35239, 55.10949 ], [ -3.3524, 55.10948 ], [ -3.35241, 55.10948 ], [ -3.35242, 55.10948 ], [ -3.35243, 55.10948 ], [ -3.35244, 55.10948 ], [ -3.35245, 55.10948 ], [ -3.35246, 55.10948 ], [ -3.35247, 55.10948 ], [ -3.35248, 55.10948 ], [ -3.35249, 55.10948 ], [ -3.3525, 55.10948 ], [ -3.35251, 55.10948 ], [ -3.35252, 55.10948 ], [ -3.35253, 55.10949 ], [ -3.35254, 55.10949 ], [ -3.35255, 55.10949 ], [ -3.35257, 55.1095 ], [ -3.35259, 55.10951 ], [ -3.3526, 55.10951 ], [ -3.3526, 55.10952 ], [ -3.35261, 55.10952 ], [ -3.35261, 55.10953 ], [ -3.35262, 55.10953 ], [ -3.35263, 55.10954 ], [ -3.35263, 55.10955 ], [ -3.35264, 55.10955 ], [ -3.35264, 55.10956 ], [ -3.35264, 55.10957 ], [ -3.35264, 55.10958 ], [ -3.35264, 55.10959 ], [ -3.35264, 55.1096 ], [ -3.35264, 55.10961 ], [ -3.35263, 55.10962 ], [ -3.35263, 55.10963 ], [ -3.35262, 55.10964 ], [ -3.35261, 55.10964 ], [ -3.35261, 55.10965 ], [ -3.3526, 55.10965 ], [ -3.35258, 55.10966 ], [ -3.35274, 55.10975 ], [ -3.35287, 55.10987 ], [ -3.35329, 55.1101 ], [ -3.35333, 55.11013 ], [ -3.35336, 55.11014 ], [ -3.35358, 55.11028 ], [ -3.35381, 55.1104 ], [ -3.35401, 55.1105 ], [ -3.35404, 55.11052 ], [ -3.35432, 55.11067 ], [ -3.35462, 55.11084 ], [ -3.35493, 55.11102 ], [ -3.3553, 55.11129 ], [ -3.35555, 55.11147 ], [ -3.35604, 55.1119 ], [ -3.35608, 55.11194 ], [ -3.35618, 55.11203 ], [ -3.35633, 55.11219 ], [ -3.35635, 55.11221 ], [ -3.35651, 55.11237 ], [ -3.35652, 55.11237 ], [ -3.35687, 55.11284 ], [ -3.357, 55.113 ], [ -3.35702, 55.11302 ], [ -3.35789, 55.11415 ], [ -3.35791, 55.11417 ], [ -3.35797, 55.11425 ], [ -3.35802, 55.11432 ], [ -3.35804, 55.11434 ], [ -3.35841, 55.11484 ], [ -3.35963, 55.11647 ], [ -3.36001, 55.11696 ], [ -3.36013, 55.11713 ], [ -3.36022, 55.11725 ], [ -3.36044, 55.11754 ], [ -3.3605, 55.11762 ], [ -3.36061, 55.11779 ], [ -3.36084, 55.11813 ], [ -3.36088, 55.11818 ], [ -3.36094, 55.1183 ], [ -3.36105, 55.11847 ], [ -3.36115, 55.11864 ], [ -3.36125, 55.11881 ], [ -3.36136, 55.119 ], [ -3.36145, 55.11915 ], [ -3.36155, 55.11932 ], [ -3.36185, 55.11983 ], [ -3.36189, 55.1199 ], [ -3.36192, 55.11998 ], [ -3.36215, 55.1205 ], [ -3.36239, 55.12103 ], [ -3.36247, 55.1212 ], [ -3.36262, 55.12155 ], [ -3.3627, 55.12172 ], [ -3.36273, 55.12181 ], [ -3.36276, 55.1219 ], [ -3.36282, 55.12208 ], [ -3.36288, 55.12225 ], [ -3.36343, 55.12397 ], [ -3.36346, 55.12406 ], [ -3.36356, 55.12478 ], [ -3.36359, 55.12496 ], [ -3.36361, 55.12514 ], [ -3.36366, 55.1255 ], [ -3.36367, 55.12552 ], [ -3.36369, 55.12586 ], [ -3.36372, 55.12622 ], [ -3.36373, 55.1264 ], [ -3.36377, 55.12694 ], [ -3.36379, 55.1272 ], [ -3.36379, 55.1273 ], [ -3.36364, 55.12919 ], [ -3.3636, 55.12963 ], [ -3.36359, 55.12981 ], [ -3.36356, 55.13017 ], [ -3.36354, 55.13035 ], [ -3.36353, 55.13053 ], [ -3.36349, 55.13107 ], [ -3.36351, 55.13179 ], [ -3.36352, 55.13221 ], [ -3.36358, 55.13263 ], [ -3.36365, 55.13316 ], [ -3.36368, 55.13334 ], [ -3.36371, 55.13356 ], [ -3.36374, 55.13362 ], [ -3.36372, 55.13363 ], [ -3.36371, 55.13363 ], [ -3.3637, 55.13363 ], [ -3.36369, 55.13363 ], [ -3.36368, 55.13364 ], [ -3.36367, 55.13364 ], [ -3.36366, 55.13364 ], [ -3.36365, 55.13365 ], [ -3.36364, 55.13365 ], [ -3.36363, 55.13365 ], [ -3.36363, 55.13366 ], [ -3.36362, 55.13366 ], [ -3.36362, 55.13367 ], [ -3.36361, 55.13367 ], [ -3.3636, 55.13367 ], [ -3.3636, 55.13368 ], [ -3.36359, 55.13368 ], [ -3.36359, 55.13369 ], [ -3.36358, 55.1337 ], [ -3.36358, 55.13371 ], [ -3.36358, 55.13372 ], [ -3.36357, 55.13372 ], [ -3.36357, 55.13373 ], [ -3.36357, 55.13374 ], [ -3.36357, 55.13375 ], [ -3.36358, 55.13377 ], [ -3.36359, 55.13378 ], [ -3.3636, 55.13379 ], [ -3.36361, 55.13379 ], [ -3.36361, 55.1338 ], [ -3.36362, 55.1338 ], [ -3.36362, 55.13381 ], [ -3.36363, 55.13381 ], [ -3.36364, 55.13381 ], [ -3.36364, 55.13382 ], [ -3.36365, 55.13382 ], [ -3.36366, 55.13382 ], [ -3.36367, 55.13383 ], [ -3.36368, 55.13383 ], [ -3.36369, 55.13384 ], [ -3.3637, 55.13384 ], [ -3.36371, 55.13384 ], [ -3.36372, 55.13384 ], [ -3.36373, 55.13384 ], [ -3.36374, 55.13384 ], [ -3.36375, 55.13384 ], [ -3.36376, 55.13384 ], [ -3.36378, 55.13384 ], [ -3.3638, 55.13404 ], [ -3.36407, 55.13509 ], [ -3.36422, 55.13569 ], [ -3.36449, 55.1364 ], [ -3.36456, 55.13657 ], [ -3.36462, 55.13675 ], [ -3.36489, 55.13744 ], [ -3.36505, 55.1378 ], [ -3.36531, 55.13839 ], [ -3.36538, 55.13849 ], [ -3.36581, 55.13913 ], [ -3.36646, 55.13978 ], [ -3.36667, 55.13997 ], [ -3.36676, 55.14003 ], [ -3.36701, 55.14021 ], [ -3.36721, 55.14035 ], [ -3.36731, 55.14043 ], [ -3.36758, 55.14059 ], [ -3.36763, 55.14062 ], [ -3.36807, 55.14088 ], [ -3.36823, 55.14097 ], [ -3.36898, 55.14137 ], [ -3.36944, 55.14162 ], [ -3.3699, 55.14187 ], [ -3.37013, 55.14199 ], [ -3.37036, 55.14211 ], [ -3.37102, 55.14247 ], [ -3.37173, 55.14282 ], [ -3.37244, 55.14318 ], [ -3.37292, 55.14341 ], [ -3.37311, 55.14351 ], [ -3.37315, 55.14353 ], [ -3.37364, 55.14376 ], [ -3.37515, 55.14447 ], [ -3.37532, 55.14455 ], [ -3.37588, 55.14481 ], [ -3.37705, 55.14534 ], [ -3.37729, 55.14548 ], [ -3.37849, 55.14623 ], [ -3.37863, 55.14631 ], [ -3.37954, 55.14704 ], [ -3.37972, 55.14719 ], [ -3.37973, 55.1472 ], [ -3.37987, 55.14735 ], [ -3.38002, 55.14751 ], [ -3.38032, 55.14782 ], [ -3.38072, 55.14825 ], [ -3.38087, 55.14847 ], [ -3.38127, 55.14907 ], [ -3.38146, 55.14941 ], [ -3.38149, 55.14946 ], [ -3.38154, 55.14958 ], [ -3.38163, 55.14982 ], [ -3.38168, 55.14997 ], [ -3.38173, 55.15011 ], [ -3.38177, 55.15021 ], [ -3.3818, 55.15029 ], [ -3.38186, 55.15042 ], [ -3.3823, 55.15173 ], [ -3.38247, 55.15217 ], [ -3.38297, 55.15344 ], [ -3.38368, 55.15551 ], [ -3.38458, 55.15784 ], [ -3.38459, 55.15787 ], [ -3.38525, 55.15965 ], [ -3.38569, 55.16088 ], [ -3.38584, 55.16131 ], [ -3.38587, 55.16141 ], [ -3.386, 55.16177 ], [ -3.38607, 55.16198 ], [ -3.3865, 55.16308 ], [ -3.38671, 55.1636 ], [ -3.38677, 55.16378 ], [ -3.38712, 55.16466 ], [ -3.38712, 55.16468 ], [ -3.38722, 55.16483 ], [ -3.38754, 55.16533 ], [ -3.38776, 55.16567 ], [ -3.38808, 55.16618 ], [ -3.38812, 55.16625 ], [ -3.38867, 55.16681 ], [ -3.38943, 55.1676 ], [ -3.38973, 55.16791 ], [ -3.38988, 55.16807 ], [ -3.39004, 55.16823 ], [ -3.39019, 55.16839 ], [ -3.39083, 55.16905 ], [ -3.3937, 55.172 ], [ -3.39381, 55.17212 ], [ -3.39387, 55.17216 ], [ -3.39548, 55.17336 ], [ -3.39589, 55.17359 ], [ -3.39681, 55.17411 ], [ -3.39947, 55.17561 ], [ -3.401, 55.17648 ], [ -3.40202, 55.17725 ], [ -3.40306, 55.17818 ], [ -3.4035, 55.17879 ], [ -3.40362, 55.17895 ], [ -3.40409, 55.17958 ], [ -3.40433, 55.18014 ], [ -3.40456, 55.18067 ], [ -3.40512, 55.18247 ], [ -3.4053, 55.18304 ], [ -3.40556, 55.18389 ], [ -3.40623, 55.18609 ], [ -3.40626, 55.18619 ], [ -3.40628, 55.18627 ], [ -3.40654, 55.18711 ], [ -3.40683, 55.18804 ], [ -3.40689, 55.18823 ], [ -3.4069, 55.18831 ], [ -3.40691, 55.18841 ], [ -3.40688, 55.18852 ], [ -3.40684, 55.18862 ], [ -3.40682, 55.18867 ], [ -3.4068213, 55.18867 ], [ -3.40683, 55.18871 ], [ -3.40685, 55.18876 ], [ -3.40687, 55.1888 ], [ -3.40688, 55.18884 ], [ -3.40689, 55.18888 ], [ -3.40691, 55.18888 ], [ -3.40692, 55.18889 ], [ -3.40693, 55.18889 ], [ -3.40693, 55.1889 ], [ -3.40694, 55.1889 ], [ -3.40695, 55.1889 ], [ -3.40695, 55.18891 ], [ -3.40696, 55.18891 ], [ -3.40696, 55.18892 ], [ -3.40697, 55.18892 ], [ -3.40697, 55.18893 ], [ -3.40698, 55.18893 ], [ -3.40698, 55.18894 ], [ -3.40699, 55.18894 ], [ -3.40699, 55.18895 ], [ -3.40699, 55.18896 ], [ -3.40699, 55.18897 ], [ -3.40699, 55.18898 ], [ -3.40699, 55.18899 ], [ -3.40699, 55.189 ], [ -3.40699, 55.18901 ], [ -3.40698, 55.18901 ], [ -3.40698, 55.18902 ], [ -3.40697, 55.18903 ], [ -3.40696, 55.18904 ], [ -3.40711, 55.18924 ], [ -3.40717, 55.1893 ], [ -3.40719, 55.18936 ], [ -3.40725, 55.18945 ], [ -3.40729, 55.18955 ], [ -3.40737, 55.18978 ], [ -3.40773, 55.19087 ], [ -3.40785, 55.19124 ], [ -3.4082, 55.19238 ], [ -3.40854, 55.19347 ], [ -3.40859, 55.19365 ], [ -3.40912, 55.19537 ], [ -3.40925, 55.19578 ], [ -3.40931, 55.19595 ], [ -3.40987, 55.19772 ], [ -3.40994, 55.19796 ], [ -3.41011, 55.19849 ], [ -3.41017, 55.19867 ], [ -3.41039, 55.19938 ], [ -3.41046, 55.19954 ], [ -3.41074, 55.20042 ], [ -3.41081, 55.20064 ], [ -3.41089, 55.20095 ], [ -3.41104, 55.20154 ], [ -3.41105, 55.2016 ], [ -3.41106, 55.20166 ], [ -3.41107, 55.2017 ], [ -3.41111, 55.20184 ], [ -3.41114, 55.2022 ], [ -3.41115, 55.20238 ], [ -3.41116, 55.20247 ], [ -3.41118, 55.20281 ], [ -3.41118, 55.20292 ], [ -3.41117, 55.20294 ], [ -3.41118, 55.2031 ], [ -3.41118, 55.20328 ], [ -3.41119, 55.2034 ], [ -3.41116, 55.20385 ], [ -3.41109, 55.20436 ], [ -3.41105, 55.20468 ], [ -3.41105, 55.20472 ], [ -3.41094, 55.20525 ], [ -3.41092, 55.20535 ], [ -3.41091, 55.20543 ], [ -3.41089, 55.20561 ], [ -3.41088, 55.20579 ], [ -3.41087, 55.20584 ], [ -3.41085, 55.20615 ], [ -3.41085, 55.20623 ], [ -3.41086, 55.20633 ], [ -3.41093, 55.2068 ], [ -3.41099, 55.20702 ], [ -3.41113, 55.20736 ], [ -3.41125, 55.20756 ], [ -3.4114, 55.20782 ], [ -3.41146, 55.2079 ], [ -3.41166, 55.20819 ], [ -3.41197, 55.20856 ], [ -3.41221, 55.20884 ], [ -3.41239, 55.20899 ], [ -3.41248, 55.20906 ], [ -3.41253, 55.2091 ], [ -3.41283, 55.20933 ], [ -3.41288, 55.20936 ], [ -3.41334, 55.20983 ], [ -3.41349, 55.20999 ], [ -3.41358, 55.21007 ], [ -3.41372, 55.21024 ], [ -3.41396, 55.21054 ], [ -3.4141, 55.2108 ], [ -3.41421, 55.21098 ], [ -3.41422, 55.21099 ], [ -3.4143, 55.21116 ], [ -3.41434, 55.21125 ], [ -3.41437, 55.21133 ], [ -3.41443, 55.21151 ], [ -3.41449, 55.21169 ], [ -3.41455, 55.21186 ], [ -3.41457, 55.21193 ], [ -3.41461, 55.21204 ], [ -3.41469, 55.21229 ], [ -3.41473, 55.21244 ], [ -3.41492, 55.21309 ], [ -3.41495, 55.21319 ], [ -3.41496, 55.21327 ], [ -3.41512, 55.21416 ], [ -3.41525, 55.21488 ], [ -3.41526, 55.21491 ], [ -3.41551, 55.21584 ], [ -3.41573, 55.21665 ], [ -3.41574, 55.21672 ], [ -3.41577, 55.2169 ], [ -3.41585, 55.21744 ], [ -3.41592, 55.21792 ], [ -3.41593, 55.218 ], [ -3.41594, 55.21808 ], [ -3.41595, 55.21812 ], [ -3.41594, 55.21916 ], [ -3.41594, 55.2195 ], [ -3.41589, 55.22005 ], [ -3.4158, 55.22096 ], [ -3.41568, 55.22209 ], [ -3.41566, 55.22227 ], [ -3.41564, 55.22245 ], [ -3.4156, 55.22273 ], [ -3.41553, 55.22352 ], [ -3.41544, 55.22442 ], [ -3.41542, 55.2246 ], [ -3.41537, 55.22513 ], [ -3.41537, 55.22514 ], [ -3.41514, 55.22603 ], [ -3.41509, 55.22621 ], [ -3.41496, 55.22674 ], [ -3.41494, 55.22681 ], [ -3.41472, 55.22745 ], [ -3.41466, 55.22763 ], [ -3.41429, 55.22869 ], [ -3.41417, 55.22904 ], [ -3.41411, 55.22921 ], [ -3.41406, 55.22937 ], [ -3.41406, 55.22939 ], [ -3.41373, 55.231 ], [ -3.41369, 55.23118 ], [ -3.41348, 55.23225 ], [ -3.41346, 55.23232 ], [ -3.41344, 55.23243 ], [ -3.41339, 55.23261 ], [ -3.41307, 55.23399 ], [ -3.41287, 55.2345 ], [ -3.41284, 55.23456 ], [ -3.41276, 55.23473 ], [ -3.41238, 55.23553 ], [ -3.41189, 55.23655 ], [ -3.4118, 55.23672 ], [ -3.41112, 55.23804 ], [ -3.41099, 55.23848 ], [ -3.41098, 55.2385 ], [ -3.41081, 55.23907 ], [ -3.41077, 55.23921 ], [ -3.41058, 55.24011 ], [ -3.41055, 55.24029 ], [ -3.41051, 55.24047 ], [ -3.41048, 55.24064 ], [ -3.41032, 55.24141 ], [ -3.41021, 55.24244 ], [ -3.41019, 55.24261 ], [ -3.41015, 55.24296 ], [ -3.41014, 55.24315 ], [ -3.41012, 55.24351 ], [ -3.41008, 55.24435 ], [ -3.41005, 55.24483 ], [ -3.41013, 55.24648 ], [ -3.41015, 55.24667 ], [ -3.41028, 55.24792 ], [ -3.4103, 55.24816 ], [ -3.41042, 55.24882 ], [ -3.41056, 55.24958 ], [ -3.4106, 55.24971 ], [ -3.41064, 55.24989 ], [ -3.4109, 55.25097 ], [ -3.41106, 55.25149 ], [ -3.41121, 55.25202 ], [ -3.41177, 55.25343 ], [ -3.41184, 55.2536 ], [ -3.41184, 55.25361 ], [ -3.41226, 55.25428 ], [ -3.41236, 55.25445 ], [ -3.41243, 55.25457 ], [ -3.41247, 55.25462 ], [ -3.41301, 55.25533 ], [ -3.41354, 55.25592 ], [ -3.41411, 55.25656 ], [ -3.41448, 55.25698 ], [ -3.415, 55.25746 ], [ -3.41517, 55.25761 ], [ -3.41533, 55.25776 ], [ -3.4155, 55.25791 ], [ -3.41559, 55.25799 ], [ -3.41568, 55.25806 ], [ -3.41587, 55.25821 ], [ -3.41624, 55.2585 ], [ -3.41662, 55.25881 ], [ -3.41698, 55.25911 ], [ -3.41716, 55.25926 ], [ -3.4176, 55.25961 ], [ -3.41785, 55.25984 ], [ -3.41826, 55.26034 ], [ -3.41846, 55.26061 ], [ -3.41851, 55.26071 ], [ -3.41877, 55.26123 ], [ -3.41884, 55.26137 ], [ -3.41897, 55.26198 ], [ -3.41897, 55.26221 ], [ -3.41896, 55.26239 ], [ -3.41895, 55.26293 ], [ -3.41895, 55.26313 ], [ -3.41894, 55.26329 ], [ -3.41893, 55.26347 ], [ -3.41892, 55.26365 ], [ -3.41891, 55.26383 ], [ -3.4189, 55.264 ], [ -3.41888, 55.26418 ], [ -3.41886, 55.26454 ], [ -3.41885, 55.26472 ], [ -3.41884, 55.2649 ], [ -3.41883, 55.26508 ], [ -3.41882, 55.26521 ], [ -3.4189, 55.26616 ], [ -3.41892, 55.26634 ], [ -3.41896, 55.26688 ], [ -3.41897, 55.267 ], [ -3.41899, 55.26706 ], [ -3.41914, 55.26759 ], [ -3.41918, 55.26777 ], [ -3.41923, 55.26795 ], [ -3.41926, 55.26805 ], [ -3.41936, 55.2683 ], [ -3.41955, 55.26881 ], [ -3.41988, 55.26953 ], [ -3.41997, 55.26969 ], [ -3.42034, 55.27034 ], [ -3.42057, 55.27072 ], [ -3.42068, 55.27089 ], [ -3.42089, 55.27123 ], [ -3.42101, 55.27139 ], [ -3.42148, 55.27203 ], [ -3.42199, 55.27257 ], [ -3.42232, 55.27293 ], [ -3.42247, 55.27309 ], [ -3.42261, 55.27325 ], [ -3.42277, 55.27341 ], [ -3.42313, 55.27388 ], [ -3.42314, 55.2739 ], [ -3.42353, 55.2745 ], [ -3.42368, 55.27475 ], [ -3.42443, 55.276 ], [ -3.42472, 55.27644 ], [ -3.42506, 55.27695 ], [ -3.4251, 55.27702 ], [ -3.42519, 55.27711 ], [ -3.42558, 55.27756 ], [ -3.42587, 55.27788 ], [ -3.42622, 55.27825 ], [ -3.42647, 55.27851 ], [ -3.42677, 55.27883 ], [ -3.42692, 55.27899 ], [ -3.42708, 55.27914 ], [ -3.42723, 55.2793 ], [ -3.42815, 55.28025 ], [ -3.4283, 55.2804 ], [ -3.42876, 55.28088 ], [ -3.42891, 55.28103 ], [ -3.42961, 55.28176 ], [ -3.43028, 55.28245 ], [ -3.43155, 55.28376 ], [ -3.43166, 55.28387 ], [ -3.43217, 55.28432 ], [ -3.43225, 55.28439 ], [ -3.43263, 55.28467 ], [ -3.43333, 55.2852 ], [ -3.4343, 55.28591 ], [ -3.43492, 55.28639 ], [ -3.43496, 55.28642 ], [ -3.43601, 55.28729 ], [ -3.43603, 55.28731 ], [ -3.43655, 55.28776 ], [ -3.43689, 55.28806 ], [ -3.43698, 55.28814 ], [ -3.43707, 55.28821 ], [ -3.43726, 55.28835 ], [ -3.43765, 55.28864 ], [ -3.43784, 55.28878 ], [ -3.43787, 55.2888 ], [ -3.43804, 55.28892 ], [ -3.43853, 55.28924 ], [ -3.43888, 55.28946 ], [ -3.43891, 55.28948 ], [ -3.4391, 55.28959 ], [ -3.43933, 55.28971 ], [ -3.43955, 55.28984 ], [ -3.44, 55.2901 ], [ -3.44022, 55.29022 ], [ -3.44023, 55.29023 ], [ -3.44044, 55.29035 ], [ -3.44066, 55.29048 ], [ -3.44089, 55.29061 ], [ -3.44111, 55.29073 ], [ -3.44133, 55.29086 ], [ -3.44143, 55.29092 ], [ -3.44186, 55.29119 ], [ -3.44197, 55.29126 ], [ -3.44217, 55.2914 ], [ -3.44226, 55.29146 ], [ -3.44305, 55.29207 ], [ -3.4433, 55.29227 ], [ -3.44332, 55.29229 ], [ -3.4433221, 55.2922885 ], [ -3.44328, 55.2923 ], [ -3.44324, 55.29232 ], [ -3.44324, 55.29235 ], [ -3.44325, 55.29237 ], [ -3.44327, 55.29239 ], [ -3.4433, 55.29243 ], [ -3.44331, 55.29244 ], [ -3.44343, 55.29258 ], [ -3.44348, 55.29264 ], [ -3.4436, 55.29278 ], [ -3.44364, 55.29284 ], [ -3.44371, 55.29291 ], [ -3.44386, 55.29311 ], [ -3.44394, 55.29323 ], [ -3.44399, 55.29332 ], [ -3.44402, 55.2934 ], [ -3.44405, 55.29346 ], [ -3.44406, 55.2935 ], [ -3.44412, 55.29363 ], [ -3.44416, 55.29374 ], [ -3.44418, 55.29381 ], [ -3.44424, 55.29399 ], [ -3.4443, 55.29416 ], [ -3.4443, 55.29418 ], [ -3.44436, 55.29425 ], [ -3.44441, 55.29433 ], [ -3.44439, 55.2946 ], [ -3.44438, 55.29468 ], [ -3.44438, 55.29477 ], [ -3.44438, 55.2951 ], [ -3.44439, 55.29532 ], [ -3.44439, 55.29562 ], [ -3.4444, 55.29591 ], [ -3.4444, 55.29627 ], [ -3.4444, 55.29645 ], [ -3.44441, 55.29699 ], [ -3.44442, 55.29717 ], [ -3.44445, 55.29751 ], [ -3.44446, 55.29753 ], [ -3.44455, 55.29801 ], [ -3.44461, 55.29824 ], [ -3.44461, 55.29827 ], [ -3.44471, 55.29857 ], [ -3.44472, 55.2986 ], [ -3.44479, 55.29877 ], [ -3.44498, 55.29927 ], [ -3.44499, 55.2993 ], [ -3.44507, 55.29947 ], [ -3.44514, 55.29965 ], [ -3.44521, 55.29982 ], [ -3.44524, 55.29988 ], [ -3.44529, 55.3 ], [ -3.44536, 55.30017 ], [ -3.44544, 55.30035 ], [ -3.44551, 55.30052 ], [ -3.44566, 55.30086 ], [ -3.445658, 55.3008613 ], [ -3.44608, 55.3008 ], [ -3.44624, 55.30078 ], [ -3.44638, 55.30075 ], [ -3.44654, 55.30072 ], [ -3.44668, 55.30071 ], [ -3.44683, 55.30071 ], [ -3.447, 55.30072 ], [ -3.44715, 55.30077 ], [ -3.44729, 55.30083 ], [ -3.44742, 55.30089 ], [ -3.44751, 55.30094 ], [ -3.44756, 55.30101 ], [ -3.44777, 55.30126 ], [ -3.44789, 55.30143 ], [ -3.44802, 55.30159 ], [ -3.44854, 55.30225 ], [ -3.44899, 55.30283 ], [ -3.44905, 55.30291 ], [ -3.4493, 55.30324 ], [ -3.44938, 55.30334 ], [ -3.44968, 55.30372 ], [ -3.44981, 55.3039 ], [ -3.4499, 55.30401 ], [ -3.45013, 55.30431 ], [ -3.45042, 55.30467 ], [ -3.45045, 55.30471 ], [ -3.45055, 55.30483 ], [ -3.45058, 55.30486 ], [ -3.4506, 55.30488 ], [ -3.45062, 55.30489 ], [ -3.45064, 55.3049 ], [ -3.45068, 55.30491 ], [ -3.45078, 55.30493 ], [ -3.4507793, 55.3049313 ], [ -3.45081, 55.30505 ], [ -3.4513, 55.30583 ], [ -3.45131, 55.30585 ], [ -3.45142, 55.30603 ], [ -3.45153, 55.30618 ], [ -3.45186, 55.30668 ], [ -3.45218, 55.30715 ], [ -3.45244, 55.30748 ], [ -3.45269, 55.3078 ], [ -3.45309, 55.30833 ], [ -3.45329, 55.30863 ], [ -3.45341, 55.3088 ], [ -3.45347, 55.3089 ], [ -3.45362, 55.30913 ], [ -3.45384, 55.30947 ], [ -3.45386, 55.3095 ], [ -3.4541, 55.30999 ], [ -3.45412, 55.31002 ], [ -3.45415, 55.31012 ], [ -3.45422, 55.31031 ], [ -3.45426, 55.31047 ], [ -3.45429, 55.31059 ], [ -3.4543, 55.31065 ], [ -3.4543, 55.31068 ], [ -3.45428, 55.31083 ], [ -3.45424, 55.31093 ], [ -3.45406, 55.31112 ], [ -3.45402, 55.31115 ], [ -3.4539, 55.31125 ], [ -3.45383, 55.31133 ], [ -3.45378, 55.31142 ], [ -3.45374, 55.31149 ], [ -3.4537383, 55.3114913 ], [ -3.4538, 55.31157 ], [ -3.45383, 55.31159 ], [ -3.45386, 55.31162 ], [ -3.4539, 55.31165 ], [ -3.45397, 55.31168 ], [ -3.45405, 55.31172 ], [ -3.4540464, 55.3117151 ], [ -3.45409, 55.31171 ], [ -3.45411, 55.31171 ], [ -3.45413, 55.31171 ], [ -3.45415, 55.31171 ], [ -3.45418, 55.3117 ], [ -3.45421, 55.31171 ], [ -3.45454, 55.31159 ], [ -3.45459, 55.31156 ], [ -3.45462, 55.31155 ], [ -3.45467, 55.31153 ], [ -3.45473, 55.31151 ], [ -3.45476, 55.31151 ], [ -3.4548, 55.31151 ], [ -3.45486, 55.3115 ], [ -3.45497, 55.31152 ], [ -3.45515, 55.31157 ], [ -3.45531, 55.31164 ], [ -3.45531, 55.31165 ], [ -3.45558, 55.31182 ], [ -3.45572, 55.31192 ], [ -3.45583, 55.312 ], [ -3.45591, 55.31207 ], [ -3.45627, 55.31236 ], [ -3.45645, 55.31251 ], [ -3.45663, 55.31265 ], [ -3.457, 55.31295 ], [ -3.45718, 55.3131 ], [ -3.45725, 55.31316 ], [ -3.45737, 55.31324 ], [ -3.45756, 55.31338 ], [ -3.45775, 55.31353 ], [ -3.45795, 55.31367 ], [ -3.45826, 55.3139 ], [ -3.45853, 55.31409 ], [ -3.45873, 55.31423 ], [ -3.45932, 55.31465 ], [ -3.45937, 55.31469 ], [ -3.45998, 55.31505 ], [ -3.46062, 55.31544 ], [ -3.46084, 55.31557 ], [ -3.4609, 55.31561 ], [ -3.46129, 55.31582 ], [ -3.46151, 55.31595 ], [ -3.46154, 55.31597 ], [ -3.46174, 55.31608 ], [ -3.46196, 55.3162 ], [ -3.46219, 55.31633 ], [ -3.46264, 55.31658 ], [ -3.46268, 55.3166 ], [ -3.46351, 55.3171 ], [ -3.46372, 55.31723 ], [ -3.46382, 55.3173 ], [ -3.46393, 55.31737 ], [ -3.46434, 55.31764 ], [ -3.46455, 55.31778 ], [ -3.46486, 55.31799 ], [ -3.46495, 55.31806 ], [ -3.4654, 55.31839 ], [ -3.46564, 55.3186 ], [ -3.46579, 55.31874 ], [ -3.46634, 55.31926 ], [ -3.46646, 55.31937 ], [ -3.46664, 55.31957 ], [ -3.46669, 55.31962 ], [ -3.46691, 55.3199 ], [ -3.46705, 55.32006 ], [ -3.46718, 55.32022 ], [ -3.4672, 55.32024 ], [ -3.46742, 55.32056 ], [ -3.46765, 55.32089 ], [ -3.46765, 55.3209 ], [ -3.46775, 55.32106 ], [ -3.46785, 55.32123 ], [ -3.46795, 55.3214 ], [ -3.46824, 55.32189 ], [ -3.46859, 55.32246 ], [ -3.46894, 55.32303 ], [ -3.46927, 55.32342 ], [ -3.46941, 55.32359 ], [ -3.46954, 55.32375 ], [ -3.46981, 55.32408 ], [ -3.47026, 55.32462 ], [ -3.47054, 55.32491 ], [ -3.47135, 55.32575 ], [ -3.47217, 55.32645 ], [ -3.47299, 55.32713 ], [ -3.47324, 55.32734 ], [ -3.47446, 55.32836 ], [ -3.47512, 55.32893 ], [ -3.47518, 55.32898 ], [ -3.47533, 55.32914 ], [ -3.47608, 55.32993 ], [ -3.47623, 55.33009 ], [ -3.47628, 55.33015 ], [ -3.47638, 55.33025 ], [ -3.47686, 55.33071 ], [ -3.47698, 55.33083 ], [ -3.47703, 55.33086 ], [ -3.47752, 55.33122 ], [ -3.47832, 55.33169 ], [ -3.47901, 55.33208 ], [ -3.47933, 55.33226 ], [ -3.47955, 55.33238 ], [ -3.47976, 55.33251 ], [ -3.4798, 55.33254 ], [ -3.48002, 55.33268 ], [ -3.48086, 55.33326 ], [ -3.48095, 55.33332 ], [ -3.48105, 55.3334 ], [ -3.48123, 55.33355 ], [ -3.48142, 55.33369 ], [ -3.48149, 55.33375 ], [ -3.48159, 55.33384 ], [ -3.48252, 55.33467 ], [ -3.48312, 55.33521 ], [ -3.4833, 55.33536 ], [ -3.48347, 55.33551 ], [ -3.48438, 55.33631 ], [ -3.48491, 55.33669 ], [ -3.4855, 55.33711 ], [ -3.48599, 55.33746 ], [ -3.4861, 55.33753 ], [ -3.48651, 55.3378 ], [ -3.48677, 55.33798 ], [ -3.48713, 55.33819 ], [ -3.48739, 55.33832 ], [ -3.48779, 55.33853 ], [ -3.48834, 55.33879 ], [ -3.48883, 55.33902 ], [ -3.48905, 55.33913 ], [ -3.48933, 55.33924 ], [ -3.48974, 55.33939 ], [ -3.49038, 55.33964 ], [ -3.49214, 55.3403 ], [ -3.49251, 55.34042 ], [ -3.49322, 55.34065 ], [ -3.49554, 55.34139 ], [ -3.49582, 55.34148 ], [ -3.49609, 55.34157 ], [ -3.49625, 55.34161 ], [ -3.49664, 55.34174 ], [ -3.49746, 55.34201 ], [ -3.49824, 55.34231 ], [ -3.49825, 55.34231 ], [ -3.49874, 55.34254 ], [ -3.49898, 55.34266 ], [ -3.49923, 55.34277 ], [ -3.49947, 55.34288 ], [ -3.49972, 55.343 ], [ -3.49981, 55.34304 ], [ -3.50016, 55.34326 ], [ -3.50038, 55.34339 ], [ -3.50059, 55.34352 ], [ -3.50158, 55.34412 ], [ -3.5022, 55.34453 ], [ -3.50273, 55.34489 ], [ -3.50353, 55.34549 ], [ -3.50367, 55.34559 ], [ -3.50414, 55.34596 ], [ -3.50445, 55.34622 ], [ -3.50463, 55.34637 ], [ -3.50471, 55.34643 ], [ -3.50505, 55.34674 ], [ -3.50513, 55.34682 ], [ -3.50529, 55.34698 ], [ -3.5053, 55.347 ], [ -3.50557, 55.34728 ], [ -3.50579, 55.34753 ], [ -3.50605, 55.34785 ], [ -3.50654, 55.34854 ], [ -3.50659, 55.34862 ], [ -3.50688, 55.34905 ], [ -3.50715, 55.34945 ], [ -3.50757, 55.35003 ], [ -3.50764, 55.35012 ], [ -3.50791, 55.35048 ], [ -3.5081, 55.35072 ], [ -3.50815, 55.35078 ], [ -3.50829, 55.35094 ], [ -3.50852, 55.35123 ], [ -3.50855, 55.35127 ], [ -3.50882, 55.35157 ], [ -3.50923, 55.35203 ], [ -3.50957, 55.35239 ], [ -3.50976, 55.35259 ], [ -3.51035, 55.35317 ], [ -3.5104, 55.35321 ], [ -3.51051, 55.35333 ], [ -3.51066, 55.35348 ], [ -3.51076, 55.35358 ], [ -3.51103, 55.35382 ], [ -3.51139, 55.35413 ], [ -3.51176, 55.35444 ], [ -3.51222, 55.35483 ], [ -3.51253, 55.35508 ], [ -3.51294, 55.35543 ], [ -3.51312, 55.35558 ], [ -3.51319, 55.35564 ], [ -3.51329, 55.35573 ], [ -3.51366, 55.35604 ], [ -3.51421, 55.35652 ], [ -3.51455, 55.35684 ], [ -3.51494, 55.35726 ], [ -3.51509, 55.35742 ], [ -3.51511, 55.35744 ], [ -3.51553, 55.35799 ], [ -3.51588, 55.35855 ], [ -3.5159, 55.35859 ], [ -3.51602, 55.3588 ], [ -3.51626, 55.35933 ], [ -3.51636, 55.35957 ], [ -3.51648, 55.35998 ], [ -3.51654, 55.36026 ], [ -3.5166, 55.36066 ], [ -3.51669, 55.36162 ], [ -3.51672, 55.36191 ], [ -3.51672, 55.36228 ], [ -3.5167, 55.36283 ], [ -3.51661, 55.3635 ], [ -3.51654, 55.36386 ], [ -3.51653, 55.3639 ], [ -3.51648, 55.36407 ], [ -3.51642, 55.36432 ], [ -3.51626, 55.3648 ], [ -3.51621, 55.36496 ], [ -3.51615, 55.36513 ], [ -3.51603, 55.36548 ], [ -3.51594, 55.36573 ], [ -3.51582, 55.36601 ], [ -3.51575, 55.36619 ], [ -3.51561, 55.36655 ], [ -3.51554, 55.36672 ], [ -3.51547, 55.36689 ], [ -3.51541, 55.36707 ], [ -3.5154, 55.3671 ], [ -3.51535, 55.36725 ], [ -3.51531, 55.3674 ], [ -3.5153, 55.36742 ], [ -3.51515, 55.36789 ], [ -3.51501, 55.36849 ], [ -3.51493, 55.36885 ], [ -3.51488, 55.36902 ], [ -3.51488, 55.36904 ], [ -3.5148, 55.36938 ], [ -3.51476, 55.36956 ], [ -3.51474, 55.36967 ], [ -3.51472, 55.36974 ], [ -3.51469, 55.36992 ], [ -3.51468, 55.36996 ], [ -3.51467, 55.3701 ], [ -3.51465, 55.37028 ], [ -3.51464, 55.37045 ], [ -3.51464, 55.37047 ], [ -3.51464, 55.37063 ], [ -3.51463, 55.3707 ], [ -3.51465, 55.37081 ], [ -3.51466, 55.37099 ], [ -3.51468, 55.37112 ], [ -3.51469, 55.37117 ], [ -3.51472, 55.37135 ], [ -3.51474, 55.37145 ], [ -3.51477, 55.37153 ], [ -3.51483, 55.37171 ], [ -3.51488, 55.37188 ], [ -3.51489, 55.37189 ], [ -3.51503, 55.37222 ], [ -3.51513, 55.3724 ], [ -3.51524, 55.37263 ], [ -3.51532, 55.37275 ], [ -3.51542, 55.37289 ], [ -3.51543, 55.37292 ], [ -3.51556, 55.37308 ], [ -3.51568, 55.37325 ], [ -3.51604, 55.37374 ], [ -3.51604, 55.37375 ], [ -3.51618, 55.37391 ], [ -3.51632, 55.37408 ], [ -3.51666, 55.37446 ], [ -3.51675, 55.37455 ], [ -3.51716, 55.37496 ], [ -3.51722, 55.37502 ], [ -3.51738, 55.37517 ], [ -3.51753, 55.37533 ], [ -3.51769, 55.37549 ], [ -3.51773, 55.37552 ], [ -3.51785, 55.37564 ], [ -3.51817, 55.37595 ], [ -3.51818, 55.37596 ], [ -3.51833, 55.37611 ], [ -3.51851, 55.37626 ], [ -3.51855, 55.37629 ], [ -3.51884, 55.37656 ], [ -3.51933, 55.37702 ], [ -3.51983, 55.37753 ], [ -3.5204, 55.37807 ], [ -3.52072, 55.37839 ], [ -3.52129, 55.37896 ], [ -3.52153, 55.37921 ], [ -3.52169, 55.37937 ], [ -3.52183, 55.37952 ], [ -3.52234, 55.38013 ], [ -3.52243, 55.38035 ], [ -3.52243, 55.38036 ], [ -3.52254, 55.38053 ], [ -3.52262, 55.38065 ], [ -3.52274, 55.38086 ], [ -3.52283, 55.38101 ], [ -3.52284, 55.38104 ], [ -3.52292, 55.38122 ], [ -3.523, 55.38138 ], [ -3.523, 55.38139 ], [ -3.52306, 55.38152 ], [ -3.52308, 55.38156 ], [ -3.52321, 55.38191 ], [ -3.52321, 55.38192 ], [ -3.52322, 55.38195 ], [ -3.52326, 55.38209 ], [ -3.52331, 55.38226 ], [ -3.52334, 55.38237 ], [ -3.52342, 55.38262 ], [ -3.52345, 55.38281 ], [ -3.52351, 55.38316 ], [ -3.52354, 55.38334 ], [ -3.52357, 55.38351 ], [ -3.52357, 55.38352 ], [ -3.5236, 55.38369 ], [ -3.5236, 55.3837 ], [ -3.52363, 55.38387 ], [ -3.52366, 55.38405 ], [ -3.52366, 55.38406 ], [ -3.52369, 55.38423 ], [ -3.52369, 55.38424 ], [ -3.52372, 55.38439 ], [ -3.52373, 55.38442 ], [ -3.52376, 55.38459 ], [ -3.52376, 55.3846 ], [ -3.52379, 55.38477 ], [ -3.52382, 55.38495 ], [ -3.52385, 55.38513 ], [ -3.52388, 55.3853 ], [ -3.52388, 55.38531 ], [ -3.5239, 55.38542 ], [ -3.52393, 55.38554 ], [ -3.52395, 55.38572 ], [ -3.52398, 55.38608 ], [ -3.524, 55.38626 ], [ -3.52402, 55.38644 ], [ -3.52407, 55.38688 ], [ -3.52406, 55.38697 ], [ -3.52404, 55.38715 ], [ -3.52402, 55.38733 ], [ -3.524, 55.38745 ], [ -3.52376, 55.38832 ], [ -3.52368, 55.38858 ], [ -3.52362, 55.38875 ], [ -3.52355, 55.38898 ], [ -3.52355, 55.38911 ], [ -3.52353, 55.38955 ], [ -3.52354, 55.38965 ], [ -3.52356, 55.38983 ], [ -3.52358, 55.39001 ], [ -3.52358, 55.3901 ], [ -3.52374, 55.39047 ], [ -3.52377, 55.39053 ], [ -3.52393, 55.39084 ], [ -3.52416, 55.39124 ], [ -3.52429, 55.39138 ], [ -3.52443, 55.39154 ], [ -3.52457, 55.3917 ], [ -3.52471, 55.39186 ], [ -3.52471, 55.39187 ], [ -3.52484, 55.39203 ], [ -3.52496, 55.3922 ], [ -3.52513, 55.39242 ], [ -3.52566, 55.393 ], [ -3.5258, 55.39316 ], [ -3.52631, 55.39371 ], [ -3.52714, 55.39447 ], [ -3.52721, 55.39453 ], [ -3.52733, 55.39461 ], [ -3.52752, 55.39475 ], [ -3.52799, 55.39509 ], [ -3.52855, 55.39544 ], [ -3.52856, 55.39544 ], [ -3.529, 55.39569 ], [ -3.5295, 55.39591 ], [ -3.52953, 55.39592 ], [ -3.53017, 55.39618 ], [ -3.5307, 55.39639 ], [ -3.53104, 55.39649 ], [ -3.53125, 55.39656 ], [ -3.53132, 55.39658 ], [ -3.53161, 55.39665 ], [ -3.53185, 55.39671 ], [ -3.53253, 55.39687 ], [ -3.53279, 55.39691 ], [ -3.53307, 55.39696 ], [ -3.53309, 55.39696 ], [ -3.53379, 55.39706 ], [ -3.53419, 55.39709 ], [ -3.53434, 55.39709 ], [ -3.53465, 55.39711 ], [ -3.53488, 55.39711 ], [ -3.53564, 55.39711 ], [ -3.53592, 55.39709 ], [ -3.5361, 55.39708 ], [ -3.53676, 55.39697 ], [ -3.53735, 55.39684 ], [ -3.5378, 55.39674 ], [ -3.53795, 55.39671 ], [ -3.53832, 55.39665 ], [ -3.53863, 55.39659 ], [ -3.53923, 55.39649 ], [ -3.5394, 55.39646 ], [ -3.53954, 55.39645 ], [ -3.53985, 55.39642 ], [ -3.53991, 55.39642 ], [ -3.54017, 55.39641 ], [ -3.54048, 55.3964 ], [ -3.5408, 55.39639 ], [ -3.5414, 55.39639 ], [ -3.54143, 55.39639 ], [ -3.54175, 55.39641 ], [ -3.54206, 55.39643 ], [ -3.54238, 55.39645 ], [ -3.54255, 55.39647 ], [ -3.54269, 55.39649 ], [ -3.54299, 55.39654 ], [ -3.54326, 55.39658 ], [ -3.5433, 55.39659 ], [ -3.5436, 55.39665 ], [ -3.54398, 55.39672 ], [ -3.54419, 55.39677 ], [ -3.54509, 55.39695 ], [ -3.54549, 55.39703 ], [ -3.54568, 55.39708 ], [ -3.5463, 55.39724 ], [ -3.54654, 55.3973 ], [ -3.54683, 55.39738 ], [ -3.54711, 55.39746 ], [ -3.54738, 55.39754 ], [ -3.54766, 55.39764 ], [ -3.54794, 55.39773 ], [ -3.54821, 55.39782 ], [ -3.54874, 55.398 ], [ -3.54927, 55.39821 ], [ -3.54954, 55.39831 ], [ -3.5498, 55.39841 ], [ -3.54991, 55.39845 ], [ -3.55005, 55.39852 ], [ -3.55055, 55.39874 ], [ -3.55068, 55.3988 ], [ -3.55079, 55.39886 ], [ -3.55103, 55.39897 ], [ -3.55127, 55.39909 ], [ -3.55151, 55.39921 ], [ -3.5516, 55.39925 ], [ -3.55197, 55.39946 ], [ -3.55219, 55.39959 ], [ -3.55239, 55.3997 ], [ -3.55268, 55.39986 ], [ -3.55284, 55.39995 ], [ -3.55334, 55.40025 ], [ -3.55337, 55.40027 ], [ -3.55358, 55.4004 ], [ -3.55379, 55.40054 ], [ -3.554, 55.40067 ], [ -3.55485, 55.40133 ], [ -3.55548, 55.40184 ], [ -3.55566, 55.40199 ], [ -3.55584, 55.40214 ], [ -3.55602, 55.40229 ], [ -3.55617, 55.40242 ], [ -3.5562, 55.40244 ], [ -3.55637, 55.40259 ], [ -3.55654, 55.40274 ], [ -3.55671, 55.40289 ], [ -3.55723, 55.40334 ], [ -3.5574, 55.40349 ], [ -3.55757, 55.40364 ], [ -3.55774, 55.4038 ], [ -3.55783, 55.40388 ], [ -3.55791, 55.40395 ], [ -3.55856, 55.4045 ], [ -3.55928, 55.40507 ], [ -3.56042, 55.40578 ], [ -3.56108, 55.40614 ], [ -3.56187, 55.40649 ], [ -3.56212, 55.4066 ], [ -3.56237, 55.40672 ], [ -3.56266, 55.40684 ], [ -3.56288, 55.40693 ], [ -3.56314, 55.40703 ], [ -3.5634, 55.40713 ], [ -3.56366, 55.40724 ], [ -3.56392, 55.40734 ], [ -3.56419, 55.40744 ], [ -3.56445, 55.40754 ], [ -3.5645, 55.40756 ], [ -3.56472, 55.40763 ], [ -3.56499, 55.40773 ], [ -3.56526, 55.40782 ], [ -3.56553, 55.40791 ], [ -3.56577, 55.40799 ], [ -3.56609, 55.40809 ], [ -3.56637, 55.40817 ], [ -3.56665, 55.40825 ], [ -3.56693, 55.40834 ], [ -3.56773, 55.40858 ], [ -3.56835, 55.40873 ], [ -3.56864, 55.4088 ], [ -3.56893, 55.40887 ], [ -3.56917, 55.40893 ], [ -3.56922, 55.40894 ], [ -3.56953, 55.40899 ], [ -3.56983, 55.40904 ], [ -3.57014, 55.40909 ], [ -3.57044, 55.40914 ], [ -3.57064, 55.40917 ], [ -3.57075, 55.40918 ], [ -3.57106, 55.40922 ], [ -3.57126, 55.40924 ], [ -3.57137, 55.40925 ], [ -3.57168, 55.40928 ], [ -3.572, 55.4093 ], [ -3.57263, 55.40935 ], [ -3.57325, 55.40941 ], [ -3.57336, 55.40942 ], [ -3.57356, 55.40944 ], [ -3.57419, 55.4095 ], [ -3.5745, 55.40952 ], [ -3.57461, 55.40953 ], [ -3.57557, 55.40968 ], [ -3.57603, 55.40976 ], [ -3.57658, 55.40985 ], [ -3.57664, 55.40987 ], [ -3.57731, 55.41003 ], [ -3.57798, 55.41024 ], [ -3.57843, 55.41042 ], [ -3.57897, 55.41063 ], [ -3.57945, 55.41087 ], [ -3.57995, 55.41115 ], [ -3.58047, 55.41149 ], [ -3.58091, 55.41183 ], [ -3.58128, 55.41215 ], [ -3.58188, 55.41274 ], [ -3.58211, 55.41299 ], [ -3.58226, 55.41315 ], [ -3.58228, 55.41317 ], [ -3.58256, 55.41346 ], [ -3.58309, 55.41402 ], [ -3.58399, 55.41498 ], [ -3.58493, 55.41595 ], [ -3.58512, 55.41615 ], [ -3.58527, 55.41631 ], [ -3.58542, 55.41647 ], [ -3.5856, 55.41666 ], [ -3.58572, 55.41679 ], [ -3.58615, 55.41724 ], [ -3.58672, 55.41785 ], [ -3.58719, 55.41831 ], [ -3.58752, 55.41863 ], [ -3.58787, 55.41898 ], [ -3.58851, 55.41955 ], [ -3.58897, 55.41995 ], [ -3.58926, 55.42019 ], [ -3.58944, 55.42034 ], [ -3.58946, 55.42035 ], [ -3.58984, 55.42065 ], [ -3.59001, 55.42077 ], [ -3.59021, 55.42093 ], [ -3.59061, 55.42119 ], [ -3.59069, 55.42124 ], [ -3.59105, 55.42145 ], [ -3.59113, 55.4215 ], [ -3.59127, 55.42158 ], [ -3.59172, 55.42183 ], [ -3.59193, 55.42195 ], [ -3.59195, 55.42196 ], [ -3.59244, 55.42219 ], [ -3.59268, 55.4223 ], [ -3.59269, 55.42231 ], [ -3.59318, 55.42253 ], [ -3.59336, 55.42261 ], [ -3.59343, 55.42263 ], [ -3.59369, 55.42273 ], [ -3.59396, 55.42284 ], [ -3.59422, 55.42294 ], [ -3.5944, 55.423 ], [ -3.59476, 55.42312 ], [ -3.59504, 55.42321 ], [ -3.59532, 55.4233 ], [ -3.59536, 55.42331 ], [ -3.5956, 55.42338 ], [ -3.59588, 55.42346 ], [ -3.59603, 55.4235 ], [ -3.59617, 55.42354 ], [ -3.59662, 55.42365 ], [ -3.59763, 55.42388 ], [ -3.5979, 55.42394 ], [ -3.59822, 55.42401 ], [ -3.59941, 55.42426 ], [ -3.60001, 55.42438 ], [ -3.60058, 55.4245 ], [ -3.6006, 55.4245 ], [ -3.6009, 55.42457 ], [ -3.6012, 55.42463 ], [ -3.6015, 55.42469 ], [ -3.6018, 55.42475 ], [ -3.60209, 55.42481 ], [ -3.60289, 55.42497 ], [ -3.60351, 55.4251 ], [ -3.6038, 55.42517 ], [ -3.6044, 55.42529 ], [ -3.60452, 55.42532 ], [ -3.605, 55.42541 ], [ -3.6053, 55.42547 ], [ -3.6056, 55.42553 ], [ -3.60656, 55.42572 ], [ -3.60755, 55.42592 ], [ -3.60818, 55.42608 ], [ -3.60889, 55.42627 ], [ -3.60939, 55.42643 ], [ -3.60966, 55.42652 ], [ -3.60988, 55.42659 ], [ -3.61062, 55.42684 ], [ -3.61103, 55.42697 ], [ -3.61131, 55.42706 ], [ -3.61133, 55.42707 ], [ -3.61179, 55.42718 ], [ -3.61232, 55.42729 ], [ -3.61249, 55.42731 ], [ -3.61275, 55.42734 ], [ -3.61318, 55.42738 ], [ -3.61394, 55.42742 ], [ -3.61406, 55.42742 ], [ -3.6146, 55.42743 ], [ -3.6147, 55.42743 ], [ -3.61501, 55.42744 ], [ -3.61532, 55.42745 ], [ -3.61564, 55.42748 ], [ -3.6159, 55.4275 ], [ -3.61626, 55.42757 ], [ -3.61632, 55.42758 ], [ -3.61655, 55.42763 ], [ -3.61678, 55.42769 ], [ -3.61684, 55.42771 ], [ -3.61722, 55.42784 ], [ -3.61756, 55.42798 ], [ -3.61763, 55.42801 ], [ -3.61802, 55.42821 ], [ -3.61842, 55.42851 ], [ -3.61851, 55.42858 ], [ -3.61858, 55.42863 ], [ -3.61873, 55.42875 ], [ -3.61884, 55.42885 ], [ -3.61889, 55.42887 ], [ -3.61895, 55.42891 ], [ -3.61915, 55.42903 ], [ -3.61917, 55.42904 ], [ -3.61939, 55.42917 ], [ -3.61947, 55.42922 ], [ -3.61962, 55.42929 ], [ -3.61986, 55.42941 ], [ -3.62002, 55.42948 ], [ -3.62041, 55.42961 ], [ -3.62071, 55.42969 ], [ -3.62084, 55.42973 ], [ -3.62124, 55.42981 ], [ -3.62137, 55.42984 ], [ -3.62155, 55.42986 ], [ -3.62186, 55.42989 ], [ -3.62197, 55.4299 ], [ -3.62218, 55.42991 ], [ -3.62248, 55.42991 ], [ -3.62249, 55.42991 ], [ -3.62281, 55.4299 ], [ -3.62301, 55.4299 ], [ -3.62344, 55.42986 ], [ -3.62362, 55.42984 ], [ -3.62375, 55.42982 ], [ -3.62406, 55.42978 ], [ -3.62419, 55.42976 ], [ -3.62437, 55.42974 ], [ -3.62468, 55.42971 ], [ -3.62483, 55.42969 ], [ -3.62499, 55.42968 ], [ -3.6253, 55.42964 ], [ -3.62546, 55.42963 ], [ -3.62562, 55.42962 ], [ -3.62593, 55.4296 ], [ -3.62617, 55.42958 ], [ -3.62625, 55.42958 ], [ -3.62656, 55.42957 ], [ -3.62688, 55.42957 ], [ -3.62693, 55.42957 ], [ -3.6272, 55.42957 ], [ -3.62751, 55.42957 ], [ -3.62756, 55.42957 ], [ -3.6283, 55.4296 ], [ -3.62846, 55.42961 ], [ -3.62935, 55.42969 ], [ -3.62971, 55.42973 ], [ -3.63002, 55.42977 ], [ -3.63033, 55.4298 ], [ -3.63048, 55.42982 ], [ -3.63064, 55.42985 ], [ -3.63095, 55.42989 ], [ -3.63125, 55.42994 ], [ -3.63143, 55.42997 ], [ -3.63156, 55.42999 ], [ -3.63186, 55.43004 ], [ -3.63217, 55.43009 ], [ -3.63243, 55.43013 ], [ -3.63247, 55.43014 ], [ -3.63277, 55.4302 ], [ -3.63376, 55.43039 ], [ -3.63427, 55.43049 ], [ -3.63457, 55.43055 ], [ -3.63532, 55.4307 ], [ -3.63655, 55.43095 ], [ -3.63695, 55.43104 ], [ -3.63725, 55.4311 ], [ -3.6375, 55.43115 ], [ -3.63755, 55.43116 ], [ -3.63784, 55.43123 ], [ -3.63792, 55.43125 ], [ -3.63813, 55.43131 ], [ -3.63842, 55.43138 ], [ -3.6387, 55.43146 ], [ -3.63953, 55.43173 ], [ -3.63977, 55.43181 ], [ -3.6398, 55.43182 ], [ -3.64006, 55.43192 ], [ -3.64033, 55.43202 ], [ -3.64074, 55.43218 ], [ -3.64085, 55.43223 ], [ -3.64109, 55.43234 ], [ -3.64134, 55.43245 ], [ -3.64147, 55.43251 ], [ -3.64158, 55.43257 ], [ -3.6418, 55.4327 ], [ -3.64203, 55.43282 ], [ -3.64216, 55.43289 ], [ -3.64224, 55.43295 ], [ -3.64244, 55.4331 ], [ -3.64264, 55.43324 ], [ -3.64271, 55.43329 ], [ -3.64282, 55.43338 ], [ -3.64299, 55.43354 ], [ -3.6432, 55.43373 ], [ -3.64346, 55.43401 ], [ -3.64372, 55.43433 ], [ -3.64375, 55.43438 ], [ -3.64384, 55.4345 ], [ -3.64397, 55.43466 ], [ -3.64409, 55.43483 ], [ -3.64414, 55.43489 ], [ -3.64421, 55.435 ], [ -3.64438, 55.43524 ], [ -3.64472, 55.43565 ], [ -3.64486, 55.43582 ], [ -3.64499, 55.43598 ], [ -3.64513, 55.43614 ], [ -3.64526, 55.4363 ], [ -3.64532, 55.43638 ], [ -3.64541, 55.43647 ], [ -3.64555, 55.43663 ], [ -3.64602, 55.43713 ], [ -3.64647, 55.43757 ], [ -3.64695, 55.43804 ], [ -3.64711, 55.43819 ], [ -3.6474, 55.43843 ], [ -3.64784, 55.43879 ], [ -3.64878, 55.4395 ], [ -3.64915, 55.43979 ], [ -3.64927, 55.43987 ], [ -3.64936, 55.43995 ], [ -3.64941, 55.43999 ], [ -3.64975, 55.44027 ], [ -3.64996, 55.44047 ], [ -3.65013, 55.44064 ], [ -3.65024, 55.44075 ], [ -3.65044, 55.44099 ], [ -3.65059, 55.4412 ], [ -3.65079, 55.4415 ], [ -3.65089, 55.4417 ], [ -3.6509, 55.44172 ], [ -3.65096, 55.44187 ], [ -3.65102, 55.44202 ], [ -3.65102, 55.44205 ], [ -3.65107, 55.44229 ], [ -3.65109, 55.44241 ], [ -3.65109, 55.4425 ], [ -3.6511, 55.44259 ], [ -3.6511, 55.44272 ], [ -3.65109, 55.44277 ], [ -3.65108, 55.44298 ], [ -3.65106, 55.44312 ], [ -3.65104, 55.4433 ], [ -3.65103, 55.44336 ], [ -3.65099, 55.44348 ], [ -3.65095, 55.44364 ], [ -3.65091, 55.44382 ], [ -3.65089, 55.44394 ], [ -3.65089, 55.44408 ], [ -3.65088, 55.4442 ], [ -3.65083, 55.44422 ], [ -3.65079, 55.44424 ], [ -3.65077, 55.44426 ], [ -3.65076, 55.4443 ], [ -3.65075, 55.44432 ], [ -3.65075, 55.44434 ], [ -3.65077, 55.44437 ], [ -3.65078, 55.44438 ], [ -3.65081, 55.4444 ], [ -3.65085, 55.44442 ], [ -3.65075, 55.44452 ], [ -3.65071, 55.44458 ], [ -3.65069, 55.44461 ], [ -3.65065, 55.44466 ], [ -3.6506, 55.44472 ], [ -3.65058, 55.44475 ], [ -3.65051, 55.44487 ], [ -3.65048, 55.44492 ], [ -3.65045, 55.44502 ], [ -3.65043, 55.4451 ], [ -3.65039, 55.44523 ], [ -3.65038, 55.44527 ], [ -3.65032, 55.44545 ], [ -3.65031, 55.44546 ], [ -3.65026, 55.44581 ], [ -3.65025, 55.44582 ], [ -3.65023, 55.44632 ], [ -3.65028, 55.44671 ], [ -3.65029, 55.4468 ], [ -3.65031, 55.44688 ], [ -3.65036, 55.44703 ], [ -3.65036, 55.44706 ], [ -3.65041, 55.44724 ], [ -3.65045, 55.44742 ], [ -3.65046, 55.44745 ], [ -3.65047, 55.4476 ], [ -3.65048, 55.44771 ], [ -3.65049, 55.44793 ], [ -3.65049, 55.44816 ], [ -3.65048, 55.44824 ], [ -3.65045, 55.44832 ], [ -3.65045, 55.44833 ], [ -3.65039, 55.44848 ], [ -3.65031, 55.44864 ], [ -3.6503, 55.44866 ], [ -3.65023, 55.44877 ], [ -3.65018, 55.44883 ], [ -3.65016, 55.44885 ], [ -3.65011, 55.44892 ], [ -3.65004, 55.44899 ], [ -3.65, 55.44904 ], [ -3.64988, 55.44914 ], [ -3.64988, 55.44915 ], [ -3.64985, 55.44917 ], [ -3.64971, 55.4493 ], [ -3.64968, 55.44932 ], [ -3.64953, 55.44945 ], [ -3.64934, 55.4496 ], [ -3.64878, 55.45005 ], [ -3.6487806, 55.4500453 ], [ -3.64841, 55.45041 ], [ -3.64832, 55.45052 ], [ -3.64826, 55.45058 ], [ -3.64817, 55.45068 ], [ -3.64813, 55.45073 ], [ -3.64805, 55.45084 ], [ -3.648, 55.45091 ], [ -3.64793, 55.45101 ], [ -3.64788, 55.45107 ], [ -3.64779, 55.45117 ], [ -3.64777, 55.45119 ], [ -3.64774, 55.45123 ], [ -3.64765, 55.45133 ], [ -3.64765, 55.45134 ], [ -3.6476, 55.45139 ], [ -3.64751, 55.45149 ], [ -3.64737, 55.45165 ], [ -3.6472, 55.45181 ], [ -3.64692, 55.45212 ], [ -3.64691, 55.45213 ], [ -3.64686, 55.45219 ], [ -3.64662, 55.45245 ], [ -3.64647, 55.45261 ], [ -3.64644, 55.45265 ], [ -3.6463, 55.45284 ], [ -3.64618, 55.453 ], [ -3.64606, 55.45317 ], [ -3.64605, 55.45318 ], [ -3.64595, 55.45334 ], [ -3.64577, 55.45361 ], [ -3.64573, 55.45367 ], [ -3.64561, 55.45386 ], [ -3.6454, 55.45417 ], [ -3.6454, 55.45418 ], [ -3.64527, 55.45434 ], [ -3.6452, 55.45444 ], [ -3.64514, 55.45451 ], [ -3.64501, 55.45466 ], [ -3.64501, 55.45467 ], [ -3.64492, 55.45477 ], [ -3.64477, 55.45493 ], [ -3.64471, 55.45499 ], [ -3.64442, 55.45531 ], [ -3.64432, 55.45541 ], [ -3.64427, 55.45547 ], [ -3.64416, 55.45558 ], [ -3.6439, 55.4559 ], [ -3.64376, 55.45611 ], [ -3.64353, 55.45651 ], [ -3.64348, 55.45664 ], [ -3.6434, 55.45681 ], [ -3.64339, 55.45684 ], [ -3.64336, 55.45692 ], [ -3.64328, 55.4572 ], [ -3.64325, 55.45735 ], [ -3.64323, 55.45746 ], [ -3.64318, 55.45769 ], [ -3.64319, 55.45806 ], [ -3.64319, 55.45818 ], [ -3.6432, 55.45821 ], [ -3.64323, 55.45846 ], [ -3.64327, 55.45869 ], [ -3.64329, 55.45878 ], [ -3.64342, 55.45915 ], [ -3.64363, 55.45959 ], [ -3.64368, 55.45965 ], [ -3.64384, 55.4599 ], [ -3.64397, 55.46008 ], [ -3.64413, 55.46027 ], [ -3.64415, 55.46029 ], [ -3.6444, 55.46054 ], [ -3.64461, 55.46074 ], [ -3.64467, 55.46079 ], [ -3.64478, 55.46089 ], [ -3.64493, 55.46102 ], [ -3.64496, 55.46104 ], [ -3.64515, 55.46118 ], [ -3.64565, 55.46154 ], [ -3.64637, 55.46203 ], [ -3.64649, 55.46212 ], [ -3.647, 55.46247 ], [ -3.64716, 55.46257 ], [ -3.64726, 55.46264 ], [ -3.64745, 55.46276 ], [ -3.64758, 55.46284 ], [ -3.64769, 55.4629 ], [ -3.64774, 55.46293 ], [ -3.64795, 55.46305 ], [ -3.64809, 55.46314 ], [ -3.64829, 55.46326 ], [ -3.64855, 55.46342 ], [ -3.64871, 55.46353 ], [ -3.64897, 55.46369 ], [ -3.64923, 55.46386 ], [ -3.64925, 55.46388 ], [ -3.64943, 55.46399 ], [ -3.64963, 55.46412 ], [ -3.64964, 55.46413 ], [ -3.65001, 55.46437 ], [ -3.65026, 55.46454 ], [ -3.65038, 55.46462 ], [ -3.65047, 55.46468 ], [ -3.65068, 55.46481 ], [ -3.65072, 55.46484 ], [ -3.65089, 55.46495 ], [ -3.65113, 55.46511 ], [ -3.6513, 55.46522 ], [ -3.65155, 55.46538 ], [ -3.65192, 55.46563 ], [ -3.65196, 55.46565 ], [ -3.65213, 55.46576 ], [ -3.65238, 55.46592 ], [ -3.65273, 55.46615 ], [ -3.65276, 55.46617 ], [ -3.6531, 55.46639 ], [ -3.65355, 55.46668 ], [ -3.65399, 55.46696 ], [ -3.65424, 55.46711 ], [ -3.65453, 55.46728 ], [ -3.6549, 55.46747 ], [ -3.65507, 55.46755 ], [ -3.65555, 55.46775 ], [ -3.656, 55.46791 ], [ -3.65649, 55.46806 ], [ -3.6565, 55.46806 ], [ -3.65678, 55.46813 ], [ -3.65683, 55.46814 ], [ -3.65741, 55.46826 ], [ -3.65768, 55.4683 ], [ -3.65799, 55.46835 ], [ -3.65807, 55.46837 ], [ -3.6583, 55.46839 ], [ -3.65861, 55.46842 ], [ -3.6588, 55.46844 ], [ -3.65892, 55.46845 ], [ -3.65924, 55.46846 ], [ -3.65956, 55.46848 ], [ -3.65967, 55.46848 ], [ -3.65987, 55.46848 ], [ -3.66019, 55.46847 ], [ -3.66032, 55.46847 ], [ -3.66105, 55.46842 ], [ -3.66113, 55.46841 ], [ -3.66144, 55.46837 ], [ -3.66185, 55.46832 ], [ -3.66235, 55.46822 ], [ -3.66265, 55.46816 ], [ -3.66266, 55.46816 ], [ -3.66294, 55.46808 ], [ -3.66336, 55.46798 ], [ -3.66352, 55.46793 ], [ -3.6638, 55.46785 ], [ -3.66405, 55.46778 ], [ -3.66409, 55.46777 ], [ -3.66437, 55.46769 ], [ -3.66484, 55.46757 ], [ -3.66495, 55.46754 ], [ -3.66524, 55.46748 ], [ -3.66554, 55.46741 ], [ -3.66559, 55.4674 ], [ -3.66601, 55.46733 ], [ -3.66655, 55.46727 ], [ -3.66696, 55.46726 ], [ -3.66709, 55.46726 ], [ -3.66733, 55.46726 ], [ -3.66741, 55.46727 ], [ -3.66768, 55.46729 ], [ -3.66772, 55.46729 ], [ -3.6679, 55.46731 ], [ -3.66801, 55.46732 ], [ -3.66803, 55.4673 ], [ -3.66804, 55.46729 ], [ -3.66805, 55.46729 ], [ -3.66806, 55.46728 ], [ -3.66808, 55.46727 ], [ -3.66809, 55.46727 ], [ -3.6681, 55.46726 ], [ -3.66812, 55.46726 ], [ -3.66813, 55.46725 ], [ -3.66815, 55.46725 ], [ -3.66817, 55.46725 ], [ -3.66818, 55.46724 ], [ -3.6682, 55.46724 ], [ -3.66822, 55.46724 ], [ -3.66823, 55.46724 ], [ -3.66825, 55.46724 ], [ -3.66827, 55.46724 ], [ -3.66828, 55.46724 ], [ -3.6683, 55.46724 ], [ -3.66832, 55.46725 ], [ -3.66833, 55.46725 ], [ -3.66835, 55.46725 ], [ -3.66836, 55.46726 ], [ -3.66838, 55.46726 ], [ -3.66839, 55.46727 ], [ -3.66843, 55.46728 ], [ -3.66846, 55.46731 ], [ -3.66847, 55.46732 ], [ -3.66848, 55.46733 ], [ -3.66849, 55.46734 ], [ -3.66849, 55.46735 ], [ -3.6685, 55.46736 ], [ -3.6685, 55.46737 ], [ -3.6685, 55.46738 ], [ -3.6685, 55.46739 ], [ -3.6685, 55.4674 ], [ -3.6685, 55.46741 ], [ -3.66867, 55.46743 ], [ -3.6688, 55.46743 ], [ -3.66908, 55.46742 ], [ -3.66978, 55.46738 ], [ -3.67059, 55.4673 ], [ -3.67138, 55.46723 ], [ -3.67214, 55.46717 ], [ -3.67281, 55.46712 ], [ -3.67346, 55.46709 ], [ -3.67353, 55.46709 ], [ -3.67408, 55.46708 ], [ -3.6746, 55.46707 ], [ -3.67512, 55.46707 ], [ -3.67611, 55.46705 ], [ -3.67682, 55.46704 ], [ -3.6771, 55.46703 ], [ -3.67713, 55.46703 ], [ -3.67745, 55.46704 ], [ -3.67775, 55.46704 ], [ -3.67777, 55.46704 ], [ -3.67825, 55.46706 ], [ -3.67871, 55.4671 ], [ -3.67892, 55.46711 ], [ -3.67959, 55.46717 ], [ -3.68008, 55.46724 ], [ -3.68027, 55.46727 ], [ -3.68058, 55.46731 ], [ -3.68088, 55.46736 ], [ -3.68089, 55.46736 ], [ -3.68118, 55.46742 ], [ -3.68168, 55.46751 ], [ -3.68243, 55.46769 ], [ -3.68301, 55.46785 ], [ -3.68385, 55.46811 ], [ -3.68464, 55.46842 ], [ -3.68482, 55.4685 ], [ -3.6854, 55.46875 ], [ -3.68558, 55.46882 ], [ -3.68583, 55.46893 ], [ -3.68608, 55.46904 ], [ -3.6863, 55.46914 ], [ -3.68708, 55.46948 ], [ -3.68759, 55.4697 ], [ -3.68784, 55.46981 ], [ -3.68796, 55.46986 ], [ -3.68809, 55.46992 ], [ -3.68835, 55.47003 ], [ -3.68873, 55.4702 ], [ -3.68949, 55.47054 ], [ -3.68962, 55.4706 ], [ -3.68999, 55.47079 ], [ -3.69015, 55.47088 ], [ -3.69072, 55.47119 ], [ -3.69083, 55.47126 ], [ -3.69104, 55.47139 ], [ -3.69126, 55.47152 ], [ -3.69142, 55.47162 ], [ -3.69147, 55.47166 ], [ -3.69167, 55.4718 ], [ -3.69174, 55.47185 ], [ -3.69186, 55.47194 ], [ -3.69205, 55.47208 ], [ -3.69224, 55.47222 ], [ -3.69225, 55.47223 ], [ -3.69259, 55.47252 ], [ -3.69277, 55.47268 ], [ -3.69279, 55.47269 ], [ -3.69293, 55.47283 ], [ -3.69311, 55.47301 ], [ -3.69338, 55.47331 ], [ -3.69361, 55.47356 ], [ -3.69381, 55.47382 ], [ -3.6939, 55.47396 ], [ -3.69396, 55.47404 ], [ -3.69402, 55.47413 ], [ -3.69422, 55.47445 ], [ -3.69433, 55.47464 ], [ -3.69438, 55.47471 ], [ -3.69442, 55.47481 ], [ -3.69451, 55.47498 ], [ -3.69457, 55.4751 ], [ -3.69459, 55.47516 ], [ -3.69467, 55.47533 ], [ -3.69474, 55.47549 ], [ -3.69475, 55.47551 ], [ -3.69482, 55.47568 ], [ -3.69487, 55.4758 ], [ -3.69489, 55.47586 ], [ -3.69495, 55.47603 ], [ -3.69497, 55.4761 ], [ -3.695, 55.47621 ], [ -3.69507, 55.47645 ], [ -3.69515, 55.47674 ], [ -3.69519, 55.47693 ], [ -3.69528, 55.47736 ], [ -3.69532, 55.47756 ], [ -3.69537, 55.47781 ], [ -3.69538, 55.47789 ], [ -3.6954, 55.47799 ], [ -3.69541, 55.47802 ], [ -3.69544, 55.47817 ], [ -3.69546, 55.47826 ], [ -3.69548, 55.47835 ], [ -3.69548, 55.47838 ], [ -3.69551, 55.4785 ], [ -3.69551, 55.47853 ], [ -3.69553, 55.47861 ], [ -3.69558, 55.4788 ], [ -3.69558, 55.47883 ], [ -3.69565, 55.47919 ], [ -3.69569, 55.47941 ], [ -3.6957, 55.47943 ], [ -3.69571, 55.47949 ], [ -3.69575, 55.47963 ], [ -3.69576, 55.47973 ], [ -3.69582, 55.48005 ], [ -3.69583, 55.48008 ], [ -3.69586, 55.48023 ], [ -3.69588, 55.48032 ], [ -3.6959, 55.48041 ], [ -3.69595, 55.48062 ], [ -3.69595, 55.48064 ], [ -3.69597, 55.48086 ], [ -3.69603, 55.48132 ], [ -3.69604, 55.48184 ], [ -3.69603, 55.48206 ], [ -3.69603, 55.48212 ], [ -3.69603, 55.48224 ], [ -3.69602, 55.48248 ], [ -3.69602, 55.48253 ], [ -3.69601, 55.4826 ], [ -3.696, 55.48266 ], [ -3.69598, 55.48278 ], [ -3.69597, 55.48284 ], [ -3.69596, 55.48295 ], [ -3.69595, 55.48302 ], [ -3.69594, 55.48309 ], [ -3.69591, 55.48319 ], [ -3.69589, 55.48331 ], [ -3.69581, 55.48363 ], [ -3.6958, 55.48367 ], [ -3.69578, 55.48373 ], [ -3.69566, 55.48408 ], [ -3.69562, 55.4842 ], [ -3.6956, 55.48426 ], [ -3.6954, 55.48479 ], [ -3.69539, 55.48483 ], [ -3.69522, 55.48528 ], [ -3.69517, 55.48543 ], [ -3.6951, 55.48561 ], [ -3.69507, 55.48568 ], [ -3.69501, 55.48587 ], [ -3.69494, 55.48609 ], [ -3.69493, 55.48614 ], [ -3.69489, 55.48629 ], [ -3.69485, 55.48646 ], [ -3.69483, 55.48656 ], [ -3.69481, 55.48673 ], [ -3.69479, 55.48687 ], [ -3.69479, 55.48691 ], [ -3.69478, 55.48703 ], [ -3.69478, 55.48709 ], [ -3.69476, 55.48728 ], [ -3.69482, 55.48817 ], [ -3.69483, 55.48835 ], [ -3.69485, 55.48853 ], [ -3.69486, 55.48868 ], [ -3.69486, 55.48871 ], [ -3.69482, 55.48889 ], [ -3.6948, 55.48903 ], [ -3.69477, 55.48921 ], [ -3.6947, 55.48957 ], [ -3.69469, 55.48961 ], [ -3.69468, 55.48975 ], [ -3.69467, 55.48993 ], [ -3.69466, 55.49011 ], [ -3.69465, 55.49029 ], [ -3.69462, 55.49069 ], [ -3.69462, 55.49071 ], [ -3.69458, 55.49105 ], [ -3.69446, 55.49122 ], [ -3.69429, 55.49136 ], [ -3.69414, 55.49146 ], [ -3.69378, 55.4916 ], [ -3.6932, 55.49178 ], [ -3.69239, 55.49203 ], [ -3.69233, 55.49206 ], [ -3.69227, 55.49208 ], [ -3.69224, 55.49211 ], [ -3.6922, 55.49215 ], [ -3.69215, 55.49218 ], [ -3.69213, 55.49222 ], [ -3.69213, 55.49229 ], [ -3.69213, 55.49249 ], [ -3.69214, 55.4928 ], [ -3.69215, 55.49334 ], [ -3.69214, 55.49343 ], [ -3.69208, 55.49378 ], [ -3.69202, 55.49414 ], [ -3.69195, 55.49426 ], [ -3.69169, 55.49477 ], [ -3.6916, 55.49495 ], [ -3.69151, 55.49512 ], [ -3.69126, 55.49561 ], [ -3.69111, 55.49599 ], [ -3.69083, 55.49666 ], [ -3.69063, 55.49716 ], [ -3.69061, 55.49718 ], [ -3.69059, 55.49725 ], [ -3.69057, 55.49733 ], [ -3.69051, 55.49769 ], [ -3.69048, 55.49785 ], [ -3.69041, 55.49821 ], [ -3.69042, 55.49839 ], [ -3.69046, 55.49924 ], [ -3.69058, 55.49964 ], [ -3.69094, 55.50088 ], [ -3.69126, 55.50195 ], [ -3.69136, 55.5023 ], [ -3.69152, 55.50282 ], [ -3.69153, 55.50284 ], [ -3.69179, 55.50335 ], [ -3.6918, 55.50337 ], [ -3.69209, 55.50367 ], [ -3.69221, 55.5038 ], [ -3.69236, 55.50393 ], [ -3.69238, 55.50395 ], [ -3.69246, 55.50403 ], [ -3.69286, 55.50428 ], [ -3.6928556, 55.5042761 ], [ -3.69305, 55.50434 ], [ -3.69315, 55.50435 ], [ -3.69337, 55.50439 ], [ -3.69344, 55.50435 ], [ -3.6935, 55.50432 ], [ -3.69362, 55.5043 ], [ -3.69377, 55.50429 ], [ -3.69392, 55.50424 ], [ -3.694, 55.50422 ], [ -3.69412, 55.50415 ], [ -3.69438, 55.504 ], [ -3.69451, 55.50391 ], [ -3.69462, 55.50385 ], [ -3.69475, 55.50379 ], [ -3.69484, 55.50376 ], [ -3.69491, 55.50373 ], [ -3.69508, 55.50368 ], [ -3.69512, 55.50367 ], [ -3.69523, 55.50364 ], [ -3.69542, 55.50359 ], [ -3.69571, 55.5035 ], [ -3.69572, 55.5035 ], [ -3.69589, 55.50344 ], [ -3.69603, 55.5034 ], [ -3.69639, 55.50327 ], [ -3.69661, 55.50325 ], [ -3.69674, 55.50325 ], [ -3.69694, 55.50325 ], [ -3.696938, 55.5032472 ], [ -3.69698, 55.50326 ], [ -3.69701, 55.50326 ], [ -3.69703, 55.50327 ], [ -3.69706, 55.50327 ], [ -3.6971, 55.50327 ], [ -3.69714, 55.50327 ], [ -3.69717, 55.50327 ], [ -3.69722, 55.50327 ], [ -3.69725, 55.50326 ], [ -3.69729, 55.50326 ], [ -3.69745, 55.50329 ], [ -3.69756, 55.50331 ], [ -3.69775, 55.50338 ], [ -3.69803, 55.50348 ], [ -3.6984, 55.50364 ], [ -3.69866, 55.50375 ], [ -3.69891, 55.50385 ], [ -3.70275, 55.50545 ], [ -3.703, 55.50556 ], [ -3.70317, 55.50563 ], [ -3.70326, 55.50567 ], [ -3.70379, 55.50587 ], [ -3.7045, 55.50614 ], [ -3.70458, 55.50616 ], [ -3.70543, 55.5064 ], [ -3.70583, 55.50652 ], [ -3.70601, 55.50655 ], [ -3.70661, 55.50668 ], [ -3.70664, 55.50668 ], [ -3.70691, 55.50672 ], [ -3.70722, 55.50677 ], [ -3.70753, 55.50682 ], [ -3.70771, 55.50685 ], [ -3.70784, 55.50686 ], [ -3.70815, 55.50689 ], [ -3.70842, 55.50692 ], [ -3.70846, 55.50692 ], [ -3.70909, 55.50695 ], [ -3.70941, 55.50697 ], [ -3.70961, 55.50698 ], [ -3.70973, 55.50698 ], [ -3.71079, 55.50694 ], [ -3.71131, 55.5069 ], [ -3.71147, 55.50689 ], [ -3.71162, 55.50687 ], [ -3.71193, 55.50684 ], [ -3.7121, 55.50682 ], [ -3.71254, 55.50673 ], [ -3.71264, 55.50671 ], [ -3.71285, 55.50668 ], [ -3.71314, 55.50664 ], [ -3.71315, 55.50664 ], [ -3.71345, 55.50657 ], [ -3.71374, 55.50651 ], [ -3.71435, 55.5064 ], [ -3.71496, 55.5063 ], [ -3.71526, 55.50625 ], [ -3.71557, 55.5062 ], [ -3.71566, 55.50618 ], [ -3.71588, 55.50615 ], [ -3.71619, 55.50612 ], [ -3.7165, 55.50608 ], [ -3.71681, 55.50605 ], [ -3.71707, 55.50602 ], [ -3.71712, 55.50601 ], [ -3.71744, 55.506 ], [ -3.71776, 55.50599 ], [ -3.71807, 55.50598 ], [ -3.71839, 55.50597 ], [ -3.719, 55.50595 ], [ -3.71903, 55.50595 ], [ -3.71934, 55.50595 ], [ -3.71966, 55.50596 ], [ -3.71998, 55.50597 ], [ -3.72093, 55.50598 ], [ -3.72103, 55.50599 ], [ -3.72125, 55.50599 ], [ -3.72156, 55.50601 ], [ -3.72252, 55.50604 ], [ -3.72283, 55.50605 ], [ -3.72315, 55.50606 ], [ -3.72369, 55.50608 ], [ -3.72472, 55.50617 ], [ -3.72504, 55.5062 ], [ -3.72535, 55.50623 ], [ -3.72566, 55.50626 ], [ -3.72655, 55.50634 ], [ -3.7266, 55.50635 ], [ -3.72691, 55.50639 ], [ -3.72722, 55.50643 ], [ -3.72771, 55.5065 ], [ -3.72865, 55.50664 ], [ -3.72943, 55.50677 ], [ -3.72962, 55.50681 ], [ -3.7307, 55.50701 ], [ -3.73237, 55.50735 ], [ -3.73314, 55.50751 ], [ -3.73344, 55.50757 ], [ -3.73407, 55.5077 ], [ -3.73523, 55.50794 ], [ -3.73552, 55.50801 ], [ -3.73573, 55.50805 ], [ -3.73641, 55.5082 ], [ -3.73671, 55.50827 ], [ -3.73698, 55.50833 ], [ -3.737, 55.50833 ], [ -3.73827, 55.50865 ], [ -3.73901, 55.50888 ], [ -3.73928, 55.50897 ], [ -3.74053, 55.50935 ], [ -3.74067, 55.5094 ], [ -3.74095, 55.50949 ], [ -3.74122, 55.50958 ], [ -3.74128, 55.5096 ], [ -3.74212, 55.50986 ], [ -3.7424, 55.50995 ], [ -3.74268, 55.51003 ], [ -3.74295, 55.51012 ], [ -3.74351, 55.51029 ], [ -3.74379, 55.51038 ], [ -3.74435, 55.51055 ], [ -3.74491, 55.51072 ], [ -3.74517, 55.5108 ], [ -3.74573, 55.511 ], [ -3.74627, 55.51119 ], [ -3.74653, 55.51128 ], [ -3.74707, 55.51147 ], [ -3.74734, 55.51157 ], [ -3.74761, 55.51166 ], [ -3.74842, 55.51195 ], [ -3.74869, 55.51204 ], [ -3.74896, 55.51214 ], [ -3.7495, 55.51233 ], [ -3.75139, 55.51299 ], [ -3.75247, 55.51337 ], [ -3.75665, 55.51484 ], [ -3.75677, 55.51489 ], [ -3.75759, 55.51519 ], [ -3.75796, 55.51533 ], [ -3.75822, 55.51543 ], [ -3.75848, 55.51553 ], [ -3.76084, 55.51643 ], [ -3.76092, 55.51646 ], [ -3.76118, 55.51655 ], [ -3.76411, 55.51763 ], [ -3.76424, 55.51767 ], [ -3.76438, 55.51773 ], [ -3.76545, 55.51812 ], [ -3.76625, 55.51841 ], [ -3.76705, 55.5187 ], [ -3.76732, 55.5188 ], [ -3.76812, 55.51909 ], [ -3.76919, 55.51948 ], [ -3.77026, 55.51986 ], [ -3.7703, 55.51988 ], [ -3.7719, 55.52041 ], [ -3.77245, 55.5206 ], [ -3.77327, 55.52087 ], [ -3.77464, 55.52133 ], [ -3.7759, 55.52174 ], [ -3.77601, 55.52178 ], [ -3.77895, 55.52274 ], [ -3.77904, 55.52277 ], [ -3.78126, 55.52347 ], [ -3.78202, 55.52371 ], [ -3.78239, 55.52379 ], [ -3.78328, 55.52407 ], [ -3.78378, 55.52421 ], [ -3.78439, 55.52434 ], [ -3.78514, 55.52452 ], [ -3.78619, 55.5247 ], [ -3.78628, 55.52472 ], [ -3.78741, 55.5249 ], [ -3.78863, 55.52509 ], [ -3.78953, 55.52522 ], [ -3.79065, 55.52536 ], [ -3.7915, 55.52553 ], [ -3.79168, 55.52557 ], [ -3.79195, 55.52563 ], [ -3.79271, 55.52584 ], [ -3.7934, 55.52607 ], [ -3.79391, 55.52626 ], [ -3.79396, 55.52628 ], [ -3.79441, 55.52648 ], [ -3.79466, 55.52659 ], [ -3.79483, 55.52666 ], [ -3.79491, 55.5267 ], [ -3.79527, 55.52689 ], [ -3.79588, 55.52724 ], [ -3.79628, 55.52749 ], [ -3.79679, 55.52787 ], [ -3.79729, 55.52823 ], [ -3.79802, 55.52885 ], [ -3.79827, 55.52908 ], [ -3.79856, 55.52936 ], [ -3.799, 55.52978 ], [ -3.79923, 55.53001 ], [ -3.79935, 55.53014 ], [ -3.79952, 55.53033 ], [ -3.80008, 55.53096 ], [ -3.80034, 55.53131 ], [ -3.80038, 55.53136 ], [ -3.80086, 55.53196 ], [ -3.80099, 55.53213 ], [ -3.80111, 55.53228 ], [ -3.80164, 55.53305 ], [ -3.80182, 55.53331 ], [ -3.80207, 55.53375 ], [ -3.8021, 55.53381 ], [ -3.80253, 55.5345 ], [ -3.80261, 55.53466 ], [ -3.8027, 55.53484 ], [ -3.80279, 55.53501 ], [ -3.80281, 55.53506 ], [ -3.80296, 55.53536 ], [ -3.80304, 55.53553 ], [ -3.8032, 55.53588 ], [ -3.80326, 55.536 ], [ -3.80335, 55.53623 ], [ -3.8037, 55.53718 ], [ -3.80383, 55.53745 ], [ -3.80393, 55.5377 ], [ -3.80405, 55.53821 ], [ -3.80415, 55.53879 ], [ -3.80416, 55.53888 ], [ -3.80421, 55.53919 ], [ -3.80427, 55.53968 ], [ -3.80425, 55.54014 ], [ -3.80425, 55.54058 ], [ -3.80423, 55.54067 ], [ -3.80421, 55.54085 ], [ -3.80418, 55.54103 ], [ -3.80416, 55.54123 ], [ -3.80412, 55.54139 ], [ -3.80406, 55.54164 ], [ -3.80399, 55.54192 ], [ -3.80394, 55.5421 ], [ -3.80394, 55.54212 ], [ -3.80389, 55.54228 ], [ -3.80383, 55.54245 ], [ -3.80375, 55.54271 ], [ -3.8037, 55.54281 ], [ -3.80361, 55.54298 ], [ -3.80353, 55.54315 ], [ -3.8035, 55.54322 ], [ -3.80309, 55.54383 ], [ -3.80305, 55.54389 ], [ -3.80297, 55.544 ], [ -3.80284, 55.54417 ], [ -3.80269, 55.5444 ], [ -3.80254, 55.54459 ], [ -3.80228, 55.54495 ], [ -3.80201, 55.54534 ], [ -3.80188, 55.54566 ], [ -3.80179, 55.54585 ], [ -3.80173, 55.546 ], [ -3.80172, 55.54603 ], [ -3.80165, 55.54626 ], [ -3.80156, 55.54663 ], [ -3.80153, 55.54692 ], [ -3.80152, 55.54698 ], [ -3.80153, 55.54729 ], [ -3.80157, 55.5476 ], [ -3.80157, 55.54763 ], [ -3.80161, 55.54786 ], [ -3.80179, 55.54844 ], [ -3.80189, 55.54871 ], [ -3.8019, 55.54872 ], [ -3.80207, 55.54911 ], [ -3.8023, 55.54945 ], [ -3.80238, 55.54956 ], [ -3.80246, 55.54968 ], [ -3.80259, 55.54991 ], [ -3.80269, 55.55007 ], [ -3.80278, 55.55022 ], [ -3.80283, 55.55042 ], [ -3.80288, 55.5506 ], [ -3.80296, 55.55101 ], [ -3.80298, 55.5513 ], [ -3.80297, 55.55167 ], [ -3.80296, 55.55204 ], [ -3.80294, 55.55236 ], [ -3.80294, 55.55258 ], [ -3.80294, 55.55276 ], [ -3.80295, 55.55298 ], [ -3.80291, 55.55323 ], [ -3.8029, 55.55361 ], [ -3.80284, 55.55402 ], [ -3.80285, 55.55432 ], [ -3.80282, 55.55455 ], [ -3.80282, 55.55464 ], [ -3.80283, 55.55493 ], [ -3.80285, 55.55517 ], [ -3.8029, 55.55538 ], [ -3.80295, 55.55565 ], [ -3.803, 55.55592 ], [ -3.80306, 55.55606 ], [ -3.80314, 55.55623 ], [ -3.80315, 55.55625 ], [ -3.8033, 55.55658 ], [ -3.80349, 55.5569 ], [ -3.80361, 55.55709 ], [ -3.80362, 55.55709 ], [ -3.80376, 55.55725 ], [ -3.8038, 55.5573 ], [ -3.80405, 55.55757 ], [ -3.80406, 55.55758 ], [ -3.80424, 55.55772 ], [ -3.80425, 55.55772 ], [ -3.80438, 55.55788 ], [ -3.80448, 55.55798 ], [ -3.80453, 55.55804 ], [ -3.80469, 55.55819 ], [ -3.80492, 55.55846 ], [ -3.80496, 55.55852 ], [ -3.80507, 55.55868 ], [ -3.80511, 55.55874 ], [ -3.80519, 55.55885 ], [ -3.80526, 55.55896 ], [ -3.80529, 55.55902 ], [ -3.80537, 55.5592 ], [ -3.80538, 55.55922 ], [ -3.80546, 55.55937 ], [ -3.80554, 55.55953 ], [ -3.80554, 55.55954 ], [ -3.80559, 55.55972 ], [ -3.80564, 55.5599 ], [ -3.80565, 55.55992 ], [ -3.80568, 55.56008 ], [ -3.80572, 55.56026 ], [ -3.80573, 55.56028 ], [ -3.80576, 55.56043 ], [ -3.8058, 55.56061 ], [ -3.80581, 55.5607 ], [ -3.80583, 55.56079 ], [ -3.8059, 55.56108 ], [ -3.806, 55.56148 ], [ -3.80612, 55.56194 ], [ -3.80622, 55.5624 ], [ -3.80625, 55.56256 ], [ -3.80634, 55.56293 ], [ -3.80635, 55.56296 ], [ -3.8064, 55.56311 ], [ -3.80646, 55.56328 ], [ -3.80675, 55.56417 ], [ -3.80691, 55.56452 ], [ -3.80699, 55.56469 ], [ -3.80708, 55.56486 ], [ -3.80724, 55.56521 ], [ -3.80754, 55.56583 ], [ -3.80793, 55.56659 ], [ -3.80813, 55.56695 ], [ -3.8082, 55.56711 ], [ -3.80828, 55.56729 ], [ -3.8083, 55.56735 ], [ -3.80836, 55.56746 ], [ -3.80846, 55.56768 ], [ -3.80868, 55.56809 ], [ -3.809, 55.56865 ], [ -3.8091, 55.56884 ], [ -3.80959, 55.56973 ], [ -3.80992, 55.5702 ], [ -3.80998, 55.57029 ], [ -3.81005, 55.57036 ], [ -3.81019, 55.57052 ], [ -3.81034, 55.57068 ], [ -3.81035, 55.57069 ], [ -3.81051, 55.57083 ], [ -3.81069, 55.57098 ], [ -3.81075, 55.57104 ], [ -3.81106, 55.57128 ], [ -3.81128, 55.57141 ], [ -3.81156, 55.57158 ], [ -3.81172, 55.57167 ], [ -3.81206, 55.57186 ], [ -3.81217, 55.57192 ], [ -3.81241, 55.57203 ], [ -3.81251, 55.57208 ], [ -3.81266, 55.57215 ], [ -3.81292, 55.57226 ], [ -3.81315, 55.57236 ], [ -3.81317, 55.57237 ], [ -3.81342, 55.57248 ], [ -3.8141, 55.57278 ], [ -3.81417, 55.57281 ], [ -3.8152, 55.57323 ], [ -3.81585, 55.5735 ], [ -3.81659, 55.5738 ], [ -3.8165855, 55.5738016 ], [ -3.81636, 55.57403 ], [ -3.81593, 55.57439 ], [ -3.81585, 55.57445 ], [ -3.81583, 55.57447 ], [ -3.81576, 55.57451 ], [ -3.81561, 55.57456 ], [ -3.81557, 55.57458 ], [ -3.81538, 55.57466 ], [ -3.81531, 55.5747 ], [ -3.8153, 55.57472 ], [ -3.8153, 55.57473 ], [ -3.81529, 55.57473 ], [ -3.81529, 55.57474 ], [ -3.81528, 55.57475 ], [ -3.81527, 55.57475 ], [ -3.81527, 55.57476 ], [ -3.81526, 55.57476 ], [ -3.81525, 55.57477 ], [ -3.81524, 55.57477 ], [ -3.81523, 55.57478 ], [ -3.81522, 55.57478 ], [ -3.81521, 55.57479 ], [ -3.8152, 55.57479 ], [ -3.81519, 55.57479 ], [ -3.81518, 55.5748 ], [ -3.81517, 55.5748 ], [ -3.81516, 55.5748 ], [ -3.81515, 55.57481 ], [ -3.81512, 55.57481 ], [ -3.81505, 55.57486 ], [ -3.81495, 55.57496 ], [ -3.81485, 55.57509 ], [ -3.81478, 55.57515 ], [ -3.81467, 55.57526 ], [ -3.81448, 55.57538 ], [ -3.81423, 55.57551 ], [ -3.81405, 55.57562 ], [ -3.81402, 55.57564 ], [ -3.81395, 55.57568 ], [ -3.81387, 55.57572 ], [ -3.81381, 55.57574 ], [ -3.81356, 55.57585 ], [ -3.81355, 55.57585 ], [ -3.8133, 55.57596 ], [ -3.81314, 55.57603 ], [ -3.81299, 55.5761 ], [ -3.81276, 55.5762 ], [ -3.81254, 55.57629 ], [ -3.81252, 55.57629 ], [ -3.81228, 55.57638 ], [ -3.81227, 55.57639 ], [ -3.81201, 55.57649 ], [ -3.81181, 55.57657 ], [ -3.81146, 55.57681 ], [ -3.8114616, 55.5768057 ], [ -3.81147, 55.57683 ], [ -3.81148, 55.57686 ], [ -3.81148, 55.57689 ], [ -3.81147, 55.57691 ], [ -3.81147, 55.57694 ], [ -3.81146, 55.57697 ], [ -3.81144, 55.57699 ], [ -3.81142, 55.57702 ], [ -3.81153, 55.57742 ], [ -3.81159, 55.57755 ], [ -3.81162, 55.5776 ], [ -3.8117, 55.57771 ], [ -3.81189, 55.57798 ], [ -3.81212, 55.5782 ], [ -3.81245, 55.57852 ], [ -3.81281, 55.57879 ], [ -3.81284, 55.57881 ], [ -3.81306, 55.57894 ], [ -3.81343, 55.57917 ], [ -3.81382, 55.57937 ], [ -3.81398, 55.57943 ], [ -3.8148, 55.57974 ], [ -3.81495, 55.5798 ], [ -3.81535, 55.57992 ], [ -3.81562, 55.58001 ], [ -3.8159, 55.5801 ], [ -3.81618, 55.58019 ], [ -3.8164, 55.58026 ], [ -3.81645, 55.58028 ], [ -3.81672, 55.58038 ], [ -3.81699, 55.58048 ], [ -3.81726, 55.58057 ], [ -3.81727, 55.58058 ], [ -3.81751, 55.58068 ], [ -3.81763, 55.58074 ], [ -3.81776, 55.5808 ], [ -3.81801, 55.5809 ], [ -3.81834, 55.58106 ], [ -3.8198, 55.58192 ], [ -3.82002, 55.58205 ], [ -3.82074, 55.58247 ], [ -3.8211, 55.58271 ], [ -3.82131, 55.58285 ], [ -3.82207, 55.58334 ], [ -3.82264, 55.58376 ], [ -3.82284, 55.58391 ], [ -3.82333, 55.58428 ], [ -3.82341, 55.58434 ], [ -3.82359, 55.58448 ], [ -3.82415, 55.58492 ], [ -3.82445, 55.58516 ], [ -3.8247, 55.58537 ], [ -3.82542, 55.58598 ], [ -3.82572, 55.58628 ], [ -3.82649, 55.58706 ], [ -3.82661, 55.58718 ], [ -3.82664, 55.58722 ], [ -3.82738, 55.58804 ], [ -3.82756, 55.58825 ], [ -3.82833, 55.5892 ], [ -3.82836, 55.58924 ], [ -3.82848, 55.5894 ], [ -3.82885, 55.5899 ], [ -3.8291, 55.59023 ], [ -3.82922, 55.59039 ], [ -3.82972, 55.59105 ], [ -3.8301, 55.59155 ], [ -3.83017, 55.59164 ], [ -3.83027, 55.59175 ], [ -3.83036, 55.59191 ], [ -3.8304, 55.59196 ], [ -3.83046, 55.59206 ], [ -3.83055, 55.59218 ], [ -3.83059, 55.59223 ], [ -3.83064, 55.59229 ], [ -3.830642, 55.5922928 ], [ -3.83069, 55.59232 ], [ -3.83072, 55.59233 ], [ -3.83075, 55.59234 ], [ -3.83078, 55.59236 ], [ -3.83081, 55.59237 ], [ -3.83085, 55.59239 ], [ -3.83091, 55.59243 ], [ -3.83104, 55.59244 ], [ -3.83116, 55.59243 ], [ -3.83137, 55.59239 ], [ -3.8314, 55.59239 ], [ -3.83149, 55.59238 ], [ -3.83157, 55.59237 ], [ -3.83168, 55.59235 ], [ -3.83171, 55.59235 ], [ -3.83176, 55.59234 ], [ -3.83186, 55.59233 ], [ -3.83201, 55.59229 ], [ -3.83211, 55.59228 ], [ -3.83229, 55.59233 ], [ -3.83249, 55.59237 ], [ -3.83257, 55.59238 ], [ -3.8325749, 55.5923792 ], [ -3.83259, 55.59239 ], [ -3.83276, 55.59245 ], [ -3.83282, 55.59247 ], [ -3.83286, 55.59254 ], [ -3.83291, 55.59262 ], [ -3.83298, 55.59275 ], [ -3.83299, 55.59286 ], [ -3.8331, 55.5932 ], [ -3.83313, 55.5933 ], [ -3.83314, 55.59334 ], [ -3.83316, 55.5934 ], [ -3.8332, 55.59352 ], [ -3.83341, 55.59427 ], [ -3.83373, 55.59433 ], [ -3.83387, 55.59438 ], [ -3.83405, 55.59444 ], [ -3.8343, 55.59454 ], [ -3.83431, 55.59455 ], [ -3.83448, 55.59464 ], [ -3.83452, 55.59467 ], [ -3.83463, 55.59473 ], [ -3.83496, 55.59491 ], [ -3.83518, 55.59503 ], [ -3.8354, 55.59515 ], [ -3.83584, 55.5954 ], [ -3.83638, 55.59573 ], [ -3.83678, 55.59602 ], [ -3.83698, 55.5962 ], [ -3.83735, 55.5965 ], [ -3.83772, 55.59679 ], [ -3.83789, 55.59694 ], [ -3.83807, 55.59709 ], [ -3.83824, 55.59724 ], [ -3.83835, 55.59733 ], [ -3.83875, 55.5977 ], [ -3.83887, 55.59781 ], [ -3.83955, 55.59845 ], [ -3.83968, 55.59857 ], [ -3.83984, 55.59872 ], [ -3.84, 55.59888 ], [ -3.84027, 55.59914 ], [ -3.84033, 55.59919 ], [ -3.8405, 55.59934 ], [ -3.84083, 55.59964 ], [ -3.841, 55.5998 ], [ -3.84117, 55.59995 ], [ -3.84126, 55.60003 ], [ -3.84149, 55.60026 ], [ -3.84181, 55.60057 ], [ -3.84212, 55.60088 ], [ -3.84223, 55.60099 ], [ -3.84257, 55.60136 ], [ -3.84271, 55.60152 ], [ -3.84282, 55.60164 ], [ -3.84286, 55.60168 ], [ -3.84298, 55.6018 ], [ -3.84316, 55.602 ], [ -3.84324, 55.60209 ], [ -3.84331, 55.60216 ], [ -3.84337, 55.60223 ], [ -3.8436, 55.60248 ], [ -3.84418, 55.60312 ], [ -3.84446, 55.60344 ], [ -3.8449, 55.60393 ], [ -3.84534, 55.60437 ], [ -3.84536, 55.6044 ], [ -3.84553, 55.60455 ], [ -3.84587, 55.60487 ], [ -3.84632, 55.60524 ], [ -3.84641, 55.6053 ], [ -3.84681, 55.60558 ], [ -3.84694, 55.60566 ], [ -3.84702, 55.60571 ], [ -3.84743, 55.60597 ], [ -3.84765, 55.60612 ], [ -3.84787, 55.60625 ], [ -3.84829, 55.60652 ], [ -3.84857, 55.6067 ], [ -3.84912, 55.60704 ], [ -3.84914, 55.60705 ], [ -3.84964, 55.60743 ], [ -3.84988, 55.60764 ], [ -3.84997, 55.60772 ], [ -3.85014, 55.60788 ], [ -3.8502, 55.60795 ], [ -3.85034, 55.6081 ], [ -3.85034, 55.60811 ], [ -3.85077, 55.60859 ], [ -3.85162, 55.60955 ], [ -3.85163, 55.60956 ], [ -3.85205, 55.61004 ], [ -3.85219, 55.6102 ], [ -3.85234, 55.61036 ], [ -3.85339, 55.61155 ], [ -3.85382, 55.61203 ], [ -3.85428, 55.61257 ], [ -3.85497, 55.61334 ], [ -3.85547, 55.6139 ], [ -3.85597, 55.61447 ], [ -3.85611, 55.61463 ], [ -3.85625, 55.61479 ], [ -3.8571, 55.61575 ], [ -3.85763, 55.61634 ], [ -3.85769, 55.61639 ], [ -3.85783, 55.61655 ], [ -3.85823, 55.617 ], [ -3.8586, 55.61746 ], [ -3.85876, 55.6177 ], [ -3.85879, 55.61774 ], [ -3.85887, 55.61787 ], [ -3.8589, 55.61792 ], [ -3.85896, 55.61803 ], [ -3.85896, 55.61804 ], [ -3.85902, 55.61817 ], [ -3.85904, 55.61821 ], [ -3.85913, 55.61839 ], [ -3.85929, 55.61873 ], [ -3.8593, 55.61874 ], [ -3.85938, 55.61891 ], [ -3.85956, 55.61925 ], [ -3.85958, 55.61929 ], [ -3.85973, 55.61949 ], [ -3.85987, 55.61969 ], [ -3.85993, 55.61975 ], [ -3.86008, 55.61991 ], [ -3.8601, 55.61992 ], [ -3.86024, 55.62006 ], [ -3.86033, 55.62014 ], [ -3.86057, 55.62037 ], [ -3.86073, 55.62053 ], [ -3.86172, 55.62146 ], [ -3.86214, 55.62186 ], [ -3.86275, 55.62242 ], [ -3.863, 55.62265 ], [ -3.86301, 55.62265 ], [ -3.86319, 55.6228 ], [ -3.86321, 55.62282 ], [ -3.86337, 55.62293 ], [ -3.86338, 55.62294 ], [ -3.86383, 55.62322 ], [ -3.86402, 55.62334 ], [ -3.86416, 55.62342 ], [ -3.8645, 55.62363 ], [ -3.8648, 55.62381 ], [ -3.86489, 55.62387 ], [ -3.8654, 55.62417 ], [ -3.86577, 55.62439 ], [ -3.86583, 55.62443 ], [ -3.86634, 55.62475 ], [ -3.8668, 55.62502 ], [ -3.86749, 55.62545 ], [ -3.86784, 55.62566 ], [ -3.86893, 55.62631 ], [ -3.87026, 55.62711 ], [ -3.87034, 55.62715 ], [ -3.87185, 55.62808 ], [ -3.87226, 55.62832 ], [ -3.87234, 55.62837 ], [ -3.8725, 55.62847 ], [ -3.87256, 55.6285 ], [ -3.87294, 55.62873 ], [ -3.87299, 55.62877 ], [ -3.87359, 55.62913 ], [ -3.87444, 55.62963 ], [ -3.8751, 55.63003 ], [ -3.87554, 55.63033 ], [ -3.87568, 55.63042 ], [ -3.87587, 55.63057 ], [ -3.87595, 55.63064 ], [ -3.87616, 55.63084 ], [ -3.87644, 55.63111 ], [ -3.87662, 55.63127 ], [ -3.87677, 55.63145 ], [ -3.87701, 55.63182 ], [ -3.87703, 55.63185 ], [ -3.8771, 55.63197 ], [ -3.8772, 55.63214 ], [ -3.87727, 55.63226 ], [ -3.87729, 55.63231 ], [ -3.87754, 55.63278 ], [ -3.8776, 55.6329 ], [ -3.87778, 55.63324 ], [ -3.87781, 55.63332 ], [ -3.8787, 55.63494 ], [ -3.87879, 55.63511 ], [ -3.87945, 55.63632 ], [ -3.87973, 55.63686 ], [ -3.87978, 55.63696 ], [ -3.8801, 55.63756 ], [ -3.88018, 55.63778 ], [ -3.88019, 55.63783 ], [ -3.88021, 55.63796 ], [ -3.88021, 55.63801 ], [ -3.88018, 55.63842 ], [ -3.88015, 55.63855 ], [ -3.88007, 55.63894 ], [ -3.88003, 55.6393 ], [ -3.88006, 55.6396 ], [ -3.88007, 55.63962 ], [ -3.88008, 55.63965 ], [ -3.88022, 55.64001 ], [ -3.88058, 55.64075 ], [ -3.88083, 55.64127 ], [ -3.88092, 55.64144 ], [ -3.88093, 55.64147 ], [ -3.88105, 55.64166 ], [ -3.88117, 55.64189 ], [ -3.8813, 55.64213 ], [ -3.88138, 55.64224 ], [ -3.88151, 55.64241 ], [ -3.88154, 55.64245 ], [ -3.88172, 55.64262 ], [ -3.88184, 55.64272 ], [ -3.88192, 55.64278 ], [ -3.88232, 55.643 ], [ -3.88274, 55.64322 ], [ -3.88328, 55.64349 ], [ -3.88352, 55.64361 ], [ -3.88371, 55.64371 ], [ -3.88376, 55.64373 ], [ -3.884, 55.64385 ], [ -3.88471, 55.64421 ], [ -3.88476, 55.64423 ], [ -3.88543, 55.64457 ], [ -3.88561, 55.64466 ], [ -3.88605, 55.64488 ], [ -3.88622, 55.64497 ], [ -3.88625, 55.64498 ], [ -3.88628, 55.645 ], [ -3.88634, 55.64503 ], [ -3.88644, 55.64509 ], [ -3.88651, 55.64513 ], [ -3.88698, 55.64539 ], [ -3.88702, 55.64541 ], [ -3.88773, 55.64587 ], [ -3.88811, 55.64613 ], [ -3.8884, 55.64639 ], [ -3.88847, 55.64645 ], [ -3.88851, 55.64649 ], [ -3.88911, 55.64707 ], [ -3.88924, 55.64721 ], [ -3.8893, 55.64728 ], [ -3.88966, 55.6477 ], [ -3.8898, 55.64786 ], [ -3.88992, 55.64798 ], [ -3.88996, 55.64803 ], [ -3.8901, 55.64817 ], [ -3.89022, 55.64827 ], [ -3.89027, 55.64833 ], [ -3.8904, 55.64843 ], [ -3.89058, 55.64855 ], [ -3.89083, 55.64868 ], [ -3.89122, 55.64885 ], [ -3.89146, 55.64895 ], [ -3.89156, 55.649 ], [ -3.89165, 55.64907 ], [ -3.89175, 55.64915 ], [ -3.8917493, 55.6491486 ], [ -3.89171, 55.64924 ], [ -3.89172, 55.64929 ], [ -3.89171, 55.64935 ], [ -3.89169, 55.64941 ], [ -3.89166, 55.64947 ], [ -3.89163, 55.64951 ], [ -3.8916, 55.64952 ], [ -3.89157, 55.64953 ], [ -3.89155, 55.64954 ], [ -3.89153, 55.64955 ], [ -3.8915, 55.64956 ], [ -3.89145, 55.64961 ], [ -3.89143, 55.64965 ], [ -3.89142, 55.64967 ], [ -3.89142, 55.64969 ], [ -3.89142, 55.64971 ], [ -3.89142, 55.64973 ], [ -3.89143, 55.64975 ], [ -3.89144, 55.64977 ], [ -3.89145, 55.64979 ], [ -3.89146, 55.64981 ], [ -3.89138, 55.64996 ], [ -3.89122, 55.65004 ], [ -3.89107, 55.65012 ], [ -3.891, 55.65016 ], [ -3.89093, 55.65019 ], [ -3.89082, 55.65025 ], [ -3.89077, 55.65027 ], [ -3.89057, 55.65038 ], [ -3.8905666, 55.6503827 ], [ -3.8906, 55.65041 ], [ -3.89063, 55.65043 ], [ -3.89064, 55.65045 ], [ -3.89065, 55.65047 ], [ -3.89066, 55.65049 ], [ -3.89066, 55.65051 ], [ -3.89066, 55.65053 ], [ -3.89066, 55.65055 ], [ -3.89065, 55.65057 ], [ -3.89064, 55.65059 ], [ -3.89062, 55.65062 ], [ -3.89057, 55.65066 ], [ -3.89157, 55.65115 ], [ -3.89182, 55.65126 ], [ -3.89209, 55.65139 ], [ -3.89231, 55.6515 ], [ -3.89255, 55.65161 ], [ -3.89326, 55.65194 ], [ -3.89329, 55.65196 ], [ -3.89354, 55.65207 ], [ -3.89374, 55.65216 ], [ -3.89403, 55.6523 ], [ -3.89427, 55.65242 ], [ -3.89475, 55.65265 ], [ -3.89492, 55.65273 ], [ -3.89524, 55.65288 ], [ -3.89548, 55.653 ], [ -3.89569, 55.6531 ], [ -3.89594, 55.65321 ], [ -3.89668, 55.6536 ], [ -3.89691, 55.65372 ], [ -3.89714, 55.65384 ], [ -3.8972, 55.65388 ], [ -3.89735, 55.65397 ], [ -3.89749, 55.65406 ], [ -3.89757, 55.65411 ], [ -3.89779, 55.65424 ], [ -3.89801, 55.65437 ], [ -3.89807, 55.6544 ], [ -3.89906, 55.65506 ], [ -3.89981, 55.65563 ], [ -3.90018, 55.6559 ], [ -3.90078, 55.65634 ], [ -3.90118, 55.65663 ], [ -3.90172, 55.65707 ], [ -3.90192, 55.65722 ], [ -3.90212, 55.65736 ], [ -3.90283, 55.65788 ], [ -3.9029, 55.65793 ], [ -3.9031, 55.65807 ], [ -3.90409, 55.65877 ], [ -3.90425, 55.65889 ], [ -3.90489, 55.65933 ], [ -3.90533, 55.65964 ], [ -3.90629, 55.66029 ], [ -3.90653, 55.66043 ], [ -3.90693, 55.66067 ], [ -3.90721, 55.66081 ], [ -3.90745, 55.66093 ], [ -3.90752, 55.66096 ], [ -3.90775, 55.66108 ], [ -3.90792, 55.66121 ], [ -3.90802, 55.66131 ], [ -3.90807, 55.66136 ], [ -3.90812, 55.66143 ], [ -3.90816, 55.66151 ], [ -3.90818, 55.66159 ], [ -3.9082, 55.66168 ], [ -3.90816, 55.66188 ], [ -3.90805, 55.66224 ], [ -3.90804, 55.6623 ], [ -3.90803, 55.6623 ], [ -3.90798, 55.66247 ], [ -3.90798, 55.66248 ], [ -3.90794, 55.66261 ], [ -3.90791, 55.66272 ], [ -3.90791, 55.66282 ], [ -3.90791, 55.66284 ], [ -3.90792, 55.66292 ], [ -3.90794, 55.66302 ], [ -3.90794, 55.66304 ], [ -3.90799, 55.66319 ], [ -3.908, 55.66321 ], [ -3.90805, 55.66337 ], [ -3.90806, 55.66339 ], [ -3.90815, 55.66353 ], [ -3.90819, 55.66359 ], [ -3.90828, 55.6637 ], [ -3.9083, 55.66373 ], [ -3.90843, 55.66386 ], [ -3.9086, 55.66398 ], [ -3.90863, 55.664 ], [ -3.90881, 55.66411 ], [ -3.90907, 55.66425 ], [ -3.90957, 55.66448 ], [ -3.90981, 55.6646 ], [ -3.9103, 55.66483 ], [ -3.91078, 55.66506 ], [ -3.91127, 55.6653 ], [ -3.91134, 55.66533 ], [ -3.9117, 55.66549 ], [ -3.91171, 55.66549 ], [ -3.91196, 55.6656 ], [ -3.91216, 55.66568 ], [ -3.91234, 55.66574 ], [ -3.91262, 55.66583 ], [ -3.91305, 55.66597 ], [ -3.91481, 55.66655 ], [ -3.91514, 55.66666 ], [ -3.91605, 55.66696 ], [ -3.91649, 55.66714 ], [ -3.91693, 55.66736 ], [ -3.91728, 55.66756 ], [ -3.91758, 55.66776 ], [ -3.91809, 55.66809 ], [ -3.91824, 55.66822 ], [ -3.91835, 55.66833 ], [ -3.91848, 55.6685 ], [ -3.91857, 55.66863 ], [ -3.91866, 55.66875 ], [ -3.91874, 55.66888 ], [ -3.91876, 55.6689 ], [ -3.91888, 55.66908 ], [ -3.91898, 55.66921 ], [ -3.9191, 55.66934 ], [ -3.91924, 55.66944 ], [ -3.91935, 55.6695 ], [ -3.91949, 55.66957 ], [ -3.91965, 55.66962 ], [ -3.91973, 55.66966 ], [ -3.9199, 55.66972 ], [ -3.92027, 55.66985 ], [ -3.92078, 55.67002 ], [ -3.92133, 55.67021 ], [ -3.92184, 55.67038 ], [ -3.9222, 55.67051 ], [ -3.92241, 55.67059 ], [ -3.92248, 55.67062 ], [ -3.92292, 55.67081 ], [ -3.92407, 55.67139 ], [ -3.92451, 55.67167 ], [ -3.92462, 55.67174 ], [ -3.92498, 55.67197 ], [ -3.92513, 55.67207 ], [ -3.92525, 55.67218 ], [ -3.92538, 55.67237 ], [ -3.92559, 55.67275 ], [ -3.92578, 55.67309 ], [ -3.92592, 55.67335 ], [ -3.92613, 55.67364 ], [ -3.9262, 55.67374 ], [ -3.92627, 55.67381 ], [ -3.92632, 55.67386 ], [ -3.92645, 55.67395 ], [ -3.9266, 55.67402 ], [ -3.92673, 55.67406 ], [ -3.92685, 55.67409 ], [ -3.92686, 55.67409 ], [ -3.92686, 55.67408 ], [ -3.92687, 55.67408 ], [ -3.92688, 55.67408 ], [ -3.92688, 55.67407 ], [ -3.92689, 55.67407 ], [ -3.9269, 55.67407 ], [ -3.92691, 55.67407 ], [ -3.92692, 55.67407 ], [ -3.92693, 55.67407 ], [ -3.92694, 55.67407 ], [ -3.92695, 55.67407 ], [ -3.92696, 55.67407 ], [ -3.92696, 55.67408 ], [ -3.92697, 55.67408 ], [ -3.92698, 55.67408 ], [ -3.92698, 55.67409 ], [ -3.92699, 55.67409 ], [ -3.92699, 55.6741 ], [ -3.92699, 55.67411 ], [ -3.92699, 55.67412 ], [ -3.9272, 55.67413 ], [ -3.92746, 55.67413 ], [ -3.92774, 55.67413 ], [ -3.92796, 55.67413 ], [ -3.92797, 55.67413 ], [ -3.92801, 55.67413 ], [ -3.92814, 55.67413 ], [ -3.92828, 55.67412 ], [ -3.92842, 55.67412 ], [ -3.92885, 55.67415 ], [ -3.92907, 55.67418 ], [ -3.92918, 55.6742 ], [ -3.92945, 55.67426 ], [ -3.92962, 55.67433 ], [ -3.92978, 55.67441 ], [ -3.92988, 55.67449 ], [ -3.93001, 55.67463 ], [ -3.93008, 55.67475 ], [ -3.93009, 55.6748 ], [ -3.93014, 55.67492 ], [ -3.93067, 55.67644 ], [ -3.9308, 55.67679 ], [ -3.9309, 55.67706 ], [ -3.93093, 55.67714 ], [ -3.93103, 55.67745 ], [ -3.93105, 55.6775 ], [ -3.93106, 55.67752 ], [ -3.9312, 55.67784 ], [ -3.93131, 55.67802 ], [ -3.93141, 55.67818 ], [ -3.93156, 55.67837 ], [ -3.93172, 55.67857 ], [ -3.93204, 55.6789 ], [ -3.93246, 55.67925 ], [ -3.93253, 55.6793 ], [ -3.93271, 55.67943 ], [ -3.93307, 55.67966 ], [ -3.93337, 55.67984 ], [ -3.93361, 55.67995 ], [ -3.93377, 55.68004 ], [ -3.93385, 55.68008 ], [ -3.9344, 55.68034 ], [ -3.93449, 55.68038 ], [ -3.93486, 55.68052 ], [ -3.93493, 55.68054 ], [ -3.93507, 55.68058 ], [ -3.93522, 55.68063 ], [ -3.93565, 55.68076 ], [ -3.93613, 55.68094 ], [ -3.93662, 55.68117 ], [ -3.93707, 55.68142 ], [ -3.93741, 55.68164 ], [ -3.93764, 55.68182 ], [ -3.9379, 55.68207 ], [ -3.93814, 55.68232 ], [ -3.93829, 55.68252 ], [ -3.93844, 55.68274 ], [ -3.93845, 55.68276 ], [ -3.93854, 55.68293 ], [ -3.93856, 55.68296 ], [ -3.93871, 55.68328 ], [ -3.93879, 55.68345 ], [ -3.93883, 55.68352 ], [ -3.93893, 55.6838 ], [ -3.93897, 55.6839 ], [ -3.93912, 55.68433 ], [ -3.93914, 55.68438 ], [ -3.93919, 55.6845 ], [ -3.93922, 55.68457 ], [ -3.93932, 55.68475 ], [ -3.93943, 55.68492 ], [ -3.9396, 55.68511 ], [ -3.93967, 55.68517 ], [ -3.93978, 55.68527 ], [ -3.93991, 55.68539 ], [ -3.94001, 55.68547 ], [ -3.94018, 55.68562 ], [ -3.94126, 55.68653 ], [ -3.9413, 55.68656 ], [ -3.94138, 55.68664 ], [ -3.94143, 55.68669 ], [ -3.94146, 55.68672 ], [ -3.9415, 55.68675 ], [ -3.94168, 55.6869 ], [ -3.94182, 55.68702 ], [ -3.94193, 55.68712 ], [ -3.94211, 55.68726 ], [ -3.94216, 55.6873 ], [ -3.94225, 55.68738 ], [ -3.94234, 55.68746 ], [ -3.9424, 55.68751 ], [ -3.94253, 55.68763 ], [ -3.9426, 55.68768 ], [ -3.94267, 55.68774 ], [ -3.94274, 55.68781 ], [ -3.94282, 55.68788 ], [ -3.94294, 55.68798 ], [ -3.94308, 55.6881 ], [ -3.94322, 55.68822 ], [ -3.94336, 55.68834 ], [ -3.94343, 55.6884 ], [ -3.94351, 55.68847 ], [ -3.94362, 55.68858 ], [ -3.94379, 55.68875 ], [ -3.94381, 55.68878 ], [ -3.94389, 55.68888 ], [ -3.94394, 55.68895 ], [ -3.94398, 55.689 ], [ -3.94405, 55.68912 ], [ -3.94406, 55.68913 ], [ -3.94414, 55.68926 ], [ -3.94415, 55.68929 ], [ -3.94433, 55.68961 ], [ -3.94441, 55.68975 ], [ -3.94444, 55.6898 ], [ -3.94452, 55.68994 ], [ -3.94454, 55.68997 ], [ -3.94466, 55.69018 ], [ -3.9447, 55.69026 ], [ -3.94478, 55.69041 ], [ -3.94486, 55.69055 ], [ -3.94492, 55.69066 ], [ -3.94495, 55.69071 ], [ -3.94502, 55.69083 ], [ -3.94516, 55.69107 ], [ -3.9452, 55.69114 ], [ -3.94524, 55.69121 ], [ -3.94527, 55.69128 ], [ -3.94531, 55.69135 ], [ -3.94539, 55.69149 ], [ -3.94546, 55.6916 ], [ -3.94552, 55.6917 ], [ -3.94555, 55.69174 ], [ -3.9456, 55.69182 ], [ -3.94561, 55.69186 ], [ -3.94564, 55.6919 ], [ -3.94567, 55.69198 ], [ -3.9457, 55.69204 ], [ -3.94572, 55.69207 ], [ -3.94579, 55.6922 ], [ -3.94582, 55.69225 ], [ -3.94588, 55.69236 ], [ -3.94594, 55.69246 ], [ -3.94606, 55.69269 ], [ -3.94609, 55.69274 ], [ -3.94617, 55.69288 ], [ -3.94623, 55.69298 ], [ -3.94632, 55.69313 ], [ -3.94643, 55.69333 ], [ -3.94647, 55.6934 ], [ -3.94655, 55.69353 ], [ -3.94662, 55.69367 ], [ -3.94666, 55.69373 ], [ -3.94677, 55.69394 ], [ -3.94696, 55.69429 ], [ -3.94705, 55.69446 ], [ -3.94707, 55.69452 ], [ -3.94718, 55.69471 ], [ -3.94742, 55.69515 ], [ -3.94747, 55.69524 ], [ -3.94771, 55.69564 ], [ -3.94793, 55.696 ], [ -3.94816, 55.69642 ], [ -3.94818, 55.69646 ], [ -3.94838, 55.69683 ], [ -3.94841, 55.69688 ], [ -3.9485, 55.69702 ], [ -3.94859, 55.69713 ], [ -3.94862, 55.69716 ], [ -3.94934, 55.69796 ], [ -3.95028, 55.69901 ], [ -3.95064, 55.69941 ], [ -3.95139, 55.70025 ], [ -3.95178, 55.7007 ], [ -3.95216, 55.70113 ], [ -3.95276, 55.70182 ], [ -3.95306, 55.70215 ], [ -3.95321, 55.70231 ], [ -3.9535, 55.70263 ], [ -3.95394, 55.70311 ], [ -3.95423, 55.70343 ], [ -3.95467, 55.70391 ], [ -3.95481, 55.70407 ], [ -3.9554, 55.70471 ], [ -3.95556, 55.70488 ], [ -3.9559, 55.70528 ], [ -3.9561, 55.70553 ], [ -3.95632, 55.70579 ], [ -3.95643, 55.70597 ], [ -3.95646, 55.70603 ], [ -3.957, 55.70706 ], [ -3.957, 55.70707 ], [ -3.95723, 55.7075 ], [ -3.95755, 55.70804 ], [ -3.9578, 55.70843 ], [ -3.95789, 55.70856 ], [ -3.95791, 55.7086 ], [ -3.95802, 55.70877 ], [ -3.95818, 55.70902 ], [ -3.95843, 55.70945 ], [ -3.95844, 55.70945 ], [ -3.95853, 55.7096 ], [ -3.95853, 55.70962 ], [ -3.95854, 55.70962 ], [ -3.95858, 55.70972 ], [ -3.95861, 55.70979 ], [ -3.95867, 55.70993 ], [ -3.95869, 55.70997 ], [ -3.95873, 55.71011 ], [ -3.95883, 55.71037 ], [ -3.95908, 55.71102 ], [ -3.9591, 55.71106 ], [ -3.95915, 55.7112 ], [ -3.95915, 55.71121 ], [ -3.95934, 55.7117 ], [ -3.95942, 55.7119 ], [ -3.95948, 55.71204 ], [ -3.95948, 55.71205 ], [ -3.95949, 55.71208 ], [ -3.95953, 55.71216 ], [ -3.95964, 55.71232 ], [ -3.95974, 55.71245 ], [ -3.9598, 55.71245 ], [ -3.95985, 55.71245 ], [ -3.95992, 55.71246 ], [ -3.95999, 55.71247 ], [ -3.96008, 55.71253 ], [ -3.96013, 55.71257 ], [ -3.9602, 55.71264 ], [ -3.96024, 55.71276 ], [ -3.96023, 55.71282 ], [ -3.96021, 55.71287 ], [ -3.96016, 55.71294 ], [ -3.96009, 55.71305 ], [ -3.95995, 55.71323 ], [ -3.95998, 55.71332 ], [ -3.96001, 55.7134 ], [ -3.96002, 55.71346 ], [ -3.96004, 55.71356 ], [ -3.96009, 55.71366 ], [ -3.96012, 55.71374 ], [ -3.96013, 55.71378 ], [ -3.96014, 55.71385 ], [ -3.96016, 55.71394 ], [ -3.96016, 55.71402 ], [ -3.96017, 55.7141 ], [ -3.96017, 55.71415 ], [ -3.96017, 55.71422 ], [ -3.96016, 55.71426 ], [ -3.96016, 55.71428 ], [ -3.96015, 55.71436 ], [ -3.96014, 55.7144 ], [ -3.96013, 55.71445 ], [ -3.9601, 55.71455 ], [ -3.96007, 55.71462 ], [ -3.96006, 55.71468 ], [ -3.96005, 55.71475 ], [ -3.96005, 55.71479 ], [ -3.96006, 55.71481 ], [ -3.96006, 55.71484 ], [ -3.9601, 55.71495 ], [ -3.96016, 55.71509 ], [ -3.9602, 55.71516 ], [ -3.96026, 55.71528 ], [ -3.9603, 55.71538 ], [ -3.96047, 55.71568 ], [ -3.96059, 55.71589 ], [ -3.96064, 55.71597 ], [ -3.96084, 55.71631 ], [ -3.96093, 55.71645 ], [ -3.96099, 55.7166 ], [ -3.96101, 55.7167 ], [ -3.96103, 55.71677 ], [ -3.96104, 55.71685 ], [ -3.96103, 55.71694 ], [ -3.96102, 55.71702 ], [ -3.96097, 55.71719 ], [ -3.96092, 55.71737 ], [ -3.96082, 55.71772 ], [ -3.96079, 55.71784 ], [ -3.96078, 55.71786 ], [ -3.96073, 55.71804 ], [ -3.96059, 55.71854 ], [ -3.96056, 55.71866 ], [ -3.96056, 55.71867 ], [ -3.96053, 55.7188 ], [ -3.96051, 55.71893 ], [ -3.96051, 55.719 ], [ -3.96051, 55.71909 ], [ -3.96054, 55.71929 ], [ -3.96057, 55.71937 ], [ -3.96062, 55.71946 ], [ -3.96067, 55.71954 ], [ -3.96072, 55.71959 ], [ -3.96081, 55.71968 ], [ -3.96088, 55.71974 ], [ -3.96102, 55.71986 ], [ -3.96128, 55.72002 ], [ -3.96152, 55.72018 ], [ -3.96239, 55.72068 ], [ -3.96245, 55.72071 ], [ -3.96275, 55.72091 ], [ -3.96296, 55.72106 ], [ -3.963, 55.72109 ], [ -3.96307, 55.72117 ], [ -3.96317, 55.72129 ], [ -3.9632, 55.72133 ], [ -3.96342, 55.72179 ], [ -3.96345, 55.72184 ], [ -3.96386, 55.72263 ], [ -3.96415, 55.72325 ], [ -3.96469, 55.72435 ], [ -3.96483, 55.72467 ], [ -3.96503, 55.72512 ], [ -3.96538, 55.7258 ], [ -3.9654, 55.72584 ], [ -3.96543, 55.72588 ], [ -3.96563, 55.72622 ], [ -3.96577, 55.72645 ], [ -3.96584, 55.72656 ], [ -3.96585, 55.72658 ], [ -3.96615, 55.72707 ], [ -3.9663, 55.72734 ], [ -3.96631, 55.72737 ], [ -3.96646, 55.72761 ], [ -3.96706, 55.72875 ], [ -3.96717, 55.72897 ], [ -3.96723, 55.72904 ], [ -3.96726, 55.7291 ], [ -3.96734, 55.72918 ], [ -3.96768, 55.72948 ], [ -3.96803, 55.72979 ], [ -3.96833, 55.73005 ], [ -3.96847, 55.73018 ], [ -3.96854, 55.73027 ], [ -3.96857, 55.73035 ], [ -3.96857, 55.73043 ], [ -3.96853, 55.73055 ], [ -3.96832, 55.73081 ], [ -3.96818, 55.73098 ], [ -3.96804, 55.73116 ], [ -3.96799, 55.73126 ], [ -3.96795, 55.73139 ], [ -3.96793, 55.73154 ], [ -3.96795, 55.73164 ], [ -3.96795, 55.73166 ], [ -3.96808, 55.73216 ], [ -3.96812, 55.73235 ], [ -3.96818, 55.73249 ], [ -3.96822, 55.73258 ], [ -3.9683, 55.73269 ], [ -3.96847, 55.73288 ], [ -3.96853, 55.73294 ], [ -3.96882, 55.73323 ], [ -3.96888, 55.73331 ], [ -3.96919, 55.73364 ], [ -3.96936, 55.73382 ], [ -3.96949, 55.73396 ], [ -3.96981, 55.73429 ], [ -3.96996, 55.73445 ], [ -3.97039, 55.73491 ], [ -3.97053, 55.73506 ], [ -3.97065, 55.73518 ], [ -3.97074, 55.73526 ], [ -3.97115, 55.73575 ], [ -3.97138, 55.73609 ], [ -3.97164, 55.73646 ], [ -3.97202, 55.73702 ], [ -3.97219, 55.73728 ], [ -3.97236, 55.73751 ], [ -3.97257, 55.73785 ], [ -3.97259, 55.73789 ], [ -3.97317, 55.73873 ], [ -3.97329, 55.7389 ], [ -3.97355, 55.73928 ], [ -3.97417, 55.74011 ], [ -3.97426, 55.74024 ], [ -3.97448, 55.74055 ], [ -3.9747, 55.74089 ], [ -3.97482, 55.74107 ], [ -3.9751, 55.74151 ], [ -3.97544, 55.74199 ], [ -3.97589, 55.74264 ], [ -3.97594, 55.74272 ], [ -3.97657, 55.74359 ], [ -3.97667, 55.74376 ], [ -3.97673, 55.74383 ], [ -3.97703, 55.74423 ], [ -3.97711, 55.74433 ], [ -3.97737, 55.74461 ], [ -3.97786, 55.74511 ], [ -3.97794, 55.74519 ], [ -3.97831, 55.74555 ], [ -3.97838, 55.74562 ], [ -3.97845, 55.74569 ], [ -3.97859, 55.74583 ], [ -3.97893, 55.74617 ], [ -3.97914, 55.74637 ], [ -3.97976, 55.74694 ], [ -3.97993, 55.7471 ], [ -3.98007, 55.74723 ], [ -3.98009, 55.74725 ], [ -3.98022, 55.74737 ], [ -3.9803, 55.74746 ], [ -3.98033, 55.74752 ], [ -3.98034, 55.74756 ], [ -3.9804, 55.74777 ], [ -3.98048, 55.74787 ], [ -3.98051, 55.7479 ], [ -3.98054, 55.74792 ], [ -3.9806, 55.74795 ], [ -3.9806039, 55.7479482 ], [ -3.98058, 55.74796 ], [ -3.98058, 55.74797 ], [ -3.98057, 55.74798 ], [ -3.98056, 55.74799 ], [ -3.98056, 55.748 ], [ -3.98055, 55.74801 ], [ -3.98055, 55.74802 ], [ -3.98055, 55.74803 ], [ -3.98055, 55.74804 ], [ -3.98056, 55.74804 ], [ -3.98056, 55.74805 ], [ -3.98056, 55.74806 ], [ -3.98057, 55.74806 ], [ -3.98057, 55.74807 ], [ -3.98059, 55.74808 ], [ -3.9806, 55.74809 ], [ -3.98061, 55.7481 ], [ -3.98062, 55.7481 ], [ -3.98063, 55.74811 ], [ -3.98064, 55.74811 ], [ -3.98065, 55.74811 ], [ -3.98065, 55.74812 ], [ -3.98066, 55.74812 ], [ -3.98067, 55.74812 ], [ -3.98068, 55.74812 ], [ -3.98069, 55.74812 ], [ -3.9807, 55.74812 ], [ -3.98071, 55.74813 ], [ -3.98072, 55.74813 ], [ -3.98073, 55.74813 ], [ -3.98074, 55.74813 ], [ -3.98075, 55.74813 ], [ -3.98076, 55.74813 ], [ -3.98077, 55.74813 ], [ -3.98078, 55.74812 ], [ -3.98079, 55.74812 ], [ -3.9808, 55.74812 ], [ -3.98081, 55.74812 ], [ -3.98082, 55.74812 ], [ -3.98083, 55.74811 ], [ -3.98084, 55.74811 ], [ -3.98085, 55.74811 ], [ -3.98087, 55.7481 ], [ -3.98098, 55.74815 ], [ -3.98113, 55.74821 ], [ -3.9812, 55.74827 ], [ -3.98173, 55.74874 ], [ -3.98189, 55.74888 ], [ -3.98208, 55.74903 ], [ -3.98212, 55.74907 ], [ -3.9826, 55.74935 ], [ -3.98276, 55.74945 ], [ -3.9833, 55.74977 ], [ -3.98364, 55.74997 ], [ -3.98386, 55.7501 ], [ -3.98453, 55.75049 ], [ -3.98475, 55.75062 ], [ -3.98541, 55.75101 ], [ -3.98552, 55.75107 ], [ -3.98594, 55.75133 ], [ -3.98766, 55.75239 ], [ -3.98918, 55.75332 ], [ -3.9894, 55.75345 ], [ -3.99025, 55.75398 ], [ -3.99158, 55.75481 ], [ -3.99179, 55.75495 ], [ -3.99203, 55.7551 ], [ -3.9923, 55.75527 ], [ -3.99247, 55.75539 ], [ -3.99277, 55.75569 ], [ -3.99282, 55.75573 ], [ -3.99291, 55.75585 ], [ -3.99298, 55.75593 ], [ -3.99317, 55.75611 ], [ -3.99328, 55.7562 ], [ -3.99351, 55.75637 ], [ -3.99371, 55.7565 ], [ -3.99392, 55.75661 ], [ -3.99435, 55.7568 ], [ -3.99461, 55.7569 ], [ -3.99562, 55.75728 ], [ -3.99618, 55.75752 ], [ -3.99644, 55.75762 ], [ -3.99669, 55.75774 ], [ -3.99678, 55.75779 ], [ -3.99687, 55.75783 ], [ -3.99738, 55.75808 ], [ -3.99749, 55.75815 ], [ -3.99757, 55.7582 ], [ -3.99771, 55.75828 ], [ -3.99784, 55.75836 ], [ -3.99793, 55.75841 ], [ -3.99801, 55.75846 ], [ -3.99805, 55.75848 ], [ -3.99806, 55.75849 ], [ -3.99814, 55.75855 ], [ -3.99826, 55.75863 ], [ -3.9985, 55.75885 ], [ -3.99864, 55.75901 ], [ -3.99865, 55.75902 ], [ -3.99878, 55.75919 ], [ -3.99889, 55.75933 ], [ -3.99917, 55.75973 ], [ -3.99918, 55.75974 ], [ -3.9992, 55.75977 ], [ -3.9994, 55.76015 ], [ -3.99967, 55.76061 ], [ -3.99975, 55.76072 ], [ -3.99982, 55.76081 ], [ -4.00003, 55.76099 ], [ -4.00036, 55.7612 ], [ -4.00075, 55.76146 ], [ -4.00078, 55.76148 ], [ -4.00095, 55.7616 ], [ -4.001, 55.76163 ], [ -4.00126, 55.76181 ], [ -4.00152, 55.76198 ], [ -4.00161, 55.76205 ], [ -4.00177, 55.76215 ], [ -4.00182, 55.76218 ], [ -4.0028, 55.76284 ], [ -4.00285, 55.76287 ], [ -4.00301, 55.76298 ], [ -4.00326, 55.76315 ], [ -4.00342, 55.76325 ], [ -4.00422, 55.76381 ], [ -4.00469, 55.76413 ], [ -4.00519, 55.76446 ], [ -4.00528, 55.76453 ], [ -4.00556, 55.76468 ], [ -4.00591, 55.76491 ], [ -4.00637, 55.76524 ], [ -4.00707, 55.7657 ], [ -4.0074, 55.76594 ], [ -4.00798, 55.76632 ], [ -4.00805, 55.76637 ], [ -4.00846, 55.76664 ], [ -4.00873, 55.76683 ], [ -4.00914, 55.7671 ], [ -4.00967, 55.76746 ], [ -4.01045, 55.768 ], [ -4.01076, 55.76821 ], [ -4.0113, 55.7685 ], [ -4.01169, 55.76867 ], [ -4.01192, 55.76874 ], [ -4.01217, 55.76878 ], [ -4.01219, 55.76878 ], [ -4.01259, 55.76883 ], [ -4.01293, 55.76886 ], [ -4.01311, 55.76887 ], [ -4.01328, 55.76889 ], [ -4.01372, 55.7689 ], [ -4.01411, 55.76889 ], [ -4.01418, 55.76889 ], [ -4.0145, 55.76888 ], [ -4.01459, 55.76888 ], [ -4.01469, 55.76887 ], [ -4.01496, 55.76886 ], [ -4.01527, 55.76885 ], [ -4.01607, 55.76889 ], [ -4.0166, 55.76901 ], [ -4.01709, 55.76919 ], [ -4.01755, 55.76949 ], [ -4.01786, 55.7697 ], [ -4.01809, 55.76985 ], [ -4.01816, 55.7699 ], [ -4.01855, 55.77014 ], [ -4.01936, 55.77051 ], [ -4.01946, 55.77053 ], [ -4.02021, 55.77072 ], [ -4.02034, 55.77074 ], [ -4.0207, 55.77078 ], [ -4.02127, 55.77084 ], [ -4.02156, 55.77086 ], [ -4.02184, 55.77089 ], [ -4.02216, 55.77092 ], [ -4.02255, 55.77096 ], [ -4.02302, 55.77102 ], [ -4.02326, 55.77107 ], [ -4.02381, 55.77118 ], [ -4.02403, 55.77124 ], [ -4.02444, 55.77135 ], [ -4.02462, 55.7714 ], [ -4.02522, 55.77158 ], [ -4.02562, 55.77169 ], [ -4.02572, 55.77172 ], [ -4.02582, 55.77175 ], [ -4.02593, 55.77179 ], [ -4.02619, 55.77186 ], [ -4.02646, 55.77195 ], [ -4.02652, 55.77196 ], [ -4.02699, 55.77209 ], [ -4.02758, 55.77224 ], [ -4.02785, 55.77232 ], [ -4.02813, 55.77241 ], [ -4.02824, 55.77244 ], [ -4.0286, 55.77256 ], [ -4.02873, 55.77263 ], [ -4.0287348, 55.7726252 ], [ -4.02873, 55.77264 ], [ -4.02872, 55.77264 ], [ -4.02872, 55.77265 ], [ -4.02872, 55.77266 ], [ -4.02873, 55.77266 ], [ -4.02873, 55.77267 ], [ -4.02874, 55.77268 ], [ -4.02875, 55.77268 ], [ -4.02875, 55.77269 ], [ -4.02876, 55.77269 ], [ -4.02877, 55.77269 ], [ -4.02878, 55.77269 ], [ -4.02878, 55.7727 ], [ -4.02879, 55.7727 ], [ -4.0288, 55.7727 ], [ -4.02881, 55.7727 ], [ -4.02882, 55.7727 ], [ -4.02883, 55.7727 ], [ -4.02883, 55.77269 ], [ -4.02884, 55.77269 ], [ -4.02885, 55.77269 ], [ -4.0292, 55.77297 ], [ -4.02939, 55.7731 ], [ -4.02999, 55.77353 ], [ -4.0301, 55.7736 ], [ -4.03032, 55.77373 ], [ -4.03092, 55.77411 ], [ -4.03098, 55.77414 ], [ -4.03115, 55.77418 ], [ -4.03143, 55.77421 ], [ -4.0315, 55.77421 ], [ -4.03165, 55.77422 ], [ -4.0316533, 55.7742187 ], [ -4.03169, 55.77414 ], [ -4.03177, 55.77405 ], [ -4.03189, 55.77394 ], [ -4.03193, 55.77392 ], [ -4.03203, 55.77385 ], [ -4.03212, 55.7738 ], [ -4.03233, 55.77369 ], [ -4.03248, 55.77363 ], [ -4.0326, 55.77359 ], [ -4.03281, 55.77353 ], [ -4.03298, 55.7735 ], [ -4.03315, 55.77347 ], [ -4.03335, 55.77345 ], [ -4.0335, 55.77346 ], [ -4.03356, 55.77347 ], [ -4.03379, 55.77352 ], [ -4.0347, 55.77376 ], [ -4.03491, 55.77381 ], [ -4.03511, 55.77386 ], [ -4.03551, 55.77397 ], [ -4.03599, 55.77409 ], [ -4.03613, 55.77413 ], [ -4.03624, 55.77416 ], [ -4.03628, 55.77416 ], [ -4.03633, 55.77416 ], [ -4.0364, 55.77416 ], [ -4.03652, 55.77414 ], [ -4.03676, 55.77414 ], [ -4.0367581, 55.7741403 ], [ -4.03694, 55.77414 ], [ -4.03734, 55.77412 ], [ -4.03744, 55.77411 ], [ -4.03781, 55.77408 ], [ -4.03795, 55.77405 ], [ -4.03814, 55.77402 ], [ -4.03884, 55.77396 ], [ -4.03897, 55.77395 ], [ -4.0392, 55.77393 ], [ -4.03941, 55.77392 ], [ -4.04001, 55.77393 ], [ -4.04012, 55.77393 ], [ -4.04043, 55.77397 ], [ -4.04086, 55.77402 ], [ -4.04094, 55.77403 ], [ -4.04106, 55.77407 ], [ -4.04133, 55.77409 ], [ -4.04154, 55.77412 ], [ -4.04197, 55.77414 ], [ -4.04274, 55.77419 ], [ -4.04276, 55.77419 ], [ -4.04324, 55.77422 ], [ -4.04368, 55.77423 ], [ -4.04381, 55.77424 ], [ -4.04384, 55.77424 ], [ -4.04447, 55.7743 ], [ -4.04485, 55.77443 ], [ -4.045, 55.7745 ], [ -4.04544, 55.77469 ], [ -4.0455, 55.77472 ], [ -4.04616, 55.77504 ], [ -4.04692, 55.77535 ], [ -4.04698, 55.77537 ], [ -4.04708, 55.77541 ], [ -4.04726, 55.77546 ], [ -4.04761, 55.77557 ], [ -4.04811, 55.77569 ], [ -4.04817, 55.7757 ], [ -4.04929, 55.77597 ], [ -4.05005, 55.77615 ], [ -4.05082, 55.77633 ], [ -4.05126, 55.77644 ], [ -4.05155, 55.77652 ], [ -4.0517, 55.77655 ], [ -4.05178, 55.77657 ], [ -4.05185, 55.7766 ], [ -4.05193, 55.77663 ], [ -4.05201, 55.77667 ], [ -4.05209, 55.77671 ], [ -4.05217, 55.77674 ], [ -4.05228, 55.77681 ], [ -4.0524, 55.77689 ], [ -4.05247, 55.77694 ], [ -4.053, 55.77736 ], [ -4.05308, 55.77743 ], [ -4.05309, 55.77743 ], [ -4.05319, 55.77754 ], [ -4.05341, 55.77778 ], [ -4.05387, 55.77789 ], [ -4.05395, 55.77791 ], [ -4.05403, 55.77793 ], [ -4.05467, 55.77807 ], [ -4.05522, 55.77819 ], [ -4.0552218, 55.7781935 ], [ -4.05542, 55.7782 ], [ -4.05576, 55.77829 ], [ -4.05659, 55.77847 ], [ -4.05705, 55.77857 ], [ -4.05807, 55.77879 ], [ -4.05822, 55.77883 ], [ -4.05879, 55.77896 ], [ -4.05884, 55.77897 ], [ -4.05887, 55.77898 ], [ -4.05892, 55.77902 ], [ -4.05967, 55.77919 ], [ -4.06007, 55.77928 ], [ -4.06056, 55.77939 ], [ -4.06114, 55.77952 ], [ -4.06118, 55.77952 ], [ -4.06177, 55.77965 ], [ -4.06185, 55.77967 ], [ -4.06205, 55.77973 ], [ -4.06238, 55.77982 ], [ -4.06266, 55.7799 ], [ -4.06302, 55.78002 ], [ -4.06347, 55.78016 ], [ -4.06376, 55.78024 ], [ -4.06398, 55.78031 ], [ -4.06425, 55.7804 ], [ -4.06426, 55.78041 ], [ -4.06428, 55.78043 ], [ -4.06432, 55.78045 ], [ -4.06452, 55.78051 ], [ -4.06468, 55.78055 ], [ -4.06489, 55.78059 ], [ -4.0648894, 55.7805906 ], [ -4.06491, 55.7806 ], [ -4.06492, 55.78061 ], [ -4.06493, 55.78061 ], [ -4.06495, 55.78062 ], [ -4.06498, 55.78063 ], [ -4.06499, 55.78063 ], [ -4.06501, 55.78063 ], [ -4.06504, 55.78064 ], [ -4.06513, 55.78072 ], [ -4.06519, 55.78076 ], [ -4.06532, 55.78081 ], [ -4.06538, 55.78086 ], [ -4.06543, 55.78091 ], [ -4.06545, 55.78095 ], [ -4.06544, 55.781 ], [ -4.0654429, 55.7810017 ], [ -4.06565, 55.78096 ], [ -4.06611, 55.78088 ], [ -4.06624, 55.78087 ], [ -4.06638, 55.78087 ], [ -4.06652, 55.78089 ], [ -4.06664, 55.78092 ], [ -4.06672, 55.78094 ], [ -4.06677, 55.78096 ], [ -4.06683, 55.78098 ], [ -4.06703, 55.78107 ], [ -4.06711, 55.78111 ], [ -4.06754, 55.78129 ], [ -4.06786, 55.78142 ], [ -4.06804, 55.78151 ], [ -4.06883, 55.78186 ], [ -4.0688294, 55.78186 ], [ -4.06896, 55.78191 ], [ -4.0691, 55.78197 ], [ -4.06975, 55.78225 ], [ -4.07011, 55.7824 ], [ -4.07061, 55.78259 ], [ -4.071, 55.78273 ], [ -4.0715, 55.78288 ], [ -4.07169, 55.78293 ], [ -4.07179, 55.78295 ], [ -4.07184, 55.78296 ], [ -4.07188, 55.78297 ], [ -4.07192, 55.78297 ], [ -4.0721, 55.78297 ], [ -4.07214, 55.78297 ], [ -4.0721411, 55.7829746 ], [ -4.07214, 55.78298 ], [ -4.07215, 55.78298 ], [ -4.07215, 55.78299 ], [ -4.07216, 55.78299 ], [ -4.07217, 55.78299 ], [ -4.07218, 55.783 ], [ -4.07219, 55.783 ], [ -4.0722, 55.783 ], [ -4.07221, 55.783 ], [ -4.07222, 55.783 ], [ -4.07223, 55.783 ], [ -4.07224, 55.783 ], [ -4.07225, 55.783 ], [ -4.07225, 55.78299 ], [ -4.07226, 55.78299 ], [ -4.07227, 55.78299 ], [ -4.07227, 55.78298 ], [ -4.07228, 55.78298 ], [ -4.07248, 55.78312 ], [ -4.07255, 55.78316 ], [ -4.07267, 55.78323 ], [ -4.07277, 55.78328 ], [ -4.0729, 55.78334 ], [ -4.07305, 55.78339 ], [ -4.0742, 55.78379 ], [ -4.0746, 55.78395 ], [ -4.07476, 55.78401 ], [ -4.07571, 55.78444 ], [ -4.07613, 55.7847 ], [ -4.07652, 55.785 ], [ -4.07662, 55.78512 ], [ -4.07661, 55.78512 ], [ -4.0766, 55.78512 ], [ -4.0766, 55.78513 ], [ -4.07659, 55.78514 ], [ -4.07659, 55.78515 ], [ -4.0766, 55.78515 ], [ -4.0766, 55.78516 ], [ -4.07661, 55.78516 ], [ -4.07661, 55.78517 ], [ -4.07662, 55.78517 ], [ -4.07663, 55.78517 ], [ -4.07664, 55.78517 ], [ -4.07665, 55.78517 ], [ -4.07666, 55.78517 ], [ -4.07667, 55.78517 ], [ -4.07668, 55.78517 ], [ -4.07668, 55.78522 ], [ -4.07669, 55.78524 ], [ -4.07669, 55.78532 ], [ -4.07669, 55.78544 ], [ -4.07666, 55.78557 ], [ -4.07662, 55.78569 ], [ -4.0765, 55.78592 ], [ -4.0765, 55.78593 ], [ -4.07627, 55.78637 ], [ -4.0762, 55.7865 ], [ -4.07612, 55.7867 ], [ -4.07599, 55.78702 ], [ -4.07592, 55.78721 ], [ -4.07585, 55.78739 ], [ -4.07584, 55.78745 ], [ -4.07584, 55.78751 ], [ -4.07587, 55.78757 ], [ -4.07587, 55.78759 ], [ -4.07593, 55.78767 ], [ -4.07603, 55.78779 ], [ -4.0763, 55.78804 ], [ -4.07664, 55.78835 ], [ -4.07672, 55.78843 ], [ -4.07699, 55.78866 ], [ -4.07721, 55.78886 ], [ -4.07793, 55.7895 ], [ -4.07819, 55.78975 ], [ -4.07823, 55.78984 ], [ -4.07823, 55.78987 ], [ -4.07823, 55.7899 ], [ -4.07825, 55.7899 ], [ -4.07826, 55.7899 ], [ -4.07827, 55.7899 ], [ -4.07828, 55.78991 ], [ -4.07829, 55.78991 ], [ -4.0783, 55.78991 ], [ -4.07831, 55.78991 ], [ -4.07834, 55.78992 ], [ -4.07836, 55.78993 ], [ -4.07837, 55.78993 ], [ -4.07838, 55.78994 ], [ -4.07839, 55.78994 ], [ -4.07839, 55.78995 ], [ -4.0784, 55.78995 ], [ -4.0784, 55.78996 ], [ -4.07841, 55.78996 ], [ -4.07841, 55.78997 ], [ -4.07842, 55.78998 ], [ -4.07842, 55.78999 ], [ -4.07842, 55.79 ], [ -4.07842, 55.79001 ], [ -4.07842, 55.79002 ], [ -4.07842, 55.79004 ], [ -4.07866, 55.79011 ], [ -4.07882, 55.79016 ], [ -4.07894, 55.79021 ], [ -4.07899, 55.79022 ], [ -4.07937, 55.79035 ], [ -4.07986, 55.79052 ], [ -4.07996, 55.79055 ], [ -4.0801, 55.7906 ], [ -4.08025, 55.79064 ], [ -4.0804, 55.79068 ], [ -4.08065, 55.79074 ], [ -4.08147, 55.79094 ], [ -4.08186, 55.79104 ], [ -4.08215, 55.79112 ], [ -4.08234, 55.79117 ], [ -4.08269, 55.79128 ], [ -4.08269, 55.79129 ], [ -4.08269, 55.7913 ], [ -4.08269, 55.79131 ], [ -4.08269, 55.79132 ], [ -4.0827, 55.79133 ], [ -4.0827, 55.79134 ], [ -4.08271, 55.79134 ], [ -4.08271, 55.79135 ], [ -4.08272, 55.79135 ], [ -4.08272, 55.79136 ], [ -4.08273, 55.79136 ], [ -4.08274, 55.79137 ], [ -4.08275, 55.79137 ], [ -4.08275, 55.79138 ], [ -4.08276, 55.79138 ], [ -4.08277, 55.79138 ], [ -4.08278, 55.79139 ], [ -4.08279, 55.79139 ], [ -4.0828, 55.79139 ], [ -4.08281, 55.79139 ], [ -4.08282, 55.79139 ], [ -4.08282, 55.7914 ], [ -4.08283, 55.7914 ], [ -4.08286, 55.7914 ], [ -4.08289, 55.7914 ], [ -4.0829, 55.7914 ], [ -4.08291, 55.79139 ], [ -4.08292, 55.79139 ], [ -4.08293, 55.79139 ], [ -4.08294, 55.79139 ], [ -4.08295, 55.79138 ], [ -4.08296, 55.79138 ], [ -4.08297, 55.79138 ], [ -4.08298, 55.79137 ], [ -4.08299, 55.79137 ], [ -4.083, 55.79136 ], [ -4.08302, 55.79135 ], [ -4.08345, 55.79145 ], [ -4.08372, 55.79154 ], [ -4.08412, 55.79165 ], [ -4.08468, 55.79183 ], [ -4.08502, 55.79192 ], [ -4.08541, 55.79203 ], [ -4.08572, 55.79212 ], [ -4.08579, 55.79214 ], [ -4.0862, 55.79226 ], [ -4.0862, 55.79227 ], [ -4.0862, 55.79228 ], [ -4.08619, 55.79228 ], [ -4.08619, 55.79229 ], [ -4.08619, 55.7923 ], [ -4.08619, 55.79231 ], [ -4.0862, 55.79232 ], [ -4.0862, 55.79233 ], [ -4.08621, 55.79233 ], [ -4.08621, 55.79234 ], [ -4.08622, 55.79234 ], [ -4.08622, 55.79235 ], [ -4.08623, 55.79235 ], [ -4.08624, 55.79236 ], [ -4.08625, 55.79236 ], [ -4.08626, 55.79236 ], [ -4.08627, 55.79237 ], [ -4.08629, 55.79237 ], [ -4.0863, 55.79237 ], [ -4.08631, 55.79238 ], [ -4.08632, 55.79238 ], [ -4.08633, 55.79238 ], [ -4.08634, 55.79238 ], [ -4.08635, 55.79238 ], [ -4.08636, 55.79238 ], [ -4.08637, 55.79237 ], [ -4.08638, 55.79237 ], [ -4.08639, 55.79237 ], [ -4.0864, 55.79237 ], [ -4.08641, 55.79236 ], [ -4.08642, 55.79236 ], [ -4.08643, 55.79236 ], [ -4.08643, 55.79235 ], [ -4.08644, 55.79235 ], [ -4.08645, 55.79234 ], [ -4.08646, 55.79233 ], [ -4.08686, 55.79244 ], [ -4.08718, 55.79252 ], [ -4.08753, 55.79259 ], [ -4.08825, 55.79273 ], [ -4.08834, 55.79275 ], [ -4.08923, 55.79288 ], [ -4.08978, 55.79297 ], [ -4.09002, 55.79302 ], [ -4.09011, 55.79304 ], [ -4.09049, 55.79313 ], [ -4.09077, 55.79322 ], [ -4.09094, 55.79326 ], [ -4.09146, 55.79344 ], [ -4.09189, 55.79359 ], [ -4.09203, 55.79364 ], [ -4.09225, 55.79373 ], [ -4.09277, 55.79393 ], [ -4.0928, 55.79394 ], [ -4.09297, 55.79401 ], [ -4.09328, 55.79413 ], [ -4.09354, 55.79423 ], [ -4.09386, 55.79434 ], [ -4.09436, 55.79451 ], [ -4.09499, 55.79472 ], [ -4.09559, 55.79488 ], [ -4.09585, 55.79497 ], [ -4.09599, 55.79502 ], [ -4.09611, 55.79506 ], [ -4.09629, 55.79515 ], [ -4.09652, 55.79526 ], [ -4.09693, 55.79548 ], [ -4.0972, 55.79561 ], [ -4.09729, 55.79566 ], [ -4.09759, 55.79579 ], [ -4.09787, 55.79591 ], [ -4.09801, 55.79596 ], [ -4.09845, 55.79614 ], [ -4.09872, 55.79626 ], [ -4.09942, 55.79656 ], [ -4.0995, 55.79659 ], [ -4.10101, 55.79721 ], [ -4.10105, 55.79723 ], [ -4.1015, 55.79743 ], [ -4.10156, 55.79746 ], [ -4.10177, 55.79761 ], [ -4.10195, 55.79774 ], [ -4.10215, 55.79786 ], [ -4.10246, 55.79806 ], [ -4.10308, 55.79845 ], [ -4.10386, 55.7988 ], [ -4.10392, 55.79883 ], [ -4.10444, 55.7991 ], [ -4.10456, 55.79916 ], [ -4.10461, 55.79919 ], [ -4.10496, 55.79939 ], [ -4.10497, 55.79938 ], [ -4.10498, 55.79938 ], [ -4.10499, 55.79938 ], [ -4.105, 55.79937 ], [ -4.10501, 55.79937 ], [ -4.10502, 55.79937 ], [ -4.10503, 55.79937 ], [ -4.10504, 55.79937 ], [ -4.10505, 55.79937 ], [ -4.10506, 55.79937 ], [ -4.10507, 55.79937 ], [ -4.10508, 55.79937 ], [ -4.10509, 55.79937 ], [ -4.10509, 55.79938 ], [ -4.1051, 55.79938 ], [ -4.10511, 55.79938 ], [ -4.10512, 55.79938 ], [ -4.10512, 55.79939 ], [ -4.10513, 55.79939 ], [ -4.10514, 55.79939 ], [ -4.10514, 55.7994 ], [ -4.10515, 55.7994 ], [ -4.10515, 55.79941 ], [ -4.10516, 55.79941 ], [ -4.10516, 55.79942 ], [ -4.10516, 55.79943 ], [ -4.10517, 55.79943 ], [ -4.10517, 55.79944 ], [ -4.10517, 55.79945 ], [ -4.10516, 55.79945 ], [ -4.10516, 55.79946 ], [ -4.10516, 55.79947 ], [ -4.10515, 55.79947 ], [ -4.10515, 55.79948 ], [ -4.10514, 55.79948 ], [ -4.1052, 55.79951 ], [ -4.10537, 55.79958 ], [ -4.10546, 55.79962 ], [ -4.10573, 55.79973 ], [ -4.10619, 55.79997 ], [ -4.10627, 55.80001 ], [ -4.10637, 55.80006 ], [ -4.10651, 55.80013 ], [ -4.10677, 55.80027 ], [ -4.10733, 55.80054 ], [ -4.10765, 55.8007 ], [ -4.10821, 55.80093 ], [ -4.10864, 55.8011 ], [ -4.10917, 55.80124 ], [ -4.10929, 55.80127 ], [ -4.10965, 55.80134 ], [ -4.10976, 55.80137 ], [ -4.11007, 55.80141 ], [ -4.11018, 55.80142 ], [ -4.11041, 55.80145 ], [ -4.11072, 55.80148 ], [ -4.11117, 55.80154 ], [ -4.11193, 55.80163 ], [ -4.11201, 55.80164 ], [ -4.11242, 55.8017 ], [ -4.11265, 55.80176 ], [ -4.11317, 55.8019 ], [ -4.11327, 55.80193 ], [ -4.11329, 55.80194 ], [ -4.11375, 55.80209 ], [ -4.11382, 55.80211 ], [ -4.11466, 55.80244 ], [ -4.11512, 55.80257 ], [ -4.11552, 55.80266 ], [ -4.11578, 55.80271 ], [ -4.11594, 55.80273 ], [ -4.1164, 55.80279 ], [ -4.11649, 55.8028 ], [ -4.11681, 55.80282 ], [ -4.1175, 55.80285 ], [ -4.11774, 55.80287 ], [ -4.11808, 55.80289 ], [ -4.11899, 55.80302 ], [ -4.1191, 55.80303 ], [ -4.1202, 55.80324 ], [ -4.12052, 55.80329 ], [ -4.12147, 55.80347 ], [ -4.12232, 55.80364 ], [ -4.12291, 55.80379 ], [ -4.12292, 55.80379 ], [ -4.12317, 55.8039 ], [ -4.12344, 55.80401 ], [ -4.12405, 55.80431 ], [ -4.12487, 55.80472 ], [ -4.12508, 55.80481 ], [ -4.12524, 55.80488 ], [ -4.12547, 55.80498 ], [ -4.12557, 55.80502 ], [ -4.12566, 55.80506 ], [ -4.12593, 55.80516 ], [ -4.1262, 55.80526 ], [ -4.127, 55.80556 ], [ -4.12711, 55.8056 ], [ -4.12752, 55.80576 ], [ -4.12813, 55.80599 ], [ -4.12832, 55.80606 ], [ -4.12884, 55.80625 ], [ -4.12897, 55.8063 ], [ -4.12911, 55.80635 ], [ -4.1298, 55.80661 ], [ -4.1297977, 55.8066096 ], [ -4.12992, 55.80653 ], [ -4.12998, 55.80652 ], [ -4.13001, 55.80653 ], [ -4.13006, 55.80653 ], [ -4.13016, 55.80654 ], [ -4.13032, 55.80657 ], [ -4.1306, 55.80663 ], [ -4.13122, 55.80676 ], [ -4.13126, 55.80677 ], [ -4.13181, 55.8069 ], [ -4.13185, 55.80691 ], [ -4.13201, 55.80695 ], [ -4.1321, 55.80698 ], [ -4.13243, 55.80708 ], [ -4.13297, 55.80723 ], [ -4.13327, 55.80732 ], [ -4.13354, 55.80739 ], [ -4.13411, 55.80758 ], [ -4.13456, 55.80763 ], [ -4.13461, 55.80764 ], [ -4.13488, 55.80767 ], [ -4.13495, 55.80768 ], [ -4.13518, 55.80773 ], [ -4.13541, 55.80777 ], [ -4.13567, 55.80786 ], [ -4.13576, 55.80791 ], [ -4.13623, 55.80816 ], [ -4.13662, 55.80842 ], [ -4.1369, 55.8086 ], [ -4.13757, 55.80901 ], [ -4.13794, 55.80925 ], [ -4.13803, 55.8093 ], [ -4.13815, 55.80936 ], [ -4.13841, 55.80948 ], [ -4.13869, 55.80961 ], [ -4.13926, 55.80987 ], [ -4.13996, 55.81021 ], [ -4.14004, 55.81024 ], [ -4.14049, 55.8104 ], [ -4.142, 55.81091 ], [ -4.14245, 55.81106 ], [ -4.14258, 55.81111 ], [ -4.14339, 55.81139 ], [ -4.14355, 55.81142 ], [ -4.14365, 55.81145 ], [ -4.14371, 55.81147 ], [ -4.14376, 55.81149 ], [ -4.14379, 55.81151 ], [ -4.14384, 55.81154 ], [ -4.14386, 55.81159 ], [ -4.143862, 55.8115883 ], [ -4.14402, 55.81162 ], [ -4.14414, 55.81164 ], [ -4.14432, 55.81168 ], [ -4.14458, 55.81175 ], [ -4.14504, 55.81189 ], [ -4.14532, 55.81198 ], [ -4.14561, 55.81206 ], [ -4.1459, 55.81215 ], [ -4.14623, 55.81224 ], [ -4.14653, 55.81232 ], [ -4.14668, 55.81237 ], [ -4.14675, 55.81241 ], [ -4.14687, 55.81248 ], [ -4.14707, 55.81255 ], [ -4.14714, 55.81258 ], [ -4.14752, 55.81273 ], [ -4.14757, 55.81276 ], [ -4.148, 55.81292 ], [ -4.14818, 55.81299 ], [ -4.14834, 55.81306 ], [ -4.14854, 55.81314 ], [ -4.14921, 55.81345 ], [ -4.14933, 55.81351 ], [ -4.14958, 55.81363 ], [ -4.14965, 55.81366 ], [ -4.14986, 55.81377 ], [ -4.15002, 55.81384 ], [ -4.1503, 55.81394 ], [ -4.15051, 55.814 ], [ -4.15064, 55.81405 ], [ -4.15077, 55.81409 ], [ -4.15081, 55.81411 ], [ -4.15115, 55.81425 ], [ -4.1514, 55.81433 ], [ -4.1516, 55.8144 ], [ -4.15188, 55.81449 ], [ -4.15194, 55.81451 ], [ -4.15204, 55.81454 ], [ -4.15229, 55.81462 ], [ -4.15239, 55.81465 ], [ -4.15254, 55.8147 ], [ -4.15265, 55.81472 ], [ -4.15278, 55.81474 ], [ -4.15296, 55.8148 ], [ -4.15311, 55.81485 ], [ -4.15354, 55.81496 ], [ -4.15367, 55.81499 ], [ -4.1542, 55.81518 ], [ -4.15473, 55.81534 ], [ -4.15577, 55.81571 ], [ -4.15614, 55.81585 ], [ -4.15645, 55.81597 ], [ -4.1569, 55.81612 ], [ -4.15721, 55.81624 ], [ -4.15807, 55.81654 ], [ -4.15819, 55.81662 ], [ -4.15848, 55.81673 ], [ -4.1588, 55.81687 ], [ -4.15937, 55.81713 ], [ -4.15942, 55.81715 ], [ -4.15987, 55.81736 ], [ -4.1601, 55.81746 ], [ -4.16033, 55.81756 ], [ -4.16051, 55.81764 ], [ -4.16092, 55.81782 ], [ -4.16107, 55.81791 ], [ -4.16175, 55.8181 ], [ -4.16182, 55.81811 ], [ -4.16195, 55.81814 ], [ -4.16211, 55.81816 ], [ -4.16259, 55.81822 ], [ -4.16273, 55.81824 ], [ -4.16286, 55.81827 ], [ -4.16297, 55.81829 ], [ -4.16305, 55.81831 ], [ -4.16315, 55.81834 ], [ -4.16325, 55.81837 ], [ -4.16331, 55.81839 ], [ -4.16338, 55.81842 ], [ -4.16383, 55.81861 ], [ -4.16396, 55.81866 ], [ -4.16408, 55.81871 ], [ -4.16418, 55.81875 ], [ -4.16425, 55.81877 ], [ -4.16434, 55.81879 ], [ -4.16441, 55.81881 ], [ -4.1645, 55.81883 ], [ -4.16461, 55.81885 ], [ -4.16472, 55.81886 ], [ -4.16481, 55.81887 ], [ -4.16499, 55.81888 ], [ -4.16511, 55.81888 ], [ -4.16549, 55.81888 ], [ -4.16597, 55.81888 ], [ -4.16611, 55.81888 ], [ -4.16618, 55.81888 ], [ -4.16635, 55.81889 ], [ -4.16642, 55.81889 ], [ -4.16657, 55.8189 ], [ -4.16674, 55.81891 ], [ -4.16691, 55.81893 ], [ -4.16709, 55.81895 ], [ -4.16734, 55.81899 ], [ -4.16759, 55.81903 ], [ -4.16779, 55.81908 ], [ -4.16788, 55.8191 ], [ -4.16798, 55.81912 ], [ -4.1681, 55.81914 ], [ -4.1682, 55.81916 ], [ -4.16858, 55.81923 ], [ -4.16878, 55.81927 ], [ -4.16912, 55.81933 ], [ -4.17004, 55.81947 ], [ -4.1705, 55.81954 ], [ -4.17117, 55.81964 ], [ -4.17123, 55.81965 ], [ -4.17131, 55.81966 ], [ -4.17136, 55.81967 ], [ -4.17185, 55.81973 ], [ -4.17211, 55.81977 ], [ -4.17251, 55.81983 ], [ -4.17315, 55.81991 ], [ -4.17395, 55.82001 ], [ -4.17434, 55.82007 ], [ -4.17456, 55.8201 ], [ -4.17479, 55.82013 ], [ -4.17516, 55.82018 ], [ -4.17533, 55.8202 ], [ -4.17569, 55.82025 ], [ -4.17596, 55.82028 ], [ -4.17645, 55.82036 ], [ -4.17659, 55.82039 ], [ -4.17669, 55.82042 ], [ -4.17675, 55.82044 ], [ -4.17686, 55.82047 ], [ -4.17691, 55.82048 ], [ -4.17709, 55.82053 ], [ -4.17729, 55.8206 ], [ -4.17747, 55.82066 ], [ -4.17756, 55.8207 ], [ -4.17767, 55.82074 ], [ -4.17784, 55.82081 ], [ -4.17803, 55.82089 ], [ -4.17826, 55.82099 ], [ -4.17872, 55.82124 ], [ -4.17905, 55.82143 ], [ -4.17917, 55.82149 ], [ -4.17919, 55.8215 ], [ -4.17976, 55.82185 ], [ -4.17989, 55.82193 ], [ -4.17999, 55.822 ], [ -4.18008, 55.82206 ], [ -4.18023, 55.82216 ], [ -4.18027, 55.8222 ], [ -4.18029, 55.82221 ], [ -4.18032, 55.82224 ], [ -4.18036, 55.82227 ], [ -4.18048, 55.82239 ], [ -4.18058, 55.82242 ], [ -4.1806, 55.82244 ], [ -4.18089, 55.82275 ], [ -4.18097, 55.82283 ], [ -4.18119, 55.82305 ], [ -4.18123, 55.82309 ], [ -4.18139, 55.82323 ], [ -4.18158, 55.82336 ], [ -4.18193, 55.82359 ], [ -4.18231, 55.82381 ], [ -4.18243, 55.82389 ], [ -4.18253, 55.82393 ], [ -4.18265, 55.82398 ], [ -4.18286, 55.82407 ], [ -4.18306, 55.82416 ], [ -4.18316, 55.8242 ], [ -4.18322, 55.82422 ], [ -4.18328, 55.82425 ], [ -4.18334, 55.82427 ], [ -4.18351, 55.82434 ], [ -4.18395, 55.82451 ], [ -4.18448, 55.82472 ], [ -4.18452, 55.82473 ], [ -4.18468, 55.82479 ], [ -4.18475, 55.82481 ], [ -4.18483, 55.82485 ], [ -4.18502, 55.82492 ], [ -4.18513, 55.82495 ], [ -4.18541, 55.82506 ], [ -4.1858, 55.8252 ], [ -4.18589, 55.82523 ], [ -4.18595, 55.82525 ], [ -4.18603, 55.82528 ], [ -4.18617, 55.82532 ], [ -4.18644, 55.82539 ], [ -4.18655, 55.82542 ], [ -4.18666, 55.82545 ], [ -4.18677, 55.82548 ], [ -4.18694, 55.82551 ], [ -4.18712, 55.82555 ], [ -4.18729, 55.82559 ], [ -4.18767, 55.82564 ], [ -4.18782, 55.82566 ], [ -4.1885, 55.82573 ], [ -4.18868, 55.82574 ], [ -4.1891, 55.82579 ], [ -4.18917, 55.82579 ], [ -4.18926, 55.8258 ], [ -4.18956, 55.82583 ], [ -4.18966, 55.82584 ], [ -4.19026, 55.8259 ], [ -4.19041, 55.82592 ], [ -4.19053, 55.82593 ], [ -4.1906, 55.82594 ], [ -4.1907, 55.82595 ], [ -4.19094, 55.82598 ], [ -4.19118, 55.826 ], [ -4.19128, 55.82601 ], [ -4.19159, 55.82606 ], [ -4.19177, 55.82608 ], [ -4.19185, 55.82609 ], [ -4.19191, 55.8261 ], [ -4.192, 55.82612 ], [ -4.19212, 55.82614 ], [ -4.19218, 55.82615 ], [ -4.19224, 55.82616 ], [ -4.1923, 55.82617 ], [ -4.19239, 55.82618 ], [ -4.19248, 55.82621 ], [ -4.19258, 55.82622 ], [ -4.19269, 55.82625 ], [ -4.19283, 55.8263 ], [ -4.19298, 55.82635 ], [ -4.19309, 55.82639 ], [ -4.19319, 55.82644 ], [ -4.19324, 55.82647 ], [ -4.1933, 55.82649 ], [ -4.19335, 55.82652 ], [ -4.19339, 55.82654 ], [ -4.19342, 55.82656 ], [ -4.19351, 55.82661 ], [ -4.19359, 55.82665 ], [ -4.1937, 55.82672 ], [ -4.19371, 55.82674 ], [ -4.19371, 55.82675 ], [ -4.19372, 55.82676 ], [ -4.19373, 55.82677 ], [ -4.19373, 55.82678 ], [ -4.19374, 55.82679 ], [ -4.19375, 55.8268 ], [ -4.19377, 55.82681 ], [ -4.19378, 55.82681 ], [ -4.19379, 55.82682 ], [ -4.19381, 55.82683 ], [ -4.19382, 55.82683 ], [ -4.19384, 55.82684 ], [ -4.19387, 55.82685 ], [ -4.19419, 55.8271 ], [ -4.19429, 55.82717 ], [ -4.19505, 55.82776 ], [ -4.19519, 55.82787 ], [ -4.19526, 55.82793 ], [ -4.19544, 55.82806 ], [ -4.19611, 55.82857 ], [ -4.19623, 55.82865 ], [ -4.19633, 55.82871 ], [ -4.19653, 55.8288 ], [ -4.19672, 55.82891 ], [ -4.19691, 55.82901 ], [ -4.19715, 55.82914 ], [ -4.19731, 55.82922 ], [ -4.19744, 55.82928 ], [ -4.19772, 55.82939 ], [ -4.19813, 55.82954 ], [ -4.19855, 55.82969 ], [ -4.19925, 55.82995 ], [ -4.19933, 55.82998 ], [ -4.19982, 55.83017 ], [ -4.20014, 55.83034 ], [ -4.20025, 55.83038 ], [ -4.20068, 55.83053 ], [ -4.20091, 55.83062 ], [ -4.20186, 55.83096 ], [ -4.20291, 55.83133 ], [ -4.20316, 55.83142 ], [ -4.20372, 55.83162 ], [ -4.20417, 55.83177 ], [ -4.20439, 55.83184 ], [ -4.20464, 55.83193 ], [ -4.20482, 55.83199 ], [ -4.20496, 55.83204 ], [ -4.20515, 55.83211 ], [ -4.2054, 55.8322 ], [ -4.20584, 55.83235 ], [ -4.20608, 55.83244 ], [ -4.20625, 55.83249 ], [ -4.20672, 55.83266 ], [ -4.20714, 55.83281 ], [ -4.2073, 55.83287 ], [ -4.20777, 55.83303 ], [ -4.20784, 55.83306 ], [ -4.20799, 55.83315 ], [ -4.2079939, 55.8331473 ], [ -4.20813, 55.8334 ], [ -4.20813, 55.8335 ], [ -4.20821, 55.83367 ], [ -4.20827, 55.83385 ], [ -4.20834, 55.83403 ], [ -4.20836, 55.83407 ], [ -4.20839, 55.83415 ], [ -4.2085, 55.83444 ], [ -4.20873, 55.83505 ], [ -4.20876, 55.83512 ], [ -4.20887, 55.8354 ], [ -4.20892, 55.83556 ], [ -4.20895, 55.8357 ], [ -4.209, 55.83583 ], [ -4.20908, 55.83606 ], [ -4.20921, 55.83639 ], [ -4.20934, 55.83673 ], [ -4.20939, 55.83683 ], [ -4.20957, 55.83728 ], [ -4.2097, 55.83763 ], [ -4.20973, 55.83767 ], [ -4.20984, 55.83788 ], [ -4.20986, 55.83792 ], [ -4.20989, 55.83797 ], [ -4.20992, 55.83802 ], [ -4.20996, 55.83806 ], [ -4.21, 55.83811 ], [ -4.21004, 55.83815 ], [ -4.21008, 55.83819 ], [ -4.21012, 55.83822 ], [ -4.21017, 55.83826 ], [ -4.21023, 55.8383 ], [ -4.2103, 55.83835 ], [ -4.21053, 55.8385 ], [ -4.21069, 55.83861 ], [ -4.21109, 55.8389 ], [ -4.21126, 55.83902 ], [ -4.21137, 55.83909 ], [ -4.21146, 55.83915 ], [ -4.21153, 55.8392 ], [ -4.2116, 55.83924 ], [ -4.2117, 55.83931 ], [ -4.21182, 55.83938 ], [ -4.21193, 55.83945 ], [ -4.21214, 55.83957 ], [ -4.21268, 55.83986 ], [ -4.21285, 55.83995 ], [ -4.2128458, 55.8399469 ], [ -4.21273, 55.83998 ], [ -4.21263, 55.84002 ], [ -4.2121, 55.84021 ], [ -4.2120954, 55.8402071 ], [ -4.21241, 55.84049 ], [ -4.21271, 55.84077 ], [ -4.21277, 55.84083 ], [ -4.21309, 55.84111 ], [ -4.21314, 55.84117 ], [ -4.21318, 55.84122 ], [ -4.21336, 55.84155 ], [ -4.21363, 55.84212 ], [ -4.21371, 55.84219 ], [ -4.21374, 55.8422 ], [ -4.21376, 55.84222 ], [ -4.21389, 55.84243 ], [ -4.21397, 55.84258 ], [ -4.21401, 55.84263 ], [ -4.21404, 55.84266 ], [ -4.21409, 55.84271 ], [ -4.21473, 55.8432 ], [ -4.21527, 55.8436 ], [ -4.21536, 55.84367 ], [ -4.21531, 55.8437 ], [ -4.21539, 55.84375 ], [ -4.21548, 55.8438 ], [ -4.2154782, 55.843798 ], [ -4.21566, 55.8439 ], [ -4.21629, 55.84437 ], [ -4.21714, 55.845 ], [ -4.21752, 55.84528 ], [ -4.21752, 55.8453 ], [ -4.21751, 55.8453 ], [ -4.2175, 55.84531 ], [ -4.21746, 55.84532 ], [ -4.21744, 55.84533 ], [ -4.21743, 55.84534 ], [ -4.21743, 55.84535 ], [ -4.21744, 55.84536 ], [ -4.21744, 55.84537 ], [ -4.21753, 55.84542 ], [ -4.21761, 55.84548 ], [ -4.21762, 55.84548 ], [ -4.21763, 55.84547 ], [ -4.21764, 55.84547 ], [ -4.21773, 55.84552 ], [ -4.2177308, 55.8455197 ], [ -4.21781, 55.84557 ], [ -4.21785, 55.84556 ], [ -4.21818, 55.84576 ], [ -4.21834, 55.84588 ], [ -4.21904, 55.84641 ], [ -4.2191, 55.84646 ], [ -4.21943, 55.84671 ], [ -4.22005, 55.84718 ], [ -4.22024, 55.84732 ], [ -4.2202386, 55.8473237 ], [ -4.22042, 55.84727 ], [ -4.22077, 55.84717 ], [ -4.22081, 55.84716 ], [ -4.22112, 55.84707 ], [ -4.22147, 55.84697 ], [ -4.22181, 55.84688 ], [ -4.22213, 55.84678 ], [ -4.22232, 55.84673 ], [ -4.2225, 55.84668 ], [ -4.22259, 55.84666 ], [ -4.2225891, 55.846661 ], [ -4.22262, 55.84668 ], [ -4.22279, 55.84681 ], [ -4.22321, 55.84713 ], [ -4.22335, 55.84723 ], [ -4.22368, 55.84749 ], [ -4.22372, 55.84752 ], [ -4.22374, 55.84754 ], [ -4.22378, 55.84756 ], [ -4.22383, 55.84758 ], [ -4.22482, 55.84798 ], [ -4.22524, 55.84814 ], [ -4.2262, 55.84852 ], [ -4.22637, 55.84859 ], [ -4.22645, 55.84862 ], [ -4.22652, 55.84864 ], [ -4.22659, 55.84864 ], [ -4.22663, 55.84864 ], [ -4.2266317, 55.848645 ], [ -4.22666, 55.84875 ], [ -4.22677, 55.84899 ], [ -4.22683, 55.84913 ], [ -4.2269, 55.8493 ], [ -4.2269026, 55.8493 ], [ -4.22743, 55.84942 ], [ -4.22819, 55.8496 ], [ -4.2284, 55.84964 ], [ -4.22852, 55.84968 ], [ -4.22908, 55.84981 ], [ -4.2293, 55.84986 ], [ -4.22949, 55.84991 ], [ -4.22981, 55.85 ], [ -4.22992, 55.85003 ], [ -4.23032, 55.85015 ], [ -4.23059, 55.85024 ], [ -4.23084, 55.85032 ], [ -4.23087, 55.85033 ], [ -4.23092, 55.85035 ], [ -4.23106, 55.8504 ], [ -4.23131, 55.85047 ], [ -4.23173, 55.85064 ], [ -4.23187, 55.85069 ], [ -4.23204, 55.85075 ], [ -4.23211, 55.85078 ], [ -4.23221, 55.85082 ], [ -4.23229, 55.85085 ], [ -4.23238, 55.85089 ], [ -4.23246, 55.85093 ], [ -4.23253, 55.85097 ], [ -4.23259, 55.85101 ], [ -4.2326, 55.85101 ], [ -4.23265, 55.85105 ], [ -4.23271, 55.8511 ], [ -4.23281, 55.85118 ], [ -4.23289, 55.85124 ], [ -4.23295, 55.85128 ], [ -4.23336, 55.85155 ], [ -4.23346, 55.85161 ], [ -4.2337, 55.85176 ], [ -4.23395, 55.85191 ], [ -4.23405, 55.85197 ], [ -4.23415, 55.85203 ], [ -4.23461, 55.85227 ], [ -4.23487, 55.85241 ], [ -4.23497, 55.85247 ], [ -4.23521, 55.85259 ], [ -4.23558, 55.85279 ], [ -4.23586, 55.85294 ], [ -4.23626, 55.85314 ], [ -4.2365, 55.85326 ], [ -4.23673, 55.85338 ], [ -4.23689, 55.85347 ], [ -4.23723, 55.85365 ], [ -4.23825, 55.85418 ], [ -4.23841, 55.85426 ], [ -4.23867, 55.85439 ], [ -4.23872, 55.85441 ], [ -4.23876, 55.85443 ], [ -4.23877, 55.85443 ], [ -4.23878, 55.85443 ], [ -4.2388, 55.85443 ], [ -4.23886, 55.85443 ], [ -4.23894, 55.85441 ], [ -4.23913, 55.85442 ], [ -4.23923, 55.85443 ], [ -4.2393, 55.85444 ], [ -4.23934, 55.85445 ], [ -4.23967, 55.85452 ], [ -4.24016, 55.85463 ], [ -4.24033, 55.85466 ], [ -4.24047, 55.8547 ], [ -4.24062, 55.85477 ], [ -4.24077, 55.85485 ], [ -4.24104, 55.855 ], [ -4.24109, 55.85503 ], [ -4.24125, 55.85511 ], [ -4.24139, 55.85519 ], [ -4.24203, 55.85552 ], [ -4.24244, 55.85573 ], [ -4.24327, 55.85617 ], [ -4.2438, 55.85645 ], [ -4.24395, 55.85652 ], [ -4.2439467, 55.856517 ], [ -4.24424, 55.85662 ], [ -4.24467, 55.85678 ], [ -4.24492, 55.85686 ], [ -4.24497, 55.85689 ], [ -4.245, 55.85692 ], [ -4.24502, 55.85693 ], [ -4.24514, 55.85695 ], [ -4.2458, 55.85704 ], [ -4.24629, 55.85711 ], [ -4.24707, 55.85721 ], [ -4.24776, 55.85731 ], [ -4.24794, 55.85733 ], [ -4.24848, 55.8574 ], [ -4.24916, 55.85749 ], [ -4.24934, 55.85751 ], [ -4.2493352, 55.8575128 ], [ -4.25023, 55.85762 ], [ -4.25051, 55.85766 ], [ -4.25134, 55.85776 ], [ -4.25146, 55.85777 ], [ -4.25203, 55.85784 ], [ -4.25263, 55.8579 ], [ -4.25268, 55.85788 ], [ -4.25273, 55.85789 ], [ -4.25322, 55.85796 ], [ -4.25364, 55.85802 ], [ -4.25379, 55.85804 ], [ -4.25402, 55.85806 ], [ -4.25423, 55.85809 ], [ -4.25486, 55.85816 ], [ -4.25497, 55.85817 ], [ -4.25522, 55.8582 ], [ -4.25571, 55.85825 ], [ -4.25583, 55.85827 ], [ -4.25678, 55.85835 ], [ -4.25952, 55.85859 ], [ -4.25966, 55.85862 ], [ -4.26038, 55.85869 ], [ -4.26105, 55.85875 ], [ -4.26162, 55.8588 ], [ -4.26252, 55.85888 ], [ -4.26315, 55.85894 ], [ -4.26358, 55.85897 ], [ -4.26389, 55.859 ], [ -4.26403, 55.85901 ], [ -4.26431, 55.85904 ], [ -4.26488, 55.85909 ], [ -4.26544, 55.85914 ], [ -4.26617, 55.85921 ], [ -4.26646, 55.85923 ], [ -4.26693, 55.85927 ], [ -4.2669336, 55.8592737 ], [ -4.26703, 55.85926 ], [ -4.26707, 55.85926 ], [ -4.26712, 55.85926 ], [ -4.26799, 55.85933 ], [ -4.26852, 55.85938 ], [ -4.26866, 55.85939 ], [ -4.2688, 55.8594 ], [ -4.26898, 55.8594 ], [ -4.2689791, 55.8594046 ], [ -4.26909, 55.85938 ], [ -4.26985, 55.85938 ], [ -4.26995, 55.85939 ], [ -4.27027, 55.85942 ], [ -4.27033, 55.85942 ], [ -4.27039, 55.85943 ], [ -4.27045, 55.85944 ], [ -4.27052, 55.85945 ], [ -4.27092, 55.85956 ], [ -4.27142, 55.85968 ], [ -4.27228, 55.85988 ], [ -4.2727, 55.85998 ], [ -4.27293, 55.86002 ], [ -4.27309, 55.86005 ], [ -4.27329, 55.86008 ], [ -4.27341, 55.86009 ], [ -4.27352, 55.86011 ], [ -4.27366, 55.86012 ], [ -4.27378, 55.86013 ], [ -4.27391, 55.86014 ], [ -4.27403, 55.86015 ], [ -4.27416, 55.86016 ], [ -4.27434, 55.86016 ], [ -4.27439, 55.86017 ], [ -4.2754, 55.86017 ], [ -4.27569, 55.86017 ], [ -4.27624, 55.86017 ], [ -4.27665, 55.86017 ], [ -4.27681, 55.86017 ], [ -4.27691, 55.86017 ], [ -4.27707, 55.86016 ], [ -4.27746, 55.86014 ], [ -4.27768, 55.86012 ], [ -4.27799, 55.8601 ], [ -4.2782, 55.86009 ], [ -4.27843, 55.86009 ], [ -4.2786, 55.86009 ], [ -4.27875, 55.86009 ], [ -4.27895, 55.86011 ], [ -4.27903, 55.86011 ], [ -4.27928, 55.86013 ], [ -4.27959, 55.86016 ], [ -4.27986, 55.86019 ], [ -4.28008, 55.86021 ], [ -4.28031, 55.86024 ], [ -4.28046, 55.86026 ], [ -4.28067, 55.86029 ], [ -4.28084, 55.86031 ], [ -4.28101, 55.86034 ], [ -4.28104, 55.86034 ], [ -4.28126, 55.86038 ], [ -4.28163, 55.86044 ], [ -4.28168, 55.86045 ], [ -4.2817, 55.86046 ], [ -4.28189, 55.86049 ], [ -4.28215, 55.86054 ], [ -4.28223, 55.86056 ], [ -4.28229, 55.86057 ], [ -4.28258, 55.86063 ], [ -4.28276, 55.86067 ], [ -4.28285, 55.86069 ], [ -4.28298, 55.86072 ], [ -4.28324, 55.86078 ], [ -4.28351, 55.86085 ], [ -4.2837, 55.8609 ], [ -4.28394, 55.86096 ], [ -4.28426, 55.86104 ], [ -4.28435, 55.86107 ], [ -4.28489, 55.86122 ], [ -4.28548, 55.86138 ], [ -4.28586, 55.86148 ], [ -4.28612, 55.86155 ], [ -4.28632, 55.8616 ], [ -4.28644, 55.86163 ], [ -4.28748, 55.86187 ], [ -4.28804, 55.862 ], [ -4.28838, 55.86208 ], [ -4.28855, 55.86212 ], [ -4.28873, 55.86216 ], [ -4.28938, 55.86232 ], [ -4.28954, 55.86235 ], [ -4.28983, 55.8624 ], [ -4.29007, 55.86246 ], [ -4.29077, 55.86261 ], [ -4.2909, 55.86264 ], [ -4.29133, 55.86272 ], [ -4.29168, 55.86277 ], [ -4.29197, 55.86281 ], [ -4.29227, 55.86285 ], [ -4.29258, 55.86289 ], [ -4.2928, 55.86291 ], [ -4.29288, 55.86291 ], [ -4.29319, 55.86293 ], [ -4.2935, 55.86295 ], [ -4.2938, 55.86296 ], [ -4.29409, 55.86296 ], [ -4.29426, 55.86296 ], [ -4.29438, 55.86296 ], [ -4.2944, 55.86296 ], [ -4.29454, 55.86296 ], [ -4.29498, 55.86295 ], [ -4.29527, 55.86295 ], [ -4.29554, 55.86295 ], [ -4.29583, 55.86296 ], [ -4.29612, 55.86299 ], [ -4.2964, 55.86302 ], [ -4.29661, 55.86305 ], [ -4.29678, 55.86308 ], [ -4.29693, 55.86311 ], [ -4.29709, 55.86314 ], [ -4.29721, 55.86317 ], [ -4.29736, 55.86321 ], [ -4.29749, 55.86325 ], [ -4.29763, 55.86329 ], [ -4.29768, 55.86331 ], [ -4.29771, 55.86332 ], [ -4.29806, 55.86343 ], [ -4.29829, 55.86351 ], [ -4.29848, 55.86358 ], [ -4.29876, 55.86368 ], [ -4.29905, 55.86379 ], [ -4.29932, 55.8639 ], [ -4.29936, 55.86392 ], [ -4.29939, 55.86393 ], [ -4.29959, 55.86402 ], [ -4.29964, 55.86405 ], [ -4.29972, 55.86409 ], [ -4.29992, 55.8642 ], [ -4.30003, 55.86426 ], [ -4.30007, 55.86428 ], [ -4.30009, 55.86429 ], [ -4.30027, 55.86438 ], [ -4.3003, 55.8644 ], [ -4.3004, 55.86445 ], [ -4.30045, 55.86447 ], [ -4.30076, 55.86464 ], [ -4.30086, 55.8647 ], [ -4.30111, 55.86485 ], [ -4.30119, 55.8649 ], [ -4.30124, 55.86493 ], [ -4.30129, 55.86497 ], [ -4.30135, 55.865 ], [ -4.30145, 55.86507 ], [ -4.30158, 55.86517 ], [ -4.30169, 55.86527 ], [ -4.30181, 55.86537 ], [ -4.30213, 55.86564 ], [ -4.30236, 55.86585 ], [ -4.30252, 55.86598 ], [ -4.30257, 55.86602 ], [ -4.30268, 55.86612 ], [ -4.30285, 55.86625 ], [ -4.30293, 55.86632 ], [ -4.30302, 55.86639 ], [ -4.30319, 55.86651 ], [ -4.30322, 55.86653 ], [ -4.30338, 55.86664 ], [ -4.30355, 55.86675 ], [ -4.30376, 55.86687 ], [ -4.30386, 55.86694 ], [ -4.30396, 55.867 ], [ -4.30407, 55.86706 ], [ -4.30435, 55.86722 ], [ -4.30511, 55.86763 ], [ -4.30531, 55.86774 ], [ -4.30542, 55.8678 ], [ -4.30552, 55.86786 ], [ -4.30563, 55.86791 ], [ -4.30575, 55.86797 ], [ -4.30586, 55.86801 ], [ -4.30607, 55.8681 ], [ -4.30621, 55.86815 ], [ -4.30632, 55.86819 ], [ -4.30645, 55.86824 ], [ -4.30657, 55.86827 ], [ -4.3067, 55.86832 ], [ -4.30686, 55.86836 ], [ -4.30701, 55.8684 ], [ -4.30714, 55.86843 ], [ -4.30729, 55.86847 ], [ -4.30742, 55.86849 ], [ -4.30756, 55.86852 ], [ -4.30771, 55.86855 ], [ -4.30785, 55.86857 ], [ -4.308, 55.86859 ], [ -4.30813, 55.86861 ], [ -4.30827, 55.86863 ], [ -4.30837, 55.86864 ], [ -4.30857, 55.86866 ], [ -4.30869, 55.86867 ], [ -4.30881, 55.86868 ], [ -4.30887, 55.86868 ], [ -4.30906, 55.86869 ], [ -4.30919, 55.86869 ], [ -4.30928, 55.86869 ], [ -4.30958, 55.86869 ], [ -4.30988, 55.86868 ], [ -4.31016, 55.86867 ], [ -4.31045, 55.86865 ], [ -4.3107, 55.86864 ], [ -4.31079, 55.86864 ], [ -4.31102, 55.86862 ], [ -4.31111, 55.86862 ], [ -4.31128, 55.86861 ], [ -4.31144, 55.8686 ], [ -4.3116, 55.8686 ], [ -4.31174, 55.86859 ], [ -4.31189, 55.86859 ], [ -4.31195, 55.86858 ], [ -4.31203, 55.86858 ], [ -4.31216, 55.86858 ], [ -4.31232, 55.86858 ], [ -4.31258, 55.86858 ], [ -4.31276, 55.86859 ], [ -4.31303, 55.8686 ], [ -4.3136, 55.86862 ], [ -4.31386, 55.86865 ], [ -4.314, 55.86866 ], [ -4.31413, 55.86867 ], [ -4.31433, 55.86871 ], [ -4.31463, 55.86875 ], [ -4.31488, 55.86879 ], [ -4.31543, 55.86891 ], [ -4.31608, 55.86907 ], [ -4.31631, 55.86912 ], [ -4.31654, 55.86918 ], [ -4.31667, 55.86921 ], [ -4.31734, 55.86938 ], [ -4.31749, 55.86941 ], [ -4.31837, 55.86962 ], [ -4.31865, 55.8697 ], [ -4.3188, 55.86974 ], [ -4.31895, 55.86977 ], [ -4.31918, 55.86983 ], [ -4.31924, 55.86984 ], [ -4.31954, 55.86991 ], [ -4.31982, 55.86999 ], [ -4.3204, 55.87015 ], [ -4.32068, 55.87022 ], [ -4.32085, 55.87027 ], [ -4.32109, 55.87034 ], [ -4.32179, 55.87057 ], [ -4.32197, 55.87059 ], [ -4.3221, 55.87063 ], [ -4.32257, 55.87077 ], [ -4.32276, 55.87082 ], [ -4.32283, 55.87085 ], [ -4.32287, 55.87086 ], [ -4.32317, 55.87096 ], [ -4.32335, 55.87101 ], [ -4.32343, 55.87104 ], [ -4.32365, 55.87111 ], [ -4.32438, 55.87134 ], [ -4.32502, 55.87161 ], [ -4.32576, 55.87195 ], [ -4.32601, 55.87207 ], [ -4.32613, 55.87212 ], [ -4.32632, 55.87223 ], [ -4.32659, 55.87239 ], [ -4.32668, 55.87245 ], [ -4.32694, 55.87259 ], [ -4.3272, 55.87273 ], [ -4.32735, 55.87281 ], [ -4.32745, 55.87286 ], [ -4.32867, 55.87345 ], [ -4.32879, 55.87351 ], [ -4.32884, 55.87354 ], [ -4.32893, 55.87359 ], [ -4.32908, 55.87366 ], [ -4.32919, 55.87373 ], [ -4.32936, 55.87383 ], [ -4.32954, 55.87392 ], [ -4.32962, 55.87396 ], [ -4.32977, 55.87403 ], [ -4.32979, 55.87403 ], [ -4.32986, 55.87406 ], [ -4.33001, 55.8741 ], [ -4.3302, 55.87414 ], [ -4.33038, 55.87418 ], [ -4.33085, 55.87427 ], [ -4.33129, 55.87435 ], [ -4.33157, 55.8744 ], [ -4.33188, 55.87446 ], [ -4.33189, 55.87447 ], [ -4.33233, 55.87455 ], [ -4.33279, 55.87463 ], [ -4.33375, 55.87481 ], [ -4.33389, 55.87484 ], [ -4.33408, 55.87488 ], [ -4.33454, 55.87499 ], [ -4.3349, 55.87509 ], [ -4.33529, 55.8752 ], [ -4.33644, 55.8755 ], [ -4.33724, 55.87572 ], [ -4.33751, 55.87579 ], [ -4.33777, 55.87586 ], [ -4.33781, 55.87587 ], [ -4.3384, 55.87602 ], [ -4.33876, 55.87611 ], [ -4.33896, 55.87616 ], [ -4.33921, 55.87622 ], [ -4.33938, 55.87626 ], [ -4.33972, 55.87634 ], [ -4.34046, 55.8765 ], [ -4.34136, 55.87671 ], [ -4.34148, 55.87674 ], [ -4.34165, 55.87677 ], [ -4.34178, 55.87679 ], [ -4.34188, 55.8768 ], [ -4.34199, 55.87681 ], [ -4.34212, 55.87683 ], [ -4.34229, 55.87683 ], [ -4.3424, 55.87684 ], [ -4.3425, 55.87684 ], [ -4.34257, 55.87684 ], [ -4.34268, 55.87683 ], [ -4.34402, 55.87679 ], [ -4.34432, 55.87679 ], [ -4.34433, 55.87677 ], [ -4.34434, 55.87676 ], [ -4.34435, 55.87675 ], [ -4.34436, 55.87674 ], [ -4.34437, 55.87674 ], [ -4.34439, 55.87672 ], [ -4.34442, 55.87672 ], [ -4.34443, 55.87672 ], [ -4.34444, 55.87672 ], [ -4.34445, 55.87671 ], [ -4.34446, 55.87671 ], [ -4.34447, 55.87671 ], [ -4.34448, 55.87671 ], [ -4.34449, 55.87671 ], [ -4.3445, 55.87672 ], [ -4.34451, 55.87672 ], [ -4.34453, 55.87672 ], [ -4.34456, 55.87673 ], [ -4.34457, 55.87673 ], [ -4.34458, 55.87673 ], [ -4.34459, 55.87674 ], [ -4.3446, 55.87674 ], [ -4.34461, 55.87674 ], [ -4.34461, 55.87675 ], [ -4.34462, 55.87675 ], [ -4.34464, 55.87677 ], [ -4.34479, 55.8768 ], [ -4.34482, 55.87681 ], [ -4.345, 55.87685 ], [ -4.34509, 55.87687 ], [ -4.34522, 55.8769 ], [ -4.34533, 55.87693 ], [ -4.34543, 55.87696 ], [ -4.34552, 55.877 ], [ -4.34563, 55.87704 ], [ -4.34575, 55.87714 ], [ -4.34592, 55.8772 ], [ -4.34604, 55.87725 ], [ -4.34674, 55.8775 ], [ -4.34771, 55.87787 ], [ -4.34799, 55.87798 ], [ -4.34923, 55.87846 ], [ -4.3498, 55.87868 ], [ -4.35006, 55.87878 ], [ -4.35048, 55.87894 ], [ -4.35098, 55.87913 ], [ -4.35128, 55.87925 ], [ -4.3512806, 55.8792454 ], [ -4.35141, 55.87927 ], [ -4.35149, 55.87928 ], [ -4.35175, 55.8794 ], [ -4.352, 55.8795 ], [ -4.35253, 55.8797 ], [ -4.35262, 55.87974 ], [ -4.35338, 55.88004 ], [ -4.35407, 55.88031 ], [ -4.35416, 55.88034 ], [ -4.3543, 55.88039 ], [ -4.35521, 55.88075 ], [ -4.35562, 55.88091 ], [ -4.35588, 55.88101 ], [ -4.3563, 55.88115 ], [ -4.35635, 55.88117 ], [ -4.35642, 55.8812 ], [ -4.35648, 55.88122 ], [ -4.35654, 55.88125 ], [ -4.35661, 55.88127 ], [ -4.35669, 55.8813 ], [ -4.35678, 55.88132 ], [ -4.35691, 55.88136 ], [ -4.35717, 55.88144 ], [ -4.35819, 55.88172 ], [ -4.3585, 55.88181 ], [ -4.35884, 55.88189 ], [ -4.35996, 55.88219 ], [ -4.36014, 55.88223 ], [ -4.36024, 55.88226 ], [ -4.36032, 55.88228 ], [ -4.36041, 55.8823 ], [ -4.36054, 55.88232 ], [ -4.36143, 55.88252 ], [ -4.36158, 55.88255 ], [ -4.36173, 55.88258 ], [ -4.36186, 55.8826 ], [ -4.36203, 55.88263 ], [ -4.36264, 55.88273 ], [ -4.36279, 55.88276 ], [ -4.36291, 55.88281 ], [ -4.36308, 55.88283 ], [ -4.36326, 55.88286 ], [ -4.36355, 55.88288 ], [ -4.3638, 55.8829 ], [ -4.36393, 55.88291 ], [ -4.36428, 55.88295 ], [ -4.36447, 55.88296 ], [ -4.36464, 55.88297 ], [ -4.36475, 55.88298 ], [ -4.36492, 55.88299 ], [ -4.36551, 55.88303 ], [ -4.3657, 55.88304 ], [ -4.36577, 55.88305 ], [ -4.36595, 55.88306 ], [ -4.36605, 55.88307 ], [ -4.36618, 55.88308 ], [ -4.36629, 55.8831 ], [ -4.36639, 55.88311 ], [ -4.3665, 55.88313 ], [ -4.36662, 55.88316 ], [ -4.3667, 55.88317 ], [ -4.36672, 55.88318 ], [ -4.3668, 55.8832 ], [ -4.36689, 55.88323 ], [ -4.36698, 55.88327 ], [ -4.36712, 55.88332 ], [ -4.36722, 55.88336 ], [ -4.36766, 55.88355 ], [ -4.36814, 55.88376 ], [ -4.36874, 55.884 ], [ -4.37155, 55.88519 ], [ -4.37208, 55.88541 ], [ -4.37237, 55.88553 ], [ -4.37441, 55.88638 ], [ -4.37464, 55.88648 ], [ -4.37543, 55.88682 ], [ -4.37647, 55.88727 ], [ -4.37832, 55.88805 ], [ -4.37848, 55.8881 ], [ -4.37853, 55.88812 ], [ -4.37878, 55.88822 ], [ -4.37913, 55.88837 ], [ -4.37969, 55.88861 ], [ -4.38, 55.88875 ], [ -4.38032, 55.88888 ], [ -4.38051, 55.88896 ], [ -4.38054, 55.88897 ], [ -4.3807, 55.88904 ], [ -4.38094, 55.88914 ], [ -4.3811, 55.88921 ], [ -4.38128, 55.88928 ], [ -4.3814, 55.88934 ], [ -4.38247, 55.88979 ], [ -4.38331, 55.89014 ], [ -4.38343, 55.89019 ], [ -4.3838, 55.89034 ], [ -4.38424, 55.89053 ], [ -4.38432, 55.89056 ], [ -4.38451, 55.89063 ], [ -4.3848, 55.89071 ], [ -4.38496, 55.89075 ], [ -4.38509, 55.89078 ], [ -4.38518, 55.8908 ], [ -4.3856, 55.89089 ], [ -4.38606, 55.89099 ], [ -4.38617, 55.89102 ], [ -4.38628, 55.89103 ], [ -4.38663, 55.89109 ], [ -4.38693, 55.89114 ], [ -4.38728, 55.8912 ], [ -4.388, 55.89138 ], [ -4.38821, 55.89144 ], [ -4.3884, 55.89151 ], [ -4.38868, 55.8916 ], [ -4.38895, 55.89171 ], [ -4.38906, 55.89175 ], [ -4.38915, 55.89179 ], [ -4.3894, 55.8919 ], [ -4.38956, 55.89197 ], [ -4.38987, 55.89213 ], [ -4.39043, 55.89241 ], [ -4.39105, 55.89272 ], [ -4.39119, 55.89279 ], [ -4.39135, 55.89287 ], [ -4.39163, 55.893 ], [ -4.39244, 55.8934 ], [ -4.39247, 55.89341 ], [ -4.39347, 55.89392 ], [ -4.39366, 55.89401 ], [ -4.39381, 55.8941 ], [ -4.39394, 55.89416 ], [ -4.39403, 55.89421 ], [ -4.39411, 55.89424 ], [ -4.39477, 55.89458 ], [ -4.39537, 55.89487 ], [ -4.39599, 55.89518 ], [ -4.39657, 55.89548 ], [ -4.39665, 55.89554 ], [ -4.39697, 55.8957 ], [ -4.39725, 55.89584 ], [ -4.39829, 55.89635 ], [ -4.39857, 55.89649 ], [ -4.39878, 55.8966 ], [ -4.39897, 55.89668 ], [ -4.39935, 55.89684 ], [ -4.39996, 55.89711 ], [ -4.40045, 55.89736 ], [ -4.40084, 55.89755 ], [ -4.40128, 55.89777 ], [ -4.40197, 55.89811 ], [ -4.40229, 55.89826 ], [ -4.40231, 55.89828 ], [ -4.40325, 55.89876 ], [ -4.40403, 55.89918 ], [ -4.40458, 55.89947 ], [ -4.40462, 55.89948 ], [ -4.40486, 55.89961 ], [ -4.40505, 55.89971 ], [ -4.40517, 55.89977 ], [ -4.40604, 55.90019 ], [ -4.407, 55.90066 ], [ -4.40759, 55.90095 ], [ -4.40798, 55.90115 ], [ -4.40843, 55.90138 ], [ -4.40856, 55.90149 ], [ -4.40876, 55.90159 ], [ -4.40882, 55.90162 ], [ -4.40929, 55.90185 ], [ -4.40951, 55.90196 ], [ -4.40979, 55.90209 ], [ -4.41021, 55.90231 ], [ -4.41057, 55.90249 ], [ -4.41074, 55.90257 ], [ -4.41111, 55.90276 ], [ -4.41143, 55.90291 ], [ -4.41156, 55.90298 ], [ -4.41205, 55.90319 ], [ -4.41235, 55.90333 ], [ -4.41259, 55.90344 ], [ -4.41305, 55.90366 ], [ -4.41352, 55.9039 ], [ -4.41361, 55.90394 ], [ -4.41413, 55.90419 ], [ -4.41506, 55.90463 ], [ -4.41522, 55.90471 ], [ -4.41564, 55.90491 ], [ -4.41611, 55.90513 ], [ -4.41637, 55.90525 ], [ -4.4169, 55.90549 ], [ -4.41737, 55.9057 ], [ -4.41763, 55.90581 ], [ -4.41861, 55.90624 ], [ -4.41885, 55.90635 ], [ -4.41949, 55.90664 ], [ -4.4201, 55.90691 ], [ -4.42022, 55.90698 ], [ -4.42069, 55.90719 ], [ -4.42108, 55.90737 ], [ -4.42189, 55.90772 ], [ -4.42315, 55.90828 ], [ -4.42334, 55.90836 ], [ -4.42355, 55.90845 ], [ -4.42397, 55.90864 ], [ -4.42427, 55.90875 ], [ -4.4249, 55.90903 ], [ -4.42523, 55.90917 ], [ -4.42541, 55.90925 ], [ -4.42595, 55.90949 ], [ -4.42616, 55.90959 ], [ -4.42623, 55.90962 ], [ -4.4262318, 55.9096205 ], [ -4.42629, 55.90959 ], [ -4.42634, 55.90956 ], [ -4.4265, 55.90945 ], [ -4.4266, 55.90938 ], [ -4.42671, 55.90933 ], [ -4.4268, 55.90931 ], [ -4.42688, 55.90929 ], [ -4.42693, 55.90928 ], [ -4.42715, 55.90927 ], [ -4.42742, 55.90927 ], [ -4.42752, 55.90927 ], [ -4.42758, 55.90928 ], [ -4.42783, 55.90932 ], [ -4.42787, 55.90933 ], [ -4.42835, 55.90945 ], [ -4.42864, 55.90952 ], [ -4.42942, 55.9097 ], [ -4.42971, 55.90976 ], [ -4.43031, 55.9099 ], [ -4.4306, 55.90997 ], [ -4.43084, 55.91003 ], [ -4.43118, 55.91011 ], [ -4.43193, 55.91027 ], [ -4.43282, 55.91048 ], [ -4.43317, 55.91056 ], [ -4.43341, 55.91062 ], [ -4.4343, 55.91083 ], [ -4.43439, 55.91085 ], [ -4.43584, 55.91119 ], [ -4.43599, 55.91119 ], [ -4.4366, 55.91131 ], [ -4.43706, 55.91136 ], [ -4.43739, 55.91137 ], [ -4.4378, 55.9114 ], [ -4.43784, 55.9114 ], [ -4.43824, 55.9114 ], [ -4.43848, 55.91141 ], [ -4.43849, 55.91141 ], [ -4.43866, 55.91142 ], [ -4.43896, 55.91148 ], [ -4.43928, 55.91157 ], [ -4.43936, 55.9116 ], [ -4.43951, 55.91167 ], [ -4.43966, 55.91178 ], [ -4.43976, 55.91187 ], [ -4.43984, 55.91196 ], [ -4.43988, 55.91205 ], [ -4.43996, 55.91222 ], [ -4.43998, 55.91227 ], [ -4.44009, 55.91248 ], [ -4.44021, 55.9126 ], [ -4.44044, 55.91276 ], [ -4.44062, 55.91285 ], [ -4.44107, 55.91306 ], [ -4.44109, 55.91307 ], [ -4.44182, 55.9134 ], [ -4.44232, 55.91363 ], [ -4.44254, 55.91373 ], [ -4.44281, 55.91386 ], [ -4.4438, 55.91432 ], [ -4.44455, 55.91466 ], [ -4.44504, 55.91489 ], [ -4.44527, 55.91499 ], [ -4.44529, 55.915 ], [ -4.44554, 55.91512 ], [ -4.44618, 55.91541 ], [ -4.44629, 55.91545 ], [ -4.44656, 55.91556 ], [ -4.44686, 55.91565 ], [ -4.44714, 55.9157 ], [ -4.44717, 55.9157 ], [ -4.44742, 55.91573 ], [ -4.44745, 55.91573 ], [ -4.44808, 55.91579 ], [ -4.44809, 55.91579 ], [ -4.4486, 55.91583 ], [ -4.44872, 55.91585 ], [ -4.4489, 55.91588 ], [ -4.4492, 55.91594 ], [ -4.44931, 55.91598 ], [ -4.44964, 55.9161 ], [ -4.45116, 55.9167 ], [ -4.451161, 55.9166971 ], [ -4.45128, 55.91674 ], [ -4.45132, 55.91676 ], [ -4.45162, 55.91689 ], [ -4.45207, 55.91709 ], [ -4.45239, 55.91721 ], [ -4.45265, 55.91731 ], [ -4.45291, 55.91741 ], [ -4.45292, 55.91742 ], [ -4.45315, 55.91754 ], [ -4.45344, 55.91769 ], [ -4.45359, 55.9178 ], [ -4.45374, 55.91791 ], [ -4.45378, 55.91794 ], [ -4.45395, 55.9181 ], [ -4.4542, 55.91833 ], [ -4.45428, 55.9184 ], [ -4.45445, 55.91856 ], [ -4.45471, 55.9188 ], [ -4.45502, 55.91912 ], [ -4.45507, 55.91919 ], [ -4.45519, 55.91935 ], [ -4.45522, 55.91939 ], [ -4.4553, 55.91952 ], [ -4.45541, 55.91969 ], [ -4.45551, 55.91986 ], [ -4.45562, 55.92003 ], [ -4.45568, 55.92012 ], [ -4.45573, 55.9202 ], [ -4.45593, 55.92054 ], [ -4.45603, 55.92071 ], [ -4.4561, 55.92083 ], [ -4.45618, 55.921 ], [ -4.45618, 55.92101 ], [ -4.45623, 55.9211 ], [ -4.45628, 55.92118 ], [ -4.45639, 55.92134 ], [ -4.45649, 55.9215 ], [ -4.45661, 55.92168 ], [ -4.45673, 55.92185 ], [ -4.45678, 55.92192 ], [ -4.45684, 55.92202 ], [ -4.45695, 55.92218 ], [ -4.45695, 55.92219 ], [ -4.45706, 55.92235 ], [ -4.45706, 55.92236 ], [ -4.45715, 55.92249 ], [ -4.45718, 55.92252 ], [ -4.45718, 55.92253 ], [ -4.45734, 55.92268 ], [ -4.45749, 55.92282 ], [ -4.4575, 55.92283 ], [ -4.45751, 55.92283 ], [ -4.4577, 55.92297 ], [ -4.4577, 55.92298 ], [ -4.45773, 55.92299 ], [ -4.4581, 55.92319 ], [ -4.45818, 55.92321 ], [ -4.45849, 55.92327 ], [ -4.45878, 55.92333 ], [ -4.45879, 55.92334 ], [ -4.45891, 55.92336 ], [ -4.45937, 55.92347 ], [ -4.45938, 55.92348 ], [ -4.45966, 55.92354 ], [ -4.46027, 55.92369 ], [ -4.46085, 55.92382 ], [ -4.46086, 55.92383 ], [ -4.46089, 55.92383 ], [ -4.46155, 55.92402 ], [ -4.4617, 55.92409 ], [ -4.46175, 55.92411 ], [ -4.46195, 55.92419 ], [ -4.46222, 55.9243 ], [ -4.46262, 55.92446 ], [ -4.46297, 55.92462 ], [ -4.46323, 55.92474 ], [ -4.4634, 55.92482 ], [ -4.46351, 55.92487 ], [ -4.46397, 55.92508 ], [ -4.46437, 55.92524 ], [ -4.4649, 55.92533 ], [ -4.46513, 55.92536 ], [ -4.46514, 55.92537 ], [ -4.46545, 55.92541 ], [ -4.46576, 55.92546 ], [ -4.46602, 55.9255 ], [ -4.46638, 55.92555 ], [ -4.46669, 55.92559 ], [ -4.467, 55.92562 ], [ -4.46701, 55.92563 ], [ -4.46732, 55.92566 ], [ -4.46763, 55.9257 ], [ -4.46784, 55.92573 ], [ -4.46795, 55.92574 ], [ -4.46826, 55.92579 ], [ -4.46857, 55.92583 ], [ -4.46888, 55.92588 ], [ -4.46894, 55.92589 ], [ -4.46945, 55.92598 ], [ -4.46949, 55.92599 ], [ -4.46976, 55.92606 ], [ -4.47005, 55.92616 ], [ -4.47032, 55.92626 ], [ -4.47084, 55.92644 ], [ -4.47113, 55.92655 ], [ -4.47118, 55.92657 ], [ -4.47166, 55.92675 ], [ -4.4721, 55.92692 ], [ -4.47258, 55.92714 ], [ -4.47316, 55.92743 ], [ -4.47324, 55.92747 ], [ -4.47395, 55.92789 ], [ -4.47404, 55.92795 ], [ -4.4742, 55.92806 ], [ -4.47452, 55.92828 ], [ -4.47475, 55.92843 ], [ -4.47513, 55.92862 ], [ -4.47534, 55.92872 ], [ -4.47569, 55.92891 ], [ -4.47578, 55.92895 ], [ -4.47584, 55.92898 ], [ -4.47586, 55.92899 ], [ -4.47607, 55.92906 ], [ -4.47611, 55.92907 ], [ -4.47632, 55.92913 ], [ -4.47633, 55.92913 ], [ -4.47692, 55.92928 ], [ -4.47696, 55.92929 ], [ -4.47698, 55.9293 ], [ -4.47752, 55.92941 ], [ -4.47771, 55.92945 ], [ -4.47789, 55.92949 ], [ -4.478, 55.92952 ], [ -4.47839, 55.92963 ], [ -4.47879, 55.9297 ], [ -4.47905, 55.92974 ], [ -4.47908, 55.92975 ], [ -4.47918, 55.92976 ], [ -4.4794, 55.92979 ], [ -4.47964, 55.92983 ], [ -4.47981, 55.92986 ], [ -4.47992, 55.92988 ], [ -4.48, 55.92991 ], [ -4.4801, 55.92994 ], [ -4.48019, 55.92996 ], [ -4.48032, 55.93001 ], [ -4.48034, 55.93004 ], [ -4.48039, 55.93011 ], [ -4.48041, 55.93016 ], [ -4.48045, 55.93021 ], [ -4.4804531, 55.9302131 ], [ -4.48061, 55.93019 ], [ -4.48076, 55.93019 ], [ -4.48083, 55.93021 ], [ -4.48084, 55.93021 ], [ -4.48091, 55.93024 ], [ -4.48098, 55.93029 ], [ -4.481, 55.93035 ], [ -4.48101, 55.93037 ], [ -4.48102, 55.93054 ], [ -4.48098, 55.93069 ], [ -4.48095, 55.93087 ], [ -4.4809478, 55.9308715 ], [ -4.48101, 55.93088 ], [ -4.48108, 55.93088 ], [ -4.48138, 55.9309 ], [ -4.48169, 55.93091 ], [ -4.4818, 55.93092 ], [ -4.48195, 55.93092 ], [ -4.48233, 55.93094 ], [ -4.48244, 55.93095 ], [ -4.48252, 55.93095 ], [ -4.48263, 55.93095 ], [ -4.48288, 55.93096 ], [ -4.48327, 55.93095 ], [ -4.48372, 55.93092 ], [ -4.48384, 55.93091 ], [ -4.48422, 55.93087 ], [ -4.48454, 55.93084 ], [ -4.48457, 55.93083 ], [ -4.48494, 55.9308 ], [ -4.48516, 55.9308 ], [ -4.48538, 55.93081 ], [ -4.4856, 55.93083 ], [ -4.48604, 55.93086 ], [ -4.48626, 55.93088 ], [ -4.48656, 55.93091 ], [ -4.48678, 55.93095 ], [ -4.4869, 55.93098 ], [ -4.48701, 55.93101 ], [ -4.48731, 55.9311 ], [ -4.48746, 55.93114 ], [ -4.4877, 55.9312 ], [ -4.48783, 55.93123 ], [ -4.48802, 55.93126 ], [ -4.48838, 55.93129 ], [ -4.4885, 55.9313 ], [ -4.48865, 55.93131 ], [ -4.48882, 55.93132 ], [ -4.48931, 55.93136 ], [ -4.48945, 55.93138 ], [ -4.48954, 55.93139 ], [ -4.48974, 55.93142 ], [ -4.48985, 55.93144 ], [ -4.48999, 55.93147 ], [ -4.4906, 55.9316 ], [ -4.49082, 55.93164 ], [ -4.49094, 55.93165 ], [ -4.49123, 55.93166 ], [ -4.49252, 55.93166 ], [ -4.49282, 55.93166 ], [ -4.49291, 55.93166 ], [ -4.49317, 55.93166 ], [ -4.49343, 55.93165 ], [ -4.49352, 55.93164 ], [ -4.49382, 55.93162 ], [ -4.49415, 55.93158 ], [ -4.49428, 55.93156 ], [ -4.49446, 55.93153 ], [ -4.49455, 55.93152 ], [ -4.49477, 55.93149 ], [ -4.49507, 55.93144 ], [ -4.49516, 55.93143 ], [ -4.49527, 55.93143 ], [ -4.49547, 55.93142 ], [ -4.49576, 55.93142 ], [ -4.49581, 55.93143 ], [ -4.49613, 55.93143 ], [ -4.49623, 55.93144 ], [ -4.49645, 55.93144 ], [ -4.49677, 55.93146 ], [ -4.49698, 55.93146 ], [ -4.4971, 55.93146 ], [ -4.49742, 55.93147 ], [ -4.49746, 55.93147 ], [ -4.49754, 55.93147 ], [ -4.49762, 55.93147 ], [ -4.49794, 55.93147 ], [ -4.49795, 55.93147 ], [ -4.49844, 55.93144 ], [ -4.49858, 55.93144 ], [ -4.4989, 55.93143 ], [ -4.49898, 55.93143 ], [ -4.49945, 55.9314 ], [ -4.49947, 55.93139 ], [ -4.49979, 55.93137 ], [ -4.50011, 55.93134 ], [ -4.50042, 55.93131 ], [ -4.50062, 55.93129 ], [ -4.50102, 55.93125 ], [ -4.50106, 55.93125 ], [ -4.50133, 55.93123 ], [ -4.50137, 55.93122 ], [ -4.5014, 55.93122 ], [ -4.50165, 55.93121 ], [ -4.50166, 55.93121 ], [ -4.50195, 55.93123 ], [ -4.50197, 55.93124 ], [ -4.50219, 55.93127 ], [ -4.50228, 55.93129 ], [ -4.50238, 55.93132 ], [ -4.50245, 55.93134 ], [ -4.50254, 55.93137 ], [ -4.50259, 55.93139 ], [ -4.50282, 55.93147 ], [ -4.50295, 55.93153 ], [ -4.50313, 55.93158 ], [ -4.50324, 55.93161 ], [ -4.50336, 55.93164 ], [ -4.5033604, 55.9316394 ], [ -4.50341, 55.93164 ], [ -4.50343, 55.93165 ], [ -4.50346, 55.93165 ], [ -4.50348, 55.93165 ], [ -4.50351, 55.93166 ], [ -4.50355, 55.93167 ], [ -4.50363, 55.93168 ], [ -4.50367, 55.93168 ], [ -4.50381, 55.9317 ], [ -4.50394, 55.93173 ], [ -4.50417, 55.93177 ], [ -4.50424, 55.93178 ], [ -4.50442, 55.93182 ], [ -4.50455, 55.93185 ], [ -4.50466, 55.93187 ], [ -4.50509, 55.93197 ], [ -4.50514, 55.93198 ], [ -4.50524, 55.93201 ], [ -4.50526, 55.93201 ], [ -4.50538, 55.93205 ], [ -4.50543, 55.93206 ], [ -4.50552, 55.93209 ], [ -4.5057, 55.93216 ], [ -4.50571, 55.93216 ], [ -4.50597, 55.93226 ], [ -4.50598, 55.93226 ], [ -4.50623, 55.93236 ], [ -4.5064, 55.93243 ], [ -4.50649, 55.93247 ], [ -4.50657, 55.9325 ], [ -4.50683, 55.93261 ], [ -4.50701, 55.93268 ], [ -4.50719, 55.93274 ], [ -4.50728, 55.93278 ], [ -4.50755, 55.93287 ], [ -4.50782, 55.93297 ], [ -4.50809, 55.93307 ], [ -4.50836, 55.93317 ], [ -4.50843, 55.9332 ], [ -4.50862, 55.93327 ], [ -4.50889, 55.93336 ], [ -4.50916, 55.93346 ], [ -4.51027, 55.93387 ], [ -4.5105, 55.93396 ], [ -4.51077, 55.93405 ], [ -4.51113, 55.93418 ], [ -4.51133, 55.93424 ], [ -4.51171, 55.93435 ], [ -4.51218, 55.93449 ], [ -4.5124, 55.93456 ], [ -4.51342, 55.93487 ], [ -4.51372, 55.93495 ], [ -4.51449, 55.93518 ], [ -4.51574, 55.93556 ], [ -4.51607, 55.93566 ], [ -4.51629, 55.93573 ], [ -4.51725, 55.93601 ], [ -4.51766, 55.93612 ], [ -4.51788, 55.93616 ], [ -4.518, 55.93618 ], [ -4.51818, 55.9362 ], [ -4.51836, 55.93622 ], [ -4.51853, 55.93623 ], [ -4.51871, 55.93623 ], [ -4.51894, 55.93623 ], [ -4.51903, 55.93622 ], [ -4.51917, 55.93621 ], [ -4.51938, 55.93619 ], [ -4.52074, 55.93597 ], [ -4.52077, 55.93596 ], [ -4.52139, 55.93586 ], [ -4.52324, 55.93556 ], [ -4.5241, 55.93542 ], [ -4.5244, 55.93537 ], [ -4.52471, 55.93532 ], [ -4.52486, 55.93529 ], [ -4.52549, 55.9352 ], [ -4.52586, 55.93514 ], [ -4.5262, 55.9351 ], [ -4.52643, 55.93509 ], [ -4.5266, 55.93509 ], [ -4.52673, 55.93509 ], [ -4.52687, 55.9351 ], [ -4.52701, 55.93511 ], [ -4.52724, 55.93514 ], [ -4.52735, 55.93516 ], [ -4.52743, 55.93517 ], [ -4.52754, 55.9352 ], [ -4.52763, 55.93522 ], [ -4.52773, 55.93525 ], [ -4.52897, 55.93564 ], [ -4.52931, 55.93575 ], [ -4.52975, 55.93589 ], [ -4.5312, 55.93638 ], [ -4.53143, 55.93646 ], [ -4.53233, 55.93676 ], [ -4.53234, 55.93676 ], [ -4.53305, 55.93699 ], [ -4.53372, 55.93722 ], [ -4.53397, 55.93731 ], [ -4.53448, 55.93751 ], [ -4.53465, 55.93759 ], [ -4.53476, 55.93766 ], [ -4.53488, 55.93774 ], [ -4.53503, 55.93786 ], [ -4.53515, 55.938 ], [ -4.53539, 55.93827 ], [ -4.53592, 55.93888 ], [ -4.53618, 55.93918 ], [ -4.53625, 55.93924 ], [ -4.53648, 55.93945 ], [ -4.53725, 55.94009 ], [ -4.53784, 55.94059 ], [ -4.53807, 55.94078 ], [ -4.53818, 55.94087 ], [ -4.5384, 55.94104 ], [ -4.53857, 55.94116 ], [ -4.5389, 55.94136 ], [ -4.53923, 55.94155 ], [ -4.53936, 55.94163 ], [ -4.54004, 55.94203 ], [ -4.54038, 55.94223 ], [ -4.54067, 55.9424 ], [ -4.54097, 55.94257 ], [ -4.54136, 55.94277 ], [ -4.54202, 55.9431 ], [ -4.54251, 55.94334 ], [ -4.5433, 55.94373 ], [ -4.54372, 55.94394 ], [ -4.54462, 55.94438 ], [ -4.5449, 55.94453 ], [ -4.5451, 55.94465 ], [ -4.54529, 55.94478 ], [ -4.54544, 55.94491 ], [ -4.54566, 55.94515 ], [ -4.54585, 55.94536 ], [ -4.54655, 55.94614 ], [ -4.54738, 55.94708 ], [ -4.54742, 55.94713 ], [ -4.54829, 55.94809 ], [ -4.54854, 55.94838 ], [ -4.54895, 55.94884 ], [ -4.54899, 55.94888 ], [ -4.54922, 55.94912 ], [ -4.5494, 55.94927 ], [ -4.54973, 55.94955 ], [ -4.55045, 55.9499 ], [ -4.55122, 55.95026 ], [ -4.55207, 55.95063 ], [ -4.55251, 55.95085 ], [ -4.55252, 55.95085 ], [ -4.55295, 55.95109 ], [ -4.55339, 55.95136 ], [ -4.55364, 55.95155 ], [ -4.55392, 55.95177 ], [ -4.55437, 55.95215 ], [ -4.55449, 55.95225 ], [ -4.55485, 55.95256 ], [ -4.55499, 55.95268 ], [ -4.55509, 55.95275 ], [ -4.55519, 55.95279 ], [ -4.55527, 55.95283 ], [ -4.55544, 55.9529 ], [ -4.5555, 55.9529 ], [ -4.55554, 55.9529 ], [ -4.55557, 55.9529 ], [ -4.55559, 55.95291 ], [ -4.55563, 55.95292 ], [ -4.55568, 55.95293 ], [ -4.55572, 55.95295 ], [ -4.55577, 55.95297 ], [ -4.55582, 55.95299 ], [ -4.55586, 55.95302 ], [ -4.55589, 55.95305 ], [ -4.55592, 55.95308 ], [ -4.55593, 55.95312 ], [ -4.55595, 55.95316 ], [ -4.55595, 55.95318 ], [ -4.55596, 55.95321 ], [ -4.55596, 55.95323 ], [ -4.55596, 55.95325 ], [ -4.55595, 55.95327 ], [ -4.55594, 55.95331 ], [ -4.55592, 55.95333 ], [ -4.556, 55.95345 ], [ -4.55602, 55.95348 ], [ -4.5561, 55.95355 ], [ -4.55624, 55.95367 ], [ -4.55728, 55.95458 ], [ -4.55752, 55.95479 ], [ -4.55765, 55.95489 ], [ -4.55778, 55.95499 ], [ -4.55799, 55.95514 ], [ -4.55819, 55.95527 ], [ -4.55849, 55.95544 ], [ -4.55869, 55.95555 ], [ -4.55897, 55.95567 ], [ -4.55931, 55.95582 ], [ -4.55958, 55.95591 ], [ -4.55989, 55.95602 ], [ -4.56015, 55.9561 ], [ -4.5604, 55.95616 ], [ -4.56057, 55.95619 ], [ -4.56077, 55.95624 ], [ -4.5623, 55.9566 ], [ -4.56235, 55.95657 ], [ -4.56239, 55.95655 ], [ -4.56244, 55.95653 ], [ -4.56249, 55.95651 ], [ -4.56255, 55.9565 ], [ -4.56261, 55.95649 ], [ -4.56267, 55.95649 ], [ -4.56273, 55.95649 ], [ -4.56279, 55.9565 ], [ -4.56289, 55.95652 ], [ -4.56297, 55.95654 ], [ -4.56301, 55.95656 ], [ -4.56306, 55.95658 ], [ -4.56309, 55.95661 ], [ -4.56312, 55.95663 ], [ -4.56314, 55.95666 ], [ -4.56316, 55.9567 ], [ -4.56317, 55.95673 ], [ -4.56347, 55.95684 ], [ -4.56363, 55.95688 ], [ -4.56506, 55.95721 ], [ -4.56512, 55.95723 ], [ -4.56521, 55.95725 ], [ -4.5666, 55.95757 ], [ -4.5673, 55.95772 ], [ -4.56765, 55.9578 ], [ -4.56938, 55.95819 ], [ -4.57203, 55.95878 ], [ -4.57217, 55.95881 ], [ -4.57274, 55.95894 ], [ -4.57316, 55.95903 ], [ -4.5733, 55.95907 ], [ -4.57471, 55.95939 ], [ -4.57495, 55.95945 ], [ -4.5752, 55.95951 ], [ -4.57556, 55.95959 ], [ -4.57568, 55.95963 ], [ -4.57606, 55.95971 ], [ -4.57711, 55.95996 ], [ -4.57838, 55.96025 ], [ -4.57892, 55.96038 ], [ -4.57984, 55.96058 ], [ -4.58046, 55.96072 ], [ -4.58164, 55.96099 ], [ -4.58216, 55.96113 ], [ -4.5824, 55.96119 ], [ -4.58269, 55.96128 ], [ -4.58292, 55.96136 ], [ -4.58313, 55.96143 ], [ -4.58338, 55.96151 ], [ -4.5837, 55.96164 ], [ -4.58392, 55.96173 ], [ -4.58414, 55.96183 ], [ -4.58433, 55.96192 ], [ -4.58461, 55.96205 ], [ -4.58476, 55.96214 ], [ -4.58497, 55.96226 ], [ -4.58524, 55.96242 ], [ -4.58555, 55.96263 ], [ -4.58598, 55.96297 ], [ -4.58635, 55.9633 ], [ -4.58669, 55.96368 ], [ -4.58686, 55.9639 ], [ -4.58698, 55.96407 ], [ -4.58715, 55.96434 ], [ -4.58726, 55.96455 ], [ -4.58733, 55.9647 ], [ -4.58737, 55.96481 ], [ -4.58739, 55.96485 ], [ -4.58748, 55.96513 ], [ -4.58751, 55.96524 ], [ -4.58756, 55.96545 ], [ -4.58759, 55.96569 ], [ -4.58762, 55.96591 ], [ -4.58763, 55.96607 ], [ -4.58763, 55.96626 ], [ -4.58763, 55.96649 ], [ -4.58763, 55.96718 ], [ -4.58764, 55.96759 ], [ -4.58764, 55.96793 ], [ -4.58764, 55.96798 ], [ -4.58763, 55.9683 ], [ -4.58764, 55.9686 ], [ -4.58764, 55.9692 ], [ -4.58765, 55.9702 ], [ -4.58764, 55.97036 ], [ -4.58765, 55.97099 ], [ -4.58765, 55.9715 ], [ -4.58766, 55.97196 ], [ -4.58766, 55.97226 ], [ -4.58767, 55.97253 ], [ -4.58766, 55.97263 ], [ -4.58767, 55.97327 ], [ -4.58767, 55.97334 ], [ -4.58767, 55.97362 ], [ -4.58768, 55.97392 ], [ -4.58768, 55.97422 ], [ -4.58768, 55.97446 ], [ -4.58768, 55.97482 ], [ -4.58768, 55.97566 ], [ -4.58769, 55.97628 ], [ -4.58769, 55.97665 ], [ -4.5877, 55.97701 ], [ -4.5877, 55.97756 ], [ -4.5877, 55.97773 ], [ -4.58771, 55.97791 ], [ -4.58771, 55.97828 ], [ -4.58771, 55.97845 ], [ -4.58771, 55.97859 ], [ -4.58771, 55.97863 ], [ -4.58771, 55.97881 ], [ -4.58771, 55.97899 ], [ -4.58772, 55.97917 ], [ -4.58772, 55.97935 ], [ -4.58772, 55.97948 ], [ -4.58771, 55.97971 ], [ -4.58765, 55.98012 ], [ -4.58763, 55.98024 ], [ -4.58759, 55.98042 ], [ -4.58755, 55.9806 ], [ -4.5874, 55.98113 ], [ -4.58735, 55.98131 ], [ -4.58734, 55.98134 ], [ -4.58722, 55.98177 ], [ -4.58713, 55.98209 ], [ -4.58708, 55.9824 ], [ -4.58704, 55.98264 ], [ -4.58703, 55.9828 ], [ -4.58702, 55.98304 ], [ -4.58702, 55.9831 ], [ -4.58703, 55.98328 ], [ -4.58703, 55.98335 ], [ -4.58707, 55.98376 ], [ -4.58713, 55.98406 ], [ -4.58719, 55.98429 ], [ -4.58726, 55.98453 ], [ -4.58732, 55.98471 ], [ -4.5874, 55.98493 ], [ -4.58754, 55.98527 ], [ -4.58761, 55.98546 ], [ -4.58777, 55.98585 ], [ -4.58793, 55.98621 ], [ -4.58804, 55.98643 ], [ -4.58816, 55.98667 ], [ -4.58828, 55.98685 ], [ -4.58852, 55.98721 ], [ -4.58868, 55.98742 ], [ -4.58888, 55.98767 ], [ -4.58891, 55.9877 ], [ -4.58903, 55.98783 ], [ -4.58909, 55.9879 ], [ -4.58918, 55.98799 ], [ -4.58929, 55.98811 ], [ -4.58951, 55.98832 ], [ -4.58966, 55.98845 ], [ -4.58983, 55.98861 ], [ -4.59, 55.98876 ], [ -4.59017, 55.98891 ], [ -4.59025, 55.98899 ], [ -4.59033, 55.98907 ], [ -4.59074, 55.98944 ], [ -4.59143, 55.99005 ], [ -4.59201, 55.99057 ], [ -4.59271, 55.99121 ], [ -4.59277, 55.99126 ], [ -4.59327, 55.99172 ], [ -4.59337, 55.99182 ], [ -4.5936, 55.99206 ], [ -4.59367, 55.99214 ], [ -4.59389, 55.99239 ], [ -4.59395, 55.99247 ], [ -4.594, 55.99254 ], [ -4.59421, 55.99282 ], [ -4.5944, 55.99311 ], [ -4.59472, 55.99368 ], [ -4.59498, 55.99417 ], [ -4.59533, 55.99482 ], [ -4.59577, 55.99565 ], [ -4.59593, 55.99596 ], [ -4.59651, 55.99703 ], [ -4.59662, 55.99723 ], [ -4.59669, 55.99737 ], [ -4.59688, 55.99772 ], [ -4.59695, 55.99785 ], [ -4.59706, 55.99799 ], [ -4.59715, 55.99806 ], [ -4.59733, 55.99814 ], [ -4.5974, 55.99815 ], [ -4.59748, 55.99817 ], [ -4.59756, 55.99819 ], [ -4.59763, 55.99822 ], [ -4.59769, 55.99825 ], [ -4.59774, 55.99829 ], [ -4.59779, 55.99833 ], [ -4.59782, 55.99838 ], [ -4.59783, 55.99841 ], [ -4.59784, 55.99845 ], [ -4.59784, 55.99848 ], [ -4.59784, 55.99852 ], [ -4.59783, 55.99855 ], [ -4.59782, 55.99859 ], [ -4.59779, 55.99866 ], [ -4.59769, 55.99907 ], [ -4.59819, 55.99986 ], [ -4.59839, 56.00014 ], [ -4.59885, 56.00074 ], [ -4.59951, 56.00158 ], [ -4.59958, 56.00166 ], [ -4.60009, 56.00232 ], [ -4.60053, 56.00287 ], [ -4.60101, 56.0035 ], [ -4.60149, 56.00411 ], [ -4.60182, 56.00448 ], [ -4.60201, 56.00469 ], [ -4.60232, 56.00503 ], [ -4.60289, 56.00557 ], [ -4.60321, 56.00587 ], [ -4.60355, 56.00618 ], [ -4.60398, 56.00654 ], [ -4.60415, 56.00667 ], [ -4.60417, 56.00669 ], [ -4.60462, 56.00703 ], [ -4.60484, 56.00719 ], [ -4.60512, 56.00739 ], [ -4.60528, 56.00751 ], [ -4.60585, 56.00792 ], [ -4.60591, 56.00796 ], [ -4.6067, 56.00853 ], [ -4.60701, 56.00875 ], [ -4.60748, 56.0091 ], [ -4.60766, 56.00923 ], [ -4.60819, 56.00966 ], [ -4.6087, 56.01016 ], [ -4.60893, 56.0104 ], [ -4.60915, 56.01066 ], [ -4.6096, 56.0112 ], [ -4.60965, 56.01127 ], [ -4.61048, 56.01226 ], [ -4.61116, 56.01307 ], [ -4.61157, 56.01356 ], [ -4.61163, 56.01363 ], [ -4.61209, 56.01421 ], [ -4.61238, 56.01458 ], [ -4.61263, 56.01489 ], [ -4.61273, 56.01501 ], [ -4.61348, 56.01592 ], [ -4.61394, 56.01648 ], [ -4.61413, 56.01671 ], [ -4.61439, 56.017 ], [ -4.61466, 56.01728 ], [ -4.61483, 56.01744 ], [ -4.61496, 56.01755 ], [ -4.61522, 56.01777 ], [ -4.61552, 56.01801 ], [ -4.61579, 56.01822 ], [ -4.61607, 56.0184 ], [ -4.61636, 56.01859 ], [ -4.61675, 56.01882 ], [ -4.61717, 56.01905 ], [ -4.61764, 56.01929 ], [ -4.61806, 56.01949 ], [ -4.61861, 56.01971 ], [ -4.61896, 56.01985 ], [ -4.61938, 56.02 ], [ -4.61976, 56.02013 ], [ -4.62016, 56.02026 ], [ -4.62051, 56.02036 ], [ -4.62089, 56.02047 ], [ -4.62133, 56.02058 ], [ -4.62143, 56.02061 ], [ -4.62191, 56.02071 ], [ -4.62247, 56.02081 ], [ -4.62254, 56.02082 ], [ -4.62307, 56.02091 ], [ -4.62377, 56.02101 ], [ -4.62449, 56.02109 ], [ -4.62543, 56.0212 ], [ -4.6264, 56.02134 ], [ -4.62704, 56.02146 ], [ -4.62764, 56.02159 ], [ -4.62828, 56.02177 ], [ -4.62831, 56.02178 ], [ -4.62836, 56.02179 ], [ -4.6285, 56.02183 ], [ -4.62897, 56.02198 ], [ -4.6293, 56.02211 ], [ -4.62959, 56.02222 ], [ -4.62981, 56.02231 ], [ -4.63003, 56.02241 ], [ -4.63006, 56.02242 ], [ -4.63027, 56.02253 ], [ -4.63045, 56.02262 ], [ -4.6307, 56.02274 ], [ -4.63102, 56.02293 ], [ -4.63125, 56.02307 ], [ -4.63145, 56.0232 ], [ -4.63162, 56.02332 ], [ -4.63199, 56.0236 ], [ -4.63219, 56.02376 ], [ -4.63247, 56.02401 ], [ -4.63266, 56.0242 ], [ -4.63278, 56.02433 ], [ -4.63292, 56.0245 ], [ -4.63308, 56.02469 ], [ -4.63309, 56.0247 ], [ -4.63324, 56.02491 ], [ -4.63338, 56.02513 ], [ -4.63347, 56.02529 ], [ -4.63358, 56.02551 ], [ -4.63366, 56.02567 ], [ -4.63372, 56.0259 ], [ -4.63374, 56.02596 ], [ -4.63368, 56.0262 ], [ -4.63369, 56.0263 ], [ -4.63368, 56.02644 ], [ -4.63366, 56.02647 ], [ -4.63364, 56.0265 ], [ -4.63364, 56.02652 ], [ -4.63363, 56.02654 ], [ -4.63363, 56.02656 ], [ -4.63364, 56.02659 ], [ -4.63365, 56.02661 ], [ -4.63367, 56.02665 ], [ -4.6337, 56.02667 ], [ -4.63372, 56.02669 ], [ -4.63374, 56.0267 ], [ -4.63377, 56.02672 ], [ -4.63382, 56.02674 ], [ -4.63397, 56.02685 ], [ -4.63404, 56.02691 ], [ -4.6341, 56.02698 ], [ -4.63419, 56.02713 ], [ -4.63417, 56.02744 ], [ -4.63417, 56.02763 ], [ -4.63418, 56.02778 ], [ -4.63421, 56.02799 ], [ -4.63432, 56.02836 ], [ -4.63463, 56.02948 ], [ -4.63477, 56.02989 ], [ -4.63486, 56.03013 ], [ -4.63493, 56.0303 ], [ -4.63504, 56.03052 ], [ -4.63516, 56.03075 ], [ -4.63517, 56.03076 ], [ -4.6353, 56.03097 ], [ -4.63547, 56.03122 ], [ -4.63561, 56.0314 ], [ -4.63575, 56.03157 ], [ -4.63596, 56.0318 ], [ -4.63616, 56.03199 ], [ -4.63646, 56.03226 ], [ -4.63682, 56.03258 ], [ -4.63717, 56.03287 ], [ -4.63777, 56.03335 ], [ -4.63805, 56.03359 ], [ -4.6385, 56.03396 ], [ -4.63877, 56.03419 ], [ -4.63906, 56.03443 ], [ -4.63925, 56.03459 ], [ -4.63949, 56.03478 ], [ -4.63966, 56.03493 ], [ -4.63975, 56.03501 ], [ -4.63999, 56.0352 ], [ -4.64015, 56.03534 ], [ -4.64032, 56.03548 ], [ -4.64064, 56.03575 ], [ -4.64072, 56.03581 ], [ -4.64088, 56.03595 ], [ -4.64114, 56.03616 ], [ -4.64153, 56.03649 ], [ -4.64175, 56.03668 ], [ -4.64178, 56.03671 ], [ -4.64196, 56.03686 ], [ -4.64215, 56.03703 ], [ -4.64245, 56.0373 ], [ -4.64248, 56.03732 ], [ -4.64273, 56.03755 ], [ -4.64287, 56.03768 ], [ -4.64288, 56.0377 ], [ -4.64315, 56.03796 ], [ -4.64332, 56.03813 ], [ -4.64351, 56.03833 ], [ -4.64359, 56.03841 ], [ -4.64368, 56.03849 ], [ -4.64403, 56.03887 ], [ -4.64421, 56.03907 ], [ -4.64439, 56.03926 ], [ -4.64454, 56.03944 ], [ -4.64469, 56.03963 ], [ -4.64481, 56.03979 ], [ -4.64482, 56.03981 ], [ -4.64492, 56.03995 ], [ -4.64502, 56.04011 ], [ -4.64514, 56.04033 ], [ -4.64522, 56.04049 ], [ -4.64532, 56.04072 ], [ -4.64546, 56.04112 ], [ -4.64554, 56.04143 ], [ -4.64563, 56.04183 ], [ -4.64568, 56.04203 ], [ -4.64575, 56.04241 ], [ -4.64583, 56.04281 ], [ -4.64586, 56.04292 ], [ -4.64597, 56.04344 ], [ -4.64615, 56.04439 ], [ -4.64628, 56.04503 ], [ -4.64637, 56.04547 ], [ -4.64647, 56.04598 ], [ -4.64655, 56.04639 ], [ -4.64662, 56.04679 ], [ -4.64664, 56.0469 ], [ -4.64673, 56.04746 ], [ -4.64675, 56.04776 ], [ -4.64678, 56.04805 ], [ -4.6468, 56.0484 ], [ -4.64681, 56.04858 ], [ -4.64683, 56.04887 ], [ -4.64682, 56.04928 ], [ -4.64682, 56.04958 ], [ -4.64681, 56.04966 ], [ -4.6468, 56.04996 ], [ -4.6468, 56.05004 ], [ -4.64676, 56.05057 ], [ -4.64672, 56.05097 ], [ -4.64668, 56.05122 ], [ -4.64666, 56.05138 ], [ -4.64658, 56.05185 ], [ -4.64654, 56.05203 ], [ -4.64642, 56.05268 ], [ -4.64627, 56.05348 ], [ -4.64612, 56.0543 ], [ -4.64606, 56.05462 ], [ -4.64603, 56.05483 ], [ -4.64595, 56.05544 ], [ -4.64591, 56.05584 ], [ -4.64589, 56.05623 ], [ -4.64586, 56.05673 ], [ -4.64586, 56.05676 ], [ -4.64588, 56.05714 ], [ -4.64589, 56.05727 ], [ -4.64591, 56.05745 ], [ -4.64584, 56.05768 ], [ -4.64585, 56.05787 ], [ -4.64586, 56.05833 ], [ -4.64587, 56.05877 ], [ -4.64588, 56.059 ], [ -4.64588, 56.05909 ], [ -4.64588, 56.05953 ], [ -4.64588, 56.0598 ], [ -4.64589, 56.06037 ], [ -4.64589, 56.06052 ], [ -4.64589, 56.06067 ], [ -4.64595, 56.06077 ], [ -4.64594, 56.0611 ], [ -4.64593, 56.06141 ], [ -4.64594, 56.06187 ], [ -4.64595, 56.06233 ], [ -4.64595, 56.06257 ], [ -4.64594, 56.06296 ], [ -4.64593, 56.06313 ], [ -4.64591, 56.06353 ], [ -4.64588, 56.06385 ], [ -4.64586, 56.06409 ], [ -4.64583, 56.06434 ], [ -4.64579, 56.06457 ], [ -4.64574, 56.06489 ], [ -4.64569, 56.06514 ], [ -4.64565, 56.06538 ], [ -4.6456, 56.06562 ], [ -4.64555, 56.06581 ], [ -4.64553, 56.06586 ], [ -4.64548, 56.06608 ], [ -4.64542, 56.06628 ], [ -4.64535, 56.06649 ], [ -4.64527, 56.06669 ], [ -4.64518, 56.06689 ], [ -4.64508, 56.06708 ], [ -4.64499, 56.06727 ], [ -4.64492, 56.06739 ], [ -4.64488, 56.06746 ], [ -4.64479, 56.0676 ], [ -4.64468, 56.06777 ], [ -4.64457, 56.06791 ], [ -4.64441, 56.06813 ], [ -4.64425, 56.06833 ], [ -4.64404, 56.06857 ], [ -4.64388, 56.06874 ], [ -4.64379, 56.06884 ], [ -4.64356, 56.06905 ], [ -4.64335, 56.06925 ], [ -4.64318, 56.06939 ], [ -4.64294, 56.06958 ], [ -4.64278, 56.06971 ], [ -4.64253, 56.0699 ], [ -4.64233, 56.07004 ], [ -4.64208, 56.07023 ], [ -4.64181, 56.07042 ], [ -4.64155, 56.07061 ], [ -4.64127, 56.07082 ], [ -4.64103, 56.07101 ], [ -4.64086, 56.07114 ], [ -4.64064, 56.07133 ], [ -4.64046, 56.07149 ], [ -4.64027, 56.07168 ], [ -4.64012, 56.07183 ], [ -4.63997, 56.07202 ], [ -4.63985, 56.07218 ], [ -4.63974, 56.07233 ], [ -4.63961, 56.07256 ], [ -4.63952, 56.07274 ], [ -4.63944, 56.07295 ], [ -4.6394, 56.0731 ], [ -4.63938, 56.07317 ], [ -4.63934, 56.07334 ], [ -4.6393, 56.07354 ], [ -4.63929, 56.07366 ], [ -4.63928, 56.0738 ], [ -4.63929, 56.07393 ], [ -4.63929, 56.07405 ], [ -4.63933, 56.07431 ], [ -4.63943, 56.07478 ], [ -4.63955, 56.0752 ], [ -4.63968, 56.07571 ], [ -4.63978, 56.07616 ], [ -4.6398, 56.07622 ], [ -4.63985, 56.07655 ], [ -4.63986, 56.07662 ], [ -4.63988, 56.07672 ], [ -4.63992, 56.07699 ], [ -4.63996, 56.07723 ], [ -4.63998, 56.07739 ], [ -4.64003, 56.07778 ], [ -4.64006, 56.07806 ], [ -4.64008, 56.07817 ], [ -4.6401, 56.07844 ], [ -4.64011, 56.07865 ], [ -4.64012, 56.07892 ], [ -4.64012, 56.07919 ], [ -4.64012, 56.07932 ], [ -4.64011, 56.07984 ], [ -4.64009, 56.08022 ], [ -4.64008, 56.08039 ], [ -4.64004, 56.08074 ], [ -4.64, 56.08112 ], [ -4.63996, 56.08143 ], [ -4.63991, 56.08175 ], [ -4.63985, 56.08208 ], [ -4.6398, 56.08239 ], [ -4.63976, 56.08254 ], [ -4.63974, 56.08264 ], [ -4.63972, 56.08272 ], [ -4.63966, 56.08295 ], [ -4.6396, 56.08318 ], [ -4.63952, 56.08343 ], [ -4.63942, 56.08374 ], [ -4.63936, 56.08391 ], [ -4.63928, 56.08414 ], [ -4.63916, 56.08445 ], [ -4.63915, 56.08449 ], [ -4.63906, 56.08478 ], [ -4.63899, 56.08502 ], [ -4.63895, 56.08523 ], [ -4.63892, 56.0854 ], [ -4.63891, 56.08557 ], [ -4.6389, 56.08573 ], [ -4.63892, 56.08591 ], [ -4.63895, 56.08611 ], [ -4.63898, 56.08629 ], [ -4.63905, 56.08652 ], [ -4.63909, 56.08663 ], [ -4.63913, 56.08676 ], [ -4.63921, 56.08693 ], [ -4.63931, 56.08714 ], [ -4.63943, 56.08733 ], [ -4.63954, 56.08751 ], [ -4.63971, 56.0877 ], [ -4.63991, 56.08793 ], [ -4.63996, 56.08798 ], [ -4.64012, 56.08813 ], [ -4.64033, 56.08832 ], [ -4.6405, 56.08847 ], [ -4.64064, 56.08859 ], [ -4.6408, 56.08873 ], [ -4.64093, 56.08884 ], [ -4.64099, 56.08889 ], [ -4.64111, 56.08899 ], [ -4.64126, 56.08913 ], [ -4.64141, 56.08925 ], [ -4.64159, 56.08941 ], [ -4.64178, 56.08959 ], [ -4.64195, 56.08976 ], [ -4.64209, 56.08992 ], [ -4.64214, 56.08998 ], [ -4.64224, 56.0901 ], [ -4.64241, 56.09032 ], [ -4.64253, 56.09049 ], [ -4.64265, 56.09065 ], [ -4.64274, 56.09081 ], [ -4.64277, 56.09087 ], [ -4.64288, 56.09109 ], [ -4.64296, 56.09125 ], [ -4.64305, 56.09147 ], [ -4.64312, 56.09168 ], [ -4.64318, 56.09188 ], [ -4.64323, 56.09209 ], [ -4.64325, 56.09225 ], [ -4.64328, 56.09246 ], [ -4.6433, 56.09254 ], [ -4.6433, 56.09271 ], [ -4.6433, 56.09297 ], [ -4.6433, 56.0933 ], [ -4.64328, 56.09408 ], [ -4.64326, 56.09442 ], [ -4.64325, 56.09453 ], [ -4.64321, 56.09507 ], [ -4.64318, 56.09561 ], [ -4.64316, 56.09579 ], [ -4.64311, 56.09636 ], [ -4.64307, 56.09683 ], [ -4.64303, 56.09719 ], [ -4.64295, 56.09772 ], [ -4.6429, 56.0982 ], [ -4.64285, 56.09853 ], [ -4.64277, 56.09898 ], [ -4.64277, 56.09899 ], [ -4.64267, 56.09952 ], [ -4.64267, 56.09955 ], [ -4.64259, 56.09996 ], [ -4.64256, 56.10014 ], [ -4.64254, 56.10024 ], [ -4.64246, 56.10059 ], [ -4.64239, 56.1009 ], [ -4.64234, 56.10115 ], [ -4.64227, 56.1014 ], [ -4.64221, 56.1016 ], [ -4.64215, 56.10179 ], [ -4.6421, 56.10192 ], [ -4.64201, 56.10214 ], [ -4.64194, 56.10231 ], [ -4.64186, 56.10247 ], [ -4.64175, 56.10267 ], [ -4.64164, 56.10286 ], [ -4.64159, 56.10294 ], [ -4.64154, 56.10301 ], [ -4.64143, 56.10318 ], [ -4.64136, 56.10326 ], [ -4.64128, 56.10337 ], [ -4.64114, 56.10356 ], [ -4.64101, 56.10373 ], [ -4.6409, 56.10386 ], [ -4.64083, 56.10395 ], [ -4.64067, 56.10412 ], [ -4.64044, 56.10437 ], [ -4.64031, 56.10452 ], [ -4.64028, 56.10456 ], [ -4.64013, 56.10473 ], [ -4.64001, 56.10488 ], [ -4.63991, 56.10501 ], [ -4.6398, 56.10515 ], [ -4.63966, 56.10534 ], [ -4.63955, 56.10551 ], [ -4.63946, 56.10567 ], [ -4.63939, 56.10582 ], [ -4.63938, 56.10585 ], [ -4.63931, 56.10599 ], [ -4.63926, 56.10614 ], [ -4.63921, 56.10629 ], [ -4.63918, 56.10649 ], [ -4.63916, 56.1067 ], [ -4.63915, 56.10687 ], [ -4.63914, 56.10707 ], [ -4.63915, 56.10722 ], [ -4.63916, 56.10737 ], [ -4.63919, 56.1075 ], [ -4.63922, 56.10767 ], [ -4.63926, 56.10783 ], [ -4.63931, 56.10799 ], [ -4.63939, 56.10817 ], [ -4.63948, 56.10835 ], [ -4.63955, 56.10848 ], [ -4.63972, 56.10878 ], [ -4.63988, 56.10902 ], [ -4.64, 56.10919 ], [ -4.64042, 56.10972 ], [ -4.64079, 56.11015 ], [ -4.64102, 56.11038 ], [ -4.64129, 56.11066 ], [ -4.64145, 56.11083 ], [ -4.64162, 56.11103 ], [ -4.64182, 56.11127 ], [ -4.64183, 56.11129 ], [ -4.64199, 56.11149 ], [ -4.64217, 56.11173 ], [ -4.64232, 56.11195 ], [ -4.64254, 56.11226 ], [ -4.64273, 56.11255 ], [ -4.64326, 56.11343 ], [ -4.64352, 56.11383 ], [ -4.64374, 56.1141 ], [ -4.64393, 56.11432 ], [ -4.64413, 56.11453 ], [ -4.64427, 56.11467 ], [ -4.64451, 56.11487 ], [ -4.64467, 56.115 ], [ -4.64485, 56.11514 ], [ -4.64511, 56.11532 ], [ -4.64529, 56.11545 ], [ -4.64557, 56.11564 ], [ -4.64583, 56.11583 ], [ -4.6461, 56.11602 ], [ -4.64651, 56.11629 ], [ -4.64737, 56.11695 ], [ -4.6477, 56.1172 ], [ -4.64855, 56.11789 ], [ -4.64874, 56.11806 ], [ -4.64893, 56.11823 ], [ -4.64929, 56.11857 ], [ -4.64962, 56.11889 ], [ -4.65009, 56.11941 ], [ -4.65032, 56.11968 ], [ -4.65058, 56.12001 ], [ -4.65077, 56.12026 ], [ -4.65092, 56.12048 ], [ -4.65106, 56.12068 ], [ -4.65119, 56.1209 ], [ -4.65133, 56.12114 ], [ -4.65158, 56.12159 ], [ -4.6522, 56.12286 ], [ -4.65242, 56.12333 ], [ -4.65243, 56.12335 ], [ -4.6525, 56.1235 ], [ -4.65265, 56.12381 ], [ -4.65283, 56.12423 ], [ -4.65302, 56.12467 ], [ -4.65311, 56.1249 ], [ -4.65315, 56.12501 ], [ -4.6533, 56.12534 ], [ -4.65332, 56.12541 ], [ -4.65344, 56.12569 ], [ -4.65355, 56.12596 ], [ -4.65375, 56.12646 ], [ -4.65375, 56.12648 ], [ -4.65395, 56.12701 ], [ -4.65413, 56.12751 ], [ -4.65429, 56.12793 ], [ -4.65446, 56.12839 ], [ -4.65461, 56.12878 ], [ -4.65479, 56.12923 ], [ -4.65512, 56.1299 ], [ -4.65546, 56.1306 ], [ -4.65567, 56.131 ], [ -4.65591, 56.13142 ], [ -4.65612, 56.13181 ], [ -4.65635, 56.1322 ], [ -4.6567, 56.13276 ], [ -4.65691, 56.13307 ], [ -4.65721, 56.1335 ], [ -4.65724, 56.13353 ], [ -4.65755, 56.13396 ], [ -4.65758, 56.134 ], [ -4.65794, 56.1345 ], [ -4.65823, 56.13495 ], [ -4.65852, 56.1354 ], [ -4.65882, 56.1359 ], [ -4.65921, 56.13659 ], [ -4.65952, 56.13714 ], [ -4.65974, 56.13757 ], [ -4.65994, 56.13794 ], [ -4.66024, 56.13846 ], [ -4.66048, 56.13888 ], [ -4.66077, 56.13935 ], [ -4.66098, 56.13968 ], [ -4.66133, 56.14021 ], [ -4.66158, 56.14058 ], [ -4.66185, 56.14095 ], [ -4.6621, 56.1413 ], [ -4.66255, 56.14194 ], [ -4.66277, 56.14229 ], [ -4.66297, 56.14261 ], [ -4.66322, 56.14304 ], [ -4.66338, 56.14335 ], [ -4.66362, 56.14379 ], [ -4.66373, 56.14402 ], [ -4.66383, 56.14425 ], [ -4.66409, 56.14487 ], [ -4.66412, 56.14493 ], [ -4.66424, 56.14524 ], [ -4.66453, 56.14612 ], [ -4.66464, 56.14658 ], [ -4.66468, 56.14672 ], [ -4.66473, 56.1469 ], [ -4.66481, 56.14731 ], [ -4.66493, 56.14792 ], [ -4.66497, 56.14815 ], [ -4.66501, 56.14838 ], [ -4.66507, 56.14868 ], [ -4.66517, 56.14899 ], [ -4.66526, 56.14924 ], [ -4.66532, 56.14937 ], [ -4.66539, 56.14952 ], [ -4.66558, 56.14985 ], [ -4.66568, 56.15002 ], [ -4.66588, 56.1503 ], [ -4.66609, 56.1506 ], [ -4.66642, 56.15096 ], [ -4.66675, 56.1513 ], [ -4.66697, 56.15149 ], [ -4.66756, 56.15195 ], [ -4.6685, 56.15268 ], [ -4.66871, 56.15288 ], [ -4.66893, 56.15312 ], [ -4.66913, 56.15341 ], [ -4.66927, 56.15366 ], [ -4.66933, 56.15379 ], [ -4.66935, 56.15385 ], [ -4.66951, 56.15428 ], [ -4.66959, 56.15451 ], [ -4.66971, 56.15484 ], [ -4.66973, 56.1549 ], [ -4.66982, 56.15507 ], [ -4.6699, 56.15525 ], [ -4.67013, 56.15561 ], [ -4.67043, 56.15599 ], [ -4.67071, 56.15633 ], [ -4.67094, 56.1566 ], [ -4.67116, 56.15689 ], [ -4.67121, 56.15697 ], [ -4.67135, 56.1572 ], [ -4.67145, 56.15741 ], [ -4.67145, 56.15743 ], [ -4.67149, 56.15753 ], [ -4.67153, 56.1577 ], [ -4.67155, 56.15777 ], [ -4.67157, 56.15784 ], [ -4.67158, 56.15797 ], [ -4.67158, 56.15814 ], [ -4.67158, 56.15829 ], [ -4.67158, 56.15844 ], [ -4.67155, 56.15856 ], [ -4.67153, 56.15867 ], [ -4.67152, 56.15867 ], [ -4.67147, 56.15883 ], [ -4.67146, 56.15884 ], [ -4.67141, 56.15897 ], [ -4.67132, 56.15915 ], [ -4.67125, 56.15926 ], [ -4.67117, 56.15936 ], [ -4.67102, 56.15955 ], [ -4.67079, 56.15977 ], [ -4.67064, 56.1599 ], [ -4.6705, 56.16002 ], [ -4.67036, 56.16013 ], [ -4.67017, 56.16027 ], [ -4.66993, 56.16045 ], [ -4.66979, 56.16055 ], [ -4.66969, 56.16061 ], [ -4.66954, 56.16071 ], [ -4.66928, 56.16087 ], [ -4.66907, 56.16099 ], [ -4.66892, 56.16107 ], [ -4.66879, 56.16114 ], [ -4.66876, 56.16115 ], [ -4.66856, 56.16126 ], [ -4.66834, 56.16136 ], [ -4.66792, 56.16155 ], [ -4.66755, 56.1617 ], [ -4.66676, 56.16203 ], [ -4.66632, 56.16223 ], [ -4.66621, 56.1623 ], [ -4.66611, 56.16236 ], [ -4.66602, 56.16243 ], [ -4.66584, 56.16257 ], [ -4.66575, 56.16265 ], [ -4.66567, 56.16273 ], [ -4.66559, 56.16282 ], [ -4.66558, 56.16283 ], [ -4.66547, 56.16298 ], [ -4.66542, 56.16306 ], [ -4.66536, 56.16316 ], [ -4.66533, 56.16323 ], [ -4.6653, 56.16331 ], [ -4.66527, 56.16339 ], [ -4.66527, 56.16341 ], [ -4.66526, 56.16347 ], [ -4.66524, 56.16356 ], [ -4.66523, 56.16367 ], [ -4.66523, 56.16377 ], [ -4.66525, 56.16388 ], [ -4.66527, 56.16401 ], [ -4.66531, 56.16414 ], [ -4.66535, 56.16424 ], [ -4.66543, 56.16442 ], [ -4.66549, 56.16451 ], [ -4.66558, 56.16463 ], [ -4.66573, 56.16481 ], [ -4.66584, 56.16493 ], [ -4.66608, 56.16516 ], [ -4.6662, 56.16526 ], [ -4.66643, 56.16545 ], [ -4.66657, 56.16556 ], [ -4.6668, 56.16574 ], [ -4.66706, 56.16593 ], [ -4.66719, 56.16603 ], [ -4.66733, 56.16613 ], [ -4.66766, 56.16636 ], [ -4.66779, 56.16646 ], [ -4.66789, 56.16653 ], [ -4.66824, 56.16676 ], [ -4.66851, 56.16692 ], [ -4.66888, 56.16712 ], [ -4.66926, 56.16729 ], [ -4.66958, 56.16742 ], [ -4.67014, 56.1676 ], [ -4.67046, 56.16767 ], [ -4.67052, 56.16769 ], [ -4.67087, 56.16776 ], [ -4.6711, 56.16781 ], [ -4.67137, 56.16785 ], [ -4.67179, 56.16791 ], [ -4.67218, 56.16795 ], [ -4.6727, 56.16802 ], [ -4.6728, 56.16803 ], [ -4.67304, 56.16806 ], [ -4.6733, 56.1681 ], [ -4.67367, 56.16815 ], [ -4.67398, 56.16821 ], [ -4.6742, 56.16825 ], [ -4.67445, 56.1683 ], [ -4.67476, 56.16837 ], [ -4.67485, 56.1684 ], [ -4.67514, 56.16847 ], [ -4.67526, 56.16851 ], [ -4.6755, 56.16858 ], [ -4.67579, 56.16868 ], [ -4.67604, 56.16877 ], [ -4.67623, 56.16885 ], [ -4.67645, 56.16893 ], [ -4.6766, 56.16901 ], [ -4.67675, 56.16907 ], [ -4.67681, 56.16909 ], [ -4.67697, 56.16917 ], [ -4.6771, 56.16923 ], [ -4.6775, 56.16942 ], [ -4.67777, 56.16956 ], [ -4.67802, 56.16969 ], [ -4.6786, 56.17001 ], [ -4.67894, 56.17021 ], [ -4.6791, 56.17031 ], [ -4.67926, 56.17041 ], [ -4.67944, 56.17053 ], [ -4.67952, 56.17058 ], [ -4.67975, 56.17073 ], [ -4.67989, 56.17082 ], [ -4.68007, 56.17095 ], [ -4.68014, 56.171 ], [ -4.68038, 56.17116 ], [ -4.68074, 56.17143 ], [ -4.68104, 56.17166 ], [ -4.68127, 56.17185 ], [ -4.68136, 56.17193 ], [ -4.6816, 56.17213 ], [ -4.68189, 56.17238 ], [ -4.68224, 56.17268 ], [ -4.68271, 56.17311 ], [ -4.68292, 56.17329 ], [ -4.68293, 56.1733 ], [ -4.68319, 56.17355 ], [ -4.68335, 56.17372 ], [ -4.68356, 56.17392 ], [ -4.6837, 56.17408 ], [ -4.68386, 56.17427 ], [ -4.68394, 56.17436 ], [ -4.68409, 56.17455 ], [ -4.68423, 56.17474 ], [ -4.6843, 56.17484 ], [ -4.68444, 56.17509 ], [ -4.68456, 56.17535 ], [ -4.68459, 56.17543 ], [ -4.68469, 56.17567 ], [ -4.6848, 56.17603 ], [ -4.6849, 56.17636 ], [ -4.68494, 56.17649 ], [ -4.685, 56.17666 ], [ -4.685, 56.17667 ], [ -4.68507, 56.17684 ], [ -4.68513, 56.17697 ], [ -4.68516, 56.17701 ], [ -4.68534, 56.17734 ], [ -4.68552, 56.17756 ], [ -4.68563, 56.17768 ], [ -4.68578, 56.17784 ], [ -4.686, 56.17804 ], [ -4.68623, 56.17823 ], [ -4.6865, 56.17841 ], [ -4.68674, 56.17856 ], [ -4.68699, 56.17872 ], [ -4.68739, 56.17895 ], [ -4.68781, 56.17919 ], [ -4.68823, 56.17944 ], [ -4.68828, 56.17948 ], [ -4.68839, 56.17956 ], [ -4.68859, 56.1797 ], [ -4.68887, 56.17991 ], [ -4.68893, 56.17996 ], [ -4.68934, 56.18028 ], [ -4.68942, 56.18035 ], [ -4.68974, 56.18062 ], [ -4.69007, 56.18091 ], [ -4.69036, 56.18117 ], [ -4.69047, 56.18126 ], [ -4.69061, 56.18138 ], [ -4.69105, 56.18173 ], [ -4.69111, 56.18177 ], [ -4.69148, 56.182 ], [ -4.69188, 56.18226 ], [ -4.69249, 56.18268 ], [ -4.69253, 56.18271 ], [ -4.69308, 56.18308 ], [ -4.6931, 56.18309 ], [ -4.69361, 56.18345 ], [ -4.6941, 56.1838 ], [ -4.69411, 56.1838 ], [ -4.69435, 56.18397 ], [ -4.6946, 56.18415 ], [ -4.69502, 56.18446 ], [ -4.69529, 56.18467 ], [ -4.69559, 56.1849 ], [ -4.69589, 56.18512 ], [ -4.69612, 56.18531 ], [ -4.69624, 56.18541 ], [ -4.69661, 56.18571 ], [ -4.69675, 56.18582 ], [ -4.69689, 56.18595 ], [ -4.69708, 56.18613 ], [ -4.69718, 56.18622 ], [ -4.69741, 56.18649 ], [ -4.69771, 56.18684 ], [ -4.69793, 56.18713 ], [ -4.69806, 56.18733 ], [ -4.69816, 56.18748 ], [ -4.69833, 56.18779 ], [ -4.69848, 56.18806 ], [ -4.69861, 56.18832 ], [ -4.69878, 56.18867 ], [ -4.69879, 56.18871 ], [ -4.69885, 56.18882 ], [ -4.6989, 56.18892 ], [ -4.69899, 56.18909 ], [ -4.69908, 56.18928 ], [ -4.69932, 56.18978 ], [ -4.69952, 56.1902 ], [ -4.69963, 56.19051 ], [ -4.69972, 56.19088 ], [ -4.69983, 56.19134 ], [ -4.69994, 56.19182 ], [ -4.70001, 56.19213 ], [ -4.70008, 56.19244 ], [ -4.70019, 56.19292 ], [ -4.7003, 56.19324 ], [ -4.70036, 56.19336 ], [ -4.70037, 56.19337 ], [ -4.70043, 56.19348 ], [ -4.70046, 56.19353 ], [ -4.70058, 56.1937 ], [ -4.70071, 56.19386 ], [ -4.70074, 56.1939 ], [ -4.70097, 56.19413 ], [ -4.70119, 56.19433 ], [ -4.70121, 56.19435 ], [ -4.70155, 56.19459 ], [ -4.70178, 56.19476 ], [ -4.70211, 56.19499 ], [ -4.70225, 56.19509 ], [ -4.70239, 56.19519 ], [ -4.70241, 56.1952 ], [ -4.70273, 56.19546 ], [ -4.703, 56.19572 ], [ -4.70308, 56.1958 ], [ -4.70309, 56.1958 ], [ -4.70321, 56.19593 ], [ -4.70337, 56.19616 ], [ -4.70353, 56.19639 ], [ -4.70363, 56.19653 ], [ -4.70373, 56.19667 ], [ -4.70383, 56.19679 ], [ -4.70384, 56.1968 ], [ -4.70399, 56.19697 ], [ -4.70426, 56.19726 ], [ -4.70459, 56.19758 ], [ -4.70477, 56.19774 ], [ -4.70497, 56.19791 ], [ -4.70562, 56.19848 ], [ -4.70633, 56.1991 ], [ -4.70641, 56.19916 ], [ -4.70649, 56.19923 ], [ -4.70661, 56.19934 ], [ -4.70674, 56.19945 ], [ -4.70683, 56.19952 ], [ -4.70691, 56.19959 ], [ -4.70702, 56.19968 ], [ -4.70705, 56.1997 ], [ -4.70712, 56.19977 ], [ -4.70728, 56.19989 ], [ -4.70737, 56.19997 ], [ -4.70755, 56.20011 ], [ -4.70765, 56.2002 ], [ -4.70793, 56.20045 ], [ -4.70836, 56.20087 ], [ -4.70856, 56.20105 ], [ -4.70883, 56.20128 ], [ -4.70892, 56.20137 ], [ -4.709, 56.20144 ], [ -4.70933, 56.20172 ], [ -4.70953, 56.20189 ], [ -4.70971, 56.20204 ], [ -4.70976, 56.20208 ], [ -4.70988, 56.20219 ], [ -4.70989, 56.2022 ], [ -4.71002, 56.20231 ], [ -4.71014, 56.20241 ], [ -4.71023, 56.20249 ], [ -4.71024, 56.2025 ], [ -4.71034, 56.20259 ], [ -4.71052, 56.20275 ], [ -4.71056, 56.20279 ], [ -4.71063, 56.20286 ], [ -4.71073, 56.20295 ], [ -4.71092, 56.20315 ], [ -4.7109202, 56.2031541 ], [ -4.71071, 56.20339 ], [ -4.71055, 56.20359 ], [ -4.71044, 56.2038 ], [ -4.7103, 56.20397 ], [ -4.71013, 56.20414 ], [ -4.7099, 56.20434 ], [ -4.70971, 56.20448 ], [ -4.70964, 56.20452 ], [ -4.70953, 56.2046 ], [ -4.7095, 56.20462 ], [ -4.70943, 56.20466 ], [ -4.70919, 56.20479 ], [ -4.70892, 56.20492 ], [ -4.70871, 56.20501 ], [ -4.70845, 56.20514 ], [ -4.70824, 56.20524 ], [ -4.70805, 56.20533 ], [ -4.70765, 56.2055 ], [ -4.70577, 56.20608 ], [ -4.70533, 56.20622 ], [ -4.7049, 56.20631 ], [ -4.70435, 56.20641 ], [ -4.70383, 56.2065 ], [ -4.70354, 56.20656 ], [ -4.70339, 56.20661 ], [ -4.70329, 56.20666 ], [ -4.70315, 56.20673 ], [ -4.70304, 56.2068 ], [ -4.70296, 56.20686 ], [ -4.70285, 56.20694 ], [ -4.70274, 56.20707 ], [ -4.70266, 56.20716 ], [ -4.70263, 56.20726 ], [ -4.70257, 56.20751 ], [ -4.70256, 56.20763 ], [ -4.70256, 56.2077 ], [ -4.70256, 56.20775 ], [ -4.70258, 56.20803 ], [ -4.70265, 56.2082 ], [ -4.70269, 56.2084 ], [ -4.70268, 56.20848 ], [ -4.70265, 56.20858 ], [ -4.70265, 56.2086 ], [ -4.7026, 56.20872 ], [ -4.70256, 56.20879 ], [ -4.70239, 56.20899 ], [ -4.70224, 56.20917 ], [ -4.70213, 56.2093 ], [ -4.70202, 56.20942 ], [ -4.70201, 56.20943 ], [ -4.70189, 56.20953 ], [ -4.70169, 56.20966 ], [ -4.70131, 56.20986 ], [ -4.70091, 56.21007 ], [ -4.70089, 56.21008 ], [ -4.70056, 56.21027 ], [ -4.70027, 56.21045 ], [ -4.70003, 56.2106 ], [ -4.69978, 56.21072 ], [ -4.69964, 56.21079 ], [ -4.69957, 56.21084 ], [ -4.69945, 56.21093 ], [ -4.6993, 56.21109 ], [ -4.69906, 56.21144 ], [ -4.69891, 56.21164 ], [ -4.69881, 56.21182 ], [ -4.69869, 56.212 ], [ -4.69859, 56.21213 ], [ -4.69849, 56.21224 ], [ -4.69838, 56.21233 ], [ -4.69826, 56.21243 ], [ -4.69805, 56.21255 ], [ -4.69788, 56.21264 ], [ -4.69773, 56.21271 ], [ -4.69742, 56.21283 ], [ -4.69703, 56.21295 ], [ -4.69678, 56.21306 ], [ -4.69649, 56.21322 ], [ -4.69621, 56.21338 ], [ -4.69608, 56.21345 ], [ -4.69597, 56.21353 ], [ -4.69591, 56.21361 ], [ -4.69588, 56.21365 ], [ -4.69584, 56.21375 ], [ -4.69583, 56.21382 ], [ -4.69585, 56.21394 ], [ -4.69587, 56.21405 ], [ -4.6959, 56.21421 ], [ -4.69592, 56.21437 ], [ -4.69593, 56.21451 ], [ -4.69594, 56.21471 ], [ -4.69596, 56.21486 ], [ -4.69595, 56.21494 ], [ -4.69592, 56.215 ], [ -4.69587, 56.21505 ], [ -4.6958, 56.2151 ], [ -4.69573, 56.21515 ], [ -4.69558, 56.21524 ], [ -4.69546, 56.21532 ], [ -4.69536, 56.2154 ], [ -4.69515, 56.21569 ], [ -4.69503, 56.21592 ], [ -4.69491, 56.21623 ], [ -4.69484, 56.21647 ], [ -4.69474, 56.21687 ], [ -4.69473, 56.21693 ], [ -4.69474, 56.21705 ], [ -4.69478, 56.21722 ], [ -4.69486, 56.21741 ], [ -4.69513, 56.21777 ], [ -4.6955, 56.21814 ], [ -4.69574, 56.21841 ], [ -4.69611, 56.21876 ], [ -4.69633, 56.21899 ], [ -4.69643, 56.21917 ], [ -4.69645, 56.21936 ], [ -4.69642, 56.21952 ], [ -4.69637, 56.21963 ], [ -4.69636, 56.21968 ], [ -4.69626, 56.21987 ], [ -4.69621, 56.21998 ], [ -4.69616, 56.22006 ], [ -4.69612, 56.22015 ], [ -4.69606, 56.22027 ], [ -4.69599, 56.22044 ], [ -4.69596, 56.22058 ], [ -4.69594, 56.22077 ], [ -4.69594, 56.22099 ], [ -4.69596, 56.22121 ], [ -4.69596, 56.22122 ], [ -4.69599, 56.2214 ], [ -4.696, 56.22158 ], [ -4.69598, 56.22174 ], [ -4.69598, 56.22176 ], [ -4.69593, 56.22188 ], [ -4.69584, 56.22204 ], [ -4.69575, 56.22221 ], [ -4.69573, 56.22228 ], [ -4.6957, 56.22236 ], [ -4.69571, 56.2224 ], [ -4.69573, 56.22251 ], [ -4.69583, 56.22268 ], [ -4.69588, 56.22281 ], [ -4.69592, 56.22297 ], [ -4.69593, 56.22334 ], [ -4.69593, 56.22358 ], [ -4.69595, 56.2237 ], [ -4.69596, 56.22374 ], [ -4.69597, 56.2238 ], [ -4.69599, 56.22386 ], [ -4.69603, 56.22392 ], [ -4.69606, 56.22399 ], [ -4.69614, 56.22409 ], [ -4.6962, 56.22415 ], [ -4.69624, 56.22419 ], [ -4.69632, 56.22424 ], [ -4.69638, 56.22427 ], [ -4.69661, 56.22441 ], [ -4.6967, 56.22447 ], [ -4.69676, 56.22451 ], [ -4.69687, 56.22463 ], [ -4.69693, 56.22469 ], [ -4.697, 56.22479 ], [ -4.69706, 56.22487 ], [ -4.69717, 56.22503 ], [ -4.69727, 56.22522 ], [ -4.69736, 56.22542 ], [ -4.69738, 56.22548 ], [ -4.69741, 56.22557 ], [ -4.69766, 56.22626 ], [ -4.69775, 56.2265 ], [ -4.69788, 56.22676 ], [ -4.69799, 56.22694 ], [ -4.6981, 56.22711 ], [ -4.69829, 56.22734 ], [ -4.69842, 56.22749 ], [ -4.69847, 56.22754 ], [ -4.69856, 56.22761 ], [ -4.69871, 56.2277 ], [ -4.69906, 56.2279 ], [ -4.69929, 56.22808 ], [ -4.6993, 56.22809 ], [ -4.69956, 56.22832 ], [ -4.69981, 56.22852 ], [ -4.7, 56.22868 ], [ -4.70021, 56.22888 ], [ -4.70027, 56.22896 ], [ -4.70032, 56.22907 ], [ -4.70036, 56.22918 ], [ -4.70041, 56.22932 ], [ -4.70042, 56.22936 ], [ -4.70047, 56.22954 ], [ -4.70049, 56.22963 ], [ -4.70056, 56.2299 ], [ -4.7006, 56.23004 ], [ -4.70084, 56.23074 ], [ -4.70093, 56.23095 ], [ -4.70105, 56.23125 ], [ -4.70117, 56.23166 ], [ -4.70121, 56.2318 ], [ -4.70134, 56.23237 ], [ -4.70139, 56.23255 ], [ -4.70144, 56.23273 ], [ -4.70151, 56.23298 ], [ -4.70174, 56.23398 ], [ -4.70178, 56.23416 ], [ -4.70181, 56.23443 ], [ -4.70188, 56.23478 ], [ -4.70192, 56.23487 ], [ -4.70193, 56.2349 ], [ -4.702, 56.23501 ], [ -4.70211, 56.23514 ], [ -4.70217, 56.2352 ], [ -4.70219, 56.23522 ], [ -4.70232, 56.23532 ], [ -4.70286, 56.23569 ], [ -4.70306, 56.23584 ], [ -4.70315, 56.23591 ], [ -4.70325, 56.236 ], [ -4.70349, 56.23621 ], [ -4.70366, 56.23639 ], [ -4.70392, 56.23669 ], [ -4.70394, 56.2367 ], [ -4.70408, 56.23686 ], [ -4.70433, 56.23714 ], [ -4.7045, 56.23735 ], [ -4.70463, 56.23751 ], [ -4.70481, 56.23773 ], [ -4.70503, 56.238 ], [ -4.70517, 56.23817 ], [ -4.70532, 56.23835 ], [ -4.70549, 56.2385 ], [ -4.70567, 56.23863 ], [ -4.7058, 56.23872 ], [ -4.70596, 56.23882 ], [ -4.70621, 56.23896 ], [ -4.70656, 56.23916 ], [ -4.70678, 56.23928 ], [ -4.70689, 56.23934 ], [ -4.70704, 56.23938 ], [ -4.70732, 56.23947 ], [ -4.70734, 56.23948 ], [ -4.70759, 56.23955 ], [ -4.70777, 56.23963 ], [ -4.70788, 56.23969 ], [ -4.70801, 56.23977 ], [ -4.7083, 56.24001 ], [ -4.7084, 56.24012 ], [ -4.70875, 56.24047 ], [ -4.70932, 56.24098 ], [ -4.70938, 56.24105 ], [ -4.70952, 56.24121 ], [ -4.70961, 56.24131 ], [ -4.70965, 56.24137 ], [ -4.70976, 56.24154 ], [ -4.70977, 56.24154 ], [ -4.70992, 56.2417 ], [ -4.70993, 56.2417 ], [ -4.70999, 56.24176 ], [ -4.7101, 56.24184 ], [ -4.71019, 56.24189 ], [ -4.7104, 56.24199 ], [ -4.71086, 56.24219 ], [ -4.71109, 56.24229 ], [ -4.71139, 56.24239 ], [ -4.71165, 56.24249 ], [ -4.71166, 56.24249 ], [ -4.71194, 56.24259 ], [ -4.71227, 56.24271 ], [ -4.71247, 56.24279 ], [ -4.71259, 56.24285 ], [ -4.71276, 56.24295 ], [ -4.71294, 56.24307 ], [ -4.71351, 56.24347 ], [ -4.71352, 56.24347 ], [ -4.71423, 56.24396 ], [ -4.71434, 56.24403 ], [ -4.71506, 56.2445 ], [ -4.71539, 56.24469 ], [ -4.71576, 56.24488 ], [ -4.71594, 56.24499 ], [ -4.71599, 56.24501 ], [ -4.71606, 56.24505 ], [ -4.71612, 56.24509 ], [ -4.71616, 56.24512 ], [ -4.71618, 56.24515 ], [ -4.71619, 56.24517 ], [ -4.71621, 56.24523 ], [ -4.7162, 56.2453 ], [ -4.7162, 56.24533 ], [ -4.71619, 56.24535 ], [ -4.71618, 56.24537 ], [ -4.71613, 56.24543 ], [ -4.71602, 56.24553 ], [ -4.71585, 56.24569 ], [ -4.71569, 56.24579 ], [ -4.71501, 56.24638 ], [ -4.71464, 56.2467 ], [ -4.71442, 56.24689 ], [ -4.714, 56.24724 ], [ -4.71357, 56.2476 ], [ -4.71352, 56.24764 ], [ -4.71322, 56.2479 ], [ -4.71316, 56.24795 ], [ -4.71305, 56.24805 ], [ -4.71279, 56.24828 ], [ -4.71265, 56.24843 ], [ -4.71247, 56.24862 ], [ -4.71228, 56.24885 ], [ -4.71212, 56.24904 ], [ -4.71202, 56.24917 ], [ -4.71199, 56.24922 ], [ -4.71187, 56.2494 ], [ -4.71181, 56.24951 ], [ -4.71178, 56.24955 ], [ -4.71164, 56.24987 ], [ -4.71151, 56.25014 ], [ -4.71137, 56.25033 ], [ -4.71125, 56.2505 ], [ -4.7111, 56.25066 ], [ -4.71094, 56.25081 ], [ -4.71078, 56.25094 ], [ -4.71059, 56.25108 ], [ -4.71025, 56.25132 ], [ -4.70989, 56.25155 ], [ -4.70978, 56.25162 ], [ -4.70921, 56.25198 ], [ -4.70885, 56.25228 ], [ -4.70875, 56.25238 ], [ -4.70867, 56.25246 ], [ -4.7086, 56.25255 ], [ -4.70852, 56.25269 ], [ -4.7084, 56.25293 ], [ -4.70832, 56.25312 ], [ -4.70827, 56.2533 ], [ -4.70822, 56.25375 ], [ -4.70821, 56.2538 ], [ -4.70822, 56.25404 ], [ -4.70825, 56.25426 ], [ -4.70827, 56.25437 ], [ -4.70842, 56.2546 ], [ -4.7087, 56.25504 ], [ -4.70883, 56.25527 ], [ -4.70885, 56.25531 ], [ -4.70892, 56.25548 ], [ -4.70901, 56.25573 ], [ -4.70906, 56.25585 ], [ -4.70909, 56.25599 ], [ -4.70913, 56.25639 ], [ -4.70917, 56.25699 ], [ -4.70915, 56.25735 ], [ -4.70918, 56.25786 ], [ -4.70915, 56.258 ], [ -4.70915, 56.25803 ], [ -4.70908, 56.25814 ], [ -4.70896, 56.25822 ], [ -4.70877, 56.25836 ], [ -4.70861, 56.25844 ], [ -4.70836, 56.2585 ], [ -4.70813, 56.25854 ], [ -4.7079, 56.25858 ], [ -4.70771, 56.25862 ], [ -4.70762, 56.25865 ], [ -4.70756, 56.2587 ], [ -4.70728, 56.2589 ], [ -4.70705, 56.25902 ], [ -4.7069, 56.25907 ], [ -4.70665, 56.25912 ], [ -4.70628, 56.25919 ], [ -4.70616, 56.25921 ], [ -4.70606, 56.25924 ], [ -4.70591, 56.25928 ], [ -4.7058, 56.25935 ], [ -4.70566, 56.25945 ], [ -4.70551, 56.25954 ], [ -4.70545, 56.25956 ], [ -4.70533, 56.2596 ], [ -4.70501, 56.25966 ], [ -4.70469, 56.25969 ], [ -4.70442, 56.25973 ], [ -4.70431, 56.25975 ], [ -4.70422, 56.25978 ], [ -4.70414, 56.25982 ], [ -4.70406, 56.25987 ], [ -4.70401, 56.25991 ], [ -4.70399, 56.25993 ], [ -4.70395, 56.26001 ], [ -4.70394, 56.26008 ], [ -4.70395, 56.2602 ], [ -4.70403, 56.26044 ], [ -4.70406, 56.2608 ], [ -4.70407, 56.26087 ], [ -4.70406, 56.26105 ], [ -4.70407, 56.26116 ], [ -4.70407, 56.26138 ], [ -4.70402, 56.26168 ], [ -4.70401, 56.2617 ], [ -4.704, 56.26177 ], [ -4.70397, 56.26185 ], [ -4.70396, 56.2621 ], [ -4.70393, 56.26235 ], [ -4.70384, 56.26259 ], [ -4.70378, 56.26276 ], [ -4.70369, 56.26292 ], [ -4.7036, 56.26315 ], [ -4.70359, 56.26322 ], [ -4.7036, 56.26331 ], [ -4.70366, 56.2634 ], [ -4.70371, 56.26348 ], [ -4.70375, 56.26354 ], [ -4.70377, 56.26358 ], [ -4.7038, 56.26366 ], [ -4.70384, 56.26372 ], [ -4.70392, 56.2638 ], [ -4.70404, 56.26399 ], [ -4.70408, 56.26408 ], [ -4.70413, 56.26418 ], [ -4.70424, 56.26438 ], [ -4.70432, 56.26449 ], [ -4.70438, 56.26457 ], [ -4.70453, 56.26498 ], [ -4.70458, 56.26513 ], [ -4.70461, 56.26524 ], [ -4.70461, 56.26531 ], [ -4.70459, 56.26536 ], [ -4.70447, 56.26546 ], [ -4.7044, 56.26551 ], [ -4.70426, 56.2656 ], [ -4.70402, 56.26573 ], [ -4.7037, 56.26587 ], [ -4.70355, 56.26594 ], [ -4.70342, 56.26601 ], [ -4.70333, 56.26605 ], [ -4.70323, 56.26612 ], [ -4.70313, 56.26619 ], [ -4.70305, 56.26626 ], [ -4.70293, 56.26639 ], [ -4.70277, 56.2666 ], [ -4.70274, 56.26663 ], [ -4.70267, 56.26675 ], [ -4.70265, 56.26682 ], [ -4.70264, 56.26689 ], [ -4.70265, 56.26695 ], [ -4.70268, 56.26701 ], [ -4.70273, 56.2671 ], [ -4.70285, 56.26723 ], [ -4.70304, 56.26741 ], [ -4.70337, 56.26772 ], [ -4.70363, 56.26797 ], [ -4.70387, 56.26821 ], [ -4.704, 56.26835 ], [ -4.70402, 56.26837 ], [ -4.70412, 56.26848 ], [ -4.70418, 56.26856 ], [ -4.70432, 56.26877 ], [ -4.70454, 56.26908 ], [ -4.70489, 56.26966 ], [ -4.70514, 56.27011 ], [ -4.7053, 56.27042 ], [ -4.70537, 56.27058 ], [ -4.70547, 56.27085 ], [ -4.70566, 56.27129 ], [ -4.70574, 56.27146 ], [ -4.70577, 56.27156 ], [ -4.70579, 56.27166 ], [ -4.7058, 56.27176 ], [ -4.70579, 56.27184 ], [ -4.70577, 56.2719 ], [ -4.70572, 56.27201 ], [ -4.70567, 56.27209 ], [ -4.70563, 56.27215 ], [ -4.70562, 56.27216 ], [ -4.70555, 56.27226 ], [ -4.70548, 56.27237 ], [ -4.70532, 56.27264 ], [ -4.7053, 56.27273 ], [ -4.70529, 56.27279 ], [ -4.70529, 56.27285 ], [ -4.70529, 56.27288 ], [ -4.7053, 56.27296 ], [ -4.70533, 56.27302 ], [ -4.70533, 56.27303 ], [ -4.70537, 56.27309 ], [ -4.7054, 56.27313 ], [ -4.7054, 56.27314 ], [ -4.70546, 56.27319 ], [ -4.70555, 56.27328 ], [ -4.70565, 56.27333 ], [ -4.70575, 56.27339 ], [ -4.7059, 56.27346 ], [ -4.70604, 56.27353 ], [ -4.70624, 56.27362 ], [ -4.70643, 56.27373 ], [ -4.70654, 56.27381 ], [ -4.70661, 56.2739 ], [ -4.70668, 56.274 ], [ -4.70673, 56.27411 ], [ -4.70677, 56.27425 ], [ -4.70678, 56.2744 ], [ -4.70678, 56.27452 ], [ -4.70677, 56.27474 ], [ -4.70674, 56.27484 ], [ -4.70671, 56.27493 ], [ -4.70667, 56.275 ], [ -4.70665, 56.27505 ], [ -4.70653, 56.2752 ], [ -4.70642, 56.27533 ], [ -4.70641, 56.27534 ], [ -4.70628, 56.27549 ], [ -4.70619, 56.27558 ], [ -4.70611, 56.27569 ], [ -4.70604, 56.27583 ], [ -4.70599, 56.27597 ], [ -4.70594, 56.27618 ], [ -4.70586, 56.27656 ], [ -4.70581, 56.2768 ], [ -4.70579, 56.27685 ], [ -4.70578, 56.2769 ], [ -4.70575, 56.27702 ], [ -4.70571, 56.2772 ], [ -4.70569, 56.27726 ], [ -4.70567, 56.27733 ], [ -4.70562, 56.27743 ], [ -4.70556, 56.27756 ], [ -4.70549, 56.27767 ], [ -4.70547, 56.27771 ], [ -4.70543, 56.27777 ], [ -4.70528, 56.27802 ], [ -4.70514, 56.27823 ], [ -4.7051, 56.27828 ], [ -4.70494, 56.27848 ], [ -4.70484, 56.27859 ], [ -4.70483, 56.27861 ], [ -4.70476, 56.27866 ], [ -4.7047, 56.27872 ], [ -4.70461, 56.27877 ], [ -4.70454, 56.2788 ], [ -4.70448, 56.27883 ], [ -4.70427, 56.27892 ], [ -4.70413, 56.27898 ], [ -4.704, 56.27903 ], [ -4.70347, 56.27921 ], [ -4.70317, 56.27932 ], [ -4.70282, 56.27944 ], [ -4.70249, 56.27956 ], [ -4.70239, 56.27961 ], [ -4.70225, 56.27967 ], [ -4.70224, 56.27967 ], [ -4.70204, 56.27976 ], [ -4.7019, 56.27984 ], [ -4.70188, 56.27985 ], [ -4.70178, 56.27992 ], [ -4.70177, 56.27992 ], [ -4.70167, 56.27999 ], [ -4.70156, 56.28008 ], [ -4.7015, 56.28013 ], [ -4.70143, 56.28019 ], [ -4.70141, 56.28021 ], [ -4.70134, 56.28028 ], [ -4.70125, 56.28039 ], [ -4.70116, 56.2805 ], [ -4.70107, 56.28064 ], [ -4.70101, 56.28075 ], [ -4.70091, 56.28095 ], [ -4.70086, 56.28106 ], [ -4.70083, 56.28113 ], [ -4.70078, 56.28124 ], [ -4.70071, 56.28141 ], [ -4.70066, 56.28153 ], [ -4.70057, 56.28176 ], [ -4.70054, 56.28183 ], [ -4.70051, 56.28199 ], [ -4.7005, 56.28212 ], [ -4.70051, 56.28219 ], [ -4.70052, 56.28222 ], [ -4.70055, 56.28229 ], [ -4.70065, 56.28241 ], [ -4.70079, 56.28253 ], [ -4.70097, 56.28266 ], [ -4.70134, 56.28291 ], [ -4.70138, 56.28294 ], [ -4.70149, 56.28302 ], [ -4.70152, 56.28304 ], [ -4.70171, 56.28323 ], [ -4.70195, 56.28349 ], [ -4.70203, 56.28356 ], [ -4.70212, 56.28365 ], [ -4.70214, 56.28367 ], [ -4.70245, 56.28393 ], [ -4.70278, 56.28417 ], [ -4.70311, 56.28437 ], [ -4.70345, 56.28453 ], [ -4.7036, 56.2846 ], [ -4.70381, 56.28469 ], [ -4.70399, 56.28478 ], [ -4.70405, 56.28482 ], [ -4.70413, 56.28487 ], [ -4.70419, 56.28492 ], [ -4.70426, 56.28498 ], [ -4.70427, 56.285 ], [ -4.70432, 56.28504 ], [ -4.70436, 56.2851 ], [ -4.70439, 56.28515 ], [ -4.70444, 56.28528 ], [ -4.70448, 56.2854 ], [ -4.70451, 56.2855 ], [ -4.70454, 56.28562 ], [ -4.70456, 56.28568 ], [ -4.70457, 56.28573 ], [ -4.70458, 56.28575 ], [ -4.7046, 56.28579 ], [ -4.70464, 56.28585 ], [ -4.70472, 56.28591 ], [ -4.70482, 56.28598 ], [ -4.70488, 56.28601 ], [ -4.7049, 56.28602 ], [ -4.70494, 56.28604 ], [ -4.70499, 56.28606 ], [ -4.70505, 56.28608 ], [ -4.70509, 56.28609 ], [ -4.70513, 56.2861 ], [ -4.70519, 56.28611 ], [ -4.70527, 56.28611 ], [ -4.70537, 56.28611 ], [ -4.70547, 56.2861 ], [ -4.70573, 56.28607 ], [ -4.70606, 56.28603 ], [ -4.70611, 56.28603 ], [ -4.7062, 56.28602 ], [ -4.70623, 56.28602 ], [ -4.7063, 56.28603 ], [ -4.70638, 56.28604 ], [ -4.70643, 56.28605 ], [ -4.70645, 56.28605 ], [ -4.70657, 56.28608 ], [ -4.70667, 56.28611 ], [ -4.70672, 56.28612 ], [ -4.70675, 56.28614 ], [ -4.70679, 56.28615 ], [ -4.7069, 56.2862 ], [ -4.70706, 56.28627 ], [ -4.70745, 56.28649 ], [ -4.70777, 56.28669 ], [ -4.70788, 56.28675 ], [ -4.70806, 56.28687 ], [ -4.70825, 56.28697 ], [ -4.70835, 56.28702 ], [ -4.70847, 56.28708 ], [ -4.70864, 56.28716 ], [ -4.70868, 56.28717 ], [ -4.70886, 56.28725 ], [ -4.70913, 56.28739 ], [ -4.70934, 56.28753 ], [ -4.70946, 56.28761 ], [ -4.70953, 56.28766 ], [ -4.70955, 56.28767 ], [ -4.70962, 56.2877 ], [ -4.70971, 56.28775 ], [ -4.70979, 56.28778 ], [ -4.7098, 56.28778 ], [ -4.70993, 56.28783 ], [ -4.71016, 56.28793 ], [ -4.7104, 56.28807 ], [ -4.71055, 56.28819 ], [ -4.71065, 56.28826 ], [ -4.71073, 56.28837 ], [ -4.71078, 56.28843 ], [ -4.71081, 56.28849 ], [ -4.71084, 56.28857 ], [ -4.71086, 56.28866 ], [ -4.71089, 56.28878 ], [ -4.71091, 56.28896 ], [ -4.71091, 56.28898 ], [ -4.71093, 56.28918 ], [ -4.71094, 56.28931 ], [ -4.71094, 56.28934 ], [ -4.71095, 56.28949 ], [ -4.71096, 56.28974 ], [ -4.71098, 56.29016 ], [ -4.71101, 56.29039 ], [ -4.71106, 56.29056 ], [ -4.71116, 56.29087 ], [ -4.71125, 56.29119 ], [ -4.71126, 56.29125 ], [ -4.71132, 56.29159 ], [ -4.71132, 56.29161 ], [ -4.71135, 56.29183 ], [ -4.71137, 56.29198 ], [ -4.71141, 56.29246 ], [ -4.71146, 56.29289 ], [ -4.7115, 56.29331 ], [ -4.71154, 56.29346 ], [ -4.71159, 56.29368 ], [ -4.7117, 56.2939 ], [ -4.71178, 56.29405 ], [ -4.71188, 56.29421 ], [ -4.71205, 56.29444 ], [ -4.71214, 56.29454 ], [ -4.71251, 56.29495 ], [ -4.71289, 56.29536 ], [ -4.71309, 56.29557 ], [ -4.71331, 56.29577 ], [ -4.71356, 56.29597 ], [ -4.71379, 56.29612 ], [ -4.71393, 56.29622 ], [ -4.71467, 56.2967 ], [ -4.71508, 56.29696 ], [ -4.71527, 56.29707 ], [ -4.71542, 56.29717 ], [ -4.71567, 56.29735 ], [ -4.71579, 56.29744 ], [ -4.71588, 56.29749 ], [ -4.71615, 56.29766 ], [ -4.71651, 56.29788 ], [ -4.71676, 56.29802 ], [ -4.7169, 56.29811 ], [ -4.71698, 56.29815 ], [ -4.71719, 56.29828 ], [ -4.7172, 56.29828 ], [ -4.7174, 56.29841 ], [ -4.71759, 56.29855 ], [ -4.71778, 56.29869 ], [ -4.71812, 56.29898 ], [ -4.71842, 56.29924 ], [ -4.71883, 56.29958 ], [ -4.71904, 56.29976 ], [ -4.71942, 56.30009 ], [ -4.72001, 56.30062 ], [ -4.72041, 56.30099 ], [ -4.72054, 56.30111 ], [ -4.72057, 56.30114 ], [ -4.72074, 56.3013 ], [ -4.7208, 56.30136 ], [ -4.7209, 56.30145 ], [ -4.72095, 56.3015 ], [ -4.72101, 56.30157 ], [ -4.72105, 56.30161 ], [ -4.7211, 56.30168 ], [ -4.72115, 56.30179 ], [ -4.72119, 56.30189 ], [ -4.7212, 56.30198 ], [ -4.72121, 56.30204 ], [ -4.72122, 56.30216 ], [ -4.72123, 56.30222 ], [ -4.72123, 56.30235 ], [ -4.72125, 56.30294 ], [ -4.72115, 56.30323 ], [ -4.72108, 56.30341 ], [ -4.72103, 56.30353 ], [ -4.72096, 56.30371 ], [ -4.72093, 56.30381 ], [ -4.72093, 56.30386 ], [ -4.72092, 56.3039 ], [ -4.72092, 56.304 ], [ -4.72096, 56.30419 ], [ -4.721, 56.30431 ], [ -4.72106, 56.30445 ], [ -4.72126, 56.30484 ], [ -4.7213, 56.30491 ], [ -4.72138, 56.30507 ], [ -4.72139, 56.30508 ], [ -4.72164, 56.30556 ], [ -4.72173, 56.30573 ], [ -4.72175, 56.30577 ], [ -4.72183, 56.30595 ], [ -4.72201, 56.30634 ], [ -4.72208, 56.30647 ], [ -4.72215, 56.30657 ], [ -4.72221, 56.30664 ], [ -4.72231, 56.30673 ], [ -4.72245, 56.30686 ], [ -4.72271, 56.30706 ], [ -4.72287, 56.30719 ], [ -4.723, 56.30732 ], [ -4.72307, 56.30739 ], [ -4.72313, 56.30746 ], [ -4.7232, 56.30756 ], [ -4.72326, 56.30765 ], [ -4.72331, 56.30773 ], [ -4.7234, 56.3079 ], [ -4.72342, 56.30794 ], [ -4.72348, 56.3081 ], [ -4.72355, 56.30825 ], [ -4.7236, 56.30836 ], [ -4.72367, 56.30849 ], [ -4.72375, 56.30859 ], [ -4.72377, 56.30861 ], [ -4.72392, 56.30877 ], [ -4.72414, 56.30902 ], [ -4.72422, 56.30909 ], [ -4.72423, 56.30911 ], [ -4.72434, 56.3093 ], [ -4.72438, 56.30936 ], [ -4.72441, 56.30941 ], [ -4.72443, 56.30943 ], [ -4.72449, 56.30953 ], [ -4.7245, 56.30956 ], [ -4.72485, 56.31019 ], [ -4.72491, 56.31029 ], [ -4.72512, 56.31065 ], [ -4.72533, 56.31108 ], [ -4.72536, 56.31113 ], [ -4.72537, 56.31115 ], [ -4.7254, 56.31121 ], [ -4.72542, 56.31126 ], [ -4.72563, 56.31169 ], [ -4.72575, 56.31199 ], [ -4.72577, 56.31203 ], [ -4.72581, 56.31213 ], [ -4.72583, 56.31218 ], [ -4.72584, 56.3122 ], [ -4.72592, 56.31241 ], [ -4.72602, 56.31266 ], [ -4.72604, 56.3127 ], [ -4.72605, 56.31273 ], [ -4.72609, 56.31283 ], [ -4.72621, 56.31308 ], [ -4.72622, 56.3131 ], [ -4.72625, 56.31318 ], [ -4.72625, 56.31319 ], [ -4.72626, 56.31323 ], [ -4.72627, 56.31329 ], [ -4.72627, 56.31342 ], [ -4.72625, 56.31354 ], [ -4.72619, 56.3139 ], [ -4.72618, 56.31395 ], [ -4.72615, 56.31415 ], [ -4.72613, 56.31431 ], [ -4.72612, 56.31443 ], [ -4.72611, 56.31448 ], [ -4.7261, 56.31456 ], [ -4.72601, 56.31509 ], [ -4.72592, 56.31565 ], [ -4.72582, 56.31638 ], [ -4.72574, 56.31694 ], [ -4.72572, 56.31711 ], [ -4.72571, 56.31712 ], [ -4.72566, 56.31731 ], [ -4.72563, 56.31742 ], [ -4.72557, 56.31754 ], [ -4.72551, 56.31766 ], [ -4.72539, 56.31789 ], [ -4.72522, 56.31817 ], [ -4.72519, 56.31821 ], [ -4.72497, 56.31851 ], [ -4.72479, 56.31873 ], [ -4.72471, 56.31883 ], [ -4.7246, 56.31896 ], [ -4.7244, 56.31918 ], [ -4.72419, 56.31939 ], [ -4.72407, 56.31951 ], [ -4.72403, 56.31955 ], [ -4.72394, 56.31968 ], [ -4.72389, 56.31978 ], [ -4.72385, 56.31989 ], [ -4.72382, 56.31998 ], [ -4.72375, 56.32022 ], [ -4.7237, 56.32039 ], [ -4.72355, 56.32101 ], [ -4.72348, 56.32127 ], [ -4.72345, 56.3214 ], [ -4.72342, 56.32151 ], [ -4.7233, 56.32208 ], [ -4.7233, 56.32211 ], [ -4.72329, 56.32216 ], [ -4.72326, 56.32236 ], [ -4.72324, 56.32257 ], [ -4.72324, 56.32269 ], [ -4.72326, 56.32282 ], [ -4.72329, 56.32297 ], [ -4.72329, 56.32306 ], [ -4.72329, 56.32319 ], [ -4.72326, 56.32331 ], [ -4.72321, 56.32342 ], [ -4.72319, 56.32346 ], [ -4.72308, 56.32359 ], [ -4.72288, 56.32378 ], [ -4.72267, 56.32398 ], [ -4.72264, 56.324 ], [ -4.7226, 56.32405 ], [ -4.72222, 56.32444 ], [ -4.72188, 56.32475 ], [ -4.72175, 56.32487 ], [ -4.72161, 56.32498 ], [ -4.72154, 56.32507 ], [ -4.7215, 56.32514 ], [ -4.72147, 56.32524 ], [ -4.72145, 56.32536 ], [ -4.7215, 56.32563 ], [ -4.72151, 56.32568 ], [ -4.72151, 56.32569 ], [ -4.72154, 56.32586 ], [ -4.72156, 56.32593 ], [ -4.72166, 56.3264 ], [ -4.72177, 56.32689 ], [ -4.7218, 56.32706 ], [ -4.72189, 56.32747 ], [ -4.72191, 56.32759 ], [ -4.72192, 56.32764 ], [ -4.72192, 56.32765 ], [ -4.72206, 56.32831 ], [ -4.72207, 56.32836 ], [ -4.7221, 56.32848 ], [ -4.72211, 56.32854 ], [ -4.72214, 56.32867 ], [ -4.72216, 56.32872 ], [ -4.7222, 56.3289 ], [ -4.72224, 56.32908 ], [ -4.72225, 56.3291 ], [ -4.72232, 56.32942 ], [ -4.72232, 56.32979 ], [ -4.72232, 56.32984 ], [ -4.72232, 56.32992 ], [ -4.72231, 56.33 ], [ -4.72229, 56.33015 ], [ -4.72229, 56.33018 ], [ -4.72227, 56.33031 ], [ -4.72221, 56.33045 ], [ -4.7222, 56.33048 ], [ -4.72211, 56.33061 ], [ -4.722, 56.33073 ], [ -4.72173, 56.33098 ], [ -4.72171, 56.331 ], [ -4.72156, 56.33114 ], [ -4.72139, 56.33129 ], [ -4.72123, 56.33144 ], [ -4.72122, 56.33145 ], [ -4.72108, 56.3316 ], [ -4.721, 56.33168 ], [ -4.72092, 56.33179 ], [ -4.7208, 56.33196 ], [ -4.72071, 56.33209 ], [ -4.72065, 56.33222 ], [ -4.72059, 56.3324 ], [ -4.72058, 56.33245 ], [ -4.72055, 56.33263 ], [ -4.72053, 56.3328 ], [ -4.72051, 56.33302 ], [ -4.72053, 56.33331 ], [ -4.72059, 56.3337 ], [ -4.72061, 56.33389 ], [ -4.7207, 56.33478 ], [ -4.72071, 56.33546 ], [ -4.72071, 56.33554 ], [ -4.72071, 56.33557 ], [ -4.7207, 56.33572 ], [ -4.72068, 56.33611 ], [ -4.7206, 56.33652 ], [ -4.72054, 56.33683 ], [ -4.72053, 56.337 ], [ -4.72053, 56.33707 ], [ -4.72053, 56.33725 ], [ -4.72053, 56.3373 ], [ -4.72054, 56.33734 ], [ -4.72055, 56.33743 ], [ -4.72059, 56.3377 ], [ -4.72061, 56.33779 ], [ -4.72067, 56.33815 ], [ -4.7207, 56.33832 ], [ -4.72073, 56.33847 ], [ -4.72078, 56.33878 ], [ -4.72078, 56.33897 ], [ -4.72078, 56.3391 ], [ -4.72077, 56.33924 ], [ -4.72075, 56.33936 ], [ -4.72069, 56.33958 ], [ -4.72063, 56.33977 ], [ -4.72054, 56.33996 ], [ -4.72048, 56.34007 ], [ -4.72047, 56.34011 ], [ -4.72035, 56.34027 ], [ -4.72024, 56.34043 ], [ -4.72013, 56.34057 ], [ -4.7201, 56.3406 ], [ -4.72001, 56.3407 ], [ -4.71984, 56.34086 ], [ -4.71981, 56.34088 ], [ -4.71931, 56.34134 ], [ -4.71858, 56.34192 ], [ -4.71818, 56.34223 ], [ -4.71796, 56.3424 ], [ -4.71762, 56.34265 ], [ -4.7176, 56.34266 ], [ -4.71742, 56.34278 ], [ -4.71717, 56.34293 ], [ -4.71698, 56.34304 ], [ -4.71695, 56.34306 ], [ -4.71678, 56.34314 ], [ -4.71658, 56.34323 ], [ -4.71632, 56.34334 ], [ -4.71609, 56.34344 ], [ -4.71592, 56.3435 ], [ -4.71583, 56.34353 ], [ -4.71564, 56.34359 ], [ -4.71543, 56.34366 ], [ -4.7152, 56.34372 ], [ -4.71499, 56.34377 ], [ -4.71478, 56.34382 ], [ -4.71453, 56.34387 ], [ -4.71433, 56.34391 ], [ -4.71395, 56.34397 ], [ -4.71266, 56.34418 ], [ -4.71197, 56.34428 ], [ -4.71077, 56.34447 ], [ -4.71061, 56.34449 ], [ -4.70883, 56.34476 ], [ -4.70718, 56.34503 ], [ -4.70701, 56.34505 ], [ -4.70667, 56.34511 ], [ -4.70645, 56.34516 ], [ -4.70601, 56.34525 ], [ -4.7058, 56.3453 ], [ -4.70566, 56.34534 ], [ -4.70561, 56.34535 ], [ -4.70545, 56.3454 ], [ -4.70524, 56.34546 ], [ -4.70503, 56.34555 ], [ -4.70475, 56.34567 ], [ -4.70459, 56.34575 ], [ -4.70454, 56.34577 ], [ -4.70439, 56.34586 ], [ -4.70436, 56.34587 ], [ -4.70415, 56.34601 ], [ -4.70396, 56.34614 ], [ -4.70376, 56.34629 ], [ -4.70348, 56.34653 ], [ -4.70318, 56.34678 ], [ -4.70292, 56.34703 ], [ -4.70289, 56.34706 ], [ -4.70256, 56.34736 ], [ -4.70239, 56.34752 ], [ -4.70224, 56.34765 ], [ -4.70192, 56.3479 ], [ -4.70184, 56.34796 ], [ -4.70175, 56.34803 ], [ -4.70147, 56.34822 ], [ -4.70143, 56.34824 ], [ -4.70119, 56.3484 ], [ -4.7008, 56.34863 ], [ -4.70058, 56.34875 ], [ -4.70055, 56.34877 ], [ -4.70031, 56.34889 ], [ -4.69986, 56.3491 ], [ -4.69943, 56.34929 ], [ -4.69905, 56.34944 ], [ -4.69871, 56.34956 ], [ -4.69842, 56.34965 ], [ -4.69822, 56.34972 ], [ -4.6979, 56.34982 ], [ -4.69741, 56.34995 ], [ -4.69701, 56.35004 ], [ -4.69648, 56.35015 ], [ -4.69619, 56.35021 ], [ -4.69564, 56.3503 ], [ -4.69538, 56.35034 ], [ -4.69507, 56.35038 ], [ -4.69481, 56.35041 ], [ -4.69428, 56.35046 ], [ -4.69415, 56.35047 ], [ -4.69383, 56.35049 ], [ -4.69334, 56.35053 ], [ -4.6928, 56.35058 ], [ -4.69241, 56.35062 ], [ -4.69202, 56.35068 ], [ -4.69165, 56.35075 ], [ -4.69131, 56.35083 ], [ -4.69102, 56.3509 ], [ -4.69098, 56.35092 ], [ -4.69071, 56.35099 ], [ -4.6905, 56.35106 ], [ -4.69045, 56.35107 ], [ -4.69018, 56.35117 ], [ -4.69015, 56.35118 ], [ -4.68997, 56.35125 ], [ -4.68992, 56.35128 ], [ -4.6897, 56.35137 ], [ -4.68966, 56.35139 ], [ -4.68946, 56.35148 ], [ -4.68921, 56.35162 ], [ -4.68919, 56.35163 ], [ -4.68898, 56.35175 ], [ -4.68878, 56.35188 ], [ -4.68861, 56.35201 ], [ -4.68856, 56.35204 ], [ -4.68848, 56.3521 ], [ -4.68837, 56.35219 ], [ -4.68831, 56.35223 ], [ -4.6882, 56.35234 ], [ -4.68802, 56.35252 ], [ -4.68773, 56.35283 ], [ -4.68747, 56.35315 ], [ -4.68726, 56.3534 ], [ -4.68719, 56.35347 ], [ -4.68687, 56.3538 ], [ -4.68672, 56.35394 ], [ -4.68658, 56.35407 ], [ -4.68655, 56.3541 ], [ -4.6864, 56.35422 ], [ -4.68622, 56.35435 ], [ -4.68587, 56.35459 ], [ -4.68512, 56.35508 ], [ -4.68501, 56.35515 ], [ -4.68416, 56.35571 ], [ -4.68392, 56.35588 ], [ -4.68372, 56.356 ], [ -4.68352, 56.35612 ], [ -4.68332, 56.35623 ], [ -4.6832, 56.35629 ], [ -4.6831, 56.35634 ], [ -4.68295, 56.35641 ], [ -4.68286, 56.35644 ], [ -4.68269, 56.35652 ], [ -4.68253, 56.35658 ], [ -4.68243, 56.35662 ], [ -4.68217, 56.35673 ], [ -4.68205, 56.35677 ], [ -4.68165, 56.35692 ], [ -4.68114, 56.35711 ], [ -4.68109, 56.35713 ], [ -4.68082, 56.35724 ], [ -4.68058, 56.35735 ], [ -4.6805, 56.35738 ], [ -4.68033, 56.35747 ], [ -4.68026, 56.3575 ], [ -4.6799, 56.35772 ], [ -4.67967, 56.35787 ], [ -4.67963, 56.35789 ], [ -4.67948, 56.35801 ], [ -4.67945, 56.35803 ], [ -4.6793, 56.35814 ], [ -4.67928, 56.35815 ], [ -4.67906, 56.35834 ], [ -4.67884, 56.35853 ], [ -4.67852, 56.35883 ], [ -4.67832, 56.359 ], [ -4.67801, 56.35925 ], [ -4.67782, 56.35939 ], [ -4.67758, 56.35954 ], [ -4.67744, 56.35963 ], [ -4.67739, 56.35966 ], [ -4.67706, 56.35984 ], [ -4.67684, 56.35995 ], [ -4.67669, 56.36001 ], [ -4.67646, 56.3601 ], [ -4.67622, 56.3602 ], [ -4.67598, 56.36029 ], [ -4.67584, 56.36033 ], [ -4.67552, 56.36043 ], [ -4.67508, 56.36055 ], [ -4.6748, 56.36063 ], [ -4.67443, 56.36072 ], [ -4.67418, 56.36078 ], [ -4.67394, 56.36085 ], [ -4.67389, 56.36086 ], [ -4.67333, 56.36098 ], [ -4.67291, 56.36106 ], [ -4.67247, 56.36114 ], [ -4.67209, 56.36121 ], [ -4.67188, 56.36124 ], [ -4.6717, 56.36127 ], [ -4.67119, 56.36134 ], [ -4.67068, 56.36141 ], [ -4.67063, 56.36142 ], [ -4.67031, 56.36147 ], [ -4.66992, 56.36154 ], [ -4.66955, 56.36162 ], [ -4.66917, 56.36171 ], [ -4.6688, 56.36182 ], [ -4.6687, 56.36185 ], [ -4.66843, 56.36195 ], [ -4.66837, 56.36197 ], [ -4.66817, 56.36205 ], [ -4.66796, 56.36214 ], [ -4.66775, 56.36224 ], [ -4.66752, 56.36236 ], [ -4.66739, 56.36242 ], [ -4.66718, 56.36255 ], [ -4.667, 56.36267 ], [ -4.66699, 56.36268 ], [ -4.66682, 56.36279 ], [ -4.6668, 56.36281 ], [ -4.66669, 56.3629 ], [ -4.66654, 56.36303 ], [ -4.66629, 56.36328 ], [ -4.66618, 56.36341 ], [ -4.66609, 56.36352 ], [ -4.66603, 56.3636 ], [ -4.66588, 56.36383 ], [ -4.66577, 56.36403 ], [ -4.66575, 56.36407 ], [ -4.66564, 56.36424 ], [ -4.66545, 56.36453 ], [ -4.6653, 56.36472 ], [ -4.66518, 56.36485 ], [ -4.66513, 56.3649 ], [ -4.66507, 56.36497 ], [ -4.66498, 56.36506 ], [ -4.66486, 56.36516 ], [ -4.66478, 56.36523 ], [ -4.66457, 56.3654 ], [ -4.66433, 56.36558 ], [ -4.66403, 56.36581 ], [ -4.6638, 56.36599 ], [ -4.66355, 56.36619 ], [ -4.66332, 56.36639 ], [ -4.66316, 56.36653 ], [ -4.66297, 56.36669 ], [ -4.6628, 56.36684 ], [ -4.66245, 56.36715 ], [ -4.66236, 56.36723 ], [ -4.66212, 56.36743 ], [ -4.66195, 56.36756 ], [ -4.66151, 56.36788 ], [ -4.66134, 56.368 ], [ -4.66105, 56.3682 ], [ -4.6604, 56.36864 ], [ -4.66016, 56.3688 ], [ -4.65983, 56.36902 ], [ -4.65955, 56.36921 ], [ -4.65937, 56.36934 ], [ -4.65914, 56.36949 ], [ -4.65852, 56.36991 ], [ -4.65727, 56.37074 ], [ -4.65593, 56.37154 ], [ -4.65308, 56.37325 ], [ -4.65286, 56.37338 ], [ -4.65139, 56.37426 ], [ -4.65008, 56.37503 ], [ -4.64937, 56.37545 ], [ -4.64831, 56.37608 ], [ -4.64765, 56.37648 ], [ -4.64742, 56.37661 ], [ -4.64698, 56.37687 ], [ -4.64506, 56.37801 ], [ -4.64467, 56.37824 ], [ -4.64357, 56.3789 ], [ -4.64246, 56.37956 ], [ -4.64204, 56.37981 ], [ -4.64109, 56.38036 ], [ -4.64078, 56.38055 ], [ -4.64055, 56.38066 ], [ -4.64033, 56.38078 ], [ -4.64004, 56.38091 ], [ -4.63974, 56.38103 ], [ -4.63919, 56.38123 ], [ -4.63865, 56.3814 ], [ -4.63826, 56.38151 ], [ -4.63783, 56.38161 ], [ -4.63747, 56.38167 ], [ -4.6371, 56.38173 ], [ -4.63658, 56.3818 ], [ -4.63599, 56.38187 ], [ -4.63592, 56.38188 ], [ -4.63489, 56.38198 ], [ -4.6338, 56.3821 ], [ -4.63322, 56.38217 ], [ -4.63281, 56.38224 ], [ -4.6325, 56.38229 ], [ -4.63225, 56.38233 ], [ -4.63219, 56.38234 ], [ -4.6316, 56.38245 ], [ -4.63065, 56.38263 ], [ -4.62907, 56.38294 ], [ -4.6282, 56.38311 ], [ -4.6279, 56.38317 ], [ -4.62772, 56.38321 ], [ -4.62729, 56.3833 ], [ -4.62715, 56.38333 ], [ -4.62699, 56.38338 ], [ -4.6267, 56.38345 ], [ -4.62664, 56.38346 ], [ -4.62624, 56.38358 ], [ -4.62612, 56.38362 ], [ -4.62587, 56.3837 ], [ -4.62584, 56.38371 ], [ -4.62557, 56.38381 ], [ -4.62539, 56.38387 ], [ -4.6253, 56.38391 ], [ -4.62503, 56.38402 ], [ -4.62471, 56.38417 ], [ -4.62432, 56.38436 ], [ -4.62431, 56.38437 ], [ -4.62407, 56.3845 ], [ -4.62401, 56.38453 ], [ -4.62364, 56.38476 ], [ -4.62363, 56.38476 ], [ -4.6232, 56.38503 ], [ -4.62299, 56.38517 ], [ -4.62279, 56.38529 ], [ -4.62194, 56.38585 ], [ -4.62136, 56.38625 ], [ -4.62128, 56.3863 ], [ -4.62108, 56.38644 ], [ -4.62103, 56.38647 ], [ -4.62091, 56.38659 ], [ -4.62074, 56.38674 ], [ -4.62068, 56.3868 ], [ -4.62064, 56.38686 ], [ -4.62043, 56.38725 ], [ -4.62037, 56.38726 ], [ -4.62032, 56.38727 ], [ -4.62029, 56.38728 ], [ -4.62025, 56.38729 ], [ -4.62022, 56.3873 ], [ -4.6202, 56.38732 ], [ -4.62017, 56.38733 ], [ -4.62016, 56.38734 ], [ -4.62015, 56.38735 ], [ -4.62013, 56.38737 ], [ -4.62012, 56.38739 ], [ -4.6201, 56.38741 ], [ -4.6201, 56.38743 ], [ -4.62009, 56.38745 ], [ -4.62009, 56.38747 ], [ -4.62009, 56.38749 ], [ -4.6201, 56.38751 ], [ -4.62011, 56.38754 ], [ -4.62014, 56.38757 ], [ -4.62016, 56.38759 ], [ -4.62018, 56.3876 ], [ -4.62021, 56.38762 ], [ -4.62023, 56.38763 ], [ -4.62026, 56.38765 ], [ -4.6203, 56.38766 ], [ -4.62035, 56.38767 ], [ -4.62044, 56.38768 ], [ -4.62042, 56.38785 ], [ -4.62041, 56.38788 ], [ -4.62037, 56.38803 ], [ -4.62026, 56.38844 ], [ -4.6202, 56.38873 ], [ -4.62017, 56.3889 ], [ -4.62013, 56.38908 ], [ -4.62011, 56.38922 ], [ -4.62011, 56.38926 ], [ -4.62011, 56.38944 ], [ -4.62011, 56.38962 ], [ -4.62011, 56.38984 ], [ -4.62016, 56.38998 ], [ -4.62029, 56.39033 ], [ -4.62035, 56.39051 ], [ -4.62038, 56.39061 ], [ -4.62055, 56.39085 ], [ -4.62066, 56.39102 ], [ -4.62078, 56.39119 ], [ -4.6209, 56.39137 ], [ -4.62106, 56.39151 ], [ -4.62124, 56.39166 ], [ -4.62142, 56.39181 ], [ -4.6216, 56.39196 ], [ -4.62178, 56.39211 ], [ -4.62196, 56.39226 ], [ -4.62238, 56.39261 ], [ -4.62279, 56.3928 ], [ -4.62378, 56.39326 ], [ -4.62395, 56.39334 ], [ -4.62404, 56.39338 ], [ -4.62456, 56.39359 ], [ -4.62482, 56.3937 ], [ -4.62534, 56.39391 ], [ -4.62586, 56.39413 ], [ -4.6261, 56.39423 ], [ -4.62607, 56.39425 ], [ -4.62605, 56.39428 ], [ -4.62604, 56.3943 ], [ -4.62603, 56.39432 ], [ -4.62603, 56.39434 ], [ -4.62603, 56.39436 ], [ -4.62603, 56.39438 ], [ -4.62604, 56.3944 ], [ -4.62605, 56.39443 ], [ -4.62609, 56.39447 ], [ -4.62612, 56.39449 ], [ -4.62615, 56.39451 ], [ -4.62618, 56.39452 ], [ -4.62621, 56.39453 ], [ -4.62624, 56.39454 ], [ -4.62627, 56.39455 ], [ -4.62631, 56.39456 ], [ -4.62634, 56.39456 ], [ -4.62638, 56.39457 ], [ -4.62642, 56.39457 ], [ -4.62647, 56.39456 ], [ -4.62654, 56.39455 ], [ -4.62665, 56.39466 ], [ -4.62669, 56.39468 ], [ -4.62699, 56.39485 ], [ -4.62801, 56.39545 ], [ -4.62808, 56.39549 ], [ -4.62862, 56.39572 ], [ -4.629, 56.39587 ], [ -4.62904, 56.39588 ], [ -4.62931, 56.39598 ], [ -4.62959, 56.39608 ], [ -4.62989, 56.39619 ], [ -4.63148, 56.39675 ], [ -4.6322, 56.39702 ], [ -4.63231, 56.39706 ], [ -4.63257, 56.39717 ], [ -4.63296, 56.39733 ], [ -4.63349, 56.39755 ], [ -4.63386, 56.39772 ], [ -4.63411, 56.39783 ], [ -4.63419, 56.39786 ], [ -4.63461, 56.39806 ], [ -4.63485, 56.39818 ], [ -4.63513, 56.39831 ], [ -4.63557, 56.39855 ], [ -4.6358, 56.39867 ], [ -4.63585, 56.3987 ], [ -4.63601, 56.39881 ], [ -4.6363, 56.399 ], [ -4.63681, 56.3994 ], [ -4.63694, 56.39953 ], [ -4.63708, 56.39968 ], [ -4.63754, 56.40016 ], [ -4.63799, 56.40063 ], [ -4.63841, 56.40103 ], [ -4.63887, 56.40142 ], [ -4.6392, 56.40167 ], [ -4.63967, 56.40199 ], [ -4.63987, 56.40211 ], [ -4.64005, 56.40222 ], [ -4.64039, 56.40242 ], [ -4.64078, 56.40263 ], [ -4.64083, 56.40265 ], [ -4.64102, 56.40275 ], [ -4.64147, 56.40297 ], [ -4.64203, 56.40321 ], [ -4.64214, 56.40325 ], [ -4.64252, 56.4034 ], [ -4.64285, 56.40352 ], [ -4.64331, 56.40367 ], [ -4.64365, 56.40378 ], [ -4.64434, 56.40398 ], [ -4.64497, 56.40417 ], [ -4.64535, 56.40429 ], [ -4.64591, 56.40449 ], [ -4.6462, 56.40459 ], [ -4.64667, 56.40477 ], [ -4.64678, 56.40482 ], [ -4.64719, 56.40499 ], [ -4.64767, 56.40523 ], [ -4.64886, 56.40581 ], [ -4.64945, 56.40608 ], [ -4.6495, 56.4061 ], [ -4.64988, 56.40626 ], [ -4.65025, 56.4064 ], [ -4.65097, 56.40668 ], [ -4.65173, 56.40694 ], [ -4.65211, 56.40707 ], [ -4.65247, 56.40719 ], [ -4.65274, 56.4073 ], [ -4.65301, 56.4074 ], [ -4.65303, 56.40741 ], [ -4.65333, 56.40754 ], [ -4.65353, 56.40763 ], [ -4.65375, 56.40775 ], [ -4.65384, 56.4078 ], [ -4.65425, 56.40804 ], [ -4.65445, 56.40818 ], [ -4.6546, 56.40829 ], [ -4.65463, 56.4083 ], [ -4.65492, 56.40855 ], [ -4.65517, 56.40879 ], [ -4.65519, 56.40881 ], [ -4.6554, 56.40904 ], [ -4.65563, 56.40929 ], [ -4.65567, 56.40933 ], [ -4.65578, 56.40946 ], [ -4.65603, 56.40974 ], [ -4.65616, 56.40986 ], [ -4.65638, 56.41009 ], [ -4.65667, 56.41032 ], [ -4.65672, 56.41035 ], [ -4.65706, 56.41059 ], [ -4.65747, 56.41084 ], [ -4.65797, 56.41113 ], [ -4.65824, 56.41129 ], [ -4.65834, 56.41135 ], [ -4.65846, 56.41142 ], [ -4.65878, 56.41161 ], [ -4.65902, 56.41176 ], [ -4.6593, 56.41195 ], [ -4.65931, 56.41197 ], [ -4.65951, 56.41211 ], [ -4.65968, 56.41224 ], [ -4.66002, 56.41253 ], [ -4.66022, 56.41271 ], [ -4.66045, 56.4129 ], [ -4.66106, 56.41346 ], [ -4.66159, 56.41392 ], [ -4.66222, 56.41442 ], [ -4.66236, 56.41452 ], [ -4.66297, 56.41493 ], [ -4.66344, 56.41522 ], [ -4.66356, 56.41529 ], [ -4.664, 56.41555 ], [ -4.6646, 56.41586 ], [ -4.66523, 56.41617 ], [ -4.66547, 56.41627 ], [ -4.66588, 56.41646 ], [ -4.66652, 56.4167 ], [ -4.6672, 56.41698 ], [ -4.66735, 56.41705 ], [ -4.66807, 56.41734 ], [ -4.6683, 56.41743 ], [ -4.66857, 56.41754 ], [ -4.66862, 56.41756 ], [ -4.66921, 56.41781 ], [ -4.66959, 56.41798 ], [ -4.66973, 56.41805 ], [ -4.66983, 56.4181 ], [ -4.67027, 56.41832 ], [ -4.67085, 56.41864 ], [ -4.67143, 56.419 ], [ -4.67197, 56.41934 ], [ -4.67243, 56.41961 ], [ -4.67304, 56.41996 ], [ -4.67362, 56.42027 ], [ -4.6748, 56.42087 ], [ -4.67487, 56.42091 ], [ -4.67525, 56.42111 ], [ -4.67533, 56.42116 ], [ -4.67578, 56.42142 ], [ -4.6761, 56.42164 ], [ -4.67627, 56.42176 ], [ -4.67657, 56.42197 ], [ -4.67667, 56.42204 ], [ -4.67709, 56.42236 ], [ -4.67744, 56.42262 ], [ -4.67773, 56.42283 ], [ -4.67785, 56.4229 ], [ -4.67791, 56.42294 ], [ -4.67808, 56.42304 ], [ -4.6784, 56.42323 ], [ -4.67872, 56.42341 ], [ -4.67906, 56.42358 ], [ -4.67916, 56.42362 ], [ -4.67931, 56.42369 ], [ -4.6795, 56.42378 ], [ -4.67957, 56.4238 ], [ -4.67986, 56.42392 ], [ -4.68023, 56.42406 ], [ -4.68046, 56.42414 ], [ -4.68065, 56.4242 ], [ -4.68081, 56.42425 ], [ -4.68094, 56.42429 ], [ -4.68118, 56.42436 ], [ -4.68152, 56.42445 ], [ -4.68168, 56.42449 ], [ -4.68181, 56.42452 ], [ -4.68211, 56.4246 ], [ -4.68217, 56.42461 ], [ -4.6827, 56.42474 ], [ -4.68314, 56.42485 ], [ -4.6836, 56.42496 ], [ -4.6839, 56.42503 ], [ -4.68398, 56.42505 ], [ -4.68479, 56.42525 ], [ -4.68658, 56.42568 ], [ -4.68711, 56.42581 ], [ -4.68787, 56.426 ], [ -4.68968, 56.42645 ], [ -4.69063, 56.42668 ], [ -4.69157, 56.42692 ], [ -4.69222, 56.4271 ], [ -4.69275, 56.42724 ], [ -4.69276, 56.42724 ], [ -4.69347, 56.42742 ], [ -4.69423, 56.42761 ], [ -4.69451, 56.42768 ], [ -4.69497, 56.4278 ], [ -4.6951, 56.42783 ], [ -4.69512, 56.42784 ], [ -4.69539, 56.42792 ], [ -4.69563, 56.42799 ], [ -4.69588, 56.42809 ], [ -4.69595, 56.42812 ], [ -4.69631, 56.42826 ], [ -4.69674, 56.42843 ], [ -4.69696, 56.42852 ], [ -4.69743, 56.4287 ], [ -4.6977, 56.42881 ], [ -4.6978, 56.42885 ], [ -4.69796, 56.42893 ], [ -4.6984, 56.42915 ], [ -4.69842, 56.42916 ], [ -4.69853, 56.42921 ], [ -4.69878, 56.42932 ], [ -4.69911, 56.42945 ], [ -4.69959, 56.42963 ], [ -4.69977, 56.42969 ], [ -4.70041, 56.42992 ], [ -4.70045, 56.42993 ], [ -4.70109, 56.43016 ], [ -4.70119, 56.43019 ], [ -4.70151, 56.4303 ], [ -4.70156, 56.43032 ], [ -4.70176, 56.4304 ], [ -4.70177, 56.43041 ], [ -4.70188, 56.43046 ], [ -4.70199, 56.43053 ], [ -4.70215, 56.43066 ], [ -4.70246, 56.43091 ], [ -4.70255, 56.43098 ], [ -4.70264, 56.43106 ], [ -4.70282, 56.43118 ], [ -4.70308, 56.43134 ], [ -4.70325, 56.43142 ], [ -4.70335, 56.43147 ], [ -4.70339, 56.43149 ], [ -4.70353, 56.43155 ], [ -4.70358, 56.43157 ], [ -4.70375, 56.43164 ], [ -4.70404, 56.43174 ], [ -4.70437, 56.43185 ], [ -4.7044, 56.43186 ], [ -4.70447, 56.43189 ], [ -4.70452, 56.4319 ], [ -4.70466, 56.43197 ], [ -4.70472, 56.432 ], [ -4.70483, 56.43205 ], [ -4.70511, 56.43223 ], [ -4.70515, 56.43226 ], [ -4.70552, 56.43249 ], [ -4.70553, 56.4325 ], [ -4.70558, 56.43254 ], [ -4.70573, 56.43264 ], [ -4.70574, 56.43264 ], [ -4.70594, 56.43278 ], [ -4.70656, 56.4332 ], [ -4.70661, 56.43323 ], [ -4.70662, 56.43323 ], [ -4.70719, 56.43361 ], [ -4.70724, 56.43365 ], [ -4.70771, 56.43395 ], [ -4.70793, 56.4341 ], [ -4.70853, 56.43448 ], [ -4.70858, 56.43452 ], [ -4.70895, 56.43476 ], [ -4.70918, 56.4349 ], [ -4.70958, 56.43517 ], [ -4.70965, 56.43521 ], [ -4.70985, 56.43534 ], [ -4.70996, 56.43541 ], [ -4.71017, 56.43557 ], [ -4.71023, 56.43561 ], [ -4.71036, 56.43571 ], [ -4.71049, 56.43581 ], [ -4.71065, 56.43594 ], [ -4.71077, 56.43605 ], [ -4.71086, 56.43613 ], [ -4.71094, 56.43621 ], [ -4.71108, 56.43635 ], [ -4.71113, 56.4364 ], [ -4.71134, 56.4366 ], [ -4.71187, 56.43711 ], [ -4.71195, 56.43719 ], [ -4.71217, 56.43742 ], [ -4.71256, 56.43779 ], [ -4.71259, 56.43782 ], [ -4.71282, 56.43804 ], [ -4.7129, 56.4381 ], [ -4.71295, 56.43813 ], [ -4.71299, 56.43816 ], [ -4.71306, 56.4382 ], [ -4.71312, 56.43822 ], [ -4.71319, 56.43824 ], [ -4.7135, 56.43832 ], [ -4.71414, 56.43847 ], [ -4.71433, 56.43851 ], [ -4.71443, 56.43854 ], [ -4.71459, 56.43857 ], [ -4.71474, 56.4386 ], [ -4.71483, 56.43862 ], [ -4.71505, 56.43865 ], [ -4.71527, 56.43868 ], [ -4.71568, 56.43875 ], [ -4.71583, 56.43877 ], [ -4.71644, 56.43886 ], [ -4.71656, 56.43889 ], [ -4.71678, 56.43895 ], [ -4.71695, 56.439 ], [ -4.71718, 56.43906 ], [ -4.7173, 56.43911 ], [ -4.71743, 56.43917 ], [ -4.71757, 56.43923 ], [ -4.71765, 56.43928 ], [ -4.71775, 56.43934 ], [ -4.71786, 56.43942 ], [ -4.71788, 56.43944 ], [ -4.71793, 56.43948 ], [ -4.71798, 56.43953 ], [ -4.71803, 56.43959 ], [ -4.71806, 56.43964 ], [ -4.71809, 56.43971 ], [ -4.71811, 56.43975 ], [ -4.71812, 56.4398 ], [ -4.71812, 56.43985 ], [ -4.71812, 56.4399 ], [ -4.71812, 56.43995 ], [ -4.71812, 56.43996 ], [ -4.71811, 56.44001 ], [ -4.71808, 56.44007 ], [ -4.71805, 56.44012 ], [ -4.71799, 56.44021 ], [ -4.71792, 56.44028 ], [ -4.71783, 56.44035 ], [ -4.71774, 56.44041 ], [ -4.7176, 56.44048 ], [ -4.71746, 56.44054 ], [ -4.71745, 56.44055 ], [ -4.7173, 56.44059 ], [ -4.71713, 56.44062 ], [ -4.71651, 56.44075 ], [ -4.71475, 56.44107 ], [ -4.71413, 56.44118 ], [ -4.71367, 56.44126 ], [ -4.71341, 56.44132 ], [ -4.71318, 56.44139 ], [ -4.71303, 56.44144 ], [ -4.71291, 56.44148 ], [ -4.71275, 56.44154 ], [ -4.71254, 56.44164 ], [ -4.7123, 56.44177 ], [ -4.71208, 56.44191 ], [ -4.71191, 56.44204 ], [ -4.71181, 56.44214 ], [ -4.71176, 56.44219 ], [ -4.71164, 56.44232 ], [ -4.71154, 56.44247 ], [ -4.71153, 56.44248 ], [ -4.71145, 56.44264 ], [ -4.71135, 56.44281 ], [ -4.71129, 56.44292 ], [ -4.71107, 56.44333 ], [ -4.71099, 56.44347 ], [ -4.71092, 56.4436 ], [ -4.71089, 56.44367 ], [ -4.71086, 56.44377 ], [ -4.71083, 56.44385 ], [ -4.71082, 56.44391 ], [ -4.7108, 56.444 ], [ -4.7108, 56.44407 ], [ -4.71081, 56.44415 ], [ -4.71081, 56.44421 ], [ -4.71084, 56.44448 ], [ -4.71093, 56.44503 ], [ -4.71094, 56.4451 ], [ -4.71095, 56.4452 ], [ -4.71095, 56.44528 ], [ -4.71095, 56.44529 ], [ -4.71095, 56.44541 ], [ -4.71094, 56.44546 ], [ -4.71093, 56.44551 ], [ -4.7109, 56.44566 ], [ -4.71086, 56.44577 ], [ -4.71084, 56.44582 ], [ -4.7108, 56.4459 ], [ -4.71074, 56.44599 ], [ -4.71065, 56.44612 ], [ -4.71048, 56.4463 ], [ -4.71033, 56.44648 ], [ -4.71026, 56.44656 ], [ -4.71012, 56.44672 ], [ -4.71006, 56.44681 ], [ -4.70999, 56.4469 ], [ -4.70991, 56.44701 ], [ -4.70983, 56.44714 ], [ -4.70982, 56.44716 ], [ -4.70974, 56.4473 ], [ -4.70973, 56.44731 ], [ -4.70963, 56.44754 ], [ -4.70959, 56.44766 ], [ -4.70955, 56.44776 ], [ -4.70953, 56.44784 ], [ -4.7095, 56.44794 ], [ -4.70948, 56.44802 ], [ -4.70947, 56.44807 ], [ -4.70946, 56.4482 ], [ -4.70945, 56.44823 ], [ -4.70943, 56.4484 ], [ -4.70943, 56.4487 ], [ -4.70944, 56.44874 ], [ -4.70946, 56.4489 ], [ -4.70946, 56.44892 ], [ -4.7095, 56.44912 ], [ -4.70955, 56.44927 ], [ -4.70957, 56.44934 ], [ -4.70961, 56.44945 ], [ -4.70963, 56.44951 ], [ -4.70968, 56.44962 ], [ -4.70976, 56.4498 ], [ -4.7098, 56.44989 ], [ -4.70996, 56.45029 ], [ -4.70998, 56.45032 ], [ -4.71006, 56.4505 ], [ -4.71019, 56.45078 ], [ -4.71077, 56.45207 ], [ -4.71092, 56.4524 ], [ -4.71139, 56.45344 ], [ -4.71148, 56.45364 ], [ -4.71163, 56.45395 ], [ -4.71189, 56.45452 ], [ -4.71195, 56.45469 ], [ -4.71197, 56.45472 ], [ -4.712, 56.45484 ], [ -4.71202, 56.45492 ], [ -4.71203, 56.45501 ], [ -4.71203, 56.45504 ], [ -4.71204, 56.45512 ], [ -4.71203, 56.45521 ], [ -4.71202, 56.45522 ], [ -4.71201, 56.45535 ], [ -4.71197, 56.45556 ], [ -4.71196, 56.45564 ], [ -4.71194, 56.45581 ], [ -4.71194, 56.45588 ], [ -4.71194, 56.45598 ], [ -4.71196, 56.45611 ], [ -4.71198, 56.45622 ], [ -4.71204, 56.45638 ], [ -4.71207, 56.45646 ], [ -4.71212, 56.45656 ], [ -4.71231, 56.45692 ], [ -4.71276, 56.45778 ], [ -4.71303, 56.4583 ], [ -4.71311, 56.45846 ], [ -4.71328, 56.45877 ], [ -4.7135, 56.45917 ], [ -4.71363, 56.45936 ], [ -4.71373, 56.4595 ], [ -4.71379, 56.4596 ], [ -4.71385, 56.45967 ], [ -4.71402, 56.45989 ], [ -4.71425, 56.46016 ], [ -4.71439, 56.46032 ], [ -4.71451, 56.46046 ], [ -4.7147, 56.46065 ], [ -4.71477, 56.46073 ], [ -4.71502, 56.46096 ], [ -4.71527, 56.46119 ], [ -4.71535, 56.46126 ], [ -4.71588, 56.46167 ], [ -4.71612, 56.46185 ], [ -4.71633, 56.462 ], [ -4.71642, 56.46206 ], [ -4.71656, 56.46215 ], [ -4.71663, 56.4622 ], [ -4.71682, 56.46233 ], [ -4.71683, 56.46234 ], [ -4.71741, 56.46275 ], [ -4.71786, 56.46305 ], [ -4.71863, 56.46359 ], [ -4.71925, 56.46402 ], [ -4.71956, 56.46424 ], [ -4.71982, 56.4644 ], [ -4.71988, 56.46444 ], [ -4.72006, 56.46455 ], [ -4.7201, 56.46458 ], [ -4.72018, 56.46462 ], [ -4.72032, 56.46469 ], [ -4.72056, 56.4648 ], [ -4.72059, 56.46482 ], [ -4.72063, 56.46483 ], [ -4.72078, 56.46489 ], [ -4.72094, 56.46494 ], [ -4.72114, 56.465 ], [ -4.72173, 56.46517 ], [ -4.72221, 56.4653 ], [ -4.72261, 56.4654 ], [ -4.72335, 56.4656 ], [ -4.72367, 56.46568 ], [ -4.72399, 56.46577 ], [ -4.72413, 56.46582 ], [ -4.7243, 56.46588 ], [ -4.72434, 56.4659 ], [ -4.72444, 56.46594 ], [ -4.72456, 56.46601 ], [ -4.72458, 56.46602 ], [ -4.72471, 56.46609 ], [ -4.72479, 56.46614 ], [ -4.7248, 56.46615 ], [ -4.7249, 56.46623 ], [ -4.72498, 56.4663 ], [ -4.72509, 56.46645 ], [ -4.7251, 56.46647 ], [ -4.72515, 56.46654 ], [ -4.72519, 56.46662 ], [ -4.7252, 56.46664 ], [ -4.72522, 56.4667 ], [ -4.72525, 56.4668 ], [ -4.72525, 56.46682 ], [ -4.72526, 56.4669 ], [ -4.72526, 56.46701 ], [ -4.72523, 56.46716 ], [ -4.72522, 56.46717 ], [ -4.72518, 56.46728 ], [ -4.72514, 56.46735 ], [ -4.72506, 56.46747 ], [ -4.72503, 56.46752 ], [ -4.72484, 56.46776 ], [ -4.72472, 56.46796 ], [ -4.72465, 56.46812 ], [ -4.7246, 56.46828 ], [ -4.72458, 56.46838 ], [ -4.72458, 56.4684 ], [ -4.72457, 56.46853 ], [ -4.72458, 56.46865 ], [ -4.7246, 56.46873 ], [ -4.72461, 56.46873 ], [ -4.72464, 56.46883 ], [ -4.72469, 56.46892 ], [ -4.72476, 56.46905 ], [ -4.72478, 56.46908 ], [ -4.72491, 56.46928 ], [ -4.725, 56.46942 ], [ -4.72511, 56.46959 ], [ -4.72518, 56.4697 ], [ -4.72533, 56.46993 ], [ -4.72545, 56.47011 ], [ -4.72564, 56.47044 ], [ -4.72586, 56.4708 ], [ -4.72613, 56.4713 ], [ -4.72642, 56.47181 ], [ -4.72652, 56.47196 ], [ -4.72674, 56.47235 ], [ -4.72707, 56.47283 ], [ -4.72752, 56.47337 ], [ -4.728, 56.47391 ], [ -4.72887, 56.4749 ], [ -4.72942, 56.47552 ], [ -4.7299, 56.47607 ], [ -4.72998, 56.47617 ], [ -4.73073, 56.47703 ], [ -4.73107, 56.47743 ], [ -4.73123, 56.4776 ], [ -4.73139, 56.47777 ], [ -4.73143, 56.47781 ], [ -4.73166, 56.47801 ], [ -4.73177, 56.4781 ], [ -4.73196, 56.47825 ], [ -4.73222, 56.47843 ], [ -4.73266, 56.47871 ], [ -4.73285, 56.47883 ], [ -4.73307, 56.47897 ], [ -4.73331, 56.47913 ], [ -4.73357, 56.47934 ], [ -4.73377, 56.47952 ], [ -4.73399, 56.47974 ], [ -4.73426, 56.48004 ], [ -4.73496, 56.48077 ], [ -4.73502, 56.48084 ], [ -4.73527, 56.4811 ], [ -4.73534, 56.48116 ], [ -4.73552, 56.48131 ], [ -4.73566, 56.48143 ], [ -4.73587, 56.48159 ], [ -4.73617, 56.48181 ], [ -4.73629, 56.48189 ], [ -4.73691, 56.4823 ], [ -4.73783, 56.48293 ], [ -4.73861, 56.48346 ], [ -4.73897, 56.4837 ], [ -4.73919, 56.48385 ], [ -4.7396, 56.48416 ], [ -4.73987, 56.48437 ], [ -4.74013, 56.4846 ], [ -4.74044, 56.48489 ], [ -4.7406, 56.48504 ], [ -4.74107, 56.48548 ], [ -4.7416, 56.48597 ], [ -4.74165, 56.48601 ], [ -4.74195, 56.48627 ], [ -4.74204, 56.48635 ], [ -4.74233, 56.48656 ], [ -4.7424, 56.48662 ], [ -4.74249, 56.48668 ], [ -4.74253, 56.48671 ], [ -4.74274, 56.48684 ], [ -4.74278, 56.48688 ], [ -4.74319, 56.48714 ], [ -4.74337, 56.48726 ], [ -4.74357, 56.48739 ], [ -4.74396, 56.48763 ], [ -4.74422, 56.4878 ], [ -4.74443, 56.48794 ], [ -4.74463, 56.48808 ], [ -4.7448, 56.48819 ], [ -4.74506, 56.48835 ], [ -4.7451, 56.48838 ], [ -4.74528, 56.48851 ], [ -4.74557, 56.48871 ], [ -4.74566, 56.48878 ], [ -4.74574, 56.48883 ], [ -4.74646, 56.48937 ], [ -4.74654, 56.48943 ], [ -4.74739, 56.4901 ], [ -4.74774, 56.49036 ], [ -4.74853, 56.49094 ], [ -4.74854, 56.49095 ], [ -4.74888, 56.49121 ], [ -4.74989, 56.49197 ], [ -4.7501, 56.49214 ], [ -4.75063, 56.49253 ], [ -4.75104, 56.49284 ], [ -4.75115, 56.49293 ], [ -4.75142, 56.49313 ], [ -4.75187, 56.49345 ], [ -4.75232, 56.49376 ], [ -4.75281, 56.49406 ], [ -4.7534, 56.49444 ], [ -4.75446, 56.49513 ], [ -4.75466, 56.49526 ], [ -4.75507, 56.49555 ], [ -4.75511, 56.49557 ], [ -4.75568, 56.49595 ], [ -4.75586, 56.49608 ], [ -4.75653, 56.49651 ], [ -4.75734, 56.49702 ], [ -4.75762, 56.49721 ], [ -4.75766, 56.49724 ], [ -4.75787, 56.49737 ], [ -4.75789, 56.49739 ], [ -4.75829, 56.49765 ], [ -4.7585, 56.49778 ], [ -4.75896, 56.49808 ], [ -4.75916, 56.49821 ], [ -4.75956, 56.49847 ], [ -4.7602, 56.49888 ], [ -4.76031, 56.49894 ], [ -4.76062, 56.49915 ], [ -4.76084, 56.49929 ], [ -4.76117, 56.49951 ], [ -4.76126, 56.49956 ], [ -4.76147, 56.4997 ], [ -4.76168, 56.49983 ], [ -4.76189, 56.49997 ], [ -4.76231, 56.50025 ], [ -4.76252, 56.50038 ], [ -4.76284, 56.50059 ], [ -4.76364, 56.50111 ], [ -4.76421, 56.50148 ], [ -4.76442, 56.50162 ], [ -4.76472, 56.50181 ], [ -4.76484, 56.50189 ], [ -4.76527, 56.50216 ], [ -4.76539, 56.50224 ], [ -4.76548, 56.5023 ], [ -4.7659, 56.50258 ], [ -4.76611, 56.50271 ], [ -4.76621, 56.50278 ], [ -4.7665, 56.50299 ], [ -4.76651, 56.503 ], [ -4.76667, 56.50314 ], [ -4.76681, 56.50328 ], [ -4.7669, 56.50337 ], [ -4.76712, 56.50361 ], [ -4.7672, 56.50373 ], [ -4.76725, 56.5038 ], [ -4.76736, 56.50396 ], [ -4.76736, 56.50397 ], [ -4.76745, 56.50414 ], [ -4.76751, 56.50427 ], [ -4.76758, 56.50442 ], [ -4.7676, 56.50449 ], [ -4.76763, 56.50457 ], [ -4.76765, 56.50467 ], [ -4.76766, 56.5047 ], [ -4.76771, 56.50486 ], [ -4.76774, 56.50502 ], [ -4.76777, 56.50518 ], [ -4.76782, 56.50538 ], [ -4.76786, 56.50556 ], [ -4.7679, 56.50574 ], [ -4.76794, 56.50587 ], [ -4.76795, 56.50591 ], [ -4.76799, 56.50609 ], [ -4.76803, 56.50627 ], [ -4.76804, 56.50633 ], [ -4.76807, 56.50645 ], [ -4.76811, 56.50662 ], [ -4.76818, 56.50699 ], [ -4.76821, 56.50714 ], [ -4.76827, 56.50756 ], [ -4.76825, 56.50806 ], [ -4.76814, 56.51027 ], [ -4.76812, 56.51077 ], [ -4.76811, 56.51095 ], [ -4.76809, 56.51117 ], [ -4.76808, 56.51145 ], [ -4.76806, 56.51179 ], [ -4.76802, 56.51253 ], [ -4.76802, 56.51258 ], [ -4.76803, 56.51282 ], [ -4.76805, 56.5131 ], [ -4.76808, 56.51324 ], [ -4.76811, 56.5134 ], [ -4.76811, 56.51342 ], [ -4.76819, 56.51374 ], [ -4.76821, 56.51378 ], [ -4.76825, 56.51391 ], [ -4.76831, 56.51413 ], [ -4.76838, 56.51435 ], [ -4.76845, 56.51461 ], [ -4.76846, 56.51467 ], [ -4.76855, 56.51502 ], [ -4.7686, 56.5152 ], [ -4.76866, 56.51545 ], [ -4.76871, 56.5156 ], [ -4.76876, 56.51582 ], [ -4.7688, 56.51598 ], [ -4.76882, 56.51609 ], [ -4.76884, 56.51625 ], [ -4.76885, 56.51642 ], [ -4.76885, 56.51645 ], [ -4.76886, 56.51679 ], [ -4.76885, 56.51691 ], [ -4.76884, 56.51697 ], [ -4.76882, 56.51712 ], [ -4.76881, 56.51723 ], [ -4.7688, 56.51725 ], [ -4.76877, 56.51741 ], [ -4.76873, 56.51759 ], [ -4.76872, 56.51762 ], [ -4.76864, 56.51786 ], [ -4.7685, 56.51818 ], [ -4.76841, 56.51836 ], [ -4.76835, 56.51848 ], [ -4.76814, 56.51886 ], [ -4.76794, 56.51922 ], [ -4.76782, 56.51944 ], [ -4.76779, 56.5195 ], [ -4.7676, 56.51984 ], [ -4.76747, 56.52012 ], [ -4.76737, 56.52036 ], [ -4.76732, 56.52052 ], [ -4.76727, 56.5207 ], [ -4.76718, 56.52109 ], [ -4.76715, 56.52127 ], [ -4.76712, 56.52156 ], [ -4.76709, 56.52201 ], [ -4.76708, 56.5223 ], [ -4.76706, 56.52274 ], [ -4.76705, 56.52313 ], [ -4.76704, 56.5232 ], [ -4.76703, 56.52379 ], [ -4.76701, 56.52427 ], [ -4.767, 56.52468 ], [ -4.76698, 56.52529 ], [ -4.76697, 56.52536 ], [ -4.76696, 56.52577 ], [ -4.76695, 56.52606 ], [ -4.76694, 56.52657 ], [ -4.76692, 56.52694 ], [ -4.76689, 56.52788 ], [ -4.76686, 56.52839 ], [ -4.76683, 56.52918 ], [ -4.76681, 56.53047 ], [ -4.76681, 56.53083 ], [ -4.76678, 56.53118 ], [ -4.76675, 56.53167 ], [ -4.76674, 56.53187 ], [ -4.76674, 56.53205 ], [ -4.76673, 56.53236 ], [ -4.76672, 56.53248 ], [ -4.76671, 56.53301 ], [ -4.7667, 56.53338 ], [ -4.76669, 56.53356 ], [ -4.76669, 56.53359 ], [ -4.76666, 56.53428 ], [ -4.76666, 56.53435 ], [ -4.76665, 56.53484 ], [ -4.76663, 56.5352 ], [ -4.76662, 56.53546 ], [ -4.76661, 56.53567 ], [ -4.7666, 56.53599 ], [ -4.76658, 56.53651 ], [ -4.76657, 56.53681 ], [ -4.76653, 56.53731 ], [ -4.76648, 56.53765 ], [ -4.76644, 56.53781 ], [ -4.76638, 56.53807 ], [ -4.76627, 56.53845 ], [ -4.76622, 56.53858 ], [ -4.76613, 56.53882 ], [ -4.76603, 56.53904 ], [ -4.7659, 56.53929 ], [ -4.76569, 56.53968 ], [ -4.76542, 56.54008 ], [ -4.76526, 56.5403 ], [ -4.76515, 56.54045 ], [ -4.76496, 56.54067 ], [ -4.76486, 56.54079 ], [ -4.76481, 56.54085 ], [ -4.76472, 56.54095 ], [ -4.76468, 56.54099 ], [ -4.76438, 56.5413 ], [ -4.76402, 56.54163 ], [ -4.76394, 56.5417 ], [ -4.76337, 56.54221 ], [ -4.76255, 56.54295 ], [ -4.76233, 56.54313 ], [ -4.76215, 56.54329 ], [ -4.762, 56.54343 ], [ -4.76173, 56.54367 ], [ -4.76091, 56.54438 ], [ -4.76045, 56.54479 ], [ -4.76028, 56.54494 ], [ -4.7601, 56.54509 ], [ -4.759, 56.54606 ], [ -4.75798, 56.54697 ], [ -4.75701, 56.54784 ], [ -4.75694, 56.5479 ], [ -4.75684, 56.54799 ], [ -4.75649, 56.54829 ], [ -4.75584, 56.54884 ], [ -4.75567, 56.54898 ], [ -4.75548, 56.54912 ], [ -4.75529, 56.54926 ], [ -4.75503, 56.54943 ], [ -4.75478, 56.54958 ], [ -4.75406, 56.54998 ], [ -4.75334, 56.55035 ], [ -4.7531, 56.55046 ], [ -4.7531, 56.55047 ], [ -4.75248, 56.55078 ], [ -4.75209, 56.551 ], [ -4.75141, 56.55145 ], [ -4.75114, 56.55166 ], [ -4.75088, 56.55187 ], [ -4.75062, 56.55209 ], [ -4.75031, 56.55241 ], [ -4.75018, 56.55255 ], [ -4.75015, 56.55259 ], [ -4.74998, 56.5528 ], [ -4.74989, 56.55292 ], [ -4.74978, 56.55307 ], [ -4.74977, 56.55309 ], [ -4.74969, 56.55321 ], [ -4.74966, 56.55326 ], [ -4.74955, 56.55344 ], [ -4.74936, 56.55381 ], [ -4.74929, 56.55395 ], [ -4.74922, 56.55411 ], [ -4.74897, 56.55465 ], [ -4.74894, 56.55471 ], [ -4.74884, 56.55493 ], [ -4.7484, 56.5559 ], [ -4.74826, 56.55618 ], [ -4.74791, 56.55699 ], [ -4.74775, 56.55733 ], [ -4.74749, 56.55792 ], [ -4.74734, 56.55824 ], [ -4.74725, 56.55845 ], [ -4.74719, 56.55859 ], [ -4.74703, 56.55893 ], [ -4.7469, 56.55922 ], [ -4.74679, 56.55946 ], [ -4.74675, 56.55956 ], [ -4.74653, 56.56005 ], [ -4.74632, 56.56051 ], [ -4.7463, 56.56056 ], [ -4.74616, 56.56085 ], [ -4.74608, 56.56102 ], [ -4.74602, 56.56119 ], [ -4.74581, 56.56164 ], [ -4.74564, 56.56202 ], [ -4.74562, 56.56208 ], [ -4.74556, 56.56221 ], [ -4.74546, 56.5624 ], [ -4.74534, 56.56264 ], [ -4.74526, 56.56277 ], [ -4.74516, 56.56293 ], [ -4.74495, 56.5632 ], [ -4.74468, 56.5635 ], [ -4.7443, 56.56384 ], [ -4.7442, 56.56394 ], [ -4.74406, 56.56404 ], [ -4.74393, 56.56414 ], [ -4.74389, 56.56417 ], [ -4.74374, 56.56428 ], [ -4.7437, 56.56431 ], [ -4.74351, 56.56444 ], [ -4.74331, 56.56455 ], [ -4.74325, 56.56459 ], [ -4.74296, 56.56476 ], [ -4.74286, 56.56481 ], [ -4.74281, 56.56484 ], [ -4.74247, 56.56501 ], [ -4.74211, 56.56518 ], [ -4.74187, 56.56528 ], [ -4.74149, 56.56543 ], [ -4.74086, 56.56565 ], [ -4.7405, 56.56577 ], [ -4.74026, 56.56584 ], [ -4.74021, 56.56586 ], [ -4.73977, 56.56598 ], [ -4.73931, 56.5661 ], [ -4.739, 56.56619 ], [ -4.73875, 56.56629 ], [ -4.73863, 56.56635 ], [ -4.73854, 56.5664 ], [ -4.73852, 56.56641 ], [ -4.73842, 56.56649 ], [ -4.73834, 56.56656 ], [ -4.73826, 56.56665 ], [ -4.73821, 56.56672 ], [ -4.73817, 56.56682 ], [ -4.73816, 56.56691 ], [ -4.73815, 56.56702 ], [ -4.73816, 56.5671 ], [ -4.7382, 56.56719 ], [ -4.73824, 56.56727 ], [ -4.73827, 56.56731 ], [ -4.73831, 56.56737 ], [ -4.73835, 56.56741 ], [ -4.73842, 56.56747 ], [ -4.73849, 56.56753 ], [ -4.73854, 56.56756 ], [ -4.73857, 56.56758 ], [ -4.73877, 56.56769 ], [ -4.73889, 56.56774 ], [ -4.73904, 56.56779 ], [ -4.73918, 56.56783 ], [ -4.73927, 56.56785 ], [ -4.73934, 56.56786 ], [ -4.73946, 56.56788 ], [ -4.73957, 56.56789 ], [ -4.73969, 56.5679 ], [ -4.73976, 56.5679 ], [ -4.73992, 56.5679 ], [ -4.74002, 56.5679 ], [ -4.74017, 56.56789 ], [ -4.7403, 56.56788 ], [ -4.74126, 56.56777 ], [ -4.74143, 56.56774 ], [ -4.74158, 56.56773 ], [ -4.74254, 56.56761 ], [ -4.74301, 56.56755 ], [ -4.74404, 56.56743 ], [ -4.74443, 56.56739 ], [ -4.74467, 56.56736 ], [ -4.74486, 56.56736 ], [ -4.74503, 56.56735 ], [ -4.74523, 56.56735 ], [ -4.74546, 56.56736 ], [ -4.74559, 56.56736 ], [ -4.74575, 56.56738 ], [ -4.74577, 56.56738 ], [ -4.74593, 56.56739 ], [ -4.74606, 56.56741 ], [ -4.74624, 56.56744 ], [ -4.74657, 56.56751 ], [ -4.74681, 56.56756 ], [ -4.7472, 56.56766 ], [ -4.74762, 56.56777 ], [ -4.74823, 56.56793 ], [ -4.74859, 56.56802 ], [ -4.74875, 56.56806 ], [ -4.74894, 56.5681 ], [ -4.74907, 56.56812 ], [ -4.74909, 56.56812 ], [ -4.74925, 56.56815 ], [ -4.74934, 56.56816 ], [ -4.74945, 56.56818 ], [ -4.74955, 56.56819 ], [ -4.74963, 56.56819 ], [ -4.7497, 56.5682 ], [ -4.74976, 56.5682 ], [ -4.74987, 56.56821 ], [ -4.75004, 56.56821 ], [ -4.7503, 56.56821 ], [ -4.75059, 56.56821 ], [ -4.75068, 56.5682 ], [ -4.75079, 56.56819 ], [ -4.75116, 56.56817 ], [ -4.75153, 56.56814 ], [ -4.75165, 56.56813 ], [ -4.75265, 56.56803 ], [ -4.75284, 56.56801 ], [ -4.75294, 56.56801 ], [ -4.75309, 56.568 ], [ -4.75324, 56.568 ], [ -4.75338, 56.568 ], [ -4.75344, 56.56801 ], [ -4.75352, 56.56802 ], [ -4.75365, 56.56803 ], [ -4.75378, 56.56806 ], [ -4.75387, 56.56808 ], [ -4.75394, 56.56809 ], [ -4.75402, 56.56812 ], [ -4.75415, 56.56816 ], [ -4.75423, 56.5682 ], [ -4.75432, 56.56824 ], [ -4.75435, 56.56826 ], [ -4.75439, 56.56827 ], [ -4.75449, 56.56833 ], [ -4.7546, 56.56842 ], [ -4.75465, 56.56847 ], [ -4.7547, 56.56852 ], [ -4.75484, 56.56867 ], [ -4.75523, 56.56922 ], [ -4.75525, 56.56923 ], [ -4.75535, 56.56935 ], [ -4.75542, 56.56943 ], [ -4.7555, 56.5695 ], [ -4.75557, 56.56957 ], [ -4.75559, 56.56959 ], [ -4.75569, 56.56967 ], [ -4.75588, 56.56981 ], [ -4.75603, 56.56991 ], [ -4.75625, 56.57004 ], [ -4.75646, 56.57015 ], [ -4.75664, 56.57023 ], [ -4.75691, 56.57034 ], [ -4.75708, 56.57041 ], [ -4.75769, 56.57066 ], [ -4.75797, 56.57077 ], [ -4.75817, 56.57086 ], [ -4.75824, 56.5709 ], [ -4.75844, 56.57101 ], [ -4.75853, 56.57106 ], [ -4.75859, 56.5711 ], [ -4.75868, 56.57117 ], [ -4.75877, 56.57123 ], [ -4.75885, 56.57129 ], [ -4.75889, 56.57134 ], [ -4.75895, 56.57139 ], [ -4.75898, 56.57142 ], [ -4.75909, 56.57154 ], [ -4.75916, 56.57165 ], [ -4.75921, 56.57173 ], [ -4.75926, 56.5718 ], [ -4.75931, 56.57191 ], [ -4.75936, 56.57203 ], [ -4.7594, 56.57218 ], [ -4.75941, 56.57227 ], [ -4.75941, 56.57244 ], [ -4.75939, 56.5726 ], [ -4.75937, 56.57269 ], [ -4.75935, 56.57272 ], [ -4.75934, 56.57275 ], [ -4.75928, 56.57289 ], [ -4.75906, 56.57331 ], [ -4.75861, 56.57411 ], [ -4.7581, 56.57502 ], [ -4.75781, 56.57554 ], [ -4.75771, 56.57573 ], [ -4.75753, 56.57606 ], [ -4.75734, 56.5764 ], [ -4.75733, 56.57641 ], [ -4.75724, 56.57657 ], [ -4.75719, 56.57667 ], [ -4.75699, 56.57702 ], [ -4.75667, 56.5776 ], [ -4.75659, 56.57775 ], [ -4.75648, 56.57795 ], [ -4.75627, 56.57829 ], [ -4.75621, 56.57838 ], [ -4.75616, 56.57846 ], [ -4.75609, 56.57858 ], [ -4.7559, 56.57883 ], [ -4.7558, 56.57896 ], [ -4.75578, 56.57899 ], [ -4.75548, 56.57937 ], [ -4.75532, 56.57955 ], [ -4.75521, 56.57965 ], [ -4.75511, 56.57977 ], [ -4.75491, 56.57997 ], [ -4.75464, 56.58024 ], [ -4.75452, 56.58035 ], [ -4.75446, 56.5804 ], [ -4.75429, 56.58055 ], [ -4.75402, 56.58077 ], [ -4.75377, 56.58096 ], [ -4.75333, 56.58129 ], [ -4.75283, 56.58164 ], [ -4.75266, 56.58174 ], [ -4.75246, 56.58187 ], [ -4.75171, 56.58237 ], [ -4.75131, 56.58264 ], [ -4.7512, 56.58271 ], [ -4.75099, 56.58285 ], [ -4.75053, 56.58315 ], [ -4.75038, 56.58325 ], [ -4.7498, 56.58363 ], [ -4.74955, 56.58381 ], [ -4.74933, 56.58396 ], [ -4.74928, 56.58399 ], [ -4.7491, 56.58412 ], [ -4.74898, 56.58422 ], [ -4.74876, 56.58439 ], [ -4.74866, 56.58447 ], [ -4.7485, 56.58461 ], [ -4.74841, 56.5847 ], [ -4.74832, 56.58479 ], [ -4.74825, 56.58486 ], [ -4.74799, 56.58513 ], [ -4.74784, 56.5853 ], [ -4.74777, 56.58537 ], [ -4.74768, 56.58551 ], [ -4.74766, 56.58552 ], [ -4.74758, 56.58565 ], [ -4.74756, 56.58567 ], [ -4.74752, 56.58573 ], [ -4.74746, 56.58584 ], [ -4.74741, 56.58592 ], [ -4.7471, 56.58653 ], [ -4.74709, 56.58657 ], [ -4.74683, 56.58716 ], [ -4.7468, 56.58723 ], [ -4.74675, 56.58735 ], [ -4.74627, 56.58852 ], [ -4.746, 56.58916 ], [ -4.74593, 56.58933 ], [ -4.74529, 56.59082 ], [ -4.74526, 56.59091 ], [ -4.74518, 56.59108 ], [ -4.74511, 56.59126 ], [ -4.74496, 56.59161 ], [ -4.74489, 56.59179 ], [ -4.74482, 56.59196 ], [ -4.74481, 56.59199 ], [ -4.74475, 56.59214 ], [ -4.74472, 56.59221 ], [ -4.74468, 56.59231 ], [ -4.74453, 56.59266 ], [ -4.74443, 56.5929 ], [ -4.74427, 56.59328 ], [ -4.74409, 56.59371 ], [ -4.74396, 56.59403 ], [ -4.7438, 56.5944 ], [ -4.74365, 56.59477 ], [ -4.74364, 56.59479 ], [ -4.74358, 56.59494 ], [ -4.74345, 56.59525 ], [ -4.74342, 56.59537 ], [ -4.74338, 56.59559 ], [ -4.74334, 56.59596 ], [ -4.74335, 56.5962 ], [ -4.74338, 56.59644 ], [ -4.74342, 56.59658 ], [ -4.74346, 56.59669 ], [ -4.74355, 56.59692 ], [ -4.74362, 56.59706 ], [ -4.7437, 56.59722 ], [ -4.74381, 56.59742 ], [ -4.74394, 56.5976 ], [ -4.74419, 56.59791 ], [ -4.74429, 56.59802 ], [ -4.74434, 56.59808 ], [ -4.74441, 56.59814 ], [ -4.7445, 56.59823 ], [ -4.74452, 56.59824 ], [ -4.74467, 56.59839 ], [ -4.7449, 56.59857 ], [ -4.74497, 56.59862 ], [ -4.74504, 56.59868 ], [ -4.74516, 56.59876 ], [ -4.74524, 56.59881 ], [ -4.74537, 56.5989 ], [ -4.74544, 56.59894 ], [ -4.74554, 56.599 ], [ -4.74585, 56.59917 ], [ -4.74588, 56.59919 ], [ -4.74604, 56.59927 ], [ -4.74639, 56.59946 ], [ -4.74714, 56.59987 ], [ -4.74729, 56.59995 ], [ -4.74834, 56.60052 ], [ -4.74966, 56.60123 ], [ -4.75005, 56.60144 ], [ -4.75044, 56.60167 ], [ -4.75051, 56.6017 ], [ -4.75089, 56.60193 ], [ -4.75109, 56.60204 ], [ -4.75129, 56.60218 ], [ -4.75184, 56.60253 ], [ -4.75208, 56.60269 ], [ -4.75213, 56.60273 ], [ -4.7522, 56.60278 ], [ -4.75248, 56.60298 ], [ -4.7526, 56.60306 ], [ -4.75267, 56.60311 ], [ -4.75301, 56.60336 ], [ -4.75316, 56.60347 ], [ -4.7533, 56.60359 ], [ -4.75342, 56.60369 ], [ -4.75348, 56.60374 ], [ -4.75391, 56.60411 ], [ -4.75423, 56.60439 ], [ -4.75436, 56.60452 ], [ -4.75447, 56.60463 ], [ -4.75463, 56.60478 ], [ -4.75482, 56.60498 ], [ -4.75513, 56.60529 ], [ -4.75524, 56.6054 ], [ -4.75558, 56.60578 ], [ -4.75578, 56.60603 ], [ -4.75596, 56.60627 ], [ -4.75613, 56.60648 ], [ -4.75628, 56.60666 ], [ -4.75685, 56.60736 ], [ -4.75706, 56.60763 ], [ -4.75728, 56.60791 ], [ -4.75731, 56.60795 ], [ -4.75766, 56.60837 ], [ -4.75794, 56.60873 ], [ -4.75831, 56.60918 ], [ -4.75872, 56.6097 ], [ -4.7589, 56.60993 ], [ -4.75922, 56.61032 ], [ -4.75931, 56.61043 ], [ -4.75965, 56.61085 ], [ -4.75966, 56.61086 ], [ -4.75978, 56.61101 ], [ -4.76029, 56.61167 ], [ -4.76055, 56.612 ], [ -4.7608, 56.61233 ], [ -4.76108, 56.61266 ], [ -4.76114, 56.61274 ], [ -4.7616, 56.61333 ], [ -4.76239, 56.61431 ], [ -4.76289, 56.61493 ], [ -4.76342, 56.61558 ], [ -4.76357, 56.61579 ], [ -4.76367, 56.61592 ], [ -4.7637, 56.61596 ], [ -4.76384, 56.61612 ], [ -4.76423, 56.61662 ], [ -4.76598, 56.61882 ], [ -4.76606, 56.61893 ], [ -4.76615, 56.61908 ], [ -4.76622, 56.61922 ], [ -4.76629, 56.61942 ], [ -4.76632, 56.61956 ], [ -4.76634, 56.61975 ], [ -4.76633, 56.61987 ], [ -4.76632, 56.61998 ], [ -4.7663, 56.62009 ], [ -4.76627, 56.62025 ], [ -4.76622, 56.62039 ], [ -4.76615, 56.62051 ], [ -4.76608, 56.62064 ], [ -4.76591, 56.62094 ], [ -4.76585, 56.62103 ], [ -4.7658, 56.62112 ], [ -4.76562, 56.62144 ], [ -4.76557, 56.62154 ], [ -4.76557, 56.62155 ], [ -4.7655, 56.6217 ], [ -4.76543, 56.62191 ], [ -4.76541, 56.62201 ], [ -4.76539, 56.62217 ], [ -4.76539, 56.62225 ], [ -4.76541, 56.62241 ], [ -4.76543, 56.62255 ], [ -4.76548, 56.62275 ], [ -4.76556, 56.62293 ], [ -4.76562, 56.62308 ], [ -4.76594, 56.62377 ], [ -4.76598, 56.62384 ], [ -4.7662, 56.62432 ], [ -4.76645, 56.62487 ], [ -4.76646, 56.62488 ], [ -4.76655, 56.62506 ], [ -4.76658, 56.62512 ], [ -4.76665, 56.62523 ], [ -4.76669, 56.62529 ], [ -4.76676, 56.6254 ], [ -4.76693, 56.62561 ], [ -4.76713, 56.62584 ], [ -4.76727, 56.62599 ], [ -4.76743, 56.62613 ], [ -4.76753, 56.62623 ], [ -4.76759, 56.62628 ], [ -4.76771, 56.62638 ], [ -4.76781, 56.62646 ], [ -4.76814, 56.62669 ], [ -4.76852, 56.62694 ], [ -4.76867, 56.62703 ], [ -4.76887, 56.62715 ], [ -4.76898, 56.62721 ], [ -4.76912, 56.62729 ], [ -4.76926, 56.62736 ], [ -4.76946, 56.62746 ], [ -4.76973, 56.62758 ], [ -4.76997, 56.62768 ], [ -4.77003, 56.6277 ], [ -4.77042, 56.62784 ], [ -4.77058, 56.6279 ], [ -4.77079, 56.62797 ], [ -4.77094, 56.62801 ], [ -4.77117, 56.62808 ], [ -4.77147, 56.62816 ], [ -4.77178, 56.62824 ], [ -4.77226, 56.62836 ], [ -4.77241, 56.62839 ], [ -4.77277, 56.62847 ], [ -4.77287, 56.6285 ], [ -4.77317, 56.62856 ], [ -4.77515, 56.62899 ], [ -4.77562, 56.6291 ], [ -4.7759, 56.62916 ], [ -4.7762, 56.62923 ], [ -4.77651, 56.6293 ], [ -4.77696, 56.6294 ], [ -4.77742, 56.6295 ], [ -4.77803, 56.62963 ], [ -4.77849, 56.62974 ], [ -4.78072, 56.63024 ], [ -4.78318, 56.63078 ], [ -4.7834, 56.63083 ], [ -4.78537, 56.63127 ], [ -4.78675, 56.63157 ], [ -4.78736, 56.63171 ], [ -4.78827, 56.63191 ], [ -4.78842, 56.63194 ], [ -4.78857, 56.63198 ], [ -4.79088, 56.63248 ], [ -4.79101, 56.63251 ], [ -4.79156, 56.63263 ], [ -4.79164, 56.63265 ], [ -4.79186, 56.6327 ], [ -4.79308, 56.63297 ], [ -4.79311, 56.63297 ], [ -4.79338, 56.63303 ], [ -4.79443, 56.63327 ], [ -4.79594, 56.6336 ], [ -4.79674, 56.63378 ], [ -4.79732, 56.63391 ], [ -4.79743, 56.63393 ], [ -4.79763, 56.63397 ], [ -4.7984, 56.63415 ], [ -4.79876, 56.63423 ], [ -4.79952, 56.63439 ], [ -4.79975, 56.63444 ], [ -4.80087, 56.63468 ], [ -4.80188, 56.63491 ], [ -4.8021, 56.63496 ], [ -4.8033, 56.63522 ], [ -4.80461, 56.63552 ], [ -4.80493, 56.63559 ], [ -4.80521, 56.63565 ], [ -4.80552, 56.63572 ], [ -4.8064, 56.63591 ], [ -4.80643, 56.63592 ], [ -4.80788, 56.63624 ], [ -4.80907, 56.6365 ], [ -4.80975, 56.63668 ], [ -4.80987, 56.63671 ], [ -4.80998, 56.63674 ], [ -4.81034, 56.63683 ], [ -4.81046, 56.63687 ], [ -4.81079, 56.63696 ], [ -4.8114, 56.63715 ], [ -4.81216, 56.63738 ], [ -4.81234, 56.63744 ], [ -4.81262, 56.63754 ], [ -4.81264, 56.63755 ], [ -4.81336, 56.63781 ], [ -4.814, 56.63804 ], [ -4.81562, 56.63867 ], [ -4.81585, 56.63876 ], [ -4.81591, 56.63878 ], [ -4.81732, 56.63933 ], [ -4.81852, 56.6398 ], [ -4.81959, 56.64021 ], [ -4.82052, 56.64057 ], [ -4.82147, 56.64094 ], [ -4.82158, 56.64098 ], [ -4.82289, 56.64148 ], [ -4.82308, 56.64155 ], [ -4.82334, 56.64166 ], [ -4.82357, 56.64175 ], [ -4.82414, 56.64197 ], [ -4.82571, 56.64258 ], [ -4.82601, 56.6427 ], [ -4.82689, 56.64305 ], [ -4.82747, 56.64328 ], [ -4.82762, 56.64333 ], [ -4.82809, 56.64352 ], [ -4.82931, 56.64397 ], [ -4.82966, 56.64411 ], [ -4.82992, 56.64421 ], [ -4.83047, 56.64442 ], [ -4.8312, 56.6447 ], [ -4.83184, 56.64495 ], [ -4.83199, 56.645 ], [ -4.83226, 56.64511 ], [ -4.83252, 56.64521 ], [ -4.83266, 56.64526 ], [ -4.83297, 56.64539 ], [ -4.83401, 56.64579 ], [ -4.83447, 56.64595 ], [ -4.83464, 56.64601 ], [ -4.83488, 56.64608 ], [ -4.83524, 56.64618 ], [ -4.83564, 56.64628 ], [ -4.83589, 56.64634 ], [ -4.83616, 56.6464 ], [ -4.83659, 56.64648 ], [ -4.83683, 56.64652 ], [ -4.83703, 56.64654 ], [ -4.8374, 56.64659 ], [ -4.83779, 56.64663 ], [ -4.83807, 56.64665 ], [ -4.83857, 56.64668 ], [ -4.83887, 56.64669 ], [ -4.83914, 56.6467 ], [ -4.83938, 56.6467 ], [ -4.83947, 56.6467 ], [ -4.83972, 56.64671 ], [ -4.84035, 56.64671 ], [ -4.84036, 56.64671 ], [ -4.84073, 56.64673 ], [ -4.84091, 56.64674 ], [ -4.84104, 56.64675 ], [ -4.84121, 56.64676 ], [ -4.84135, 56.64678 ], [ -4.84172, 56.64684 ], [ -4.84203, 56.6469 ], [ -4.84228, 56.64696 ], [ -4.84273, 56.6471 ], [ -4.84289, 56.64716 ], [ -4.84301, 56.6472 ], [ -4.84317, 56.64727 ], [ -4.84339, 56.64737 ], [ -4.84358, 56.64747 ], [ -4.8438, 56.6476 ], [ -4.84415, 56.64783 ], [ -4.84506, 56.64846 ], [ -4.84566, 56.64886 ], [ -4.8466, 56.64951 ], [ -4.84685, 56.64967 ], [ -4.84712, 56.64984 ], [ -4.84729, 56.64993 ], [ -4.84739, 56.64999 ], [ -4.84752, 56.65006 ], [ -4.84767, 56.65014 ], [ -4.84776, 56.65018 ], [ -4.84817, 56.65038 ], [ -4.84826, 56.65042 ], [ -4.84839, 56.65047 ], [ -4.84852, 56.65052 ], [ -4.84879, 56.65062 ], [ -4.84885, 56.65065 ], [ -4.84907, 56.65072 ], [ -4.84927, 56.65079 ], [ -4.84935, 56.65081 ], [ -4.84964, 56.6509 ], [ -4.84975, 56.65093 ], [ -4.84993, 56.65098 ], [ -4.85022, 56.65106 ], [ -4.85041, 56.65111 ], [ -4.85051, 56.65114 ], [ -4.8511, 56.65129 ], [ -4.8514, 56.65137 ], [ -4.85165, 56.65144 ], [ -4.85169, 56.65145 ], [ -4.85199, 56.65153 ], [ -4.85287, 56.65177 ], [ -4.85353, 56.65194 ], [ -4.85375, 56.652 ], [ -4.85434, 56.65216 ], [ -4.85464, 56.65224 ], [ -4.85552, 56.65247 ], [ -4.85558, 56.65249 ], [ -4.85582, 56.65255 ], [ -4.85611, 56.65263 ], [ -4.85699, 56.65286 ], [ -4.85729, 56.65294 ], [ -4.85787, 56.6531 ], [ -4.85817, 56.65318 ], [ -4.8584, 56.65324 ], [ -4.85876, 56.65334 ], [ -4.85996, 56.65366 ], [ -4.86141, 56.65404 ], [ -4.86211, 56.65423 ], [ -4.86318, 56.65452 ], [ -4.86326, 56.65454 ], [ -4.86348, 56.65459 ], [ -4.86584, 56.65522 ], [ -4.86585, 56.65522 ], [ -4.86613, 56.6553 ], [ -4.86699, 56.65553 ], [ -4.86731, 56.65561 ], [ -4.86751, 56.65567 ], [ -4.86799, 56.6558 ], [ -4.86819, 56.65585 ], [ -4.86848, 56.65593 ], [ -4.86854, 56.65594 ], [ -4.86962, 56.65623 ], [ -4.86996, 56.65631 ], [ -4.87027, 56.65638 ], [ -4.8706, 56.65644 ], [ -4.87082, 56.65648 ], [ -4.87105, 56.65651 ], [ -4.87121, 56.65652 ], [ -4.87131, 56.65653 ], [ -4.87154, 56.65655 ], [ -4.87157, 56.65655 ], [ -4.87181, 56.65656 ], [ -4.87212, 56.65657 ], [ -4.87238, 56.65657 ], [ -4.87267, 56.65657 ], [ -4.87291, 56.65655 ], [ -4.87372, 56.65651 ], [ -4.87401, 56.6565 ], [ -4.87433, 56.65649 ], [ -4.87465, 56.65648 ], [ -4.87506, 56.65649 ], [ -4.87539, 56.65651 ], [ -4.87572, 56.65655 ], [ -4.87608, 56.6566 ], [ -4.87643, 56.65666 ], [ -4.87671, 56.65672 ], [ -4.8768, 56.65674 ], [ -4.877, 56.65679 ], [ -4.87712, 56.65682 ], [ -4.8773, 56.65687 ], [ -4.87749, 56.65693 ], [ -4.87783, 56.65706 ], [ -4.87785, 56.65706 ], [ -4.87812, 56.65718 ], [ -4.87831, 56.65727 ], [ -4.87836, 56.65729 ], [ -4.87851, 56.65736 ], [ -4.87894, 56.6576 ], [ -4.87905, 56.65767 ], [ -4.87936, 56.65784 ], [ -4.87944, 56.65789 ], [ -4.87969, 56.658 ], [ -4.87978, 56.65803 ], [ -4.87995, 56.6581 ], [ -4.88013, 56.65817 ], [ -4.88031, 56.65823 ], [ -4.88059, 56.65832 ], [ -4.88089, 56.65841 ], [ -4.88118, 56.65849 ], [ -4.88147, 56.65857 ], [ -4.88176, 56.65866 ], [ -4.88205, 56.65874 ], [ -4.88264, 56.6589 ], [ -4.88332, 56.6591 ], [ -4.88409, 56.65932 ], [ -4.88438, 56.6594 ], [ -4.88554, 56.65973 ], [ -4.88566, 56.65976 ], [ -4.88584, 56.65981 ], [ -4.88613, 56.65989 ], [ -4.88817, 56.66046 ], [ -4.88846, 56.66054 ], [ -4.88865, 56.6606 ], [ -4.88875, 56.66063 ], [ -4.88904, 56.66071 ], [ -4.88962, 56.66088 ], [ -4.88991, 56.66096 ], [ -4.89049, 56.66113 ], [ -4.89078, 56.66121 ], [ -4.89107, 56.66129 ], [ -4.89136, 56.66137 ], [ -4.89154, 56.66143 ], [ -4.89165, 56.66146 ], [ -4.8934, 56.66196 ], [ -4.89398, 56.66212 ], [ -4.89441, 56.66225 ], [ -4.89456, 56.66229 ], [ -4.89514, 56.66245 ], [ -4.89572, 56.66262 ], [ -4.8963, 56.66278 ], [ -4.89688, 56.66295 ], [ -4.89717, 56.66303 ], [ -4.89776, 56.66319 ], [ -4.89805, 56.66328 ], [ -4.89834, 56.66336 ], [ -4.89863, 56.66344 ], [ -4.89892, 56.66352 ], [ -4.899, 56.66355 ], [ -4.8995, 56.66369 ], [ -4.89979, 56.66377 ], [ -4.90008, 56.66385 ], [ -4.90079, 56.66405 ], [ -4.90183, 56.66434 ], [ -4.90206, 56.66441 ], [ -4.9024, 56.66449 ], [ -4.90266, 56.66455 ], [ -4.90284, 56.66459 ], [ -4.90304, 56.66462 ], [ -4.90338, 56.66467 ], [ -4.90366, 56.6647 ], [ -4.90384, 56.66472 ], [ -4.90414, 56.66474 ], [ -4.90471, 56.66474 ], [ -4.90477, 56.66474 ], [ -4.905, 56.66473 ], [ -4.90526, 56.66471 ], [ -4.90551, 56.66468 ], [ -4.9057, 56.66466 ], [ -4.90617, 56.66458 ], [ -4.90644, 56.66452 ], [ -4.90649, 56.66451 ], [ -4.90674, 56.66445 ], [ -4.90685, 56.66442 ], [ -4.90717, 56.66432 ], [ -4.90745, 56.66423 ], [ -4.90779, 56.6641 ], [ -4.90802, 56.66398 ], [ -4.90816, 56.66391 ], [ -4.90836, 56.66379 ], [ -4.90881, 56.6635 ], [ -4.90894, 56.6634 ], [ -4.90933, 56.66312 ], [ -4.90955, 56.66298 ], [ -4.9099, 56.66275 ], [ -4.90997, 56.6627 ], [ -4.91026, 56.66253 ], [ -4.91071, 56.6623 ], [ -4.91109, 56.66214 ], [ -4.91146, 56.662 ], [ -4.91154, 56.66197 ], [ -4.91174, 56.66191 ], [ -4.91243, 56.66171 ], [ -4.91282, 56.66163 ], [ -4.91332, 56.66154 ], [ -4.91381, 56.66148 ], [ -4.91387, 56.66147 ], [ -4.91421, 56.66143 ], [ -4.91452, 56.66141 ], [ -4.91453, 56.66141 ], [ -4.91485, 56.6614 ], [ -4.91502, 56.66139 ], [ -4.9155, 56.66139 ], [ -4.91582, 56.6614 ], [ -4.91583, 56.6614 ], [ -4.91615, 56.66142 ], [ -4.91624, 56.66143 ], [ -4.91647, 56.66145 ], [ -4.91679, 56.66149 ], [ -4.91744, 56.66155 ], [ -4.91755, 56.66156 ], [ -4.91776, 56.66159 ], [ -4.91937, 56.66176 ], [ -4.92033, 56.66185 ], [ -4.92054, 56.66187 ], [ -4.92066, 56.66188 ], [ -4.92226, 56.66206 ], [ -4.92417, 56.66226 ], [ -4.92547, 56.6624 ], [ -4.92638, 56.6625 ], [ -4.92644, 56.66251 ], [ -4.9274, 56.66261 ], [ -4.92804, 56.66268 ], [ -4.92836, 56.66271 ], [ -4.92869, 56.66274 ], [ -4.92898, 56.66278 ], [ -4.92901, 56.66278 ], [ -4.92933, 56.66281 ], [ -4.92997, 56.66288 ], [ -4.93029, 56.66291 ], [ -4.93094, 56.66298 ], [ -4.93126, 56.66301 ], [ -4.93158, 56.66304 ], [ -4.93168, 56.66305 ], [ -4.93415, 56.66331 ], [ -4.93447, 56.66334 ], [ -4.93576, 56.66348 ], [ -4.93608, 56.66351 ], [ -4.93705, 56.66362 ], [ -4.93737, 56.66365 ], [ -4.93865, 56.66378 ], [ -4.93872, 56.66379 ], [ -4.93944, 56.66387 ], [ -4.93976, 56.6639 ], [ -4.9404, 56.66397 ], [ -4.94072, 56.66401 ], [ -4.94105, 56.66404 ], [ -4.94164, 56.6641 ], [ -4.94233, 56.66418 ], [ -4.94362, 56.66431 ], [ -4.94372, 56.66432 ], [ -4.94412, 56.66436 ], [ -4.94437, 56.66438 ], [ -4.94488, 56.66442 ], [ -4.94528, 56.66444 ], [ -4.94566, 56.66444 ], [ -4.94571, 56.66444 ], [ -4.94576, 56.66444 ], [ -4.94621, 56.66443 ], [ -4.9465, 56.66441 ], [ -4.94679, 56.66438 ], [ -4.94697, 56.66437 ], [ -4.94703, 56.66436 ], [ -4.94723, 56.66433 ], [ -4.94728, 56.66432 ], [ -4.94744, 56.6643 ], [ -4.94764, 56.66426 ], [ -4.94785, 56.66423 ], [ -4.94815, 56.66417 ], [ -4.94845, 56.6641 ], [ -4.94851, 56.66408 ], [ -4.94876, 56.66402 ], [ -4.94911, 56.66391 ], [ -4.94942, 56.66382 ], [ -4.9496, 56.66375 ], [ -4.94985, 56.66366 ], [ -4.95039, 56.66347 ], [ -4.95073, 56.66335 ], [ -4.95121, 56.66317 ], [ -4.95152, 56.66305 ], [ -4.95202, 56.66286 ], [ -4.95213, 56.66282 ], [ -4.95269, 56.66262 ], [ -4.95337, 56.66238 ], [ -4.9537, 56.66227 ], [ -4.95387, 56.66222 ], [ -4.95412, 56.66217 ], [ -4.95428, 56.66215 ], [ -4.95445, 56.66213 ], [ -4.9546, 56.66211 ], [ -4.95471, 56.6621 ], [ -4.95498, 56.6621 ], [ -4.9553, 56.66211 ], [ -4.95551, 56.66212 ], [ -4.95572, 56.66215 ], [ -4.9559, 56.66218 ], [ -4.95609, 56.66222 ], [ -4.9562, 56.66225 ], [ -4.95634, 56.66228 ], [ -4.95648, 56.66233 ], [ -4.95649, 56.66233 ], [ -4.95662, 56.66237 ], [ -4.95698, 56.66249 ], [ -4.95705, 56.66252 ], [ -4.9575, 56.66266 ], [ -4.95761, 56.6627 ], [ -4.95796, 56.66281 ], [ -4.95855, 56.663 ], [ -4.95917, 56.66321 ], [ -4.95958, 56.66334 ], [ -4.95965, 56.66337 ], [ -4.96014, 56.66355 ], [ -4.96034, 56.66364 ], [ -4.96038, 56.66366 ], [ -4.96053, 56.66373 ], [ -4.96074, 56.66383 ], [ -4.9609, 56.66391 ], [ -4.96097, 56.66395 ], [ -4.96105, 56.66399 ], [ -4.96122, 56.66405 ], [ -4.96123, 56.66406 ], [ -4.96135, 56.6641 ], [ -4.96154, 56.66414 ], [ -4.96167, 56.66416 ], [ -4.96178, 56.66417 ], [ -4.96184, 56.66417 ], [ -4.96191, 56.66418 ], [ -4.96202, 56.66418 ], [ -4.96218, 56.66417 ], [ -4.9623, 56.66416 ], [ -4.96243, 56.66415 ], [ -4.96249, 56.66414 ], [ -4.96255, 56.66413 ], [ -4.96263, 56.66411 ], [ -4.96271, 56.66408 ], [ -4.96278, 56.66406 ], [ -4.9628, 56.66405 ], [ -4.96287, 56.66402 ], [ -4.96334, 56.66377 ], [ -4.96493, 56.66296 ], [ -4.96496, 56.66295 ], [ -4.96532, 56.66276 ], [ -4.96557, 56.66266 ], [ -4.96577, 56.6626 ], [ -4.9659, 56.66257 ], [ -4.96603, 56.66254 ], [ -4.96627, 56.66252 ], [ -4.96654, 56.66253 ], [ -4.96674, 56.66254 ], [ -4.96689, 56.66255 ], [ -4.96705, 56.66258 ], [ -4.96719, 56.6626 ], [ -4.96734, 56.66265 ], [ -4.96745, 56.66269 ], [ -4.96776, 56.66279 ], [ -4.96826, 56.66299 ], [ -4.96849, 56.66308 ], [ -4.96905, 56.66331 ], [ -4.96965, 56.66356 ], [ -4.97011, 56.66375 ], [ -4.97025, 56.66383 ], [ -4.97038, 56.66391 ], [ -4.97052, 56.66402 ], [ -4.97058, 56.66406 ], [ -4.97069, 56.66419 ], [ -4.97083, 56.66439 ], [ -4.97093, 56.66451 ], [ -4.97094, 56.66451 ], [ -4.97103, 56.66459 ], [ -4.9711, 56.66464 ], [ -4.97117, 56.66468 ], [ -4.97132, 56.66475 ], [ -4.97151, 56.66481 ], [ -4.97167, 56.66485 ], [ -4.97178, 56.66487 ], [ -4.97197, 56.66489 ], [ -4.97226, 56.6649 ], [ -4.97231, 56.6649 ], [ -4.97296, 56.6649 ], [ -4.97297, 56.6649 ], [ -4.97329, 56.6649 ], [ -4.97362, 56.66491 ], [ -4.97365, 56.66491 ], [ -4.97421, 56.66491 ], [ -4.97445, 56.66493 ], [ -4.9746, 56.66494 ], [ -4.9747, 56.66495 ], [ -4.97501, 56.66498 ], [ -4.97525, 56.66503 ], [ -4.97576, 56.66516 ], [ -4.97663, 56.66539 ], [ -4.97707, 56.6655 ], [ -4.97719, 56.66552 ], [ -4.97736, 56.66554 ], [ -4.97748, 56.66555 ], [ -4.97758, 56.66555 ], [ -4.97772, 56.66555 ], [ -4.97785, 56.66554 ], [ -4.97805, 56.66551 ], [ -4.97833, 56.66544 ], [ -4.97861, 56.66537 ], [ -4.97874, 56.66536 ], [ -4.97897, 56.66534 ], [ -4.97922, 56.66534 ], [ -4.97926, 56.66534 ], [ -4.97951, 56.66536 ], [ -4.97981, 56.66541 ], [ -4.98023, 56.66548 ], [ -4.98048, 56.66553 ], [ -4.98062, 56.66555 ], [ -4.98079, 56.66558 ], [ -4.98089, 56.6656 ], [ -4.98118, 56.66568 ], [ -4.98137, 56.66575 ], [ -4.98145, 56.66578 ], [ -4.98165, 56.66587 ], [ -4.98182, 56.66599 ], [ -4.98183, 56.666 ], [ -4.98198, 56.66612 ], [ -4.98235, 56.66646 ], [ -4.9824, 56.6665 ], [ -4.9826, 56.66668 ], [ -4.98278, 56.66682 ], [ -4.98311, 56.66704 ], [ -4.98349, 56.66724 ], [ -4.98384, 56.6674 ], [ -4.98409, 56.6675 ], [ -4.98436, 56.66759 ], [ -4.98459, 56.66765 ], [ -4.98468, 56.66767 ], [ -4.98489, 56.66772 ], [ -4.98499, 56.66774 ], [ -4.98516, 56.66777 ], [ -4.98546, 56.66782 ], [ -4.98578, 56.66785 ], [ -4.98594, 56.66787 ], [ -4.98614, 56.66788 ], [ -4.98626, 56.66789 ], [ -4.98658, 56.66792 ], [ -4.98679, 56.66793 ], [ -4.98723, 56.66796 ], [ -4.98727, 56.66796 ], [ -4.98775, 56.66799 ], [ -4.98813, 56.66802 ], [ -4.98872, 56.66806 ], [ -4.98928, 56.6681 ], [ -4.98978, 56.66813 ], [ -4.99029, 56.66817 ], [ -4.99074, 56.6682 ], [ -4.99081, 56.6682 ], [ -4.9911, 56.66822 ], [ -4.99149, 56.66825 ], [ -4.9918, 56.66828 ], [ -4.99201, 56.66828 ], [ -4.99211, 56.66828 ], [ -4.99234, 56.66829 ], [ -4.99244, 56.66829 ], [ -4.99266, 56.66828 ], [ -4.99298, 56.66827 ], [ -4.99318, 56.66825 ], [ -4.99357, 56.6682 ], [ -4.99424, 56.6681 ], [ -4.99475, 56.66804 ], [ -4.99508, 56.66803 ], [ -4.99537, 56.66803 ], [ -4.99562, 56.66804 ], [ -4.99588, 56.66806 ], [ -4.99598, 56.66808 ], [ -4.99617, 56.6681 ], [ -4.99638, 56.66815 ], [ -4.99668, 56.66823 ], [ -4.99693, 56.66832 ], [ -4.99721, 56.66844 ], [ -4.99738, 56.66854 ], [ -4.99756, 56.66863 ], [ -4.99785, 56.66879 ], [ -4.99815, 56.66893 ], [ -4.99833, 56.669 ], [ -4.99858, 56.66908 ], [ -4.99863, 56.66909 ], [ -4.99882, 56.66913 ], [ -4.99908, 56.66917 ], [ -4.9994, 56.6692 ], [ -4.99959, 56.66921 ], [ -4.99984, 56.66922 ], [ -5.00024, 56.66922 ], [ -5.00088, 56.66923 ], [ -5.00122, 56.66923 ], [ -5.00176, 56.66924 ], [ -5.0024, 56.66925 ], [ -5.00298, 56.66926 ], [ -5.00351, 56.66929 ], [ -5.00363, 56.6693 ], [ -5.00488, 56.66937 ], [ -5.00613, 56.66945 ], [ -5.00622, 56.66945 ], [ -5.00678, 56.66949 ], [ -5.00729, 56.66952 ], [ -5.00741, 56.66952 ], [ -5.00808, 56.66957 ], [ -5.00838, 56.66959 ], [ -5.00843, 56.66959 ], [ -5.00871, 56.66961 ], [ -5.00898, 56.66963 ], [ -5.01001, 56.66969 ], [ -5.01148, 56.66978 ], [ -5.01199, 56.66981 ], [ -5.01257, 56.66985 ], [ -5.0129, 56.66987 ], [ -5.01307, 56.66988 ], [ -5.01362, 56.66991 ], [ -5.0143, 56.66994 ], [ -5.01453, 56.66995 ], [ -5.01477, 56.66996 ], [ -5.01485, 56.66996 ], [ -5.01518, 56.66997 ], [ -5.01535, 56.66997 ], [ -5.01551, 56.66997 ], [ -5.01616, 56.66998 ], [ -5.0167, 56.66998 ], [ -5.01712, 56.66997 ], [ -5.01775, 56.66996 ], [ -5.0178, 56.66996 ], [ -5.01811, 56.66994 ], [ -5.01852, 56.66993 ], [ -5.01889, 56.66991 ], [ -5.0191, 56.6699 ], [ -5.01926, 56.66989 ], [ -5.01964, 56.66987 ], [ -5.02015, 56.66984 ], [ -5.02053, 56.66981 ], [ -5.02076, 56.66978 ], [ -5.0213, 56.66973 ], [ -5.02169, 56.66969 ], [ -5.02182, 56.66968 ], [ -5.02228, 56.66963 ], [ -5.023, 56.66954 ], [ -5.02329, 56.6695 ], [ -5.0235, 56.66947 ], [ -5.02392, 56.6694 ], [ -5.02398, 56.66939 ], [ -5.02466, 56.66929 ], [ -5.02486, 56.66925 ], [ -5.02514, 56.6692 ], [ -5.02517, 56.66919 ], [ -5.02549, 56.66914 ], [ -5.02584, 56.66907 ], [ -5.02641, 56.66896 ], [ -5.02651, 56.66894 ], [ -5.02716, 56.66879 ], [ -5.02762, 56.66868 ], [ -5.02792, 56.66861 ], [ -5.02863, 56.66843 ], [ -5.029, 56.66833 ], [ -5.02944, 56.6682 ], [ -5.02952, 56.66818 ], [ -5.03045, 56.6679 ], [ -5.0307, 56.66782 ], [ -5.03085, 56.66777 ], [ -5.03113, 56.66768 ], [ -5.03134, 56.6676 ], [ -5.03153, 56.66754 ], [ -5.0318, 56.66744 ], [ -5.03195, 56.66739 ], [ -5.03198, 56.66738 ], [ -5.03208, 56.66734 ], [ -5.03263, 56.66715 ], [ -5.03304, 56.66701 ], [ -5.03318, 56.66696 ], [ -5.03342, 56.66687 ], [ -5.03376, 56.66677 ], [ -5.03394, 56.66672 ], [ -5.03418, 56.66665 ], [ -5.03455, 56.66657 ], [ -5.03509, 56.66646 ], [ -5.03514, 56.66645 ], [ -5.03555, 56.66636 ], [ -5.03556, 56.66636 ], [ -5.0358, 56.66631 ], [ -5.03586, 56.66629 ], [ -5.03603, 56.66624 ], [ -5.0363, 56.66615 ], [ -5.03642, 56.6661 ], [ -5.03653, 56.66606 ], [ -5.03673, 56.66597 ], [ -5.03688, 56.66589 ], [ -5.03704, 56.6658 ], [ -5.03714, 56.66574 ], [ -5.03719, 56.6657 ], [ -5.03733, 56.66561 ], [ -5.03752, 56.66546 ], [ -5.03774, 56.6653 ], [ -5.03795, 56.66516 ], [ -5.03815, 56.66506 ], [ -5.03835, 56.66496 ], [ -5.03843, 56.66493 ], [ -5.03854, 56.66488 ], [ -5.0387, 56.66483 ], [ -5.03873, 56.66482 ], [ -5.03896, 56.66474 ], [ -5.03924, 56.66467 ], [ -5.03964, 56.66457 ], [ -5.04003, 56.66448 ], [ -5.04048, 56.66438 ], [ -5.0404784, 56.6643765 ], [ -5.04059, 56.66446 ], [ -5.04064, 56.66449 ], [ -5.04068, 56.66451 ], [ -5.04072, 56.66452 ], [ -5.04076, 56.66453 ], [ -5.04084, 56.66453 ], [ -5.04097, 56.66453 ], [ -5.04101, 56.66453 ], [ -5.04102, 56.66453 ], [ -5.04108, 56.66454 ], [ -5.04122, 56.66456 ], [ -5.04133, 56.66457 ], [ -5.04135, 56.66458 ], [ -5.0415, 56.6646 ], [ -5.04162, 56.6646 ], [ -5.04175, 56.6646 ], [ -5.04187, 56.66459 ], [ -5.04197, 56.66457 ], [ -5.04215, 56.66455 ], [ -5.04229, 56.66453 ], [ -5.04243, 56.6645 ], [ -5.04273, 56.66448 ], [ -5.04293, 56.66446 ], [ -5.04298, 56.66445 ], [ -5.04324, 56.66442 ], [ -5.04363, 56.66438 ], [ -5.04389, 56.66435 ], [ -5.04391, 56.66435 ], [ -5.04419, 56.66434 ], [ -5.04422, 56.66433 ], [ -5.04439, 56.66432 ], [ -5.04459, 56.6643 ], [ -5.04476, 56.66428 ], [ -5.04493, 56.66426 ], [ -5.04509, 56.66424 ], [ -5.04514, 56.66423 ], [ -5.04522, 56.6642 ], [ -5.04529, 56.66418 ], [ -5.04543, 56.66413 ], [ -5.04552, 56.6641 ], [ -5.04568, 56.66404 ], [ -5.04569, 56.66403 ], [ -5.04593, 56.66391 ], [ -5.04597, 56.66388 ], [ -5.04615, 56.6638 ], [ -5.04617, 56.66379 ], [ -5.04632, 56.66374 ], [ -5.04668, 56.66365 ], [ -5.04697, 56.66358 ], [ -5.04706, 56.66355 ], [ -5.04742, 56.66346 ], [ -5.04791, 56.66335 ], [ -5.04796, 56.66334 ], [ -5.04826, 56.66326 ], [ -5.04834, 56.66325 ], [ -5.04859, 56.66318 ], [ -5.04886, 56.66313 ], [ -5.0489, 56.66312 ], [ -5.049, 56.66311 ], [ -5.04909, 56.6631 ], [ -5.04918, 56.66309 ], [ -5.0493, 56.66308 ], [ -5.04947, 56.66307 ], [ -5.04951, 56.66307 ], [ -5.04984, 56.66307 ], [ -5.04993, 56.66307 ], [ -5.0501, 56.66308 ], [ -5.05016, 56.66308 ], [ -5.05033, 56.66309 ], [ -5.05048, 56.66309 ], [ -5.05049, 56.66309 ], [ -5.05066, 56.66311 ], [ -5.0508, 56.66313 ], [ -5.05095, 56.66316 ], [ -5.05138, 56.66326 ], [ -5.05224, 56.6635 ], [ -5.05229, 56.66351 ], [ -5.05264, 56.66361 ], [ -5.05282, 56.66365 ], [ -5.05308, 56.6637 ], [ -5.05335, 56.66375 ], [ -5.05396, 56.66385 ], [ -5.05411, 56.66389 ], [ -5.05412, 56.66389 ], [ -5.05413, 56.66389 ], [ -5.05429, 56.66395 ], [ -5.0544, 56.66399 ], [ -5.05457, 56.66405 ], [ -5.05479, 56.66413 ], [ -5.05502, 56.66421 ], [ -5.05521, 56.66429 ], [ -5.05524, 56.6643 ], [ -5.05546, 56.66439 ], [ -5.05564, 56.66447 ], [ -5.05577, 56.66455 ], [ -5.0557655, 56.6645459 ], [ -5.05583, 56.66458 ], [ -5.05591, 56.66462 ], [ -5.05611, 56.66473 ], [ -5.05632, 56.66489 ], [ -5.05663, 56.66514 ], [ -5.0567, 56.66519 ], [ -5.05678, 56.66525 ], [ -5.05689, 56.66533 ], [ -5.05694, 56.66536 ], [ -5.05711, 56.66547 ], [ -5.05714, 56.66548 ], [ -5.05728, 56.66557 ], [ -5.05734, 56.6656 ], [ -5.05743, 56.66565 ], [ -5.05757, 56.66571 ], [ -5.05758, 56.66572 ], [ -5.05776, 56.6658 ], [ -5.05784, 56.66583 ], [ -5.05795, 56.66587 ], [ -5.05813, 56.66593 ], [ -5.05839, 56.66602 ], [ -5.05843, 56.66603 ], [ -5.05867, 56.66611 ], [ -5.05885, 56.66617 ], [ -5.05896, 56.6662 ], [ -5.05901, 56.66621 ], [ -5.05925, 56.66626 ], [ -5.05926, 56.66627 ], [ -5.05946, 56.66632 ], [ -5.0595, 56.66632 ], [ -5.05956, 56.66634 ], [ -5.05967, 56.66638 ], [ -5.05985, 56.66646 ], [ -5.06006, 56.66657 ], [ -5.06007, 56.66657 ], [ -5.06028, 56.6667 ], [ -5.06051, 56.66683 ], [ -5.06072, 56.66697 ], [ -5.06076, 56.667 ], [ -5.06095, 56.66714 ], [ -5.06103, 56.6672 ], [ -5.06118, 56.6673 ], [ -5.06133, 56.66739 ], [ -5.06137, 56.66742 ], [ -5.0618, 56.66764 ], [ -5.06204, 56.66776 ], [ -5.06206, 56.66778 ], [ -5.06227, 56.66786 ], [ -5.0623, 56.66788 ], [ -5.06248, 56.66795 ], [ -5.06256, 56.66798 ], [ -5.06269, 56.66804 ], [ -5.06283, 56.66808 ], [ -5.06294, 56.66812 ], [ -5.06311, 56.66818 ], [ -5.06322, 56.66821 ], [ -5.06339, 56.66827 ], [ -5.06341, 56.66827 ], [ -5.06368, 56.66835 ], [ -5.06389, 56.66841 ], [ -5.06397, 56.66843 ], [ -5.06426, 56.66852 ], [ -5.06429, 56.66852 ], [ -5.06455, 56.6686 ], [ -5.06474, 56.66866 ], [ -5.06484, 56.66869 ], [ -5.06512, 56.66878 ], [ -5.06539, 56.66888 ], [ -5.06564, 56.66898 ], [ -5.06566, 56.66899 ], [ -5.06615, 56.66918 ], [ -5.06647, 56.66929 ], [ -5.06658, 56.66933 ], [ -5.06673, 56.6694 ], [ -5.06695, 56.66949 ], [ -5.067, 56.6695 ], [ -5.06726, 56.66961 ], [ -5.06772, 56.66979 ], [ -5.06813, 56.66996 ], [ -5.06845, 56.67009 ], [ -5.0686, 56.67015 ], [ -5.06872, 56.6702 ], [ -5.06899, 56.67029 ], [ -5.06899, 56.6703 ], [ -5.06923, 56.67036 ], [ -5.06929, 56.67037 ], [ -5.06959, 56.67044 ], [ -5.06978, 56.67049 ], [ -5.06989, 56.67052 ], [ -5.07018, 56.6706 ], [ -5.07042, 56.67067 ], [ -5.07047, 56.67068 ], [ -5.07076, 56.67077 ], [ -5.07092, 56.67081 ], [ -5.07132, 56.67095 ], [ -5.07137, 56.67096 ], [ -5.07158, 56.67106 ], [ -5.0717, 56.67112 ], [ -5.07183, 56.67118 ], [ -5.072, 56.67126 ], [ -5.07208, 56.67129 ], [ -5.07234, 56.6714 ], [ -5.07236, 56.67141 ], [ -5.07257, 56.67148 ], [ -5.07262, 56.6715 ], [ -5.07291, 56.67158 ], [ -5.07301, 56.67161 ], [ -5.07315, 56.67166 ], [ -5.07318, 56.67168 ], [ -5.07324, 56.67171 ], [ -5.0733, 56.67177 ], [ -5.07335, 56.67183 ], [ -5.0734, 56.67188 ], [ -5.07347, 56.672 ], [ -5.0735, 56.67204 ], [ -5.07358, 56.67217 ], [ -5.07368, 56.67232 ], [ -5.07369, 56.67233 ], [ -5.07381, 56.67254 ], [ -5.07396, 56.67279 ], [ -5.07401, 56.67284 ], [ -5.07409, 56.67293 ], [ -5.07414, 56.67301 ], [ -5.07437, 56.67317 ], [ -5.07444, 56.67322 ], [ -5.07457, 56.67332 ], [ -5.07464, 56.67337 ], [ -5.07478, 56.67345 ], [ -5.07487, 56.67349 ], [ -5.07501, 56.67355 ], [ -5.07514, 56.67359 ], [ -5.07524, 56.67363 ], [ -5.07532, 56.67366 ], [ -5.07537, 56.67369 ], [ -5.07546, 56.67374 ], [ -5.07551, 56.6738 ], [ -5.07565, 56.67396 ], [ -5.07574, 56.67407 ], [ -5.07608, 56.67456 ], [ -5.07639, 56.67508 ], [ -5.07644, 56.67514 ], [ -5.07657, 56.67531 ], [ -5.07668, 56.67546 ], [ -5.0767, 56.67547 ], [ -5.07678, 56.67555 ], [ -5.07697, 56.6757 ], [ -5.07706, 56.67577 ], [ -5.07717, 56.67586 ], [ -5.07726, 56.67592 ], [ -5.07742, 56.67602 ], [ -5.07748, 56.67605 ], [ -5.07773, 56.67617 ], [ -5.07774, 56.67618 ], [ -5.07799, 56.67627 ], [ -5.07814, 56.67633 ], [ -5.07834, 56.67639 ], [ -5.07854, 56.67647 ], [ -5.07885, 56.67658 ], [ -5.07935, 56.67678 ], [ -5.07942, 56.67681 ], [ -5.07962, 56.67687 ], [ -5.07987, 56.67695 ], [ -5.07991, 56.67696 ], [ -5.08019, 56.67705 ], [ -5.08026, 56.67707 ], [ -5.08039, 56.67713 ], [ -5.08045, 56.67716 ], [ -5.08053, 56.6772 ], [ -5.08066, 56.6773 ], [ -5.08076, 56.67737 ], [ -5.08104, 56.67759 ], [ -5.08121, 56.67773 ], [ -5.08123, 56.67774 ], [ -5.08142, 56.67788 ], [ -5.08162, 56.67803 ], [ -5.08182, 56.67817 ], [ -5.08187, 56.67821 ], [ -5.08202, 56.67831 ], [ -5.08222, 56.67845 ], [ -5.08231, 56.67852 ], [ -5.08261, 56.67874 ], [ -5.08271, 56.67883 ], [ -5.08279, 56.67889 ], [ -5.08296, 56.67903 ], [ -5.08313, 56.67916 ], [ -5.08317, 56.67918 ], [ -5.0833, 56.67927 ], [ -5.08339, 56.67932 ], [ -5.08362, 56.67945 ], [ -5.08388, 56.6796 ], [ -5.08395, 56.67967 ], [ -5.08396, 56.67969 ], [ -5.08398, 56.67974 ], [ -5.08399, 56.67975 ], [ -5.08403, 56.67984 ], [ -5.08406, 56.67991 ], [ -5.08415, 56.68 ], [ -5.08416, 56.68001 ], [ -5.08432, 56.68009 ], [ -5.08439, 56.68012 ], [ -5.08459, 56.6802 ], [ -5.08492, 56.68029 ], [ -5.08522, 56.6804 ], [ -5.08536, 56.68045 ], [ -5.0855, 56.6805 ], [ -5.08577, 56.6806 ], [ -5.08597, 56.68068 ], [ -5.08632, 56.68079 ], [ -5.08633, 56.68079 ], [ -5.08661, 56.68088 ], [ -5.0867, 56.6809 ], [ -5.0869, 56.68096 ], [ -5.08717, 56.68103 ], [ -5.0875, 56.68112 ], [ -5.0876, 56.68116 ], [ -5.08795, 56.68125 ], [ -5.08799, 56.68126 ], [ -5.08824, 56.68133 ], [ -5.08852, 56.68142 ], [ -5.08855, 56.68143 ], [ -5.08912, 56.68157 ], [ -5.08922, 56.68159 ], [ -5.08973, 56.6817 ], [ -5.08986, 56.68173 ], [ -5.09035, 56.68182 ], [ -5.09037, 56.68182 ], [ -5.09066, 56.68187 ], [ -5.0909, 56.68191 ], [ -5.09098, 56.68192 ], [ -5.09171, 56.68205 ], [ -5.0919, 56.6821 ], [ -5.09218, 56.68216 ], [ -5.09248, 56.68225 ], [ -5.093, 56.68243 ], [ -5.09315, 56.68249 ], [ -5.09342, 56.6826 ], [ -5.09352, 56.68264 ], [ -5.09368, 56.68271 ], [ -5.09389, 56.68281 ], [ -5.09475, 56.68312 ], [ -5.09487, 56.68317 ], [ -5.09557, 56.68342 ], [ -5.09602, 56.68358 ], [ -5.09612, 56.68362 ], [ -5.0961167, 56.6836174 ], [ -5.09624, 56.68366 ], [ -5.09635, 56.68369 ], [ -5.0965, 56.68371 ], [ -5.09663, 56.68372 ], [ -5.09671, 56.68373 ], [ -5.09684, 56.68372 ], [ -5.09696, 56.6837 ], [ -5.09702, 56.6837 ], [ -5.09728, 56.68363 ], [ -5.09755, 56.68355 ], [ -5.09786, 56.68347 ], [ -5.09815, 56.6834 ], [ -5.09866, 56.68328 ], [ -5.09949, 56.68311 ], [ -5.09975, 56.68305 ], [ -5.09989, 56.68302 ], [ -5.10124, 56.68276 ], [ -5.10151, 56.68269 ], [ -5.10159, 56.68268 ], [ -5.10224, 56.68255 ], [ -5.10232, 56.68253 ], [ -5.10263, 56.68247 ], [ -5.10266, 56.68246 ], [ -5.10287, 56.68242 ], [ -5.10318, 56.68236 ], [ -5.10333, 56.68233 ], [ -5.10339, 56.68232 ], [ -5.10358, 56.68227 ], [ -5.10369, 56.68225 ], [ -5.10383, 56.68222 ], [ -5.10383, 56.6822192 ], [ -5.10419, 56.68215 ], [ -5.1045, 56.68209 ], [ -5.10481, 56.68203 ], [ -5.10512, 56.68197 ], [ -5.10543, 56.68191 ], [ -5.10574, 56.68186 ], [ -5.10589, 56.68183 ], [ -5.1058927, 56.6818274 ], [ -5.10588, 56.68175 ], [ -5.1059, 56.68167 ], [ -5.10593, 56.68162 ], [ -5.10601, 56.68157 ], [ -5.10611, 56.68153 ], [ -5.10616, 56.6815 ], [ -5.10621, 56.68148 ], [ -5.10628, 56.68141 ], [ -5.1062778, 56.6814096 ], [ -5.10691, 56.68142 ], [ -5.10755, 56.68143 ], [ -5.10759, 56.68143 ], [ -5.10772, 56.68143 ], [ -5.10835, 56.68141 ], [ -5.10869, 56.68138 ], [ -5.10892, 56.68136 ], [ -5.10901, 56.68135 ], [ -5.1094, 56.6813 ], [ -5.10991, 56.68123 ], [ -5.11032, 56.68115 ], [ -5.11079, 56.68106 ], [ -5.1125, 56.68073 ], [ -5.11337, 56.68056 ], [ -5.11413, 56.68044 ], [ -5.11514, 56.68031 ], [ -5.11628, 56.68018 ], [ -5.11656, 56.68016 ], [ -5.11689, 56.68013 ], [ -5.11721, 56.6801 ], [ -5.11753, 56.68008 ], [ -5.11754, 56.68008 ], [ -5.11786, 56.68005 ], [ -5.1184, 56.68001 ], [ -5.11874, 56.67999 ], [ -5.1193, 56.67996 ], [ -5.1199, 56.67993 ], [ -5.11995, 56.67993 ], [ -5.12019, 56.67992 ], [ -5.12028, 56.67991 ], [ -5.1206, 56.6799 ], [ -5.1209, 56.67988 ], [ -5.12126, 56.67987 ], [ -5.12166, 56.67986 ], [ -5.12191, 56.67986 ], [ -5.12251, 56.67985 ], [ -5.12258, 56.67985 ], [ -5.12289, 56.67984 ], [ -5.12322, 56.67984 ], [ -5.12323, 56.67984 ], [ -5.12375, 56.67982 ], [ -5.12434, 56.67981 ], [ -5.12447, 56.67981 ], [ -5.12453, 56.67981 ], [ -5.12485, 56.6798 ], [ -5.12504, 56.67979 ], [ -5.12551, 56.67977 ], [ -5.12586, 56.67975 ], [ -5.12616, 56.67974 ], [ -5.12729, 56.67965 ], [ -5.12794, 56.67959 ], [ -5.12798, 56.67959 ], [ -5.12801, 56.67958 ], [ -5.12816, 56.67957 ], [ -5.12858, 56.67952 ], [ -5.12927, 56.67944 ], [ -5.12943, 56.67942 ], [ -5.13013, 56.67932 ], [ -5.13044, 56.67927 ], [ -5.13143, 56.67912 ], [ -5.1318, 56.67905 ], [ -5.13217, 56.67898 ], [ -5.1322, 56.67897 ], [ -5.13301, 56.67881 ], [ -5.13341, 56.67872 ], [ -5.13418, 56.67854 ], [ -5.13497, 56.67836 ], [ -5.13607, 56.6781 ], [ -5.1363, 56.67805 ], [ -5.13638, 56.67803 ], [ -5.13732, 56.67785 ], [ -5.13832, 56.67766 ], [ -5.13885, 56.67757 ], [ -5.13917, 56.67752 ], [ -5.13948, 56.67747 ], [ -5.1395, 56.67746 ], [ -5.1398, 56.67742 ], [ -5.14045, 56.67734 ], [ -5.14076, 56.6773 ], [ -5.14159, 56.67721 ], [ -5.14213, 56.67714 ], [ -5.14255, 56.6771 ], [ -5.14337, 56.67702 ], [ -5.14352, 56.67702 ], [ -5.14417, 56.67698 ], [ -5.14475, 56.67695 ], [ -5.14513, 56.67693 ], [ -5.14573, 56.67692 ], [ -5.14651, 56.6769 ], [ -5.14687, 56.67689 ], [ -5.14717, 56.67689 ], [ -5.14757, 56.6769 ], [ -5.14782, 56.6769 ], [ -5.14812, 56.67691 ], [ -5.14832, 56.67693 ], [ -5.1488, 56.67696 ], [ -5.14951, 56.67704 ], [ -5.15018, 56.67713 ], [ -5.15078, 56.67721 ], [ -5.15088, 56.67722 ], [ -5.15136, 56.6773 ], [ -5.15281, 56.67755 ], [ -5.1529, 56.67757 ], [ -5.15351, 56.6777 ], [ -5.15357, 56.67772 ], [ -5.15371, 56.67775 ], [ -5.15381, 56.67778 ], [ -5.15415, 56.67787 ], [ -5.15443, 56.67795 ], [ -5.15467, 56.67803 ], [ -5.15495, 56.67813 ], [ -5.1551, 56.67817 ], [ -5.15568, 56.6784 ], [ -5.15619, 56.67862 ], [ -5.15632, 56.67868 ], [ -5.15706, 56.67901 ], [ -5.15745, 56.67919 ], [ -5.1578, 56.67935 ], [ -5.15795, 56.67942 ], [ -5.15845, 56.67965 ], [ -5.15956, 56.68015 ], [ -5.15998, 56.68033 ], [ -5.16024, 56.68044 ], [ -5.16064, 56.6806 ], [ -5.16133, 56.68084 ], [ -5.16152, 56.6809 ], [ -5.16161, 56.68093 ], [ -5.1619, 56.68102 ], [ -5.16218, 56.68111 ], [ -5.16227, 56.68114 ], [ -5.16318, 56.68137 ], [ -5.16337, 56.68142 ], [ -5.16366, 56.68149 ], [ -5.16396, 56.68156 ], [ -5.16424, 56.68163 ], [ -5.16508, 56.68185 ], [ -5.16575, 56.68204 ], [ -5.16616, 56.68217 ], [ -5.16655, 56.6823 ], [ -5.16719, 56.68252 ], [ -5.16767, 56.68271 ], [ -5.16779, 56.68276 ], [ -5.16842, 56.68298 ], [ -5.16873, 56.68308 ], [ -5.16897, 56.68316 ], [ -5.16913, 56.68322 ], [ -5.16965, 56.6834 ], [ -5.1702, 56.68357 ], [ -5.17025, 56.68358 ], [ -5.17054, 56.68367 ], [ -5.17083, 56.68375 ], [ -5.17102, 56.68381 ], [ -5.17171, 56.684 ], [ -5.172, 56.68408 ], [ -5.17203, 56.68409 ], [ -5.17229, 56.68416 ], [ -5.17293, 56.68434 ], [ -5.17338, 56.68447 ], [ -5.17343, 56.68448 ], [ -5.17391, 56.68451 ], [ -5.17394, 56.68449 ], [ -5.17397, 56.68449 ], [ -5.17399, 56.68448 ], [ -5.17401, 56.68448 ], [ -5.17403, 56.68447 ], [ -5.17405, 56.68447 ], [ -5.17408, 56.68447 ], [ -5.1741, 56.68447 ], [ -5.17412, 56.68447 ], [ -5.17414, 56.68447 ], [ -5.17416, 56.68447 ], [ -5.17418, 56.68447 ], [ -5.1742, 56.68448 ], [ -5.17422, 56.68448 ], [ -5.17424, 56.68449 ], [ -5.17426, 56.68449 ], [ -5.17428, 56.6845 ], [ -5.1743, 56.68451 ], [ -5.17431, 56.68452 ], [ -5.17433, 56.68452 ], [ -5.17434, 56.68453 ], [ -5.17436, 56.68455 ], [ -5.17438, 56.68456 ], [ -5.17453, 56.6846 ], [ -5.17461, 56.68463 ], [ -5.1748, 56.6847 ], [ -5.17531, 56.68478 ], [ -5.17596, 56.68489 ], [ -5.17701, 56.68508 ], [ -5.17721, 56.68511 ], [ -5.17815, 56.68527 ], [ -5.17846, 56.68532 ], [ -5.17919, 56.68545 ], [ -5.17922, 56.68546 ], [ -5.17967, 56.68556 ], [ -5.18011, 56.68567 ], [ -5.18041, 56.68577 ], [ -5.18054, 56.68582 ], [ -5.18076, 56.68591 ], [ -5.18129, 56.68618 ], [ -5.18158, 56.68639 ], [ -5.18161, 56.68641 ], [ -5.18176, 56.68653 ], [ -5.18191, 56.68669 ], [ -5.18201, 56.68683 ], [ -5.18224, 56.6872 ], [ -5.18231, 56.68733 ], [ -5.18234, 56.68744 ], [ -5.18241, 56.68776 ], [ -5.18242, 56.68783 ], [ -5.18244, 56.68812 ], [ -5.18246, 56.68829 ], [ -5.18245, 56.68848 ], [ -5.18245, 56.68866 ], [ -5.18245, 56.68875 ], [ -5.18245, 56.68884 ], [ -5.18246, 56.68907 ], [ -5.18246, 56.6892 ], [ -5.18245, 56.68956 ], [ -5.18245, 56.68974 ], [ -5.18244, 56.69054 ], [ -5.18244, 56.69076 ], [ -5.18244, 56.69091 ], [ -5.18245, 56.69118 ], [ -5.18245, 56.69132 ], [ -5.18245, 56.69136 ], [ -5.18244, 56.69154 ], [ -5.18243, 56.69191 ], [ -5.18246, 56.69245 ], [ -5.18237, 56.69316 ], [ -5.18228, 56.6937 ], [ -5.18227, 56.69377 ], [ -5.1822, 56.69406 ], [ -5.18216, 56.69423 ], [ -5.18212, 56.69441 ], [ -5.18209, 56.69451 ], [ -5.18201, 56.69483 ], [ -5.18195, 56.69503 ], [ -5.18191, 56.69518 ], [ -5.18182, 56.69554 ], [ -5.18181, 56.6956 ], [ -5.18174, 56.6959 ], [ -5.18171, 56.69604 ], [ -5.18167, 56.69626 ], [ -5.18165, 56.69643 ], [ -5.18163, 56.69654 ], [ -5.18163, 56.69661 ], [ -5.18163, 56.69679 ], [ -5.18163, 56.69695 ], [ -5.18164, 56.69697 ], [ -5.18167, 56.69715 ], [ -5.18173, 56.69746 ], [ -5.18187, 56.69788 ], [ -5.18194, 56.69804 ], [ -5.18199, 56.69816 ], [ -5.18213, 56.69838 ], [ -5.18235, 56.69872 ], [ -5.1824, 56.69881 ], [ -5.18258, 56.69904 ], [ -5.18271, 56.6992 ], [ -5.18279, 56.69931 ], [ -5.18283, 56.69937 ], [ -5.18305, 56.69965 ], [ -5.18326, 56.69986 ], [ -5.18332, 56.69991 ], [ -5.18343, 56.7 ], [ -5.1835, 56.70005 ], [ -5.18356, 56.70009 ], [ -5.18374, 56.70017 ], [ -5.18378, 56.70019 ], [ -5.18399, 56.70027 ], [ -5.18401, 56.70027 ], [ -5.18415, 56.70032 ], [ -5.18431, 56.70035 ], [ -5.18452, 56.70039 ], [ -5.18462, 56.7004 ], [ -5.1847, 56.7004 ], [ -5.18527, 56.70043 ], [ -5.1856, 56.70044 ], [ -5.18592, 56.70045 ], [ -5.18611, 56.70046 ], [ -5.18625, 56.70047 ], [ -5.18658, 56.70048 ], [ -5.18691, 56.70049 ], [ -5.18723, 56.7005 ], [ -5.18756, 56.70052 ], [ -5.18791, 56.70053 ], [ -5.18821, 56.70055 ], [ -5.18881, 56.70059 ], [ -5.18928, 56.70061 ], [ -5.18952, 56.70063 ], [ -5.18994, 56.70063 ], [ -5.19026, 56.70062 ], [ -5.19027, 56.70061 ], [ -5.19057, 56.70056 ], [ -5.19089, 56.70051 ], [ -5.1912, 56.70047 ], [ -5.19152, 56.70042 ], [ -5.19154, 56.70042 ], [ -5.19208, 56.70038 ], [ -5.19217, 56.70038 ], [ -5.1925, 56.70037 ], [ -5.19271, 56.70036 ], [ -5.19283, 56.70037 ], [ -5.19315, 56.70037 ], [ -5.19323, 56.70036 ], [ -5.19333, 56.70037 ], [ -5.19395, 56.70036 ], [ -5.19414, 56.70035 ], [ -5.19438, 56.70035 ], [ -5.19446, 56.70035 ], [ -5.19471, 56.70034 ], [ -5.19512, 56.70034 ], [ -5.19555, 56.70033 ], [ -5.19559, 56.70033 ], [ -5.19591, 56.70033 ], [ -5.19594, 56.70033 ], [ -5.19602, 56.70033 ], [ -5.19622, 56.70034 ], [ -5.19642, 56.70036 ], [ -5.19649, 56.70037 ], [ -5.19666, 56.70039 ], [ -5.19674, 56.7004 ], [ -5.19682, 56.70042 ], [ -5.19705, 56.70046 ], [ -5.19736, 56.70053 ], [ -5.19816, 56.70072 ], [ -5.19865, 56.70083 ], [ -5.19922, 56.70094 ], [ -5.19992, 56.70109 ], [ -5.20019, 56.70114 ], [ -5.2012, 56.70135 ], [ -5.20132, 56.70137 ], [ -5.20184, 56.70149 ], [ -5.20255, 56.70164 ], [ -5.20292, 56.70173 ], [ -5.20295, 56.70173 ], [ -5.20355, 56.70187 ], [ -5.20401, 56.70201 ], [ -5.20417, 56.70206 ], [ -5.20465, 56.70223 ], [ -5.20466, 56.70223 ], [ -5.20482, 56.70228 ], [ -5.20485, 56.70229 ], [ -5.20506, 56.70236 ], [ -5.2055, 56.70246 ], [ -5.20575, 56.7025 ], [ -5.20579, 56.7025 ], [ -5.20597, 56.70252 ], [ -5.20604, 56.70253 ], [ -5.2062, 56.70253 ], [ -5.20622, 56.70253 ], [ -5.2064, 56.70253 ], [ -5.20648, 56.70253 ], [ -5.20669, 56.70252 ], [ -5.20686, 56.70251 ], [ -5.20702, 56.70248 ], [ -5.20704, 56.70248 ], [ -5.20717, 56.70246 ], [ -5.20736, 56.70242 ], [ -5.20747, 56.7024 ], [ -5.20776, 56.70236 ], [ -5.20799, 56.70233 ], [ -5.20806, 56.70232 ], [ -5.20813, 56.70231 ], [ -5.20831, 56.7023 ], [ -5.20843, 56.70229 ], [ -5.20846, 56.70228 ], [ -5.20861, 56.70228 ], [ -5.20882, 56.70227 ], [ -5.20896, 56.70227 ], [ -5.20907, 56.70227 ], [ -5.20912, 56.70228 ], [ -5.2093, 56.70229 ], [ -5.20944, 56.7023 ], [ -5.2095, 56.7023 ], [ -5.20977, 56.70232 ], [ -5.2101, 56.70234 ], [ -5.21013, 56.70234 ], [ -5.21024, 56.70234 ], [ -5.2104, 56.70234 ], [ -5.21066, 56.70232 ], [ -5.21093, 56.70231 ], [ -5.21126, 56.7023 ], [ -5.21153, 56.7023 ], [ -5.21179, 56.70232 ], [ -5.21199, 56.70234 ], [ -5.2124, 56.70238 ], [ -5.21285, 56.70242 ], [ -5.21369, 56.70251 ], [ -5.21398, 56.70254 ], [ -5.21469, 56.70262 ], [ -5.21495, 56.70264 ], [ -5.21511, 56.70265 ], [ -5.21543, 56.70268 ], [ -5.21576, 56.7027 ], [ -5.21625, 56.70273 ], [ -5.2169, 56.70277 ], [ -5.21718, 56.70278 ], [ -5.21771, 56.70278 ], [ -5.21802, 56.70278 ], [ -5.21804, 56.70278 ], [ -5.21837, 56.70278 ], [ -5.2187, 56.70278 ], [ -5.21888, 56.70278 ], [ -5.21902, 56.70278 ], [ -5.21911, 56.70277 ], [ -5.21934, 56.70279 ], [ -5.21935, 56.70279 ], [ -5.21961, 56.70283 ], [ -5.21967, 56.70284 ], [ -5.21991, 56.70288 ], [ -5.21998, 56.70289 ], [ -5.22046, 56.70297 ], [ -5.2208, 56.70303 ], [ -5.22107, 56.70308 ], [ -5.22118, 56.70309 ], [ -5.22123, 56.7031 ], [ -5.22129, 56.70311 ], [ -5.22141, 56.70313 ], [ -5.22154, 56.70314 ], [ -5.22155, 56.70314 ], [ -5.22167, 56.70315 ], [ -5.22177, 56.70315 ], [ -5.22186, 56.70316 ], [ -5.22188, 56.70316 ], [ -5.22196, 56.70316 ], [ -5.2221, 56.70316 ], [ -5.22227, 56.70315 ], [ -5.22253, 56.70314 ], [ -5.22273, 56.70312 ], [ -5.22287, 56.70311 ], [ -5.22303, 56.70309 ], [ -5.22323, 56.70306 ], [ -5.2234, 56.70304 ], [ -5.22356, 56.70302 ], [ -5.22372, 56.70301 ], [ -5.22407, 56.70297 ], [ -5.22473, 56.7029 ], [ -5.22491, 56.70288 ], [ -5.22512, 56.70285 ], [ -5.22529, 56.70284 ], [ -5.22546, 56.70283 ], [ -5.22556, 56.70283 ], [ -5.22561, 56.70283 ], [ -5.22581, 56.70284 ], [ -5.22588, 56.70285 ], [ -5.22598, 56.70286 ], [ -5.22614, 56.70288 ], [ -5.22641, 56.70292 ], [ -5.22684, 56.70298 ], [ -5.22709, 56.70301 ], [ -5.22722, 56.70303 ], [ -5.22751, 56.70308 ], [ -5.22793, 56.70314 ], [ -5.22803, 56.70315 ], [ -5.22848, 56.70322 ], [ -5.22858, 56.70324 ], [ -5.22871, 56.70328 ], [ -5.2288, 56.7033 ], [ -5.22891, 56.70334 ], [ -5.22901, 56.70339 ], [ -5.22911, 56.70343 ], [ -5.22919, 56.70348 ], [ -5.22927, 56.70351 ], [ -5.22934, 56.70356 ], [ -5.23002, 56.70418 ], [ -5.2301, 56.70426 ], [ -5.23021, 56.70438 ], [ -5.23032, 56.70449 ], [ -5.23064, 56.70482 ], [ -5.23084, 56.70504 ], [ -5.23103, 56.70522 ], [ -5.23146, 56.70563 ], [ -5.23165, 56.70586 ], [ -5.23172, 56.70594 ], [ -5.23175, 56.706 ], [ -5.23178, 56.70605 ], [ -5.2318, 56.7061 ], [ -5.23181, 56.70614 ], [ -5.23182, 56.70618 ], [ -5.23185, 56.70626 ], [ -5.23185, 56.70634 ], [ -5.23186, 56.70644 ], [ -5.23185, 56.7065 ], [ -5.23184, 56.70655 ], [ -5.23183, 56.70661 ], [ -5.23181, 56.70666 ], [ -5.23179, 56.70671 ], [ -5.23176, 56.70675 ], [ -5.23168, 56.70688 ], [ -5.23158, 56.70704 ], [ -5.23151, 56.70714 ], [ -5.23128, 56.70747 ], [ -5.23109, 56.70769 ], [ -5.231, 56.70779 ], [ -5.23085, 56.70795 ], [ -5.23069, 56.70811 ], [ -5.23055, 56.70824 ], [ -5.23028, 56.70848 ], [ -5.22994, 56.70877 ], [ -5.22988, 56.70882 ], [ -5.22955, 56.7091 ], [ -5.22943, 56.70923 ], [ -5.22942, 56.70923 ], [ -5.2293, 56.70936 ], [ -5.22927, 56.70939 ], [ -5.22923, 56.70943 ], [ -5.22904, 56.70966 ], [ -5.22885, 56.70991 ], [ -5.22868, 56.71017 ], [ -5.22865, 56.71022 ], [ -5.22861, 56.71029 ], [ -5.22855, 56.71039 ], [ -5.22851, 56.71047 ], [ -5.22843, 56.71062 ], [ -5.22835, 56.7108 ], [ -5.22823, 56.71106 ], [ -5.22815, 56.71123 ], [ -5.22808, 56.71137 ], [ -5.22793, 56.71167 ], [ -5.2279, 56.71173 ], [ -5.22786, 56.71179 ], [ -5.22774, 56.71195 ], [ -5.22764, 56.71206 ], [ -5.22749, 56.71221 ], [ -5.2274, 56.71229 ], [ -5.22727, 56.71242 ], [ -5.22715, 56.71252 ], [ -5.22713, 56.71254 ], [ -5.22694, 56.71271 ], [ -5.22693, 56.71273 ], [ -5.22685, 56.71283 ], [ -5.2268, 56.71289 ], [ -5.22677, 56.71293 ], [ -5.22674, 56.713 ], [ -5.22671, 56.71307 ], [ -5.22666, 56.71336 ], [ -5.22666, 56.71393 ], [ -5.22666, 56.71424 ], [ -5.22667, 56.71438 ], [ -5.22669, 56.71443 ], [ -5.22672, 56.71448 ], [ -5.22676, 56.71454 ], [ -5.22679, 56.71459 ], [ -5.22682, 56.71462 ], [ -5.22686, 56.71466 ], [ -5.22689, 56.71469 ], [ -5.22697, 56.71475 ], [ -5.22715, 56.71487 ], [ -5.22734, 56.71494 ], [ -5.22746, 56.71498 ], [ -5.22756, 56.715 ], [ -5.22771, 56.71503 ], [ -5.22788, 56.71507 ], [ -5.22819, 56.71514 ], [ -5.22828, 56.71516 ], [ -5.2284, 56.7152 ], [ -5.22848, 56.71522 ], [ -5.22853, 56.71524 ], [ -5.22858, 56.71526 ], [ -5.22872, 56.71532 ], [ -5.2289, 56.71542 ], [ -5.2291, 56.71555 ], [ -5.22968, 56.7159 ], [ -5.2298, 56.71598 ], [ -5.2308, 56.71659 ], [ -5.23124, 56.71686 ], [ -5.23146, 56.71699 ], [ -5.23147, 56.717 ], [ -5.23168, 56.71712 ], [ -5.23191, 56.71725 ], [ -5.23213, 56.7174 ], [ -5.23221, 56.71745 ], [ -5.23226, 56.7175 ], [ -5.23231, 56.71754 ], [ -5.23235, 56.71758 ], [ -5.23238, 56.71761 ], [ -5.23241, 56.71765 ], [ -5.23244, 56.71769 ], [ -5.23251, 56.71778 ], [ -5.23255, 56.71787 ], [ -5.23257, 56.71792 ], [ -5.23259, 56.71799 ], [ -5.23261, 56.71806 ], [ -5.23262, 56.71812 ], [ -5.23262, 56.71819 ], [ -5.23262, 56.71823 ], [ -5.23261, 56.71827 ], [ -5.2326, 56.71832 ], [ -5.2326, 56.71834 ], [ -5.23257, 56.71842 ], [ -5.23254, 56.71849 ], [ -5.2325, 56.71857 ], [ -5.23245, 56.71864 ], [ -5.23239, 56.71873 ], [ -5.2323, 56.71882 ], [ -5.23229, 56.71883 ], [ -5.2322, 56.71892 ], [ -5.23205, 56.71907 ], [ -5.2318, 56.71932 ], [ -5.23168, 56.71944 ], [ -5.23166, 56.71945 ], [ -5.23161, 56.7195 ], [ -5.23158, 56.71952 ], [ -5.23155, 56.71955 ], [ -5.2315, 56.71961 ], [ -5.23149, 56.71962 ], [ -5.23144, 56.71968 ], [ -5.23142, 56.71973 ], [ -5.2314, 56.71978 ], [ -5.23139, 56.71982 ], [ -5.23137, 56.71986 ], [ -5.23134, 56.71999 ], [ -5.23135, 56.72003 ], [ -5.23135, 56.72007 ], [ -5.23137, 56.72012 ], [ -5.23139, 56.72018 ], [ -5.23142, 56.72024 ], [ -5.23144, 56.72028 ], [ -5.23147, 56.72032 ], [ -5.23152, 56.72038 ], [ -5.23158, 56.72046 ], [ -5.23177, 56.72066 ], [ -5.23179, 56.7207 ], [ -5.23194, 56.72086 ], [ -5.23207, 56.72102 ], [ -5.23213, 56.7211 ], [ -5.23217, 56.72117 ], [ -5.23222, 56.72124 ], [ -5.23226, 56.72131 ], [ -5.23229, 56.72139 ], [ -5.2323, 56.72144 ], [ -5.2323, 56.72148 ], [ -5.23231, 56.72152 ], [ -5.23232, 56.72156 ], [ -5.23232, 56.72164 ], [ -5.23233, 56.72176 ], [ -5.23233, 56.72186 ], [ -5.23233, 56.72188 ], [ -5.23233, 56.722 ], [ -5.23232, 56.72205 ], [ -5.23232, 56.72209 ], [ -5.23232, 56.72213 ], [ -5.23233, 56.72217 ], [ -5.23233, 56.7222 ], [ -5.23233, 56.72223 ], [ -5.23234, 56.72227 ], [ -5.23235, 56.7223 ], [ -5.23236, 56.72234 ], [ -5.23238, 56.72239 ], [ -5.2325, 56.72263 ], [ -5.2326, 56.72277 ], [ -5.2326, 56.72278 ], [ -5.23268, 56.72288 ], [ -5.23272, 56.72293 ], [ -5.23273, 56.72295 ], [ -5.23276, 56.72299 ], [ -5.2328, 56.72309 ], [ -5.23283, 56.72317 ], [ -5.23285, 56.72326 ], [ -5.23285, 56.72335 ], [ -5.23284, 56.72342 ], [ -5.23283, 56.72348 ], [ -5.23281, 56.72354 ], [ -5.23276, 56.72363 ], [ -5.23275, 56.72365 ], [ -5.23269, 56.72374 ], [ -5.23262, 56.72382 ], [ -5.23259, 56.72386 ], [ -5.23247, 56.72398 ], [ -5.23243, 56.72401 ], [ -5.23227, 56.72417 ], [ -5.23208, 56.72436 ], [ -5.23195, 56.7245 ], [ -5.23168, 56.7248 ], [ -5.23151, 56.72496 ], [ -5.23141, 56.72507 ], [ -5.23139, 56.72509 ], [ -5.23132, 56.72516 ], [ -5.23127, 56.72523 ], [ -5.23125, 56.72525 ], [ -5.23123, 56.72529 ], [ -5.23119, 56.72535 ], [ -5.23116, 56.72542 ], [ -5.23109, 56.72556 ], [ -5.23106, 56.72564 ], [ -5.23103, 56.72569 ], [ -5.231, 56.72577 ], [ -5.23099, 56.72581 ], [ -5.23099, 56.72585 ], [ -5.23098, 56.72588 ], [ -5.23098, 56.72591 ], [ -5.23099, 56.72596 ], [ -5.231, 56.726 ], [ -5.23101, 56.72605 ], [ -5.23103, 56.72617 ], [ -5.23105, 56.72629 ], [ -5.23106, 56.72637 ], [ -5.23107, 56.72646 ], [ -5.23107, 56.72652 ], [ -5.23107, 56.72658 ], [ -5.23107, 56.72663 ], [ -5.23106, 56.72671 ], [ -5.23106, 56.72678 ], [ -5.23105, 56.72682 ], [ -5.23105, 56.72685 ], [ -5.23103, 56.72692 ], [ -5.23101, 56.72697 ], [ -5.23099, 56.72703 ], [ -5.23095, 56.72713 ], [ -5.23092, 56.72718 ], [ -5.23088, 56.72725 ], [ -5.23083, 56.72732 ], [ -5.23079, 56.72737 ], [ -5.23074, 56.72742 ], [ -5.23064, 56.72752 ], [ -5.23064, 56.72753 ], [ -5.23047, 56.72768 ], [ -5.23042, 56.72773 ], [ -5.23021, 56.72791 ], [ -5.23012, 56.72798 ], [ -5.23002, 56.72806 ], [ -5.22993, 56.72813 ], [ -5.22975, 56.72828 ], [ -5.22969, 56.72832 ], [ -5.22957, 56.72843 ], [ -5.22947, 56.72851 ], [ -5.22938, 56.72858 ], [ -5.22919, 56.72872 ], [ -5.22915, 56.72876 ], [ -5.22883, 56.72897 ], [ -5.22856, 56.72914 ], [ -5.22846, 56.72919 ], [ -5.22833, 56.72927 ], [ -5.22798, 56.72947 ], [ -5.22788, 56.72953 ], [ -5.22768, 56.72964 ], [ -5.22719, 56.72991 ], [ -5.22711, 56.72996 ], [ -5.227, 56.73001 ], [ -5.22686, 56.73007 ], [ -5.22654, 56.73019 ], [ -5.22632, 56.73027 ], [ -5.22605, 56.73037 ], [ -5.22599, 56.73039 ], [ -5.22578, 56.73047 ], [ -5.22563, 56.73053 ], [ -5.22525, 56.73068 ], [ -5.22519, 56.7307 ], [ -5.22441, 56.73105 ], [ -5.22418, 56.73114 ], [ -5.22381, 56.7313 ], [ -5.22367, 56.73137 ], [ -5.22352, 56.73143 ], [ -5.22341, 56.73148 ], [ -5.22323, 56.73155 ], [ -5.22315, 56.73159 ], [ -5.22292, 56.73169 ], [ -5.22269, 56.73182 ], [ -5.22251, 56.73194 ], [ -5.22247, 56.73197 ], [ -5.22232, 56.73209 ], [ -5.22229, 56.73212 ], [ -5.22213, 56.73228 ], [ -5.222, 56.73245 ], [ -5.22194, 56.73252 ], [ -5.22186, 56.73261 ], [ -5.22168, 56.7328 ], [ -5.22139, 56.73306 ], [ -5.22137, 56.73307 ], [ -5.22119, 56.73323 ], [ -5.22111, 56.7333 ], [ -5.22101, 56.73338 ], [ -5.22082, 56.73352 ], [ -5.22073, 56.7336 ], [ -5.22063, 56.73367 ], [ -5.22016, 56.73403 ], [ -5.22004, 56.7341 ], [ -5.21989, 56.73418 ], [ -5.21979, 56.73422 ], [ -5.21966, 56.73426 ], [ -5.2193, 56.73435 ], [ -5.21921, 56.73438 ], [ -5.21904, 56.73443 ], [ -5.21887, 56.73453 ], [ -5.21874, 56.7346 ], [ -5.21873, 56.73462 ], [ -5.21854, 56.73476 ], [ -5.21842, 56.73486 ], [ -5.21835, 56.73491 ], [ -5.21814, 56.73505 ], [ -5.21794, 56.73519 ], [ -5.21772, 56.73532 ], [ -5.21756, 56.73542 ], [ -5.2175, 56.73546 ], [ -5.21726, 56.73558 ], [ -5.21712, 56.73566 ], [ -5.21703, 56.73571 ], [ -5.21679, 56.73583 ], [ -5.21665, 56.7359 ], [ -5.21632, 56.73606 ], [ -5.21609, 56.73621 ], [ -5.21596, 56.73628 ], [ -5.21547, 56.73663 ], [ -5.2154, 56.73668 ], [ -5.21526, 56.73676 ], [ -5.21482, 56.73703 ], [ -5.21479, 56.73705 ], [ -5.21462, 56.73718 ], [ -5.21436, 56.73739 ], [ -5.21426, 56.73747 ], [ -5.21417, 56.73754 ], [ -5.21405, 56.73761 ], [ -5.21395, 56.73768 ], [ -5.21376, 56.73776 ], [ -5.21355, 56.73784 ], [ -5.21345, 56.73788 ], [ -5.21327, 56.73793 ], [ -5.21303, 56.73799 ], [ -5.21296, 56.738 ], [ -5.21275, 56.73805 ], [ -5.21266, 56.73806 ], [ -5.21249, 56.73809 ], [ -5.21232, 56.73813 ], [ -5.21202, 56.73818 ], [ -5.21177, 56.73822 ], [ -5.21172, 56.73823 ], [ -5.21156, 56.73826 ], [ -5.21141, 56.73828 ], [ -5.21123, 56.73832 ], [ -5.21109, 56.73834 ], [ -5.21091, 56.73836 ], [ -5.21072, 56.73839 ], [ -5.21056, 56.73841 ], [ -5.21046, 56.73843 ], [ -5.2104, 56.73844 ], [ -5.21028, 56.73849 ], [ -5.2102, 56.73853 ], [ -5.21012, 56.73857 ], [ -5.20999, 56.73865 ], [ -5.2099, 56.73871 ], [ -5.20963, 56.73891 ], [ -5.20945, 56.73907 ], [ -5.20941, 56.73911 ], [ -5.20929, 56.73921 ], [ -5.20913, 56.73932 ], [ -5.20893, 56.73944 ], [ -5.20875, 56.73954 ], [ -5.20851, 56.73967 ], [ -5.2083, 56.73976 ], [ -5.20818, 56.73982 ], [ -5.20805, 56.73988 ], [ -5.2079, 56.73995 ], [ -5.20771, 56.74004 ], [ -5.20756, 56.74012 ], [ -5.2075, 56.74015 ], [ -5.20733, 56.74025 ], [ -5.20731, 56.74026 ], [ -5.20716, 56.74037 ], [ -5.20706, 56.74045 ], [ -5.20697, 56.74054 ], [ -5.20696, 56.74054 ], [ -5.20675, 56.74081 ], [ -5.2067, 56.74087 ], [ -5.2066, 56.74103 ], [ -5.20659, 56.74104 ], [ -5.20649, 56.74121 ], [ -5.20646, 56.74126 ], [ -5.20621, 56.74164 ], [ -5.20606, 56.74189 ], [ -5.20596, 56.74206 ], [ -5.2059, 56.74216 ], [ -5.20586, 56.74224 ], [ -5.20578, 56.74241 ], [ -5.20569, 56.74258 ], [ -5.20561, 56.74276 ], [ -5.2054, 56.7431 ], [ -5.20537, 56.74314 ], [ -5.2052, 56.74331 ], [ -5.20507, 56.74341 ], [ -5.20504, 56.74343 ], [ -5.20485, 56.74354 ], [ -5.20464, 56.74367 ], [ -5.20463, 56.74367 ], [ -5.2044, 56.7438 ], [ -5.20432, 56.74385 ], [ -5.20403, 56.74404 ], [ -5.20397, 56.74408 ], [ -5.20377, 56.74422 ], [ -5.20372, 56.74425 ], [ -5.20358, 56.74436 ], [ -5.20337, 56.74453 ], [ -5.20325, 56.74467 ], [ -5.2032, 56.74474 ], [ -5.20314, 56.74484 ], [ -5.20305, 56.74498 ], [ -5.20303, 56.74501 ], [ -5.20282, 56.74536 ], [ -5.20274, 56.74549 ], [ -5.20273, 56.74551 ], [ -5.20267, 56.74559 ], [ -5.20261, 56.74567 ], [ -5.20244, 56.74583 ], [ -5.20232, 56.74593 ], [ -5.20222, 56.74598 ], [ -5.20214, 56.74604 ], [ -5.2021, 56.74606 ], [ -5.202, 56.74612 ], [ -5.20176, 56.74625 ], [ -5.20143, 56.74641 ], [ -5.20141, 56.74642 ], [ -5.2011, 56.74657 ], [ -5.20094, 56.74662 ], [ -5.20072, 56.74668 ], [ -5.20043, 56.74675 ], [ -5.20032, 56.74678 ], [ -5.20026, 56.74679 ], [ -5.19982, 56.74688 ], [ -5.19966, 56.74692 ], [ -5.19953, 56.74696 ], [ -5.19943, 56.74699 ], [ -5.19939, 56.74702 ], [ -5.19935, 56.74704 ], [ -5.19906, 56.74718 ], [ -5.19904, 56.7472 ], [ -5.19893, 56.74726 ], [ -5.19878, 56.74737 ], [ -5.19869, 56.74747 ], [ -5.19859, 56.74758 ], [ -5.19849, 56.74773 ], [ -5.19848, 56.74775 ], [ -5.19838, 56.7479 ], [ -5.19837, 56.74792 ], [ -5.19818, 56.74824 ], [ -5.19809, 56.74841 ], [ -5.19808, 56.74844 ], [ -5.19808, 56.74845 ], [ -5.19802, 56.74861 ], [ -5.19799, 56.74876 ], [ -5.19797, 56.74892 ], [ -5.19793, 56.74905 ], [ -5.19792, 56.74909 ], [ -5.19789, 56.74915 ], [ -5.19788, 56.74916 ], [ -5.19783, 56.74922 ], [ -5.19775, 56.74931 ], [ -5.19763, 56.7494 ], [ -5.19731, 56.74959 ], [ -5.19685, 56.74983 ], [ -5.19673, 56.74988 ], [ -5.19663, 56.74993 ], [ -5.1966, 56.74995 ], [ -5.19653, 56.74998 ], [ -5.19634, 56.75006 ], [ -5.19622, 56.75011 ], [ -5.1962, 56.75012 ], [ -5.19589, 56.75023 ], [ -5.19568, 56.75031 ], [ -5.1956, 56.75034 ], [ -5.19552, 56.75036 ], [ -5.1954, 56.7504 ], [ -5.19524, 56.75045 ], [ -5.19511, 56.75049 ], [ -5.195, 56.75053 ], [ -5.19496, 56.75054 ], [ -5.19493, 56.75055 ], [ -5.19483, 56.75059 ], [ -5.19469, 56.75064 ], [ -5.19456, 56.75069 ], [ -5.19448, 56.75072 ], [ -5.19421, 56.75085 ], [ -5.19407, 56.75092 ], [ -5.19396, 56.75098 ], [ -5.19394, 56.75099 ], [ -5.19384, 56.75105 ], [ -5.19378, 56.75108 ], [ -5.19371, 56.75112 ], [ -5.1936, 56.7512 ], [ -5.19333, 56.75141 ], [ -5.19324, 56.75148 ], [ -5.19323, 56.75149 ], [ -5.19315, 56.75156 ], [ -5.19307, 56.75163 ], [ -5.1929, 56.75179 ], [ -5.19288, 56.75181 ], [ -5.19275, 56.75195 ], [ -5.19268, 56.75201 ], [ -5.19261, 56.75211 ], [ -5.19248, 56.75227 ], [ -5.19244, 56.75232 ], [ -5.19243, 56.75234 ], [ -5.19233, 56.75251 ], [ -5.19231, 56.75254 ], [ -5.19227, 56.75261 ], [ -5.19218, 56.7527 ], [ -5.1921, 56.7528 ], [ -5.19196, 56.75293 ], [ -5.19187, 56.75302 ], [ -5.19183, 56.75305 ], [ -5.19162, 56.75324 ], [ -5.19123, 56.75356 ], [ -5.19109, 56.7537 ], [ -5.19101, 56.75378 ], [ -5.19094, 56.75385 ], [ -5.19092, 56.75388 ], [ -5.19074, 56.75411 ], [ -5.19065, 56.75423 ], [ -5.19063, 56.75425 ], [ -5.19026, 56.75474 ], [ -5.19015, 56.75495 ], [ -5.19015, 56.75496 ], [ -5.19009, 56.7551 ], [ -5.19007, 56.75513 ], [ -5.19003, 56.75528 ], [ -5.19003, 56.7553 ], [ -5.18999, 56.75557 ], [ -5.18998, 56.75566 ], [ -5.18998, 56.75567 ], [ -5.18994, 56.75578 ], [ -5.18988, 56.7559 ], [ -5.18978, 56.75604 ], [ -5.18961, 56.75623 ], [ -5.18937, 56.75653 ], [ -5.18907, 56.75684 ], [ -5.18902, 56.75688 ], [ -5.18891, 56.75696 ], [ -5.1889, 56.75697 ], [ -5.1887, 56.75709 ], [ -5.18803, 56.75746 ], [ -5.188, 56.75748 ], [ -5.1879, 56.75754 ], [ -5.18777, 56.75761 ], [ -5.18768, 56.75767 ], [ -5.1873, 56.75789 ], [ -5.18684, 56.75816 ], [ -5.18658, 56.75834 ], [ -5.18646, 56.75842 ], [ -5.18644, 56.75843 ], [ -5.18579, 56.75893 ], [ -5.18551, 56.75911 ], [ -5.1852, 56.75928 ], [ -5.18513, 56.75931 ], [ -5.185, 56.75938 ], [ -5.18489, 56.75944 ], [ -5.18484, 56.75947 ], [ -5.18394, 56.7599 ], [ -5.18295, 56.7604 ], [ -5.18281, 56.76047 ], [ -5.18271, 56.76053 ], [ -5.18261, 56.76058 ], [ -5.18257, 56.76059 ], [ -5.1821, 56.76086 ], [ -5.18186, 56.76102 ], [ -5.18166, 56.7612 ], [ -5.18156, 56.76131 ], [ -5.18145, 56.76146 ], [ -5.18136, 56.76162 ], [ -5.18134, 56.76164 ], [ -5.18128, 56.76171 ], [ -5.18122, 56.76177 ], [ -5.18119, 56.76179 ], [ -5.18107, 56.7619 ], [ -5.18084, 56.76208 ], [ -5.18064, 56.76226 ], [ -5.18044, 56.76248 ], [ -5.18036, 56.76257 ], [ -5.18035, 56.76258 ], [ -5.1803, 56.76264 ], [ -5.18025, 56.7627 ], [ -5.18018, 56.76278 ], [ -5.18002, 56.76293 ], [ -5.17987, 56.76305 ], [ -5.1796, 56.76323 ], [ -5.17959, 56.76324 ], [ -5.17947, 56.76332 ], [ -5.17938, 56.76338 ], [ -5.17929, 56.76344 ], [ -5.17926, 56.76346 ], [ -5.17908, 56.76357 ], [ -5.17904, 56.76361 ], [ -5.17897, 56.76366 ], [ -5.17886, 56.76374 ], [ -5.17885, 56.76375 ], [ -5.17879, 56.76381 ], [ -5.1787, 56.7639 ], [ -5.17864, 56.76397 ], [ -5.17861, 56.764 ], [ -5.1785, 56.76412 ], [ -5.17838, 56.76421 ], [ -5.17837, 56.76422 ], [ -5.17823, 56.76432 ], [ -5.17799, 56.76446 ], [ -5.17784, 56.76456 ], [ -5.17773, 56.76466 ], [ -5.17755, 56.76489 ], [ -5.17736, 56.76519 ], [ -5.17735, 56.76521 ], [ -5.17729, 56.7653 ], [ -5.17724, 56.76537 ], [ -5.17719, 56.76544 ], [ -5.17718, 56.76546 ], [ -5.17707, 56.76564 ], [ -5.17698, 56.76578 ], [ -5.17687, 56.76593 ], [ -5.17678, 56.76605 ], [ -5.17671, 56.76614 ], [ -5.17669, 56.76616 ], [ -5.17658, 56.76628 ], [ -5.17639, 56.76646 ], [ -5.17633, 56.76653 ], [ -5.17624, 56.76661 ], [ -5.17594, 56.76691 ], [ -5.17545, 56.7674 ], [ -5.17541, 56.76743 ], [ -5.17537, 56.76747 ], [ -5.17529, 56.76753 ], [ -5.17502, 56.76773 ], [ -5.17464, 56.76797 ], [ -5.17458, 56.76801 ], [ -5.17444, 56.76811 ], [ -5.17408, 56.76838 ], [ -5.17396, 56.76847 ], [ -5.1734, 56.76891 ], [ -5.17329, 56.76899 ], [ -5.17327, 56.76901 ], [ -5.17321, 56.76905 ], [ -5.17312, 56.76912 ], [ -5.17281, 56.76934 ], [ -5.1728, 56.76935 ], [ -5.17247, 56.76957 ], [ -5.17239, 56.76961 ], [ -5.17234, 56.76965 ], [ -5.17217, 56.76972 ], [ -5.17215, 56.76973 ], [ -5.172, 56.76978 ], [ -5.17186, 56.76982 ], [ -5.17179, 56.76984 ], [ -5.17142, 56.76992 ], [ -5.17104, 56.77 ], [ -5.17068, 56.7701 ], [ -5.17042, 56.77018 ], [ -5.1702, 56.7703 ], [ -5.17004, 56.77041 ], [ -5.16995, 56.77047 ], [ -5.16986, 56.77054 ], [ -5.16975, 56.77062 ], [ -5.16965, 56.77069 ], [ -5.16946, 56.77083 ], [ -5.16936, 56.7709 ], [ -5.16926, 56.77097 ], [ -5.16806, 56.77182 ], [ -5.16791, 56.77194 ], [ -5.16743, 56.77228 ], [ -5.16728, 56.77239 ], [ -5.16725, 56.77242 ], [ -5.16712, 56.77253 ], [ -5.1671, 56.77255 ], [ -5.16704, 56.77261 ], [ -5.16693, 56.77273 ], [ -5.16682, 56.77287 ], [ -5.1667, 56.77304 ], [ -5.16658, 56.77321 ], [ -5.16646, 56.77342 ], [ -5.1664, 56.77354 ], [ -5.16636, 56.77363 ], [ -5.16634, 56.77371 ], [ -5.16634, 56.77374 ], [ -5.16632, 56.77389 ], [ -5.1663, 56.77396 ], [ -5.1663, 56.77402 ], [ -5.16629, 56.77409 ], [ -5.16627, 56.77443 ], [ -5.16623, 56.77472 ], [ -5.16623, 56.77478 ], [ -5.16622, 56.77496 ], [ -5.16622, 56.77497 ], [ -5.16621, 56.77513 ], [ -5.16618, 56.77556 ], [ -5.16613, 56.77578 ], [ -5.16609, 56.77586 ], [ -5.16605, 56.77596 ], [ -5.16601, 56.77603 ], [ -5.166, 56.77604 ], [ -5.16593, 56.77617 ], [ -5.1659, 56.7762 ], [ -5.16579, 56.77635 ], [ -5.16561, 56.77653 ], [ -5.16545, 56.77669 ], [ -5.16543, 56.77671 ], [ -5.1653, 56.77683 ], [ -5.1653, 56.77684 ], [ -5.16518, 56.77699 ], [ -5.16506, 56.77718 ], [ -5.1649, 56.77743 ], [ -5.16484, 56.77753 ], [ -5.16472, 56.77772 ], [ -5.16463, 56.77786 ], [ -5.16462, 56.77787 ], [ -5.16452, 56.77802 ], [ -5.16451, 56.77804 ], [ -5.1645, 56.77807 ], [ -5.16434, 56.77833 ], [ -5.16409, 56.7787 ], [ -5.16408, 56.77872 ], [ -5.16403, 56.7788 ], [ -5.16388, 56.77904 ], [ -5.16387, 56.77906 ], [ -5.16383, 56.77911 ], [ -5.16364, 56.77941 ], [ -5.16347, 56.7797 ], [ -5.16315, 56.78021 ], [ -5.16297, 56.7805 ], [ -5.16292, 56.7806 ], [ -5.16284, 56.78075 ], [ -5.16278, 56.78085 ], [ -5.1627, 56.78107 ], [ -5.16269, 56.7811 ], [ -5.16264, 56.78125 ], [ -5.16259, 56.78138 ], [ -5.16254, 56.7815 ], [ -5.16249, 56.78158 ], [ -5.16246, 56.78162 ], [ -5.16242, 56.78169 ], [ -5.16231, 56.78179 ], [ -5.16221, 56.78188 ], [ -5.16212, 56.78193 ], [ -5.16209, 56.78195 ], [ -5.16207, 56.78197 ], [ -5.16187, 56.78208 ], [ -5.1618, 56.78213 ], [ -5.16167, 56.78219 ], [ -5.16163, 56.78221 ], [ -5.16152, 56.78226 ], [ -5.16145, 56.78229 ], [ -5.16132, 56.78233 ], [ -5.1612, 56.78235 ], [ -5.16073, 56.78247 ], [ -5.16041, 56.78255 ], [ -5.16022, 56.7826 ], [ -5.16018, 56.78262 ], [ -5.16013, 56.78263 ], [ -5.15991, 56.78272 ], [ -5.15971, 56.78282 ], [ -5.15949, 56.78293 ], [ -5.15925, 56.78307 ], [ -5.15885, 56.78332 ], [ -5.15857, 56.78352 ], [ -5.15842, 56.78364 ], [ -5.15838, 56.78366 ], [ -5.15829, 56.78373 ], [ -5.15822, 56.78378 ], [ -5.15766, 56.78419 ], [ -5.15743, 56.78432 ], [ -5.1572, 56.78444 ], [ -5.15696, 56.78457 ], [ -5.15686, 56.78462 ], [ -5.15673, 56.78469 ], [ -5.15672, 56.78469 ], [ -5.15671, 56.7847 ], [ -5.15656, 56.7848 ], [ -5.15582, 56.7853 ], [ -5.1552, 56.78572 ], [ -5.15483, 56.78597 ], [ -5.15455, 56.78616 ], [ -5.15445, 56.78623 ], [ -5.15404, 56.78651 ], [ -5.15396, 56.78656 ], [ -5.15363, 56.78679 ], [ -5.15353, 56.78686 ], [ -5.15343, 56.78693 ], [ -5.15339, 56.78696 ], [ -5.1531, 56.78717 ], [ -5.15266, 56.78752 ], [ -5.15253, 56.78762 ], [ -5.15248, 56.78766 ], [ -5.15247, 56.78766 ], [ -5.15244, 56.78769 ], [ -5.15228, 56.78781 ], [ -5.15213, 56.78792 ], [ -5.15188, 56.78809 ], [ -5.15175, 56.78818 ], [ -5.15134, 56.78848 ], [ -5.15094, 56.78877 ], [ -5.15067, 56.78899 ], [ -5.15049, 56.78914 ], [ -5.15031, 56.78929 ], [ -5.1503, 56.7893 ], [ -5.15014, 56.78943 ], [ -5.14982, 56.78969 ], [ -5.14939, 56.79002 ], [ -5.14938, 56.79003 ], [ -5.1492, 56.79016 ], [ -5.14898, 56.79032 ], [ -5.14867, 56.79052 ], [ -5.14834, 56.79072 ], [ -5.14777, 56.79107 ], [ -5.14759, 56.79119 ], [ -5.14741, 56.7913 ], [ -5.14694, 56.79166 ], [ -5.14673, 56.79182 ], [ -5.1466, 56.79192 ], [ -5.14641, 56.79206 ], [ -5.14633, 56.79212 ], [ -5.14621, 56.79221 ], [ -5.1461, 56.79228 ], [ -5.146, 56.79235 ], [ -5.14583, 56.79245 ], [ -5.14581, 56.79246 ], [ -5.14559, 56.7926 ], [ -5.14471, 56.79313 ], [ -5.14457, 56.79322 ], [ -5.14407, 56.79353 ], [ -5.14373, 56.79374 ], [ -5.14368, 56.79377 ], [ -5.14351, 56.79387 ], [ -5.14329, 56.79401 ], [ -5.14307, 56.79414 ], [ -5.14273, 56.79435 ], [ -5.14264, 56.79441 ], [ -5.14262, 56.79442 ], [ -5.14242, 56.79454 ], [ -5.14198, 56.79481 ], [ -5.14195, 56.79483 ], [ -5.14178, 56.79495 ], [ -5.14178, 56.79496 ], [ -5.14164, 56.79509 ], [ -5.14162, 56.79511 ], [ -5.14158, 56.79516 ], [ -5.14153, 56.79523 ], [ -5.14145, 56.79532 ], [ -5.1413, 56.79548 ], [ -5.14124, 56.79555 ], [ -5.1412, 56.79559 ], [ -5.14112, 56.79567 ], [ -5.14109, 56.79571 ], [ -5.14103, 56.79577 ], [ -5.14096, 56.79583 ], [ -5.14093, 56.79585 ], [ -5.14078, 56.79598 ], [ -5.14062, 56.79612 ], [ -5.1406, 56.79613 ], [ -5.14015, 56.7965 ], [ -5.14, 56.79661 ], [ -5.13958, 56.79697 ], [ -5.13924, 56.79724 ], [ -5.13907, 56.79738 ], [ -5.13906, 56.79739 ], [ -5.13886, 56.79757 ], [ -5.13875, 56.79769 ], [ -5.13852, 56.79794 ], [ -5.13845, 56.79801 ], [ -5.13801, 56.7985 ], [ -5.13786, 56.79866 ], [ -5.13754, 56.799 ], [ -5.13736, 56.7992 ], [ -5.13657, 56.80005 ], [ -5.13642, 56.80021 ], [ -5.13628, 56.80036 ], [ -5.13613, 56.80052 ], [ -5.13577, 56.80089 ], [ -5.13567, 56.801 ], [ -5.13515, 56.80156 ], [ -5.1351, 56.8016 ], [ -5.13489, 56.80183 ], [ -5.13472, 56.802 ], [ -5.13448, 56.80222 ], [ -5.13426, 56.80243 ], [ -5.13414, 56.80255 ], [ -5.1336, 56.80305 ], [ -5.13351, 56.80314 ], [ -5.1333, 56.80333 ], [ -5.13315, 56.80347 ], [ -5.13295, 56.80364 ], [ -5.13273, 56.80381 ], [ -5.13243, 56.80403 ], [ -5.1324, 56.80406 ], [ -5.13198, 56.80435 ], [ -5.13179, 56.80448 ], [ -5.13173, 56.80452 ], [ -5.13161, 56.80463 ], [ -5.13155, 56.80468 ], [ -5.13144, 56.80478 ], [ -5.13134, 56.80488 ], [ -5.13128, 56.80494 ], [ -5.13111, 56.80509 ], [ -5.13097, 56.80522 ], [ -5.13075, 56.80542 ], [ -5.13038, 56.80574 ], [ -5.13027, 56.80582 ], [ -5.13026, 56.80583 ], [ -5.13015, 56.8059 ], [ -5.12997, 56.80601 ], [ -5.12963, 56.8062 ], [ -5.12922, 56.80644 ], [ -5.12904, 56.80655 ], [ -5.12897, 56.8066 ], [ -5.12889, 56.80665 ], [ -5.12865, 56.80684 ], [ -5.12862, 56.80687 ], [ -5.1284, 56.80707 ], [ -5.12796, 56.80749 ], [ -5.12781, 56.80763 ], [ -5.12764, 56.80777 ], [ -5.12761, 56.80779 ], [ -5.12751, 56.80786 ], [ -5.12739, 56.80794 ], [ -5.12722, 56.80802 ], [ -5.12715, 56.80805 ], [ -5.12688, 56.80818 ], [ -5.12674, 56.80824 ], [ -5.12645, 56.80837 ], [ -5.12628, 56.80845 ], [ -5.12616, 56.80854 ], [ -5.12613, 56.80857 ], [ -5.126, 56.80868 ], [ -5.12575, 56.80894 ], [ -5.12567, 56.80903 ], [ -5.12519, 56.80945 ], [ -5.125, 56.80958 ], [ -5.12469, 56.80981 ], [ -5.12449, 56.80995 ], [ -5.1241, 56.81024 ], [ -5.12405, 56.81027 ], [ -5.12401, 56.8103 ], [ -5.12374, 56.81049 ], [ -5.12363, 56.81056 ], [ -5.12321, 56.81085 ], [ -5.12319, 56.81087 ], [ -5.12268, 56.81119 ], [ -5.12257, 56.81126 ], [ -5.12197, 56.81163 ], [ -5.12145, 56.81194 ], [ -5.12106, 56.81218 ], [ -5.1208, 56.81235 ], [ -5.12053, 56.81251 ], [ -5.12008, 56.81277 ], [ -5.11966, 56.81303 ], [ -5.11944, 56.81317 ], [ -5.11921, 56.81331 ], [ -5.11904, 56.81342 ], [ -5.11826, 56.81392 ], [ -5.11757, 56.81438 ], [ -5.11732, 56.81455 ], [ -5.11709, 56.81475 ], [ -5.11686, 56.81495 ], [ -5.11679, 56.81515 ], [ -5.1168, 56.81517 ], [ -5.11681, 56.81518 ], [ -5.11683, 56.8152 ], [ -5.11683, 56.81522 ], [ -5.11684, 56.81523 ], [ -5.11684, 56.81526 ], [ -5.11684, 56.81529 ], [ -5.11682, 56.81532 ], [ -5.11679, 56.81535 ], [ -5.11677, 56.81537 ], [ -5.11674, 56.81539 ], [ -5.11669, 56.81542 ], [ -5.11663, 56.81543 ], [ -5.11626, 56.81572 ], [ -5.11543, 56.81627 ], [ -5.11529, 56.81636 ], [ -5.11519, 56.81643 ], [ -5.11517, 56.81644 ], [ -5.11517, 56.81648 ], [ -5.11515, 56.8165 ], [ -5.11514, 56.81652 ], [ -5.11508, 56.81655 ], [ -5.11482, 56.8167 ], [ -5.11474, 56.81675 ], [ -5.114744, 56.8167469 ], [ -5.11507, 56.81692 ], [ -5.11535, 56.81715 ], [ -5.11543, 56.81719 ], [ -5.11675, 56.81799 ], [ -5.11698, 56.81812 ], [ -5.11763, 56.81853 ], [ -5.11871, 56.8192 ], [ -5.11924, 56.81954 ], [ -5.11935, 56.81961 ], [ -5.11976, 56.81989 ], [ -5.11981, 56.81993 ], [ -5.12028, 56.82031 ], [ -5.12065, 56.82073 ], [ -5.121, 56.82116 ], [ -5.12106, 56.82124 ], [ -5.12117, 56.82169 ], [ -5.12132, 56.82228 ], [ -5.12139, 56.82312 ], [ -5.12139, 56.82313 ], [ -5.12137, 56.82363 ], [ -5.12131, 56.82383 ], [ -5.12125, 56.82405 ], [ -5.12102, 56.82457 ], [ -5.12089, 56.82489 ], [ -5.12052, 56.82575 ], [ -5.12038, 56.82606 ], [ -5.12025, 56.82631 ], [ -5.12023, 56.82638 ], [ -5.12023, 56.82646 ], [ -5.12021, 56.82667 ], [ -5.12027, 56.82702 ], [ -5.12035, 56.82727 ], [ -5.12038, 56.82736 ], [ -5.12042, 56.82745 ], [ -5.12053, 56.82764 ], [ -5.12073, 56.82785 ], [ -5.12073, 56.82786 ], [ -5.12076, 56.82789 ], [ -5.12095, 56.82801 ], [ -5.1212, 56.8281 ], [ -5.12131, 56.82815 ], [ -5.12168, 56.82827 ], [ -5.12203, 56.82836 ], [ -5.12224, 56.8284 ], [ -5.12232, 56.82841 ], [ -5.1226, 56.82841 ], [ -5.12284, 56.82839 ], [ -5.12316, 56.82834 ], [ -5.12348, 56.82824 ], [ -5.12359, 56.82819 ], [ -5.12369, 56.82807 ], [ -5.1236893, 56.8280729 ], [ -5.12374, 56.82802 ], [ -5.12383, 56.82792 ], [ -5.12386, 56.82778 ], [ -5.12386, 56.82773 ], [ -5.12387, 56.82765 ], [ -5.1238736, 56.8276482 ], [ -5.12476, 56.82804 ], [ -5.12491, 56.8281 ], [ -5.1252, 56.82827 ], [ -5.12523, 56.82829 ], [ -5.12535, 56.82836 ], [ -5.12543, 56.82843 ], [ -5.12547, 56.82846 ], [ -5.12556, 56.82858 ], [ -5.12564, 56.82871 ], [ -5.12573, 56.82904 ], [ -5.12573, 56.82912 ], [ -5.12574, 56.82922 ], [ -5.12574, 56.8293 ], [ -5.12575, 56.82948 ], [ -5.12575, 56.82952 ], [ -5.12573, 56.82964 ], [ -5.12573, 56.82966 ], [ -5.1257, 56.82975 ], [ -5.12564, 56.82988 ], [ -5.12555, 56.83001 ], [ -5.12552, 56.83006 ], [ -5.12543, 56.83018 ], [ -5.12531, 56.83034 ], [ -5.12506, 56.83068 ], [ -5.12499, 56.83077 ], [ -5.12494, 56.83084 ], [ -5.12471, 56.83118 ], [ -5.12459, 56.83135 ], [ -5.12447, 56.83152 ], [ -5.12446, 56.83153 ], [ -5.12406, 56.83207 ], [ -5.124, 56.83219 ], [ -5.1239, 56.83235 ], [ -5.12387, 56.83249 ], [ -5.12387, 56.83254 ], [ -5.12387, 56.83266 ], [ -5.1239, 56.83272 ], [ -5.1239, 56.83273 ], [ -5.124, 56.83289 ], [ -5.12419, 56.83303 ], [ -5.12426, 56.83308 ], [ -5.12466, 56.83328 ], [ -5.12484, 56.83337 ], [ -5.12491, 56.8334 ], [ -5.12517, 56.83351 ], [ -5.12542, 56.83363 ], [ -5.12568, 56.83374 ], [ -5.12593, 56.83385 ], [ -5.12597, 56.83387 ], [ -5.1262, 56.83395 ], [ -5.12647, 56.83406 ], [ -5.12648, 56.83406 ], [ -5.12668, 56.8341 ], [ -5.12679, 56.83411 ], [ -5.12711, 56.83415 ], [ -5.12743, 56.83419 ], [ -5.12775, 56.83422 ], [ -5.12793, 56.83424 ], [ -5.12807, 56.83426 ], [ -5.1284, 56.83429 ], [ -5.12872, 56.83432 ], [ -5.12893, 56.83434 ], [ -5.12904, 56.83435 ], [ -5.12937, 56.83438 ], [ -5.13034, 56.83446 ], [ -5.13051, 56.83448 ], [ -5.13099, 56.83453 ], [ -5.13227, 56.83469 ], [ -5.13249, 56.83472 ], [ -5.134, 56.83498 ], [ -5.13416, 56.83501 ], [ -5.13477, 56.83514 ], [ -5.13534, 56.83532 ], [ -5.1356, 56.8354 ], [ -5.13599, 56.8355 ], [ -5.13615, 56.83555 ], [ -5.13629, 56.83557 ], [ -5.13738, 56.83575 ], [ -5.13755, 56.83577 ], [ -5.13787, 56.83582 ], [ -5.13805, 56.83585 ], [ -5.13875, 56.83606 ], [ -5.13876, 56.83606 ], [ -5.13903, 56.83615 ], [ -5.13919, 56.8362 ], [ -5.13933, 56.83622 ], [ -5.13953, 56.83625 ], [ -5.13986, 56.83625 ], [ -5.13998, 56.83625 ], [ -5.14045, 56.83623 ], [ -5.14064, 56.83621 ], [ -5.14184, 56.83614 ], [ -5.14227, 56.83612 ], [ -5.14259, 56.8361 ], [ -5.14402, 56.83611 ], [ -5.14519, 56.83612 ], [ -5.14552, 56.83613 ], [ -5.14625, 56.83614 ], [ -5.1475, 56.83616 ], [ -5.14772, 56.83616 ], [ -5.14782, 56.83616 ], [ -5.14821, 56.83617 ], [ -5.14848, 56.83618 ], [ -5.14874, 56.8362 ], [ -5.14902, 56.83624 ], [ -5.14943, 56.83632 ], [ -5.14974, 56.83638 ], [ -5.15055, 56.83653 ], [ -5.15155, 56.83671 ], [ -5.15161, 56.83672 ], [ -5.15192, 56.83678 ], [ -5.15228, 56.83685 ], [ -5.15344, 56.83713 ], [ -5.15425, 56.83736 ], [ -5.15504, 56.83763 ], [ -5.15517, 56.83768 ], [ -5.15561, 56.8378 ], [ -5.15666, 56.8381 ], [ -5.15677, 56.83814 ], [ -5.15688, 56.83818 ], [ -5.15703, 56.83825 ], [ -5.15705, 56.83826 ], [ -5.15724, 56.83839 ], [ -5.15742, 56.8385 ], [ -5.15746, 56.83852 ], [ -5.15769, 56.83864 ], [ -5.1577, 56.83864 ], [ -5.15831, 56.83891 ], [ -5.15874, 56.83909 ], [ -5.15901, 56.83919 ], [ -5.15953, 56.83941 ], [ -5.16007, 56.83963 ], [ -5.16033, 56.83973 ], [ -5.1606, 56.83983 ], [ -5.16065, 56.83985 ], [ -5.16087, 56.83993 ], [ -5.16125, 56.84007 ], [ -5.16142, 56.84013 ], [ -5.1617, 56.84023 ], [ -5.16198, 56.84032 ], [ -5.16226, 56.84041 ], [ -5.16254, 56.84051 ], [ -5.16257, 56.84052 ], [ -5.16293, 56.84065 ], [ -5.16311, 56.84072 ], [ -5.16328, 56.84084 ], [ -5.16329, 56.84085 ], [ -5.16339, 56.84093 ], [ -5.16345, 56.841 ], [ -5.16348, 56.84104 ], [ -5.16352, 56.84113 ], [ -5.16354, 56.84118 ], [ -5.16355, 56.84121 ], [ -5.16354, 56.84136 ], [ -5.16354, 56.84153 ], [ -5.16354, 56.84154 ], [ -5.16354, 56.84172 ], [ -5.16354, 56.84176 ], [ -5.16359, 56.84189 ], [ -5.16366, 56.84198 ], [ -5.16375, 56.84205 ], [ -5.16376, 56.84207 ], [ -5.16392, 56.84214 ], [ -5.164, 56.84216 ], [ -5.16411, 56.8422 ], [ -5.1645, 56.84228 ], [ -5.16524, 56.8424 ], [ -5.16537, 56.84242 ], [ -5.16556, 56.84245 ], [ -5.16587, 56.8425 ], [ -5.16599, 56.84251 ], [ -5.16641, 56.84258 ], [ -5.1665, 56.8426 ], [ -5.16682, 56.84264 ], [ -5.16739, 56.84273 ], [ -5.16745, 56.84274 ], [ -5.16762, 56.84278 ], [ -5.16775, 56.84282 ], [ -5.16782, 56.84283 ], [ -5.16802, 56.84292 ], [ -5.16809, 56.84296 ], [ -5.16866, 56.84331 ], [ -5.16868, 56.84332 ], [ -5.169, 56.8435 ], [ -5.16941, 56.84371 ], [ -5.17038, 56.84409 ], [ -5.17064, 56.84419 ], [ -5.17065, 56.84419 ], [ -5.17119, 56.84438 ], [ -5.17151, 56.84446 ], [ -5.17173, 56.8445 ], [ -5.17182, 56.84451 ], [ -5.17195, 56.84452 ], [ -5.17214, 56.84453 ], [ -5.17239, 56.84452 ], [ -5.17247, 56.84452 ], [ -5.173, 56.84448 ], [ -5.17345, 56.84446 ], [ -5.17366, 56.84446 ], [ -5.17389, 56.84448 ], [ -5.17408, 56.8445 ], [ -5.1751, 56.84463 ], [ -5.1754, 56.84467 ], [ -5.17584, 56.84473 ], [ -5.17636, 56.8448 ], [ -5.1768, 56.84486 ], [ -5.17732, 56.84491 ], [ -5.17763, 56.84497 ], [ -5.17794, 56.84503 ], [ -5.17796, 56.84503 ], [ -5.17824, 56.8451 ], [ -5.17884, 56.84526 ], [ -5.17902, 56.8453 ], [ -5.17943, 56.84541 ], [ -5.17962, 56.84546 ], [ -5.18002, 56.84556 ], [ -5.18002, 56.84557 ], [ -5.18041, 56.84565 ], [ -5.18063, 56.8457 ], [ -5.18076, 56.84572 ], [ -5.18095, 56.84575 ], [ -5.18105, 56.84576 ], [ -5.18127, 56.84578 ], [ -5.18139, 56.84579 ], [ -5.1816, 56.84581 ], [ -5.18181, 56.84583 ], [ -5.18192, 56.84584 ], [ -5.18271, 56.84587 ], [ -5.18323, 56.84591 ], [ -5.18356, 56.84593 ], [ -5.18363, 56.84593 ], [ -5.18388, 56.84595 ], [ -5.18416, 56.84596 ], [ -5.18488, 56.846 ], [ -5.1852, 56.846 ], [ -5.1854, 56.846 ], [ -5.18552, 56.846 ], [ -5.1857, 56.84599 ], [ -5.18585, 56.84597 ], [ -5.18637, 56.84593 ], [ -5.18714, 56.84586 ], [ -5.18715, 56.84586 ], [ -5.18757, 56.84581 ], [ -5.18781, 56.84577 ], [ -5.18804, 56.84572 ], [ -5.18823, 56.84567 ], [ -5.18838, 56.84562 ], [ -5.18848, 56.84558 ], [ -5.18864, 56.84551 ], [ -5.18868, 56.8455 ], [ -5.18906, 56.84534 ], [ -5.1893, 56.84524 ], [ -5.18952, 56.84519 ], [ -5.18988, 56.84512 ], [ -5.19004, 56.84509 ], [ -5.19053, 56.84503 ], [ -5.19142, 56.84491 ], [ -5.19264, 56.84479 ], [ -5.19273, 56.84478 ], [ -5.19306, 56.84476 ], [ -5.19338, 56.84474 ], [ -5.19426, 56.84467 ], [ -5.19436, 56.84466 ], [ -5.19465, 56.84464 ], [ -5.19501, 56.84461 ], [ -5.19513, 56.8446 ], [ -5.19578, 56.84455 ], [ -5.19616, 56.8445 ], [ -5.19654, 56.84444 ], [ -5.19698, 56.84432 ], [ -5.19768, 56.84417 ], [ -5.19843, 56.844 ], [ -5.19857, 56.84398 ], [ -5.19883, 56.84396 ], [ -5.19906, 56.84395 ], [ -5.19926, 56.84397 ], [ -5.19947, 56.84402 ], [ -5.19975, 56.84412 ], [ -5.20015, 56.84435 ], [ -5.20053, 56.84456 ], [ -5.20058, 56.84459 ], [ -5.20083, 56.84471 ], [ -5.2011, 56.84477 ], [ -5.20148, 56.84482 ], [ -5.20203, 56.84487 ], [ -5.20235, 56.8449 ], [ -5.20291, 56.84497 ], [ -5.20308, 56.845 ], [ -5.20317, 56.84502 ], [ -5.20336, 56.84505 ], [ -5.20398, 56.84519 ], [ -5.20436, 56.84523 ], [ -5.2049, 56.84527 ], [ -5.20578, 56.84529 ], [ -5.20629, 56.84529 ], [ -5.20661, 56.8453 ], [ -5.20662, 56.8453 ], [ -5.2071, 56.8453 ], [ -5.20757, 56.8453 ], [ -5.20785, 56.84528 ], [ -5.20793, 56.84527 ], [ -5.2081, 56.84524 ], [ -5.20824, 56.84522 ], [ -5.20833, 56.8452 ], [ -5.20884, 56.84507 ], [ -5.20914, 56.84499 ], [ -5.20917, 56.84498 ], [ -5.21063, 56.84459 ], [ -5.21138, 56.84439 ], [ -5.21188, 56.84428 ], [ -5.21243, 56.84417 ], [ -5.21251, 56.84416 ], [ -5.21302, 56.84409 ], [ -5.21348, 56.84406 ], [ -5.21433, 56.84402 ], [ -5.2147, 56.84401 ], [ -5.21603, 56.84397 ], [ -5.217, 56.84394 ], [ -5.21728, 56.84393 ], [ -5.21733, 56.84393 ], [ -5.21796, 56.84391 ], [ -5.2182, 56.84389 ], [ -5.21861, 56.84385 ], [ -5.21885, 56.84382 ], [ -5.21967, 56.84373 ], [ -5.2208, 56.84361 ], [ -5.22145, 56.84353 ], [ -5.22192, 56.84345 ], [ -5.22256, 56.84334 ], [ -5.22293, 56.84329 ], [ -5.2233, 56.84325 ], [ -5.22376, 56.84324 ], [ -5.224, 56.84325 ], [ -5.22444, 56.84327 ], [ -5.22513, 56.84328 ], [ -5.22532, 56.84329 ], [ -5.22546, 56.84329 ], [ -5.226, 56.84325 ], [ -5.22644, 56.84321 ], [ -5.22653, 56.84319 ], [ -5.22666, 56.84316 ], [ -5.22717, 56.84303 ], [ -5.22743, 56.84296 ], [ -5.22763, 56.84291 ], [ -5.22802, 56.84279 ], [ -5.22851, 56.84269 ], [ -5.22893, 56.84262 ], [ -5.22991, 56.84251 ], [ -5.23027, 56.84248 ], [ -5.23153, 56.84234 ], [ -5.23242, 56.84226 ], [ -5.23316, 56.8422 ], [ -5.23366, 56.84218 ], [ -5.2338, 56.84219 ], [ -5.23413, 56.8422 ], [ -5.23465, 56.84225 ], [ -5.2355, 56.84234 ], [ -5.23607, 56.8424 ], [ -5.2364, 56.84243 ], [ -5.23686, 56.84248 ], [ -5.23704, 56.84249 ], [ -5.23731, 56.84251 ], [ -5.23784, 56.84252 ], [ -5.23863, 56.84253 ], [ -5.23868, 56.84253 ], [ -5.23934, 56.84252 ], [ -5.23948, 56.84252 ], [ -5.23967, 56.84252 ], [ -5.23995, 56.84251 ], [ -5.24025, 56.8425 ], [ -5.24033, 56.84249 ], [ -5.2406, 56.84247 ], [ -5.24065, 56.84246 ], [ -5.24091, 56.84241 ], [ -5.2412, 56.84235 ], [ -5.24167, 56.84226 ], [ -5.24201, 56.8422 ], [ -5.24239, 56.84215 ], [ -5.24253, 56.84214 ], [ -5.24293, 56.84212 ], [ -5.24376, 56.84211 ], [ -5.2445, 56.8421 ], [ -5.24483, 56.8421 ], [ -5.24619, 56.84209 ], [ -5.24677, 56.8421 ], [ -5.24713, 56.84211 ], [ -5.24744, 56.84214 ], [ -5.24754, 56.84215 ], [ -5.24783, 56.84219 ], [ -5.24852, 56.84226 ], [ -5.24944, 56.84236 ], [ -5.24977, 56.84239 ], [ -5.25005, 56.84242 ], [ -5.25062, 56.84248 ], [ -5.25105, 56.8425 ], [ -5.25134, 56.8425 ], [ -5.25173, 56.8425 ], [ -5.25187, 56.84249 ], [ -5.25255, 56.84247 ], [ -5.25337, 56.84244 ], [ -5.25374, 56.84243 ], [ -5.25426, 56.84242 ], [ -5.25481, 56.84242 ], [ -5.25541, 56.84245 ], [ -5.25599, 56.8425 ], [ -5.25606, 56.8425 ], [ -5.25632, 56.84253 ], [ -5.25644, 56.84254 ], [ -5.25664, 56.84256 ], [ -5.25706, 56.84261 ], [ -5.25729, 56.84262 ], [ -5.25764, 56.84265 ], [ -5.25807, 56.84267 ], [ -5.25843, 56.84266 ], [ -5.25871, 56.84264 ], [ -5.25897, 56.8426 ], [ -5.25923, 56.84255 ], [ -5.25925, 56.84254 ], [ -5.25951, 56.84246 ], [ -5.25962, 56.84243 ], [ -5.26, 56.84231 ], [ -5.26029, 56.84219 ], [ -5.26058, 56.84207 ], [ -5.26083, 56.84198 ], [ -5.26116, 56.84186 ], [ -5.26139, 56.8418 ], [ -5.26147, 56.84177 ], [ -5.26179, 56.84172 ], [ -5.26213, 56.84167 ], [ -5.26256, 56.84166 ], [ -5.26267, 56.84166 ], [ -5.26341, 56.84166 ], [ -5.26363, 56.84167 ], [ -5.26387, 56.84168 ], [ -5.26438, 56.84174 ], [ -5.26458, 56.84178 ], [ -5.2648, 56.84185 ], [ -5.26517, 56.84199 ], [ -5.26555, 56.84217 ], [ -5.2657, 56.84225 ], [ -5.26596, 56.84239 ], [ -5.26675, 56.84279 ], [ -5.26758, 56.84323 ], [ -5.26784, 56.84336 ], [ -5.26812, 56.84349 ], [ -5.26861, 56.84376 ], [ -5.2688, 56.84385 ], [ -5.26915, 56.84403 ], [ -5.26962, 56.84424 ], [ -5.26984, 56.84434 ], [ -5.26989, 56.84435 ], [ -5.27012, 56.84443 ], [ -5.27053, 56.84453 ], [ -5.27094, 56.84462 ], [ -5.27109, 56.84465 ], [ -5.27139, 56.84471 ], [ -5.2714, 56.84471 ], [ -5.27197, 56.8448 ], [ -5.27275, 56.84493 ], [ -5.27322, 56.84501 ], [ -5.27328, 56.84502 ], [ -5.2737, 56.84508 ], [ -5.27432, 56.84515 ], [ -5.27512, 56.84521 ], [ -5.27531, 56.84523 ], [ -5.27585, 56.84527 ], [ -5.276, 56.84527 ], [ -5.27627, 56.84529 ], [ -5.27693, 56.84534 ], [ -5.27709, 56.84535 ], [ -5.27763, 56.84538 ], [ -5.27807, 56.84541 ], [ -5.2784, 56.84543 ], [ -5.27872, 56.84545 ], [ -5.27885, 56.84546 ], [ -5.27905, 56.84547 ], [ -5.27934, 56.8455 ], [ -5.27958, 56.84552 ], [ -5.27979, 56.84553 ], [ -5.28017, 56.84556 ], [ -5.28093, 56.84561 ], [ -5.28151, 56.84567 ], [ -5.28201, 56.84576 ], [ -5.28209, 56.84578 ], [ -5.283, 56.84599 ], [ -5.28335, 56.84607 ], [ -5.28418, 56.84627 ], [ -5.28517, 56.84651 ], [ -5.28521, 56.84653 ], [ -5.28563, 56.84663 ], [ -5.28594, 56.8467 ], [ -5.28623, 56.84674 ], [ -5.28654, 56.84677 ], [ -5.28683, 56.84678 ], [ -5.28687, 56.84678 ], [ -5.28815, 56.8468 ], [ -5.28847, 56.8468 ], [ -5.29017, 56.84683 ], [ -5.29047, 56.84683 ], [ -5.29212, 56.84686 ], [ -5.29232, 56.84686 ], [ -5.29364, 56.84688 ], [ -5.29382, 56.84688 ], [ -5.29442, 56.84689 ], [ -5.29573, 56.84691 ], [ -5.29625, 56.84692 ], [ -5.29639, 56.84692 ], [ -5.29708, 56.84693 ], [ -5.29739, 56.84694 ], [ -5.29765, 56.84695 ], [ -5.29837, 56.84698 ], [ -5.29902, 56.84703 ], [ -5.29935, 56.84705 ], [ -5.2994, 56.84706 ], [ -5.30049, 56.84713 ], [ -5.3013, 56.84718 ], [ -5.30165, 56.84721 ], [ -5.3018, 56.84722 ], [ -5.30239, 56.84726 ], [ -5.3027, 56.84728 ], [ -5.30288, 56.84728 ], [ -5.30309, 56.84727 ], [ -5.30388, 56.8472 ], [ -5.30455, 56.84714 ], [ -5.30474, 56.84712 ], [ -5.30579, 56.84702 ], [ -5.30649, 56.84694 ], [ -5.30698, 56.84687 ], [ -5.30713, 56.84685 ], [ -5.30739, 56.8468 ], [ -5.30829, 56.84663 ], [ -5.3087, 56.84658 ], [ -5.3089, 56.84655 ], [ -5.30934, 56.84651 ], [ -5.3095, 56.8465 ], [ -5.30967, 56.84649 ], [ -5.30999, 56.84646 ], [ -5.31025, 56.84645 ], [ -5.31065, 56.84642 ], [ -5.31102, 56.84639 ], [ -5.31201, 56.84635 ], [ -5.31228, 56.84635 ], [ -5.31255, 56.84636 ], [ -5.31261, 56.84636 ], [ -5.31292, 56.84638 ], [ -5.31326, 56.84642 ], [ -5.31357, 56.84648 ], [ -5.31367, 56.84649 ], [ -5.31388, 56.84655 ], [ -5.31399, 56.84657 ], [ -5.31416, 56.84663 ], [ -5.31435, 56.84669 ], [ -5.31444, 56.84673 ], [ -5.31464, 56.84681 ], [ -5.31488, 56.84691 ], [ -5.31494, 56.84694 ], [ -5.31506, 56.84701 ], [ -5.31544, 56.84723 ], [ -5.31591, 56.84753 ], [ -5.31604, 56.84761 ], [ -5.31625, 56.84775 ], [ -5.31644, 56.84787 ], [ -5.31679, 56.84808 ], [ -5.317, 56.84821 ], [ -5.31716, 56.84827 ], [ -5.31724, 56.84831 ], [ -5.31744, 56.84836 ], [ -5.31763, 56.84842 ], [ -5.31822, 56.84858 ], [ -5.31891, 56.84877 ], [ -5.3192, 56.84885 ], [ -5.31947, 56.84892 ], [ -5.3195, 56.84892 ], [ -5.3198, 56.84899 ], [ -5.32003, 56.84905 ], [ -5.32062, 56.8492 ], [ -5.32127, 56.84937 ], [ -5.32177, 56.84948 ], [ -5.3219, 56.84951 ], [ -5.3222, 56.84959 ], [ -5.32223, 56.84959 ], [ -5.32253, 56.84967 ], [ -5.32277, 56.84975 ], [ -5.32278, 56.84975 ], [ -5.32296, 56.84983 ], [ -5.3231, 56.8499 ], [ -5.32326, 56.84999 ], [ -5.32355, 56.85024 ], [ -5.32385, 56.85048 ], [ -5.32399, 56.8506 ], [ -5.32417, 56.85074 ], [ -5.32425, 56.85081 ], [ -5.32437, 56.85089 ], [ -5.32447, 56.85096 ], [ -5.32469, 56.85108 ], [ -5.32483, 56.85115 ], [ -5.32498, 56.85122 ], [ -5.32519, 56.85131 ], [ -5.32535, 56.85136 ], [ -5.32537, 56.85136 ], [ -5.32558, 56.85142 ], [ -5.32565, 56.85144 ], [ -5.32595, 56.85151 ], [ -5.32599, 56.85152 ], [ -5.32626, 56.85157 ], [ -5.3264, 56.8516 ], [ -5.32656, 56.85164 ], [ -5.32688, 56.85171 ], [ -5.32718, 56.85177 ], [ -5.32725, 56.85179 ], [ -5.32748, 56.85184 ], [ -5.32755, 56.85185 ], [ -5.32778, 56.85191 ], [ -5.32779, 56.85192 ], [ -5.32798, 56.85198 ], [ -5.32818, 56.85206 ], [ -5.32833, 56.85212 ], [ -5.32856, 56.85223 ], [ -5.32878, 56.85237 ], [ -5.3288, 56.85238 ], [ -5.32905, 56.85255 ], [ -5.32919, 56.85265 ], [ -5.32939, 56.8528 ], [ -5.32946, 56.85285 ], [ -5.32959, 56.85294 ], [ -5.32985, 56.85313 ], [ -5.33014, 56.85332 ], [ -5.33057, 56.85356 ], [ -5.33091, 56.85374 ], [ -5.33094, 56.85375 ], [ -5.33117, 56.85385 ], [ -5.33123, 56.85387 ], [ -5.33145, 56.85394 ], [ -5.33161, 56.854 ], [ -5.33249, 56.85425 ], [ -5.33261, 56.85428 ], [ -5.3329, 56.85437 ], [ -5.33319, 56.85445 ], [ -5.33341, 56.85451 ], [ -5.33349, 56.85453 ], [ -5.33378, 56.85462 ], [ -5.33396, 56.85467 ], [ -5.33446, 56.8548 ], [ -5.33492, 56.85491 ], [ -5.33497, 56.85492 ], [ -5.33521, 56.85497 ], [ -5.33545, 56.85501 ], [ -5.3357, 56.85503 ], [ -5.33602, 56.85504 ], [ -5.33625, 56.85504 ], [ -5.33662, 56.85503 ], [ -5.33802, 56.855 ], [ -5.33822, 56.855 ], [ -5.33855, 56.855 ], [ -5.33888, 56.85499 ], [ -5.33921, 56.85499 ], [ -5.33932, 56.85498 ], [ -5.33954, 56.85498 ], [ -5.34141, 56.85496 ], [ -5.34151, 56.85496 ], [ -5.34184, 56.85497 ], [ -5.34207, 56.85498 ], [ -5.3425, 56.85499 ], [ -5.34252, 56.85499 ], [ -5.34291, 56.85502 ], [ -5.34339, 56.85509 ], [ -5.34381, 56.85515 ], [ -5.34423, 56.85524 ], [ -5.3447, 56.85535 ], [ -5.34506, 56.85547 ], [ -5.34538, 56.85558 ], [ -5.34582, 56.85574 ], [ -5.34593, 56.85578 ], [ -5.34619, 56.85589 ], [ -5.34646, 56.856 ], [ -5.34658, 56.85605 ], [ -5.34672, 56.8561 ], [ -5.34699, 56.85621 ], [ -5.34725, 56.85631 ], [ -5.34744, 56.85639 ], [ -5.34752, 56.85642 ], [ -5.34779, 56.85652 ], [ -5.34793, 56.85657 ], [ -5.34807, 56.85662 ], [ -5.34836, 56.8567 ], [ -5.3485, 56.85675 ], [ -5.34865, 56.85679 ], [ -5.34894, 56.85687 ], [ -5.34903, 56.85689 ], [ -5.34913, 56.85693 ], [ -5.3492, 56.85697 ], [ -5.34924, 56.85705 ], [ -5.34927, 56.85716 ], [ -5.3493, 56.85721 ], [ -5.34936, 56.85725 ], [ -5.34943, 56.85729 ], [ -5.34963, 56.85739 ], [ -5.34967, 56.85741 ], [ -5.34992, 56.85751 ], [ -5.34993, 56.85752 ], [ -5.35014, 56.85762 ], [ -5.35017, 56.85764 ], [ -5.35027, 56.85773 ], [ -5.35033, 56.8578 ], [ -5.35036, 56.85784 ], [ -5.35039, 56.85789 ], [ -5.35044, 56.85796 ], [ -5.35044, 56.85797 ], [ -5.35045, 56.858 ], [ -5.35047, 56.85808 ], [ -5.35047, 56.85813 ], [ -5.35047, 56.85815 ], [ -5.35046, 56.85821 ], [ -5.35042, 56.85832 ], [ -5.35039, 56.85841 ], [ -5.35035, 56.85855 ], [ -5.35032, 56.85862 ], [ -5.35027, 56.85867 ], [ -5.35021, 56.85872 ], [ -5.3501, 56.85882 ], [ -5.35, 56.8589 ], [ -5.34991, 56.85897 ], [ -5.34988, 56.85901 ], [ -5.34987, 56.85906 ], [ -5.34982, 56.85915 ], [ -5.34981, 56.85918 ], [ -5.34974, 56.85923 ], [ -5.34965, 56.85928 ], [ -5.34956, 56.85933 ], [ -5.34947, 56.85936 ], [ -5.34932, 56.85941 ], [ -5.34918, 56.85946 ], [ -5.34909, 56.85949 ], [ -5.34903, 56.85952 ], [ -5.34899, 56.85955 ], [ -5.34889, 56.85962 ], [ -5.34888, 56.85963 ], [ -5.34878, 56.85973 ], [ -5.34873, 56.85983 ], [ -5.34871, 56.85989 ], [ -5.34869, 56.85998 ], [ -5.34869, 56.86005 ], [ -5.3487, 56.86015 ], [ -5.34872, 56.86026 ], [ -5.34877, 56.86051 ], [ -5.3487663, 56.8605061 ], [ -5.34898, 56.86048 ], [ -5.3494, 56.86042 ], [ -5.34941, 56.86042 ], [ -5.34989, 56.86034 ], [ -5.35023, 56.86027 ], [ -5.35066, 56.86016 ], [ -5.3511, 56.86003 ], [ -5.35121, 56.86 ], [ -5.35149, 56.85991 ], [ -5.3515, 56.8599 ], [ -5.35177, 56.85981 ], [ -5.35202, 56.85972 ], [ -5.35205, 56.85971 ], [ -5.35258, 56.85953 ], [ -5.35261, 56.85952 ], [ -5.35287, 56.85943 ], [ -5.35289, 56.85942 ], [ -5.35317, 56.85933 ], [ -5.35346, 56.85924 ], [ -5.35376, 56.85915 ], [ -5.35404, 56.85908 ], [ -5.35405, 56.85907 ], [ -5.35442, 56.85898 ], [ -5.35516, 56.85882 ], [ -5.35525, 56.8588 ], [ -5.35558, 56.85874 ], [ -5.35632, 56.85862 ], [ -5.3566, 56.85858 ], [ -5.35683, 56.85855 ], [ -5.35697, 56.85853 ], [ -5.35748, 56.85849 ], [ -5.35751, 56.85849 ], [ -5.35783, 56.85846 ], [ -5.35815, 56.85843 ], [ -5.35875, 56.85841 ], [ -5.35906, 56.8584 ], [ -5.35911, 56.8584 ], [ -5.35944, 56.8584 ], [ -5.35957, 56.8584 ], [ -5.35977, 56.8584 ], [ -5.36017, 56.85841 ], [ -5.36043, 56.85842 ], [ -5.36063, 56.85843 ], [ -5.36119, 56.85847 ], [ -5.36154, 56.8585 ], [ -5.36205, 56.85856 ], [ -5.36269, 56.85864 ], [ -5.36283, 56.85866 ], [ -5.36322, 56.85873 ], [ -5.36357, 56.85879 ], [ -5.36389, 56.85886 ], [ -5.36455, 56.85901 ], [ -5.36486, 56.85907 ], [ -5.36584, 56.85929 ], [ -5.36632, 56.8594 ], [ -5.36701, 56.85954 ], [ -5.36759, 56.85967 ], [ -5.36791, 56.85974 ], [ -5.36852, 56.85987 ], [ -5.36883, 56.85994 ], [ -5.36919, 56.86001 ], [ -5.36966, 56.86012 ], [ -5.36975, 56.86014 ], [ -5.37005, 56.86021 ], [ -5.37012, 56.86022 ], [ -5.37062, 56.86034 ], [ -5.37112, 56.86047 ], [ -5.37219, 56.86078 ], [ -5.37267, 56.86091 ], [ -5.37271, 56.86092 ], [ -5.373, 56.861 ], [ -5.3733, 56.86109 ], [ -5.37359, 56.86116 ], [ -5.37375, 56.86121 ], [ -5.37415, 56.8613 ], [ -5.37419, 56.86131 ], [ -5.3745, 56.86137 ], [ -5.37457, 56.86139 ], [ -5.37481, 56.86143 ], [ -5.37508, 56.86148 ], [ -5.37592, 56.86164 ], [ -5.37605, 56.86166 ], [ -5.37664, 56.86177 ], [ -5.37668, 56.86177 ], [ -5.37699, 56.86183 ], [ -5.37741, 56.8619 ], [ -5.37793, 56.862 ], [ -5.37942, 56.86226 ], [ -5.37949, 56.86228 ], [ -5.37981, 56.86233 ], [ -5.38012, 56.86239 ], [ -5.38023, 56.86241 ], [ -5.38043, 56.86245 ], [ -5.38048, 56.86246 ], [ -5.38068, 56.8625 ], [ -5.38073, 56.86252 ], [ -5.38104, 56.86259 ], [ -5.38112, 56.86261 ], [ -5.38136, 56.86267 ], [ -5.38159, 56.86274 ], [ -5.38162, 56.86275 ], [ -5.38186, 56.86283 ], [ -5.38191, 56.86284 ], [ -5.38219, 56.86293 ], [ -5.38224, 56.86295 ], [ -5.38315, 56.86328 ], [ -5.38381, 56.8635 ], [ -5.38398, 56.86357 ], [ -5.38439, 56.86371 ], [ -5.38467, 56.8638 ], [ -5.38505, 56.86391 ], [ -5.38527, 56.86397 ], [ -5.38553, 56.86403 ], [ -5.38565, 56.86406 ], [ -5.38583, 56.8641 ], [ -5.38605, 56.86414 ], [ -5.38646, 56.86421 ], [ -5.38662, 56.86423 ], [ -5.38678, 56.86425 ], [ -5.3871, 56.86429 ], [ -5.38726, 56.86431 ], [ -5.38742, 56.86433 ], [ -5.38775, 56.86436 ], [ -5.38785, 56.86437 ], [ -5.38807, 56.86438 ], [ -5.38912, 56.86447 ], [ -5.3897, 56.86452 ], [ -5.39002, 56.86454 ], [ -5.39033, 56.86457 ], [ -5.39035, 56.86457 ], [ -5.39084, 56.86461 ], [ -5.391, 56.86462 ], [ -5.39125, 56.86464 ], [ -5.39133, 56.86464 ], [ -5.39185, 56.86467 ], [ -5.39198, 56.86467 ], [ -5.39218, 56.86467 ], [ -5.39231, 56.86467 ], [ -5.39256, 56.86467 ], [ -5.39264, 56.86467 ], [ -5.39297, 56.86465 ], [ -5.39298, 56.86465 ], [ -5.39338, 56.86463 ], [ -5.39405, 56.86456 ], [ -5.39452, 56.86449 ], [ -5.39458, 56.86448 ], [ -5.39489, 56.86442 ], [ -5.39491, 56.86442 ], [ -5.3952, 56.86436 ], [ -5.39527, 56.86434 ], [ -5.39586, 56.8642 ], [ -5.39665, 56.86393 ], [ -5.3977, 56.8635 ], [ -5.39786, 56.86343 ], [ -5.39796, 56.86339 ], [ -5.39846, 56.86316 ], [ -5.39888, 56.86297 ], [ -5.3993, 56.86276 ], [ -5.39968, 56.86255 ], [ -5.39996, 56.86236 ], [ -5.40019, 56.86218 ], [ -5.40037, 56.86202 ], [ -5.40054, 56.86184 ], [ -5.40069, 56.86163 ], [ -5.40073, 56.86158 ], [ -5.40092, 56.86129 ], [ -5.40095, 56.86125 ], [ -5.40105, 56.86101 ], [ -5.4011, 56.86093 ], [ -5.40114, 56.86089 ], [ -5.40125, 56.86082 ], [ -5.40133, 56.86079 ], [ -5.40143, 56.86075 ], [ -5.40167, 56.86065 ], [ -5.40234, 56.86038 ], [ -5.40267, 56.86026 ], [ -5.40276, 56.86023 ], [ -5.403, 56.86015 ], [ -5.40304, 56.86013 ], [ -5.40333, 56.86005 ], [ -5.40342, 56.86002 ], [ -5.40376, 56.85993 ], [ -5.40396, 56.85989 ], [ -5.40419, 56.85985 ], [ -5.40446, 56.85981 ], [ -5.40483, 56.85977 ], [ -5.40509, 56.85975 ], [ -5.40521, 56.85974 ], [ -5.40534, 56.85974 ], [ -5.40554, 56.85974 ], [ -5.40559, 56.85973 ], [ -5.40582, 56.85974 ], [ -5.40607, 56.85976 ], [ -5.40632, 56.85977 ], [ -5.40665, 56.85981 ], [ -5.40687, 56.85984 ], [ -5.40711, 56.85989 ], [ -5.40741, 56.85994 ], [ -5.40744, 56.85995 ], [ -5.40774, 56.86003 ], [ -5.40809, 56.86013 ], [ -5.40828, 56.8602 ], [ -5.40836, 56.86023 ], [ -5.40864, 56.86036 ], [ -5.40869, 56.86038 ], [ -5.40893, 56.86049 ], [ -5.40915, 56.86062 ], [ -5.40936, 56.86077 ], [ -5.40937, 56.86078 ], [ -5.40955, 56.86092 ], [ -5.4096, 56.86096 ], [ -5.40969, 56.86104 ], [ -5.40978, 56.86112 ], [ -5.40993, 56.86129 ], [ -5.41013, 56.86156 ], [ -5.4104, 56.86201 ], [ -5.41043, 56.86207 ], [ -5.41064, 56.86244 ], [ -5.41072, 56.86259 ], [ -5.41075, 56.86264 ], [ -5.41081, 56.86273 ], [ -5.41083, 56.86276 ], [ -5.4109, 56.86285 ], [ -5.41095, 56.86291 ], [ -5.41096, 56.86293 ], [ -5.41104, 56.86302 ], [ -5.4111, 56.86309 ], [ -5.41113, 56.86311 ], [ -5.41122, 56.8632 ], [ -5.41133, 56.86329 ], [ -5.41146, 56.86339 ], [ -5.41151, 56.86343 ], [ -5.41166, 56.86353 ], [ -5.41178, 56.8636 ], [ -5.41189, 56.86366 ], [ -5.41209, 56.86376 ], [ -5.41213, 56.86378 ], [ -5.41218, 56.8638 ], [ -5.4123, 56.86385 ], [ -5.4124, 56.86389 ], [ -5.41246, 56.86391 ], [ -5.41267, 56.86398 ], [ -5.41293, 56.86405 ], [ -5.41297, 56.86406 ], [ -5.4131, 56.8641 ], [ -5.41327, 56.86414 ], [ -5.41328, 56.86414 ], [ -5.41351, 56.86418 ], [ -5.41359, 56.86419 ], [ -5.41385, 56.86423 ], [ -5.41411, 56.86427 ], [ -5.41422, 56.86429 ], [ -5.41436, 56.86431 ], [ -5.41453, 56.86435 ], [ -5.41455, 56.86435 ], [ -5.41485, 56.86442 ], [ -5.41513, 56.8645 ], [ -5.41519, 56.86452 ], [ -5.41537, 56.86459 ], [ -5.41558, 56.86467 ], [ -5.41565, 56.86471 ], [ -5.41568, 56.86472 ], [ -5.41581, 56.8648 ], [ -5.41588, 56.86484 ], [ -5.41593, 56.86488 ], [ -5.41605, 56.86496 ], [ -5.41614, 56.86504 ], [ -5.41634, 56.86525 ], [ -5.41639, 56.8653 ], [ -5.41652, 56.86547 ], [ -5.41653, 56.86547 ], [ -5.41667, 56.86561 ], [ -5.41683, 56.86574 ], [ -5.41694, 56.86582 ], [ -5.41701, 56.86585 ], [ -5.4171, 56.86589 ], [ -5.41722, 56.86594 ], [ -5.41737, 56.866 ], [ -5.41751, 56.86605 ], [ -5.41787, 56.86615 ], [ -5.41871, 56.86641 ], [ -5.4191, 56.86653 ], [ -5.41932, 56.8666 ], [ -5.41938, 56.86662 ], [ -5.41967, 56.86671 ], [ -5.41989, 56.86677 ], [ -5.42021, 56.86686 ], [ -5.42025, 56.86687 ], [ -5.4204, 56.8669 ], [ -5.42056, 56.86694 ], [ -5.42077, 56.86698 ], [ -5.42087, 56.867 ], [ -5.42105, 56.86702 ], [ -5.42119, 56.86704 ], [ -5.42151, 56.86707 ], [ -5.42158, 56.86708 ], [ -5.42181, 56.86709 ], [ -5.42184, 56.86709 ], [ -5.42207, 56.86709 ], [ -5.42217, 56.86709 ], [ -5.42247, 56.86709 ], [ -5.4225, 56.86709 ], [ -5.42289, 56.86707 ], [ -5.42348, 56.86703 ], [ -5.42357, 56.86702 ], [ -5.42381, 56.86701 ], [ -5.42413, 56.86699 ], [ -5.42436, 56.86699 ], [ -5.42446, 56.867 ], [ -5.42462, 56.867 ], [ -5.42479, 56.86701 ], [ -5.42495, 56.86702 ], [ -5.42512, 56.86703 ], [ -5.42516, 56.86704 ], [ -5.42543, 56.86708 ], [ -5.42548, 56.86709 ], [ -5.42557, 56.86711 ], [ -5.42568, 56.86713 ], [ -5.42596, 56.86719 ], [ -5.4261, 56.86724 ], [ -5.42622, 56.86727 ], [ -5.4263, 56.8673 ], [ -5.42632, 56.86731 ], [ -5.4264, 56.86734 ], [ -5.42659, 56.86743 ], [ -5.42679, 56.86753 ], [ -5.42707, 56.86766 ], [ -5.42708, 56.86767 ], [ -5.42731, 56.86778 ], [ -5.42742, 56.86783 ], [ -5.42757, 56.8679 ], [ -5.42771, 56.86795 ], [ -5.42784, 56.868 ], [ -5.4279, 56.86802 ], [ -5.4281, 56.86809 ], [ -5.42812, 56.86809 ], [ -5.42839, 56.86817 ], [ -5.42841, 56.86817 ], [ -5.4286, 56.86821 ], [ -5.42872, 56.86823 ], [ -5.42882, 56.86825 ], [ -5.4291, 56.86828 ], [ -5.42937, 56.86829 ], [ -5.42938, 56.86829 ], [ -5.4297, 56.86829 ], [ -5.43, 56.86828 ], [ -5.43003, 56.86828 ], [ -5.43067, 56.86826 ], [ -5.43102, 56.86826 ], [ -5.43134, 56.86825 ], [ -5.4315, 56.86825 ], [ -5.43197, 56.86825 ], [ -5.43223, 56.86826 ], [ -5.43243, 56.86827 ], [ -5.43262, 56.86829 ], [ -5.43279, 56.86832 ], [ -5.43296, 56.86836 ], [ -5.43314, 56.8684 ], [ -5.43326, 56.86844 ], [ -5.43333, 56.86846 ], [ -5.43354, 56.86853 ], [ -5.43355, 56.86854 ], [ -5.43377, 56.86863 ], [ -5.4338, 56.86864 ], [ -5.43388, 56.86868 ], [ -5.43397, 56.86874 ], [ -5.43414, 56.86886 ], [ -5.43427, 56.86898 ], [ -5.43444, 56.86917 ], [ -5.43449, 56.86925 ], [ -5.43451, 56.86928 ], [ -5.43457, 56.86938 ], [ -5.4346, 56.86942 ], [ -5.43484, 56.86976 ], [ -5.43497, 56.86992 ], [ -5.43509, 56.87005 ], [ -5.4352, 56.87015 ], [ -5.43537, 56.87026 ], [ -5.43569, 56.87042 ], [ -5.43635, 56.87072 ], [ -5.437, 56.871 ], [ -5.43747, 56.87122 ], [ -5.43772, 56.87134 ], [ -5.43776, 56.87136 ], [ -5.43794, 56.87144 ], [ -5.43816, 56.87153 ], [ -5.43836, 56.87158 ], [ -5.43846, 56.8716 ], [ -5.43862, 56.87164 ], [ -5.43877, 56.87165 ], [ -5.43896, 56.87167 ], [ -5.4391, 56.87167 ], [ -5.43924, 56.87168 ], [ -5.43955, 56.87169 ], [ -5.43989, 56.87171 ], [ -5.44013, 56.87173 ], [ -5.44034, 56.87176 ], [ -5.4407, 56.87184 ], [ -5.44071, 56.87184 ], [ -5.44108, 56.87191 ], [ -5.44132, 56.87196 ], [ -5.44168, 56.87203 ], [ -5.4418, 56.87204 ], [ -5.44199, 56.87205 ], [ -5.44228, 56.87201 ], [ -5.44238, 56.87199 ], [ -5.44252, 56.87195 ], [ -5.44258, 56.87193 ], [ -5.44263, 56.87191 ], [ -5.4429, 56.8718 ], [ -5.44312, 56.87172 ], [ -5.44316, 56.8717 ], [ -5.44317, 56.8717 ], [ -5.44339, 56.87162 ], [ -5.44344, 56.8716 ], [ -5.44352, 56.87157 ], [ -5.44367, 56.87153 ], [ -5.44369, 56.87153 ], [ -5.44374, 56.87152 ], [ -5.44389, 56.87149 ], [ -5.44402, 56.87147 ], [ -5.4442, 56.87146 ], [ -5.44434, 56.87146 ], [ -5.44457, 56.87147 ], [ -5.4447, 56.87149 ], [ -5.44489, 56.8715 ], [ -5.4452, 56.87154 ], [ -5.44543, 56.87157 ], [ -5.44557, 56.87157 ], [ -5.44561, 56.87158 ], [ -5.44568, 56.87158 ], [ -5.44587, 56.87158 ], [ -5.44622, 56.87158 ], [ -5.44633, 56.87157 ], [ -5.44672, 56.87157 ], [ -5.44713, 56.87156 ], [ -5.44725, 56.87156 ], [ -5.44732, 56.87156 ], [ -5.44769, 56.87157 ], [ -5.44804, 56.87158 ], [ -5.4483, 56.8716 ], [ -5.44858, 56.87162 ], [ -5.44888, 56.87164 ], [ -5.44889, 56.87164 ], [ -5.44896, 56.87165 ], [ -5.44905, 56.87166 ], [ -5.44924, 56.8717 ], [ -5.44939, 56.87173 ], [ -5.44951, 56.87177 ], [ -5.44956, 56.87178 ], [ -5.44977, 56.87187 ], [ -5.45002, 56.87197 ], [ -5.45004, 56.87198 ], [ -5.45029, 56.87209 ], [ -5.45058, 56.87222 ], [ -5.45059, 56.87223 ], [ -5.4508, 56.87232 ], [ -5.45085, 56.87234 ], [ -5.45104, 56.87242 ], [ -5.45106, 56.87243 ], [ -5.45111, 56.87245 ], [ -5.45137, 56.87256 ], [ -5.4515, 56.87262 ], [ -5.45166, 56.87266 ], [ -5.45172, 56.87268 ], [ -5.45219, 56.87282 ], [ -5.45224, 56.87283 ], [ -5.45253, 56.87291 ], [ -5.45305, 56.87306 ], [ -5.45322, 56.87311 ], [ -5.45351, 56.87319 ], [ -5.45393, 56.87331 ], [ -5.45439, 56.87346 ], [ -5.45488, 56.87362 ], [ -5.45521, 56.87374 ], [ -5.45547, 56.87379 ], [ -5.45552, 56.8738 ], [ -5.45573, 56.87382 ], [ -5.45596, 56.87384 ], [ -5.45638, 56.87388 ], [ -5.45665, 56.87391 ], [ -5.45681, 56.87393 ], [ -5.45682, 56.87394 ], [ -5.45699, 56.87398 ], [ -5.4571, 56.87402 ], [ -5.45712, 56.87403 ], [ -5.45723, 56.8741 ], [ -5.45726, 56.87413 ], [ -5.4573, 56.87417 ], [ -5.45735, 56.87423 ], [ -5.45738, 56.87428 ], [ -5.45748, 56.87445 ], [ -5.4575, 56.87449 ], [ -5.45758, 56.87462 ], [ -5.45768, 56.87476 ], [ -5.4577, 56.87478 ], [ -5.45777, 56.87485 ], [ -5.4578, 56.87488 ], [ -5.45793, 56.87496 ], [ -5.4581, 56.87505 ], [ -5.45823, 56.8751 ], [ -5.45894, 56.87533 ], [ -5.45936, 56.87547 ], [ -5.45973, 56.87559 ], [ -5.45978, 56.87561 ], [ -5.45991, 56.87567 ], [ -5.46002, 56.87572 ], [ -5.46003, 56.87573 ], [ -5.46012, 56.87579 ], [ -5.46025, 56.87588 ], [ -5.46035, 56.87596 ], [ -5.46042, 56.87602 ], [ -5.46048, 56.87607 ], [ -5.4606, 56.87617 ], [ -5.46074, 56.87627 ], [ -5.46079, 56.87629 ], [ -5.46082, 56.8763 ], [ -5.46084, 56.87631 ], [ -5.46089, 56.87634 ], [ -5.46105, 56.87639 ], [ -5.46106, 56.87639 ], [ -5.46109, 56.8764 ], [ -5.46122, 56.87644 ], [ -5.46138, 56.87648 ], [ -5.46166, 56.87654 ], [ -5.462, 56.87661 ], [ -5.46236, 56.87668 ], [ -5.46258, 56.87673 ], [ -5.46262, 56.87674 ], [ -5.46293, 56.8768 ], [ -5.46313, 56.87684 ], [ -5.46351, 56.87692 ], [ -5.46354, 56.87693 ], [ -5.46382, 56.87698 ], [ -5.46385, 56.87699 ], [ -5.46404, 56.87703 ], [ -5.46431, 56.87707 ], [ -5.46447, 56.87709 ], [ -5.46468, 56.87711 ], [ -5.46483, 56.87712 ], [ -5.46489, 56.87712 ], [ -5.46513, 56.87713 ], [ -5.46514, 56.87713 ], [ -5.46543, 56.87713 ], [ -5.46547, 56.87713 ], [ -5.46571, 56.87713 ], [ -5.46601, 56.87712 ], [ -5.46627, 56.87711 ], [ -5.46645, 56.87709 ], [ -5.46678, 56.87707 ], [ -5.4668, 56.87707 ], [ -5.46704, 56.87704 ], [ -5.46706, 56.87704 ], [ -5.46739, 56.87703 ], [ -5.46762, 56.87702 ], [ -5.46786, 56.87702 ], [ -5.46804, 56.87703 ], [ -5.46823, 56.87704 ], [ -5.46837, 56.87707 ], [ -5.46841, 56.87708 ], [ -5.4686, 56.87712 ], [ -5.46871, 56.87715 ], [ -5.46882, 56.87717 ], [ -5.46896, 56.87723 ], [ -5.46899, 56.87724 ], [ -5.46916, 56.8773 ], [ -5.46923, 56.87733 ], [ -5.46925, 56.87735 ], [ -5.46954, 56.87748 ], [ -5.46979, 56.87762 ], [ -5.46996, 56.87769 ], [ -5.46999, 56.87771 ], [ -5.47007, 56.87775 ], [ -5.47021, 56.87781 ], [ -5.47031, 56.87786 ], [ -5.47055, 56.87795 ], [ -5.47071, 56.87801 ], [ -5.47091, 56.87806 ], [ -5.47104, 56.8781 ], [ -5.4712, 56.87814 ], [ -5.47152, 56.8782 ], [ -5.47166, 56.87822 ], [ -5.47169, 56.87823 ], [ -5.47193, 56.87827 ], [ -5.472, 56.87829 ], [ -5.47232, 56.87834 ], [ -5.47247, 56.87837 ], [ -5.4726, 56.87838 ], [ -5.47278, 56.8784 ], [ -5.47296, 56.87842 ], [ -5.47324, 56.87844 ], [ -5.47362, 56.87845 ], [ -5.4738, 56.87845 ], [ -5.47391, 56.87845 ], [ -5.47413, 56.87846 ], [ -5.47424, 56.87846 ], [ -5.47427, 56.87846 ], [ -5.47462, 56.87846 ], [ -5.4751, 56.87845 ], [ -5.4754, 56.87844 ], [ -5.47582, 56.87841 ], [ -5.47592, 56.8784 ], [ -5.47621, 56.87839 ], [ -5.47624, 56.87839 ], [ -5.47634, 56.87839 ], [ -5.47665, 56.87839 ], [ -5.47681, 56.87839 ], [ -5.47686, 56.8784 ], [ -5.4769, 56.8784 ], [ -5.47697, 56.87841 ], [ -5.47715, 56.87844 ], [ -5.47738, 56.87848 ], [ -5.47753, 56.87851 ], [ -5.47775, 56.87855 ], [ -5.47797, 56.87859 ], [ -5.47817, 56.87862 ], [ -5.4784, 56.87865 ], [ -5.4786, 56.87866 ], [ -5.47879, 56.87866 ], [ -5.47901, 56.87866 ], [ -5.47914, 56.87866 ], [ -5.47941, 56.87865 ], [ -5.47943, 56.87865 ], [ -5.47946, 56.87865 ], [ -5.47979, 56.87864 ], [ -5.48008, 56.87863 ], [ -5.48012, 56.87863 ], [ -5.48041, 56.87862 ], [ -5.48045, 56.87862 ], [ -5.4814, 56.87859 ], [ -5.48161, 56.87858 ], [ -5.48176, 56.87858 ], [ -5.48209, 56.87857 ], [ -5.48238, 56.87856 ], [ -5.48271, 56.87856 ], [ -5.48308, 56.87855 ], [ -5.48337, 56.87854 ], [ -5.48403, 56.87853 ], [ -5.48505, 56.87851 ], [ -5.48567, 56.8785 ], [ -5.48604, 56.87849 ], [ -5.48637, 56.87849 ], [ -5.48639, 56.87848 ], [ -5.48712, 56.87847 ], [ -5.48759, 56.87845 ], [ -5.48765, 56.87844 ], [ -5.48768, 56.87844 ], [ -5.48789, 56.87843 ], [ -5.48797, 56.87842 ], [ -5.48862, 56.87837 ], [ -5.48866, 56.87837 ], [ -5.48899, 56.87834 ], [ -5.48928, 56.87832 ], [ -5.48936, 56.87831 ], [ -5.4896, 56.87829 ], [ -5.49025, 56.87824 ], [ -5.49045, 56.87823 ], [ -5.4907, 56.8782 ], [ -5.49084, 56.87819 ], [ -5.49093, 56.87817 ], [ -5.49105, 56.87815 ], [ -5.49121, 56.87812 ], [ -5.49131, 56.8781 ], [ -5.49137, 56.87808 ], [ -5.49144, 56.87806 ], [ -5.4915, 56.87804 ], [ -5.49153, 56.87803 ], [ -5.49155, 56.87802 ], [ -5.49172, 56.87796 ], [ -5.49187, 56.87789 ], [ -5.49202, 56.87782 ], [ -5.49205, 56.8778 ], [ -5.49252, 56.87758 ], [ -5.49255, 56.87757 ], [ -5.49283, 56.87744 ], [ -5.4934, 56.87717 ], [ -5.49378, 56.877 ], [ -5.49381, 56.87699 ], [ -5.49388, 56.87696 ], [ -5.49405, 56.8769 ], [ -5.49408, 56.87689 ], [ -5.49422, 56.87685 ], [ -5.49448, 56.87681 ], [ -5.49466, 56.87678 ], [ -5.49498, 56.87674 ], [ -5.49502, 56.87673 ], [ -5.49512, 56.87672 ], [ -5.49551, 56.87665 ], [ -5.49561, 56.87662 ], [ -5.49565, 56.87662 ], [ -5.49571, 56.8766 ], [ -5.4959, 56.87654 ], [ -5.49594, 56.87653 ], [ -5.49608, 56.87649 ], [ -5.49619, 56.87645 ], [ -5.49661, 56.87632 ], [ -5.49677, 56.87628 ], [ -5.4969, 56.87625 ], [ -5.49739, 56.87616 ], [ -5.49741, 56.87616 ], [ -5.49784, 56.87611 ], [ -5.49803, 56.87609 ], [ -5.49807, 56.87609 ], [ -5.49839, 56.87606 ], [ -5.4987, 56.87603 ], [ -5.49978, 56.87592 ], [ -5.50099, 56.8758 ], [ -5.5016, 56.87574 ], [ -5.50163, 56.87574 ], [ -5.5018, 56.87572 ], [ -5.50202, 56.8757 ], [ -5.50224, 56.87568 ], [ -5.50228, 56.87568 ], [ -5.5026, 56.87566 ], [ -5.50285, 56.87565 ], [ -5.50342, 56.87565 ], [ -5.50374, 56.87566 ], [ -5.50396, 56.87567 ], [ -5.50405, 56.87568 ], [ -5.50415, 56.87569 ], [ -5.50485, 56.87578 ], [ -5.50489, 56.87579 ], [ -5.50491, 56.87579 ], [ -5.50513, 56.87581 ], [ -5.50598, 56.87586 ], [ -5.50685, 56.87588 ], [ -5.50693, 56.87588 ], [ -5.50784, 56.87585 ], [ -5.50785, 56.87585 ], [ -5.50813, 56.87584 ], [ -5.50817, 56.87583 ], [ -5.5085, 56.87582 ], [ -5.50877, 56.87581 ], [ -5.50882, 56.8758 ], [ -5.50911, 56.87579 ], [ -5.50915, 56.87578 ], [ -5.50931, 56.87577 ], [ -5.50947, 56.87575 ], [ -5.50959, 56.87574 ], [ -5.51, 56.87568 ], [ -5.51043, 56.87561 ], [ -5.51046, 56.87561 ], [ -5.51081, 56.87554 ], [ -5.51104, 56.87549 ], [ -5.51118, 56.87546 ], [ -5.51158, 56.87532 ], [ -5.51162, 56.87531 ], [ -5.51197, 56.87519 ], [ -5.51245, 56.87502 ], [ -5.51269, 56.87494 ], [ -5.51297, 56.87484 ], [ -5.513, 56.87483 ], [ -5.51305, 56.87481 ], [ -5.51328, 56.87473 ], [ -5.51353, 56.87465 ], [ -5.51381, 56.87455 ], [ -5.51384, 56.87454 ], [ -5.51408, 56.87445 ], [ -5.51439, 56.87435 ], [ -5.51443, 56.87433 ], [ -5.51464, 56.87426 ], [ -5.51477, 56.87421 ], [ -5.51494, 56.87414 ], [ -5.51515, 56.87405 ], [ -5.51517, 56.87405 ], [ -5.5152, 56.87403 ], [ -5.51561, 56.87387 ], [ -5.51582, 56.8738 ], [ -5.51598, 56.87375 ], [ -5.51599, 56.87375 ], [ -5.51602, 56.87374 ], [ -5.51632, 56.87366 ], [ -5.51658, 56.87359 ], [ -5.51662, 56.87358 ], [ -5.51677, 56.87355 ], [ -5.51715, 56.87346 ], [ -5.51719, 56.87346 ], [ -5.51723, 56.87345 ], [ -5.51735, 56.87343 ], [ -5.51755, 56.87341 ], [ -5.5177, 56.8734 ], [ -5.51779, 56.8734 ], [ -5.51791, 56.8734 ], [ -5.51812, 56.87343 ], [ -5.51816, 56.87344 ], [ -5.51819, 56.87345 ], [ -5.51825, 56.87347 ], [ -5.51837, 56.8735 ], [ -5.5185, 56.87355 ], [ -5.5186, 56.8736 ], [ -5.51877, 56.87369 ], [ -5.51886, 56.87375 ], [ -5.51893, 56.8738 ], [ -5.51906, 56.8739 ], [ -5.51935, 56.87411 ], [ -5.51951, 56.87421 ], [ -5.51954, 56.87422 ], [ -5.51956, 56.87424 ], [ -5.51967, 56.87429 ], [ -5.51975, 56.87432 ], [ -5.51979, 56.87434 ], [ -5.52003, 56.87443 ], [ -5.52012, 56.87446 ], [ -5.52029, 56.87452 ], [ -5.52043, 56.87458 ], [ -5.52048, 56.8746 ], [ -5.52054, 56.87464 ], [ -5.52061, 56.87468 ], [ -5.52066, 56.87472 ], [ -5.52069, 56.87475 ], [ -5.52071, 56.8748 ], [ -5.52072, 56.8748 ], [ -5.52073, 56.87484 ], [ -5.52074, 56.8749 ], [ -5.52075, 56.87494 ], [ -5.52075, 56.87499 ], [ -5.52071, 56.87513 ], [ -5.5207, 56.87516 ], [ -5.5207, 56.87518 ], [ -5.52064, 56.87534 ], [ -5.52048, 56.87577 ], [ -5.52046, 56.87588 ], [ -5.52045, 56.87594 ], [ -5.52046, 56.87607 ], [ -5.52048, 56.87613 ], [ -5.52051, 56.87619 ], [ -5.52057, 56.87626 ], [ -5.52066, 56.87632 ], [ -5.52074, 56.87636 ], [ -5.52076, 56.87637 ], [ -5.52089, 56.87641 ], [ -5.52102, 56.87644 ], [ -5.52105, 56.87645 ], [ -5.52106, 56.87645 ], [ -5.52133, 56.8765 ], [ -5.52187, 56.87656 ], [ -5.52201, 56.87659 ], [ -5.52214, 56.87662 ], [ -5.5223, 56.87667 ], [ -5.52237, 56.8767 ], [ -5.52245, 56.87673 ], [ -5.52253, 56.87677 ], [ -5.52254, 56.87678 ], [ -5.52266, 56.87685 ], [ -5.52273, 56.87691 ], [ -5.52286, 56.87701 ], [ -5.52293, 56.87705 ], [ -5.52295, 56.87707 ], [ -5.52298, 56.87709 ], [ -5.52316, 56.87719 ], [ -5.52319, 56.87719 ], [ -5.52337, 56.87727 ], [ -5.52346, 56.87729 ], [ -5.52371, 56.87735 ], [ -5.52373, 56.87736 ], [ -5.52376, 56.87736 ], [ -5.52407, 56.87743 ], [ -5.52408, 56.87743 ], [ -5.52448, 56.8775 ], [ -5.52467, 56.87752 ], [ -5.52476, 56.87754 ], [ -5.52497, 56.87754 ], [ -5.52499, 56.87754 ], [ -5.52503, 56.87754 ], [ -5.5253, 56.87753 ], [ -5.52536, 56.87753 ], [ -5.52565, 56.87751 ], [ -5.52626, 56.87747 ], [ -5.5263, 56.87747 ], [ -5.52732, 56.8774 ], [ -5.5277, 56.87737 ], [ -5.52859, 56.87731 ], [ -5.5294, 56.87725 ], [ -5.52972, 56.87722 ], [ -5.52993, 56.87719 ], [ -5.53008, 56.87716 ], [ -5.53026, 56.87712 ], [ -5.53049, 56.87706 ], [ -5.53052, 56.87705 ], [ -5.53053, 56.87705 ], [ -5.53078, 56.87696 ], [ -5.53081, 56.87695 ], [ -5.53122, 56.87682 ], [ -5.53162, 56.87668 ], [ -5.53165, 56.87667 ], [ -5.5319, 56.87659 ], [ -5.53193, 56.87657 ], [ -5.53218, 56.87649 ], [ -5.53222, 56.87647 ], [ -5.53258, 56.87635 ], [ -5.53273, 56.8763 ], [ -5.53277, 56.87629 ], [ -5.53296, 56.87623 ], [ -5.53302, 56.87622 ], [ -5.53323, 56.87616 ], [ -5.53334, 56.87614 ], [ -5.53336, 56.87614 ], [ -5.53352, 56.87612 ], [ -5.53365, 56.8761 ], [ -5.53368, 56.8761 ], [ -5.53378, 56.87609 ], [ -5.53396, 56.87608 ], [ -5.53397, 56.87608 ], [ -5.53414, 56.87607 ], [ -5.53434, 56.87607 ], [ -5.53435, 56.87607 ], [ -5.53565, 56.87605 ], [ -5.53577, 56.87605 ], [ -5.53595, 56.87604 ], [ -5.53598, 56.87604 ], [ -5.53683, 56.87603 ], [ -5.53698, 56.87603 ], [ -5.53714, 56.87601 ], [ -5.53727, 56.876 ], [ -5.53742, 56.87597 ], [ -5.53756, 56.87593 ], [ -5.53757, 56.87593 ], [ -5.53772, 56.87588 ], [ -5.53791, 56.87581 ], [ -5.53821, 56.87566 ], [ -5.53854, 56.87552 ], [ -5.53863, 56.87548 ], [ -5.53883, 56.87541 ], [ -5.53892, 56.87538 ], [ -5.53903, 56.87535 ], [ -5.5392, 56.8753 ], [ -5.53947, 56.87525 ], [ -5.53947, 56.87524 ], [ -5.53951, 56.87524 ], [ -5.53965, 56.87521 ], [ -5.53982, 56.87518 ], [ -5.54013, 56.87511 ], [ -5.5404, 56.87506 ], [ -5.54044, 56.87505 ], [ -5.54074, 56.87499 ], [ -5.54097, 56.87494 ], [ -5.54106, 56.87493 ], [ -5.54123, 56.8749 ], [ -5.54135, 56.87489 ], [ -5.54147, 56.87487 ], [ -5.54161, 56.87487 ], [ -5.5417, 56.87487 ], [ -5.54177, 56.87487 ], [ -5.54197, 56.87487 ], [ -5.54203, 56.87488 ], [ -5.54215, 56.8749 ], [ -5.54233, 56.87495 ], [ -5.54237, 56.87497 ], [ -5.54246, 56.87501 ], [ -5.54254, 56.87505 ], [ -5.54255, 56.87506 ], [ -5.54264, 56.87512 ], [ -5.54273, 56.87519 ], [ -5.54283, 56.87529 ], [ -5.54292, 56.87543 ], [ -5.54298, 56.87554 ], [ -5.54308, 56.87571 ], [ -5.54309, 56.87573 ], [ -5.54318, 56.87591 ], [ -5.54325, 56.87601 ], [ -5.5433, 56.87607 ], [ -5.5434, 56.87615 ], [ -5.54346, 56.8762 ], [ -5.54347, 56.87621 ], [ -5.54348, 56.87622 ], [ -5.54353, 56.87625 ], [ -5.54361, 56.8763 ], [ -5.54368, 56.87633 ], [ -5.54371, 56.87635 ], [ -5.54372, 56.87635 ], [ -5.54397, 56.87646 ], [ -5.54421, 56.87656 ], [ -5.54476, 56.87678 ], [ -5.54496, 56.87686 ], [ -5.54499, 56.87688 ], [ -5.54502, 56.87689 ], [ -5.54526, 56.87698 ], [ -5.54529, 56.87699 ], [ -5.5454, 56.87703 ], [ -5.54552, 56.87707 ], [ -5.54557, 56.87709 ], [ -5.54567, 56.87712 ], [ -5.54579, 56.87714 ], [ -5.54587, 56.87716 ], [ -5.54589, 56.87716 ], [ -5.546, 56.87717 ], [ -5.54612, 56.87718 ], [ -5.54616, 56.87718 ], [ -5.5462, 56.87718 ], [ -5.54627, 56.87718 ], [ -5.54643, 56.87718 ], [ -5.54685, 56.87714 ], [ -5.54686, 56.87713 ], [ -5.5474, 56.87706 ], [ -5.54745, 56.87706 ], [ -5.54749, 56.87706 ], [ -5.5476, 56.87704 ], [ -5.54781, 56.87703 ], [ -5.54782, 56.87703 ], [ -5.54802, 56.87704 ], [ -5.54811, 56.87704 ], [ -5.54824, 56.87705 ], [ -5.54843, 56.87707 ], [ -5.54846, 56.87707 ], [ -5.54847, 56.87707 ], [ -5.54879, 56.87712 ], [ -5.54897, 56.87715 ], [ -5.54924, 56.8772 ], [ -5.54941, 56.87723 ], [ -5.54946, 56.87724 ], [ -5.54967, 56.87731 ], [ -5.54977, 56.87734 ], [ -5.54996, 56.87741 ], [ -5.54997, 56.87742 ], [ -5.55008, 56.87747 ], [ -5.5511, 56.87797 ], [ -5.55117, 56.87801 ], [ -5.55141, 56.87813 ], [ -5.55154, 56.87819 ], [ -5.55168, 56.87826 ], [ -5.55183, 56.87832 ], [ -5.55195, 56.87837 ], [ -5.55197, 56.87837 ], [ -5.55207, 56.87841 ], [ -5.55221, 56.87844 ], [ -5.55224, 56.87845 ], [ -5.55238, 56.87847 ], [ -5.55252, 56.87849 ], [ -5.55264, 56.8785 ], [ -5.55285, 56.87849 ], [ -5.55286, 56.87849 ], [ -5.55289, 56.87849 ], [ -5.55313, 56.87848 ], [ -5.55351, 56.87845 ], [ -5.55405, 56.87839 ], [ -5.55415, 56.87837 ], [ -5.55419, 56.87837 ], [ -5.55436, 56.87835 ], [ -5.55461, 56.87833 ], [ -5.5548, 56.87831 ], [ -5.55484, 56.87831 ], [ -5.55503, 56.8783 ], [ -5.55511, 56.8783 ], [ -5.55513, 56.8783 ], [ -5.55516, 56.8783 ], [ -5.55522, 56.8783 ], [ -5.55534, 56.8783 ], [ -5.55561, 56.87832 ], [ -5.55588, 56.87834 ], [ -5.55614, 56.87837 ], [ -5.55625, 56.87838 ], [ -5.55679, 56.87844 ], [ -5.5573, 56.87849 ], [ -5.55743, 56.87851 ], [ -5.55785, 56.87855 ], [ -5.55804, 56.87858 ], [ -5.55849, 56.87866 ], [ -5.5587, 56.8787 ], [ -5.55889, 56.87875 ], [ -5.55941, 56.87887 ], [ -5.5601, 56.87904 ], [ -5.56033, 56.87909 ], [ -5.5604, 56.87911 ], [ -5.56055, 56.87914 ], [ -5.56071, 56.87917 ], [ -5.56081, 56.87919 ], [ -5.56092, 56.8792 ], [ -5.56101, 56.87921 ], [ -5.56106, 56.87921 ], [ -5.56115, 56.87921 ], [ -5.56125, 56.8792 ], [ -5.56144, 56.87919 ], [ -5.5617, 56.87916 ], [ -5.56193, 56.87913 ], [ -5.5621, 56.87912 ], [ -5.56229, 56.87911 ], [ -5.56233, 56.87911 ], [ -5.56246, 56.87912 ], [ -5.56267, 56.87914 ], [ -5.56307, 56.87919 ], [ -5.56366, 56.87927 ], [ -5.56452, 56.87939 ], [ -5.56457, 56.87939 ], [ -5.56489, 56.87944 ], [ -5.56492, 56.87944 ], [ -5.56508, 56.87946 ], [ -5.56521, 56.87947 ], [ -5.56529, 56.87948 ], [ -5.56542, 56.87948 ], [ -5.56551, 56.87948 ], [ -5.56565, 56.87948 ], [ -5.56581, 56.87946 ], [ -5.56602, 56.87943 ], [ -5.56618, 56.87939 ], [ -5.56638, 56.87934 ], [ -5.56647, 56.87931 ], [ -5.56664, 56.87926 ], [ -5.56676, 56.87923 ], [ -5.56764, 56.87895 ], [ -5.56836, 56.87876 ], [ -5.56851, 56.87873 ], [ -5.56866, 56.87869 ], [ -5.56911, 56.87858 ], [ -5.56917, 56.87856 ], [ -5.56952, 56.87848 ], [ -5.56977, 56.87843 ], [ -5.56991, 56.87841 ], [ -5.57003, 56.87839 ], [ -5.57008, 56.87838 ], [ -5.57035, 56.87835 ], [ -5.57054, 56.87833 ], [ -5.571, 56.87829 ], [ -5.57133, 56.87826 ], [ -5.57143, 56.87825 ], [ -5.57173, 56.87823 ], [ -5.572, 56.87821 ], [ -5.57228, 56.8782 ], [ -5.57264, 56.8782 ], [ -5.5727, 56.8782 ], [ -5.57296, 56.87821 ], [ -5.57325, 56.87822 ], [ -5.57362, 56.87823 ], [ -5.57461, 56.87826 ], [ -5.57527, 56.87828 ], [ -5.57529, 56.87828 ], [ -5.57559, 56.87828 ], [ -5.57592, 56.87829 ], [ -5.57624, 56.8783 ], [ -5.57679, 56.87832 ], [ -5.57699, 56.87833 ], [ -5.57719, 56.87835 ], [ -5.57738, 56.87838 ], [ -5.57753, 56.87842 ], [ -5.57772, 56.87847 ], [ -5.57785, 56.87851 ], [ -5.57793, 56.87855 ], [ -5.57805, 56.87861 ], [ -5.57807, 56.87863 ], [ -5.57813, 56.87866 ], [ -5.57822, 56.87872 ], [ -5.5783, 56.87877 ], [ -5.57835, 56.87882 ], [ -5.57846, 56.87892 ], [ -5.57868, 56.87916 ], [ -5.57904, 56.87956 ], [ -5.57908, 56.87961 ], [ -5.57918, 56.87973 ], [ -5.57926, 56.87983 ], [ -5.57939, 56.87999 ], [ -5.57944, 56.88009 ], [ -5.57953, 56.8803 ], [ -5.57964, 56.88059 ], [ -5.57967, 56.88066 ], [ -5.57973, 56.88076 ], [ -5.57974, 56.88078 ], [ -5.57982, 56.88089 ], [ -5.5799, 56.88098 ], [ -5.57999, 56.88105 ], [ -5.58012, 56.88114 ], [ -5.58026, 56.8812 ], [ -5.58034, 56.88124 ], [ -5.5805, 56.88129 ], [ -5.58053, 56.8813 ], [ -5.58067, 56.88134 ], [ -5.5808, 56.88136 ], [ -5.58096, 56.88138 ], [ -5.58111, 56.88139 ], [ -5.58117, 56.88139 ], [ -5.58127, 56.88139 ], [ -5.58147, 56.88139 ], [ -5.5815, 56.88139 ], [ -5.58177, 56.88138 ], [ -5.58182, 56.88138 ], [ -5.58233, 56.88135 ], [ -5.58261, 56.88134 ], [ -5.5827, 56.88134 ], [ -5.5828, 56.88134 ], [ -5.58281, 56.88134 ], [ -5.58292, 56.88135 ], [ -5.58306, 56.88137 ], [ -5.58313, 56.88138 ], [ -5.58322, 56.8814 ], [ -5.58336, 56.88144 ], [ -5.58344, 56.88146 ], [ -5.58351, 56.88149 ], [ -5.58369, 56.88156 ], [ -5.58387, 56.88163 ], [ -5.585, 56.88211 ], [ -5.58506, 56.88214 ], [ -5.58578, 56.88244 ], [ -5.58616, 56.8826 ], [ -5.58631, 56.88265 ], [ -5.58638, 56.88268 ], [ -5.58656, 56.88274 ], [ -5.58659, 56.88275 ], [ -5.58682, 56.88281 ], [ -5.58688, 56.88283 ], [ -5.58704, 56.88286 ], [ -5.5872, 56.88288 ], [ -5.58737, 56.88291 ], [ -5.58751, 56.88294 ], [ -5.58863, 56.8831 ], [ -5.58899, 56.88315 ], [ -5.58945, 56.88322 ], [ -5.58985, 56.88329 ], [ -5.59004, 56.88334 ], [ -5.59033, 56.88341 ], [ -5.59054, 56.88346 ], [ -5.59116, 56.88364 ], [ -5.59122, 56.88365 ], [ -5.59181, 56.88382 ], [ -5.59196, 56.88386 ], [ -5.5924, 56.88397 ], [ -5.59316, 56.88418 ], [ -5.5935, 56.88427 ], [ -5.59388, 56.88436 ], [ -5.59393, 56.88437 ], [ -5.59418, 56.88442 ], [ -5.59451, 56.88446 ], [ -5.59454, 56.88447 ], [ -5.59468, 56.88448 ], [ -5.59483, 56.88449 ], [ -5.59484, 56.88449 ], [ -5.59508, 56.88449 ], [ -5.59517, 56.88448 ], [ -5.5955, 56.88447 ], [ -5.59555, 56.88447 ], [ -5.59577, 56.88445 ], [ -5.59601, 56.88443 ], [ -5.59615, 56.88442 ], [ -5.59622, 56.88441 ], [ -5.59639, 56.88441 ], [ -5.59648, 56.88441 ], [ -5.59677, 56.88441 ], [ -5.59704, 56.88442 ], [ -5.59713, 56.88442 ], [ -5.59737, 56.88444 ], [ -5.59746, 56.88445 ], [ -5.59768, 56.88447 ], [ -5.59819, 56.88451 ], [ -5.5984, 56.88452 ], [ -5.59855, 56.88453 ], [ -5.59881, 56.88452 ], [ -5.59894, 56.88452 ], [ -5.59908, 56.8845 ], [ -5.59926, 56.88448 ], [ -5.59939, 56.88446 ], [ -5.59941, 56.88445 ], [ -5.59956, 56.88442 ], [ -5.59997, 56.88433 ], [ -5.60033, 56.88426 ], [ -5.60051, 56.88422 ], [ -5.60063, 56.88419 ], [ -5.60081, 56.88415 ], [ -5.60116, 56.88406 ], [ -5.60182, 56.88388 ], [ -5.60191, 56.88386 ], [ -5.60212, 56.88381 ], [ -5.60231, 56.88376 ], [ -5.60243, 56.88374 ], [ -5.60262, 56.8837 ], [ -5.60296, 56.88365 ], [ -5.60344, 56.8836 ], [ -5.60371, 56.88358 ], [ -5.60403, 56.88355 ], [ -5.60461, 56.88349 ], [ -5.60532, 56.88341 ], [ -5.60565, 56.88337 ], [ -5.60577, 56.88336 ], [ -5.60597, 56.88334 ], [ -5.6062, 56.88332 ], [ -5.6063, 56.88331 ], [ -5.60662, 56.88328 ], [ -5.60668, 56.88328 ], [ -5.60704, 56.88326 ], [ -5.60728, 56.88325 ], [ -5.60731, 56.88325 ], [ -5.60742, 56.88325 ], [ -5.60755, 56.88326 ], [ -5.60766, 56.88326 ], [ -5.60797, 56.8833 ], [ -5.60835, 56.88335 ], [ -5.60857, 56.88338 ], [ -5.60872, 56.88339 ], [ -5.60921, 56.88345 ], [ -5.60948, 56.88348 ], [ -5.60985, 56.88354 ], [ -5.61011, 56.88358 ], [ -5.61017, 56.88359 ], [ -5.61026, 56.8836 ], [ -5.61044, 56.88362 ], [ -5.61056, 56.88362 ], [ -5.61071, 56.88362 ], [ -5.61086, 56.88361 ], [ -5.611, 56.8836 ], [ -5.61153, 56.88355 ], [ -5.61186, 56.88351 ], [ -5.61211, 56.88348 ], [ -5.61242, 56.88347 ], [ -5.61267, 56.88347 ], [ -5.61289, 56.88348 ], [ -5.61318, 56.88353 ], [ -5.61336, 56.88357 ], [ -5.61354, 56.88363 ], [ -5.61378, 56.88375 ], [ -5.6139, 56.88381 ], [ -5.61406, 56.8839 ], [ -5.61413, 56.88394 ], [ -5.61436, 56.88407 ], [ -5.61444, 56.88412 ], [ -5.6151, 56.88449 ], [ -5.61543, 56.88466 ], [ -5.61553, 56.8847 ], [ -5.61557, 56.88472 ], [ -5.6157, 56.88478 ], [ -5.61579, 56.88481 ], [ -5.61587, 56.88484 ], [ -5.61602, 56.88489 ], [ -5.61621, 56.88494 ], [ -5.61642, 56.88498 ], [ -5.61665, 56.88502 ], [ -5.61668, 56.88503 ], [ -5.61683, 56.88505 ], [ -5.61704, 56.88507 ], [ -5.6173, 56.88509 ], [ -5.61773, 56.88511 ], [ -5.61799, 56.88511 ], [ -5.61849, 56.88512 ], [ -5.61898, 56.88513 ], [ -5.61913, 56.88514 ], [ -5.61964, 56.88515 ], [ -5.62002, 56.88514 ], [ -5.62022, 56.88514 ], [ -5.62042, 56.88512 ], [ -5.62057, 56.8851 ], [ -5.62061, 56.8851 ], [ -5.6207, 56.88508 ], [ -5.62082, 56.88506 ], [ -5.62125, 56.88499 ], [ -5.62156, 56.88493 ], [ -5.62228, 56.8848 ], [ -5.62249, 56.88476 ], [ -5.6228, 56.8847 ], [ -5.62361, 56.88455 ], [ -5.62374, 56.88453 ], [ -5.62466, 56.88436 ], [ -5.6253, 56.88424 ], [ -5.62561, 56.88418 ], [ -5.62585, 56.88413 ], [ -5.62592, 56.88412 ], [ -5.62619, 56.88408 ], [ -5.62641, 56.88405 ], [ -5.62657, 56.88403 ], [ -5.6267, 56.88402 ], [ -5.62703, 56.88401 ], [ -5.62721, 56.884 ], [ -5.62737, 56.88399 ], [ -5.62753, 56.88398 ], [ -5.62754, 56.88398 ], [ -5.62766, 56.88396 ], [ -5.62777, 56.88394 ], [ -5.62785, 56.88393 ], [ -5.62787, 56.88392 ], [ -5.62801, 56.88389 ], [ -5.6281, 56.88386 ], [ -5.62861, 56.8837 ], [ -5.62871, 56.88366 ], [ -5.62917, 56.88351 ], [ -5.62952, 56.8834 ], [ -5.62974, 56.88335 ], [ -5.62983, 56.88333 ], [ -5.62987, 56.88333 ], [ -5.62995, 56.88332 ], [ -5.63017, 56.8833 ], [ -5.6302, 56.8833 ], [ -5.63028, 56.8833 ], [ -5.63037, 56.88331 ], [ -5.6305, 56.88333 ], [ -5.63052, 56.88333 ], [ -5.63061, 56.88335 ], [ -5.63069, 56.88338 ], [ -5.63076, 56.88341 ], [ -5.63079, 56.88343 ], [ -5.6308, 56.88343 ], [ -5.63083, 56.88345 ], [ -5.63088, 56.8835 ], [ -5.63094, 56.88356 ], [ -5.63096, 56.88359 ], [ -5.63102, 56.88368 ], [ -5.63103, 56.88372 ], [ -5.63104, 56.88376 ], [ -5.63105, 56.88377 ], [ -5.63105, 56.88383 ], [ -5.63105, 56.8839 ], [ -5.63105, 56.88394 ], [ -5.63104, 56.884 ], [ -5.63103, 56.88407 ], [ -5.63099, 56.88421 ], [ -5.6309, 56.88447 ], [ -5.63089, 56.88449 ], [ -5.63084, 56.88466 ], [ -5.63083, 56.88473 ], [ -5.63083, 56.88479 ], [ -5.63083, 56.88483 ], [ -5.63084, 56.88488 ], [ -5.63085, 56.88492 ], [ -5.63087, 56.88495 ], [ -5.63091, 56.885 ], [ -5.63094, 56.88503 ], [ -5.631, 56.88508 ], [ -5.63106, 56.88513 ], [ -5.63109, 56.88515 ], [ -5.63112, 56.88516 ], [ -5.63122, 56.88521 ], [ -5.6313, 56.88524 ], [ -5.63135, 56.88526 ], [ -5.63141, 56.88528 ], [ -5.63153, 56.88531 ], [ -5.63174, 56.88536 ], [ -5.63291, 56.88561 ], [ -5.63318, 56.88566 ], [ -5.63322, 56.88567 ], [ -5.63353, 56.88573 ], [ -5.63384, 56.88579 ], [ -5.63414, 56.88586 ], [ -5.6344, 56.88593 ], [ -5.63503, 56.88609 ], [ -5.63508, 56.8861 ], [ -5.63532, 56.88618 ], [ -5.63537, 56.88619 ], [ -5.63561, 56.8863 ], [ -5.63618, 56.8866 ], [ -5.63648, 56.88676 ], [ -5.63675, 56.88689 ], [ -5.63703, 56.88701 ], [ -5.63721, 56.88706 ], [ -5.63743, 56.8871 ], [ -5.63758, 56.88712 ], [ -5.63781, 56.88712 ], [ -5.63791, 56.88712 ], [ -5.63794, 56.88712 ], [ -5.63817, 56.88711 ], [ -5.63837, 56.88709 ], [ -5.63866, 56.88704 ], [ -5.6389, 56.887 ], [ -5.63915, 56.88696 ], [ -5.63943, 56.88692 ], [ -5.6395, 56.88691 ], [ -5.63973, 56.88689 ], [ -5.63983, 56.88688 ], [ -5.64037, 56.88683 ], [ -5.64048, 56.88682 ], [ -5.64072, 56.88679 ], [ -5.6408, 56.88678 ], [ -5.64134, 56.88671 ], [ -5.64249, 56.88655 ], [ -5.64303, 56.88648 ], [ -5.64335, 56.88643 ], [ -5.64345, 56.88642 ], [ -5.64367, 56.88639 ], [ -5.64398, 56.88634 ], [ -5.64399, 56.88634 ], [ -5.6443, 56.88628 ], [ -5.64446, 56.88626 ], [ -5.64522, 56.88612 ], [ -5.64556, 56.88606 ], [ -5.64588, 56.88602 ], [ -5.64619, 56.88598 ], [ -5.6462, 56.88598 ], [ -5.64651, 56.88595 ], [ -5.64685, 56.88592 ], [ -5.64693, 56.88592 ], [ -5.64758, 56.88588 ], [ -5.6484, 56.88581 ], [ -5.64866, 56.88579 ], [ -5.6488, 56.88577 ], [ -5.649, 56.88574 ], [ -5.64912, 56.88572 ], [ -5.64933, 56.88568 ], [ -5.64942, 56.88565 ], [ -5.64971, 56.88558 ], [ -5.64972, 56.88558 ], [ -5.65001, 56.8855 ], [ -5.65089, 56.88525 ], [ -5.65107, 56.8852 ], [ -5.65119, 56.88517 ], [ -5.65209, 56.88495 ], [ -5.65251, 56.88485 ], [ -5.65269, 56.88481 ], [ -5.653, 56.88474 ], [ -5.65343, 56.88465 ], [ -5.65361, 56.88461 ], [ -5.65374, 56.88459 ], [ -5.65397, 56.88453 ], [ -5.65425, 56.88444 ], [ -5.65447, 56.88435 ], [ -5.65469, 56.88426 ], [ -5.65547, 56.88391 ], [ -5.65601, 56.88367 ], [ -5.65633, 56.88352 ], [ -5.65676, 56.88332 ], [ -5.65678, 56.88331 ], [ -5.65701, 56.88321 ], [ -5.65716, 56.88314 ], [ -5.65734, 56.88307 ], [ -5.65747, 56.88302 ], [ -5.65754, 56.88299 ], [ -5.65767, 56.88295 ], [ -5.6579, 56.8829 ], [ -5.65807, 56.88286 ], [ -5.65815, 56.88285 ], [ -5.65828, 56.88283 ], [ -5.65865, 56.88278 ], [ -5.65966, 56.88264 ], [ -5.65974, 56.88263 ], [ -5.66017, 56.88256 ], [ -5.66037, 56.88252 ], [ -5.66069, 56.88247 ], [ -5.66077, 56.88246 ], [ -5.66117, 56.8824 ], [ -5.66137, 56.88237 ], [ -5.66156, 56.88233 ], [ -5.66163, 56.88232 ], [ -5.66177, 56.88229 ], [ -5.66191, 56.88225 ], [ -5.66206, 56.88219 ], [ -5.6622, 56.88214 ], [ -5.66234, 56.88206 ], [ -5.66247, 56.88197 ], [ -5.66259, 56.88187 ], [ -5.6626, 56.88186 ], [ -5.66275, 56.88169 ], [ -5.66286, 56.88156 ], [ -5.66307, 56.88128 ], [ -5.66312, 56.8812 ], [ -5.66323, 56.88103 ], [ -5.66334, 56.88086 ], [ -5.6634, 56.88078 ], [ -5.66345, 56.88069 ], [ -5.66362, 56.88038 ], [ -5.66365, 56.88034 ], [ -5.66384, 56.88005 ], [ -5.66396, 56.87992 ], [ -5.66405, 56.87983 ], [ -5.66423, 56.8797 ], [ -5.66452, 56.87954 ], [ -5.66467, 56.87946 ], [ -5.66486, 56.87935 ], [ -5.6649, 56.87933 ], [ -5.6658, 56.87881 ], [ -5.66615, 56.87862 ], [ -5.66636, 56.87853 ], [ -5.66661, 56.87843 ], [ -5.66675, 56.87836 ], [ -5.66697, 56.87828 ], [ -5.66707, 56.87824 ], [ -5.66729, 56.87817 ], [ -5.66745, 56.87813 ], [ -5.66763, 56.87808 ], [ -5.66803, 56.87798 ], [ -5.66815, 56.87796 ], [ -5.66835, 56.87792 ], [ -5.66851, 56.8779 ], [ -5.66872, 56.87787 ], [ -5.66896, 56.87785 ], [ -5.66898, 56.87784 ], [ -5.66931, 56.87782 ], [ -5.66938, 56.87781 ], [ -5.66967, 56.8778 ], [ -5.6699, 56.87779 ], [ -5.67009, 56.87779 ], [ -5.67029, 56.87779 ], [ -5.67047, 56.87779 ], [ -5.67117, 56.87782 ], [ -5.67143, 56.87784 ], [ -5.6716, 56.87786 ], [ -5.67166, 56.87786 ], [ -5.67213, 56.87792 ], [ -5.67247, 56.87799 ], [ -5.67264, 56.87802 ], [ -5.67284, 56.87807 ], [ -5.67324, 56.87817 ], [ -5.67349, 56.87825 ], [ -5.67381, 56.87838 ], [ -5.6742, 56.87854 ], [ -5.67454, 56.8787 ], [ -5.67513, 56.879 ], [ -5.67569, 56.87929 ], [ -5.67593, 56.87941 ], [ -5.67612, 56.87951 ], [ -5.67645, 56.87967 ], [ -5.67671, 56.87978 ], [ -5.67708, 56.87993 ], [ -5.67712, 56.87994 ], [ -5.6774, 56.88003 ], [ -5.67751, 56.88007 ], [ -5.67788, 56.88017 ], [ -5.67799, 56.88019 ], [ -5.6783, 56.88025 ], [ -5.67844, 56.88028 ], [ -5.67862, 56.8803 ], [ -5.67895, 56.88035 ], [ -5.67926, 56.88038 ], [ -5.67933, 56.88038 ], [ -5.67959, 56.8804 ], [ -5.6797, 56.88041 ], [ -5.68009, 56.88043 ], [ -5.68024, 56.88043 ], [ -5.68057, 56.88043 ], [ -5.6809, 56.88044 ], [ -5.68099, 56.88044 ], [ -5.68156, 56.88044 ], [ -5.68254, 56.88043 ], [ -5.68255, 56.88043 ], [ -5.68288, 56.88043 ], [ -5.68354, 56.88043 ], [ -5.68392, 56.88043 ], [ -5.68452, 56.88044 ], [ -5.68485, 56.88045 ], [ -5.68506, 56.88045 ], [ -5.68584, 56.88047 ], [ -5.6865, 56.8805 ], [ -5.6866, 56.8805 ], [ -5.68683, 56.8805 ], [ -5.68715, 56.88051 ], [ -5.68754, 56.88052 ], [ -5.68814, 56.88054 ], [ -5.68853, 56.88055 ], [ -5.68883, 56.88056 ], [ -5.68908, 56.88057 ], [ -5.68942, 56.8806 ], [ -5.68965, 56.88063 ], [ -5.68977, 56.88064 ], [ -5.69021, 56.88071 ], [ -5.69051, 56.88076 ], [ -5.69054, 56.88077 ], [ -5.69079, 56.88082 ], [ -5.69108, 56.88089 ], [ -5.69132, 56.88097 ], [ -5.69171, 56.88109 ], [ -5.69212, 56.88123 ], [ -5.69227, 56.88128 ], [ -5.6934, 56.88165 ], [ -5.69371, 56.88176 ], [ -5.69428, 56.88194 ], [ -5.69456, 56.88203 ], [ -5.69502, 56.88219 ], [ -5.69513, 56.88222 ], [ -5.69597, 56.8825 ], [ -5.69663, 56.88271 ], [ -5.69682, 56.88278 ], [ -5.6971, 56.88287 ], [ -5.69736, 56.88296 ], [ -5.69765, 56.88307 ], [ -5.69792, 56.88318 ], [ -5.69823, 56.88333 ], [ -5.69845, 56.88345 ], [ -5.69864, 56.88355 ], [ -5.69903, 56.88382 ], [ -5.70015, 56.88455 ], [ -5.70026, 56.88463 ], [ -5.70078, 56.88497 ], [ -5.70099, 56.8851 ], [ -5.70144, 56.88537 ], [ -5.70149, 56.8854 ], [ -5.70169, 56.88548 ], [ -5.70184, 56.88555 ], [ -5.70227, 56.8857 ], [ -5.70243, 56.88575 ], [ -5.70254, 56.88577 ], [ -5.70269, 56.8858 ], [ -5.70306, 56.88588 ], [ -5.70342, 56.88593 ], [ -5.70388, 56.88599 ], [ -5.70396, 56.88599 ], [ -5.70513, 56.8861 ], [ -5.70565, 56.88618 ], [ -5.70593, 56.88624 ], [ -5.70606, 56.88627 ], [ -5.70609, 56.88628 ], [ -5.70627, 56.88633 ], [ -5.70653, 56.88641 ], [ -5.7067, 56.88648 ], [ -5.70684, 56.88653 ], [ -5.70712, 56.8867 ], [ -5.70729, 56.88681 ], [ -5.70739, 56.8869 ], [ -5.70747, 56.88698 ], [ -5.70756, 56.88707 ], [ -5.70765, 56.88718 ], [ -5.70771, 56.88727 ], [ -5.70776, 56.88736 ], [ -5.7078, 56.88746 ], [ -5.70783, 56.88753 ], [ -5.70785, 56.8876 ], [ -5.70788, 56.88771 ], [ -5.70794, 56.88799 ], [ -5.70795, 56.88803 ], [ -5.70809, 56.88861 ], [ -5.7081, 56.88867 ], [ -5.70816, 56.88895 ], [ -5.70818, 56.88904 ], [ -5.70825, 56.88931 ], [ -5.70831, 56.88948 ], [ -5.70837, 56.88961 ], [ -5.70843, 56.88973 ], [ -5.70858, 56.88992 ], [ -5.70867, 56.89003 ], [ -5.70879, 56.89016 ], [ -5.7089, 56.89027 ], [ -5.70909, 56.89043 ], [ -5.70915, 56.89047 ], [ -5.70923, 56.89053 ], [ -5.70953, 56.89071 ], [ -5.70959, 56.89074 ], [ -5.7099, 56.89088 ], [ -5.71011, 56.89096 ], [ -5.7102, 56.89099 ], [ -5.7104, 56.89105 ], [ -5.71061, 56.8911 ], [ -5.71108, 56.8912 ], [ -5.71141, 56.89124 ], [ -5.71148, 56.89126 ], [ -5.71173, 56.89128 ], [ -5.71205, 56.89131 ], [ -5.71238, 56.89134 ], [ -5.7127, 56.89137 ], [ -5.71302, 56.89141 ], [ -5.71347, 56.89145 ], [ -5.71367, 56.89147 ], [ -5.71432, 56.89154 ], [ -5.71444, 56.89155 ], [ -5.71464, 56.89157 ], [ -5.71486, 56.89159 ], [ -5.71497, 56.8916 ], [ -5.71538, 56.89163 ], [ -5.71605, 56.89171 ], [ -5.71627, 56.89174 ], [ -5.71673, 56.89181 ], [ -5.71694, 56.89185 ], [ -5.71729, 56.89191 ], [ -5.71761, 56.89199 ], [ -5.71785, 56.89206 ], [ -5.71792, 56.89208 ], [ -5.71862, 56.89231 ], [ -5.7187, 56.89233 ], [ -5.71898, 56.89242 ], [ -5.71927, 56.89251 ], [ -5.7193, 56.89252 ], [ -5.71957, 56.89259 ], [ -5.71985, 56.89266 ], [ -5.71987, 56.89266 ], [ -5.72018, 56.89272 ], [ -5.72021, 56.89272 ], [ -5.72069, 56.89278 ], [ -5.72116, 56.89281 ], [ -5.72136, 56.89281 ], [ -5.72168, 56.89281 ], [ -5.72198, 56.89278 ], [ -5.7224, 56.89274 ], [ -5.72281, 56.89267 ], [ -5.72314, 56.8926 ], [ -5.72373, 56.89248 ], [ -5.72389, 56.89244 ], [ -5.7241, 56.89239 ], [ -5.72434, 56.89234 ], [ -5.72444, 56.89232 ], [ -5.72468, 56.89228 ], [ -5.72497, 56.89224 ], [ -5.72501, 56.89223 ], [ -5.72538, 56.89219 ], [ -5.72566, 56.89218 ], [ -5.72606, 56.89217 ], [ -5.72628, 56.89218 ], [ -5.72642, 56.89218 ], [ -5.72693, 56.89221 ], [ -5.72701, 56.89222 ], [ -5.72726, 56.89224 ], [ -5.72758, 56.89227 ], [ -5.72784, 56.89229 ], [ -5.72791, 56.8923 ], [ -5.72823, 56.89233 ], [ -5.7289, 56.8924 ], [ -5.72925, 56.89245 ], [ -5.72974, 56.89251 ], [ -5.72991, 56.89255 ], [ -5.73003, 56.89257 ], [ -5.73032, 56.89259 ], [ -5.73037, 56.8926 ], [ -5.73069, 56.89262 ], [ -5.73071, 56.89262 ], [ -5.73105, 56.89265 ], [ -5.73125, 56.89267 ], [ -5.73138, 56.8927 ], [ -5.73152, 56.89272 ], [ -5.73162, 56.89274 ], [ -5.73173, 56.89277 ], [ -5.73194, 56.89285 ], [ -5.73207, 56.89291 ], [ -5.73218, 56.89296 ], [ -5.73232, 56.89304 ], [ -5.73259, 56.89321 ], [ -5.73261, 56.89323 ], [ -5.73282, 56.89339 ], [ -5.73306, 56.89363 ], [ -5.73332, 56.89391 ], [ -5.73342, 56.89405 ], [ -5.73376, 56.89446 ], [ -5.7338, 56.89451 ], [ -5.73406, 56.89485 ], [ -5.73434, 56.89517 ], [ -5.73442, 56.89527 ], [ -5.73449, 56.89533 ], [ -5.73464, 56.89548 ], [ -5.73488, 56.89567 ], [ -5.73518, 56.89585 ], [ -5.73528, 56.8959 ], [ -5.7354, 56.89597 ], [ -5.7357, 56.8961 ], [ -5.73578, 56.89613 ], [ -5.73615, 56.89624 ], [ -5.73655, 56.89634 ], [ -5.73667, 56.89636 ], [ -5.73688, 56.8964 ], [ -5.73699, 56.89641 ], [ -5.73721, 56.89644 ], [ -5.7374, 56.89646 ], [ -5.73764, 56.89647 ], [ -5.7377, 56.89647 ], [ -5.7381, 56.89648 ], [ -5.73858, 56.89645 ], [ -5.73902, 56.89641 ], [ -5.73927, 56.89638 ], [ -5.73958, 56.89633 ], [ -5.73959, 56.89633 ], [ -5.7399, 56.89628 ], [ -5.74021, 56.89622 ], [ -5.74052, 56.89617 ], [ -5.74084, 56.89611 ], [ -5.74146, 56.89599 ], [ -5.74158, 56.89596 ], [ -5.74207, 56.89586 ], [ -5.74238, 56.8958 ], [ -5.74255, 56.89576 ], [ -5.74293, 56.8957 ], [ -5.74301, 56.89569 ], [ -5.74342, 56.89563 ], [ -5.74364, 56.8956 ], [ -5.74392, 56.89557 ], [ -5.74397, 56.89557 ], [ -5.74454, 56.89554 ], [ -5.74496, 56.89552 ], [ -5.74524, 56.89551 ], [ -5.74561, 56.8955 ], [ -5.74594, 56.89549 ], [ -5.74672, 56.89546 ], [ -5.74758, 56.89541 ], [ -5.7476, 56.89541 ], [ -5.74791, 56.89539 ], [ -5.74798, 56.89539 ], [ -5.74823, 56.89536 ], [ -5.74853, 56.89533 ], [ -5.74888, 56.89529 ], [ -5.74908, 56.89526 ], [ -5.74919, 56.89524 ], [ -5.74955, 56.89517 ], [ -5.75007, 56.89505 ], [ -5.75036, 56.89497 ], [ -5.75073, 56.89487 ], [ -5.75127, 56.89469 ], [ -5.75143, 56.89464 ], [ -5.7524, 56.89433 ], [ -5.75424, 56.89375 ], [ -5.75442, 56.8937 ], [ -5.75457, 56.89366 ], [ -5.75488, 56.8936 ], [ -5.75499, 56.89357 ], [ -5.7552, 56.89355 ], [ -5.7555, 56.89352 ], [ -5.75552, 56.89353 ], [ -5.75593, 56.89353 ], [ -5.75614, 56.89356 ], [ -5.75618, 56.89356 ], [ -5.75645, 56.8936 ], [ -5.75649, 56.89361 ], [ -5.75667, 56.89365 ], [ -5.75694, 56.89375 ], [ -5.75704, 56.8938 ], [ -5.75715, 56.89387 ], [ -5.75725, 56.89394 ], [ -5.75745, 56.89409 ], [ -5.75746, 56.89409 ], [ -5.75758, 56.89423 ], [ -5.75765, 56.89435 ], [ -5.75768, 56.89442 ], [ -5.7577, 56.89445 ], [ -5.75773, 56.8946 ], [ -5.75774, 56.89466 ], [ -5.75772, 56.89478 ], [ -5.75772, 56.89479 ], [ -5.7577, 56.89488 ], [ -5.75767, 56.89495 ], [ -5.75765, 56.89498 ], [ -5.75755, 56.89512 ], [ -5.75754, 56.89514 ], [ -5.75747, 56.89523 ], [ -5.7573, 56.8954 ], [ -5.75697, 56.89563 ], [ -5.75658, 56.89584 ], [ -5.75589, 56.89622 ], [ -5.75577, 56.89629 ], [ -5.7555, 56.89644 ], [ -5.7553, 56.89657 ], [ -5.7552, 56.89666 ], [ -5.75516, 56.89672 ], [ -5.75514, 56.89676 ], [ -5.75513, 56.89683 ], [ -5.75513, 56.89688 ], [ -5.75513, 56.89697 ], [ -5.75513, 56.89698 ], [ -5.75514, 56.89715 ], [ -5.75515, 56.89723 ], [ -5.75517, 56.89734 ], [ -5.7552, 56.89741 ], [ -5.75523, 56.8975 ], [ -5.75524, 56.89751 ], [ -5.75528, 56.89758 ], [ -5.75539, 56.89774 ], [ -5.75557, 56.89798 ], [ -5.75562, 56.89815 ], [ -5.75562, 56.89819 ], [ -5.75561, 56.89834 ], [ -5.75559, 56.89837 ], [ -5.75554, 56.89852 ], [ -5.75553, 56.89855 ], [ -5.75544, 56.89872 ], [ -5.75535, 56.8989 ], [ -5.75527, 56.89907 ], [ -5.75523, 56.89914 ], [ -5.75516, 56.89924 ], [ -5.75515, 56.89926 ], [ -5.75508, 56.89933 ], [ -5.75501, 56.89939 ], [ -5.75501, 56.8994 ], [ -5.75493, 56.89945 ], [ -5.75483, 56.89951 ], [ -5.75479, 56.89953 ], [ -5.75471, 56.89957 ], [ -5.75447, 56.89968 ], [ -5.75428, 56.89976 ], [ -5.75406, 56.89984 ], [ -5.7536, 56.90001 ], [ -5.75347, 56.90007 ], [ -5.75343, 56.90008 ], [ -5.75332, 56.90013 ], [ -5.75322, 56.90018 ], [ -5.75317, 56.90021 ], [ -5.75309, 56.90027 ], [ -5.75303, 56.90033 ], [ -5.75298, 56.90037 ], [ -5.75286, 56.9005 ], [ -5.7528, 56.90056 ], [ -5.75275, 56.90064 ], [ -5.75275, 56.90065 ], [ -5.75269, 56.90076 ], [ -5.75265, 56.90083 ], [ -5.75262, 56.90087 ], [ -5.75259, 56.90096 ], [ -5.75258, 56.901 ], [ -5.75257, 56.90106 ], [ -5.75258, 56.90117 ], [ -5.75262, 56.90125 ], [ -5.75275, 56.90138 ], [ -5.75285, 56.90145 ], [ -5.75291, 56.90149 ], [ -5.75303, 56.90155 ], [ -5.75326, 56.90163 ], [ -5.75347, 56.90166 ], [ -5.75358, 56.90168 ], [ -5.75379, 56.90171 ], [ -5.75384, 56.90172 ], [ -5.75438, 56.90179 ], [ -5.75455, 56.9018 ], [ -5.75476, 56.9018 ], [ -5.7548, 56.9018 ], [ -5.75505, 56.90179 ], [ -5.75509, 56.90179 ], [ -5.75531, 56.90176 ], [ -5.7554, 56.90174 ], [ -5.75566, 56.90168 ], [ -5.75571, 56.90167 ], [ -5.7563, 56.90151 ], [ -5.75749, 56.9012 ], [ -5.75779, 56.90112 ], [ -5.75808, 56.90105 ], [ -5.75838, 56.90097 ], [ -5.75859, 56.90091 ], [ -5.75913, 56.90078 ], [ -5.75951, 56.90069 ], [ -5.75959, 56.90068 ], [ -5.75973, 56.90065 ], [ -5.7599, 56.90062 ], [ -5.75999, 56.9006 ], [ -5.76054, 56.90053 ], [ -5.76077, 56.9005 ], [ -5.76144, 56.90041 ], [ -5.76149, 56.9004 ], [ -5.76182, 56.90036 ], [ -5.762, 56.90034 ], [ -5.76214, 56.90034 ], [ -5.76259, 56.90031 ], [ -5.76357, 56.90026 ], [ -5.7636, 56.90026 ], [ -5.7639, 56.90024 ], [ -5.76423, 56.90023 ], [ -5.76455, 56.90021 ], [ -5.7649, 56.90019 ], [ -5.76521, 56.90017 ], [ -5.76595, 56.90013 ], [ -5.76643, 56.90014 ], [ -5.76685, 56.90015 ], [ -5.76701, 56.90016 ], [ -5.76718, 56.90017 ], [ -5.7675, 56.9002 ], [ -5.76767, 56.90021 ], [ -5.76776, 56.90022 ], [ -5.76783, 56.90022 ], [ -5.76792, 56.90021 ], [ -5.76808, 56.9002 ], [ -5.76815, 56.90019 ], [ -5.76822, 56.90018 ], [ -5.76845, 56.90011 ], [ -5.76872, 56.90002 ], [ -5.76879, 56.9 ], [ -5.76888, 56.89999 ], [ -5.76899, 56.89998 ], [ -5.76908, 56.89996 ], [ -5.76922, 56.89995 ], [ -5.7697, 56.89995 ], [ -5.76988, 56.89994 ], [ -5.77009, 56.89994 ], [ -5.77026, 56.89992 ], [ -5.77066, 56.89986 ], [ -5.77097, 56.8998 ], [ -5.77142, 56.89971 ], [ -5.77161, 56.89968 ], [ -5.77181, 56.89965 ], [ -5.77238, 56.89959 ], [ -5.77319, 56.89955 ], [ -5.77356, 56.89953 ], [ -5.77393, 56.8995 ], [ -5.77421, 56.89948 ], [ -5.7743, 56.89948 ], [ -5.77454, 56.89946 ], [ -5.77486, 56.89943 ], [ -5.77556, 56.89938 ], [ -5.77641, 56.8993 ], [ -5.77714, 56.89925 ], [ -5.77729, 56.89924 ], [ -5.7783, 56.89914 ], [ -5.77877, 56.8991 ], [ -5.77878, 56.8991 ], [ -5.77923, 56.89906 ], [ -5.77957, 56.89903 ], [ -5.78005, 56.89899 ], [ -5.78053, 56.89895 ], [ -5.78108, 56.89892 ], [ -5.7817, 56.89888 ], [ -5.78179, 56.89887 ], [ -5.78203, 56.89886 ], [ -5.78229, 56.89885 ], [ -5.78269, 56.89885 ], [ -5.78294, 56.89886 ], [ -5.78327, 56.89888 ], [ -5.78352, 56.89892 ], [ -5.78398, 56.89902 ], [ -5.78406, 56.89903 ], [ -5.78501, 56.89929 ], [ -5.78516, 56.89934 ], [ -5.7862, 56.89965 ], [ -5.78632, 56.89968 ], [ -5.78712, 56.89987 ], [ -5.78723, 56.89989 ], [ -5.78731, 56.89991 ], [ -5.7877, 56.89996 ], [ -5.78787, 56.89998 ], [ -5.78796, 56.89998 ], [ -5.78811, 56.89999 ], [ -5.7882, 56.89999 ], [ -5.78835, 56.89998 ], [ -5.78859, 56.89997 ], [ -5.78892, 56.89994 ], [ -5.78918, 56.89989 ], [ -5.78958, 56.8998 ], [ -5.79, 56.89968 ], [ -5.79062, 56.89948 ], [ -5.79073, 56.89944 ], [ -5.79091, 56.89939 ], [ -5.79119, 56.89929 ], [ -5.79147, 56.8992 ], [ -5.79151, 56.89919 ], [ -5.79228, 56.89902 ], [ -5.79239, 56.899 ], [ -5.79271, 56.89896 ], [ -5.79303, 56.89892 ], [ -5.79325, 56.89889 ], [ -5.79335, 56.89889 ], [ -5.79401, 56.89886 ], [ -5.79432, 56.89884 ], [ -5.79467, 56.89885 ], [ -5.79555, 56.89885 ], [ -5.79565, 56.89885 ], [ -5.79636, 56.89884 ], [ -5.7967, 56.89885 ], [ -5.79694, 56.89886 ], [ -5.79742, 56.89888 ], [ -5.79752, 56.89888 ], [ -5.79837, 56.89896 ], [ -5.79922, 56.89907 ], [ -5.79935, 56.89909 ], [ -5.79967, 56.89915 ], [ -5.79972, 56.89916 ], [ -5.79997, 56.89922 ], [ -5.80031, 56.8993 ], [ -5.80086, 56.89945 ], [ -5.80099, 56.89949 ], [ -5.80115, 56.89954 ], [ -5.80159, 56.89969 ], [ -5.80224, 56.89994 ], [ -5.80246, 56.90003 ], [ -5.80251, 56.90005 ], [ -5.80277, 56.90015 ], [ -5.80304, 56.90026 ], [ -5.80357, 56.90047 ], [ -5.80361, 56.90049 ], [ -5.80383, 56.90058 ], [ -5.8041, 56.90068 ], [ -5.80437, 56.90079 ], [ -5.80457, 56.90086 ], [ -5.80491, 56.90099 ], [ -5.80546, 56.90119 ], [ -5.80552, 56.90121 ], [ -5.80574, 56.90129 ], [ -5.80601, 56.90139 ], [ -5.80628, 56.90149 ], [ -5.80637, 56.90152 ], [ -5.80656, 56.90159 ], [ -5.80683, 56.90169 ], [ -5.80711, 56.90179 ], [ -5.80722, 56.90183 ], [ -5.80738, 56.90189 ], [ -5.80766, 56.90198 ], [ -5.80821, 56.90218 ], [ -5.80833, 56.90222 ], [ -5.80849, 56.90227 ], [ -5.80874, 56.90236 ], [ -5.80906, 56.90246 ], [ -5.80919, 56.9025 ], [ -5.80947, 56.9026 ], [ -5.80962, 56.90265 ], [ -5.8099, 56.90274 ], [ -5.81, 56.90277 ], [ -5.81019, 56.90283 ], [ -5.8103, 56.90286 ], [ -5.81047, 56.90292 ], [ -5.81104, 56.9031 ], [ -5.81114, 56.90313 ], [ -5.81132, 56.9032 ], [ -5.81153, 56.90327 ], [ -5.8116, 56.90329 ], [ -5.81188, 56.90338 ], [ -5.81275, 56.90368 ], [ -5.81392, 56.90407 ], [ -5.81465, 56.90434 ], [ -5.81508, 56.90449 ], [ -5.81551, 56.90465 ], [ -5.81629, 56.90493 ], [ -5.81664, 56.90506 ], [ -5.81691, 56.90516 ], [ -5.81718, 56.90527 ], [ -5.8174, 56.90535 ], [ -5.81824, 56.90568 ], [ -5.81825, 56.90568 ], [ -5.81852, 56.90579 ], [ -5.81878, 56.90589 ], [ -5.81905, 56.906 ], [ -5.81932, 56.90611 ], [ -5.81958, 56.90621 ], [ -5.8197, 56.90626 ], [ -5.81984, 56.90632 ], [ -5.82011, 56.90643 ], [ -5.82033, 56.90652 ], [ -5.82062, 56.90666 ], [ -5.82087, 56.90677 ], [ -5.82112, 56.90689 ], [ -5.82114, 56.9069 ], [ -5.82162, 56.90719 ], [ -5.82196, 56.90744 ], [ -5.822, 56.90747 ], [ -5.82212, 56.9076 ], [ -5.82227, 56.90776 ], [ -5.82228, 56.90777 ], [ -5.82252, 56.90809 ], [ -5.82257, 56.90815 ], [ -5.82262, 56.90826 ], [ -5.82265, 56.90832 ], [ -5.82273, 56.90857 ], [ -5.82272, 56.90862 ], [ -5.82275, 56.90897 ], [ -5.82276, 56.90902 ], [ -5.82277, 56.90916 ], [ -5.82276, 56.9092 ], [ -5.82273, 56.90936 ], [ -5.82273, 56.90938 ], [ -5.82269, 56.90954 ], [ -5.82268, 56.90956 ], [ -5.82263, 56.90967 ], [ -5.82258, 56.90978 ], [ -5.82254, 56.90985 ], [ -5.82251, 56.90991 ], [ -5.82241, 56.91008 ], [ -5.8222, 56.91035 ], [ -5.82219, 56.91036 ], [ -5.82208, 56.91053 ], [ -5.82204, 56.91058 ], [ -5.8219, 56.91079 ], [ -5.8218, 56.91104 ], [ -5.82173, 56.91122 ], [ -5.82169, 56.9114 ], [ -5.82168, 56.91148 ], [ -5.82169, 56.91158 ], [ -5.82171, 56.91171 ], [ -5.82173, 56.91176 ], [ -5.82177, 56.91185 ], [ -5.82185, 56.91198 ], [ -5.82196, 56.91212 ], [ -5.82206, 56.91222 ], [ -5.82211, 56.91225 ], [ -5.82226, 56.91235 ], [ -5.82252, 56.91249 ], [ -5.82256, 56.91251 ], [ -5.82265, 56.91255 ], [ -5.82284, 56.91261 ], [ -5.82304, 56.91266 ], [ -5.82333, 56.91272 ], [ -5.82372, 56.91277 ], [ -5.82377, 56.91277 ], [ -5.82393, 56.91278 ], [ -5.8241, 56.91278 ], [ -5.82434, 56.91279 ], [ -5.82476, 56.91276 ], [ -5.82478, 56.91276 ], [ -5.82508, 56.91272 ], [ -5.8254, 56.91268 ], [ -5.82558, 56.91265 ], [ -5.82571, 56.91262 ], [ -5.82601, 56.91255 ], [ -5.82632, 56.91249 ], [ -5.82638, 56.91247 ], [ -5.82643, 56.91246 ], [ -5.82662, 56.91241 ], [ -5.82691, 56.91233 ], [ -5.8272, 56.91224 ], [ -5.82728, 56.91222 ], [ -5.82749, 56.91216 ], [ -5.82766, 56.91211 ], [ -5.82778, 56.91207 ], [ -5.82802, 56.912 ], [ -5.82807, 56.91198 ], [ -5.82835, 56.91189 ], [ -5.82862, 56.91181 ], [ -5.82899, 56.9117 ], [ -5.82923, 56.91164 ], [ -5.82938, 56.91161 ], [ -5.83013, 56.91142 ], [ -5.83044, 56.91136 ], [ -5.83053, 56.91135 ], [ -5.8308, 56.91129 ], [ -5.83111, 56.91125 ], [ -5.83169, 56.91116 ], [ -5.83187, 56.91113 ], [ -5.83234, 56.91107 ], [ -5.83252, 56.91106 ], [ -5.83284, 56.91103 ], [ -5.83325, 56.91101 ], [ -5.8335, 56.911 ], [ -5.83416, 56.91097 ], [ -5.83446, 56.91097 ], [ -5.83518, 56.91098 ], [ -5.83573, 56.91101 ], [ -5.83579, 56.91101 ], [ -5.83632, 56.91105 ], [ -5.83793, 56.91125 ], [ -5.83817, 56.91127 ], [ -5.83892, 56.91138 ], [ -5.83924, 56.91141 ], [ -5.8399, 56.9115 ], [ -5.84067, 56.91158 ], [ -5.84087, 56.9116 ], [ -5.84107, 56.91163 ], [ -5.84119, 56.91165 ], [ -5.84151, 56.9117 ], [ -5.8418, 56.91175 ], [ -5.84211, 56.91182 ], [ -5.84246, 56.9119 ], [ -5.84286, 56.912 ], [ -5.84309, 56.91208 ], [ -5.84336, 56.91218 ], [ -5.84365, 56.91228 ], [ -5.84388, 56.91239 ], [ -5.84419, 56.91255 ], [ -5.8443, 56.91261 ], [ -5.84438, 56.91266 ], [ -5.84446, 56.91272 ], [ -5.84462, 56.91282 ], [ -5.84467, 56.91286 ], [ -5.84481, 56.91297 ], [ -5.84488, 56.91302 ], [ -5.84511, 56.91322 ], [ -5.84522, 56.91335 ], [ -5.84542, 56.9136 ], [ -5.84548, 56.91368 ], [ -5.84557, 56.91382 ], [ -5.8456, 56.91387 ], [ -5.8456, 56.91388 ], [ -5.84563, 56.91393 ], [ -5.84568, 56.91401 ], [ -5.8457, 56.91404 ], [ -5.84576, 56.91418 ], [ -5.84579, 56.91424 ], [ -5.84588, 56.91441 ], [ -5.84595, 56.91456 ], [ -5.84596, 56.91459 ], [ -5.84603, 56.91476 ], [ -5.84628, 56.91533 ], [ -5.84634, 56.91546 ], [ -5.84635, 56.91548 ], [ -5.84651, 56.91586 ], [ -5.84664, 56.91616 ], [ -5.84674, 56.91638 ], [ -5.84697, 56.91691 ], [ -5.84709, 56.91717 ], [ -5.84725, 56.91752 ], [ -5.84749, 56.91806 ], [ -5.84757, 56.91824 ], [ -5.84764, 56.91841 ], [ -5.84772, 56.91859 ], [ -5.84787, 56.91894 ], [ -5.84795, 56.91911 ], [ -5.84795, 56.91913 ], [ -5.8481, 56.91946 ], [ -5.84818, 56.91964 ], [ -5.84833, 56.91999 ], [ -5.84837, 56.92008 ], [ -5.84856, 56.92051 ], [ -5.84863, 56.92069 ], [ -5.84867, 56.92077 ], [ -5.8487, 56.92086 ], [ -5.84892, 56.9214 ], [ -5.84924, 56.92227 ], [ -5.84939, 56.92267 ], [ -5.84945, 56.92284 ], [ -5.84968, 56.92337 ], [ -5.84976, 56.92356 ], [ -5.84987, 56.92383 ], [ -5.84992, 56.92397 ], [ -5.84995, 56.92408 ], [ -5.84998, 56.92421 ], [ -5.85003, 56.92444 ], [ -5.85003, 56.9245 ], [ -5.85004, 56.92451 ], [ -5.85004, 56.92456 ], [ -5.85005, 56.92458 ], [ -5.85008, 56.92524 ], [ -5.85004, 56.92605 ], [ -5.85003, 56.92617 ], [ -5.84999, 56.92664 ], [ -5.84997, 56.92677 ], [ -5.84995, 56.92702 ], [ -5.84988, 56.92745 ], [ -5.84985, 56.92767 ], [ -5.84984, 56.92773 ], [ -5.84982, 56.92785 ], [ -5.84978, 56.92802 ], [ -5.84976, 56.92812 ], [ -5.84972, 56.92829 ], [ -5.84965, 56.9286 ], [ -5.84953, 56.92907 ], [ -5.84942, 56.92945 ], [ -5.84936, 56.92963 ], [ -5.84925, 56.92998 ], [ -5.84919, 56.93017 ], [ -5.84914, 56.93034 ], [ -5.84908, 56.93051 ], [ -5.84902, 56.9307 ], [ -5.84878, 56.9314 ], [ -5.84877, 56.93141 ], [ -5.84856, 56.93197 ], [ -5.84851, 56.9321 ], [ -5.84845, 56.93228 ], [ -5.84832, 56.9326 ], [ -5.84818, 56.93298 ], [ -5.84811, 56.93316 ], [ -5.84796, 56.93351 ], [ -5.84788, 56.93368 ], [ -5.84781, 56.93385 ], [ -5.84773, 56.93403 ], [ -5.84766, 56.93421 ], [ -5.84753, 56.93451 ], [ -5.84723, 56.9352 ], [ -5.84704, 56.93561 ], [ -5.84687, 56.93596 ], [ -5.84679, 56.93613 ], [ -5.84678, 56.93615 ], [ -5.84671, 56.9363 ], [ -5.84645, 56.93682 ], [ -5.84634, 56.937 ], [ -5.84631, 56.93705 ], [ -5.84623, 56.93716 ], [ -5.84621, 56.9372 ], [ -5.84611, 56.93733 ], [ -5.84605, 56.9374 ], [ -5.8459, 56.93758 ], [ -5.84582, 56.93766 ], [ -5.84577, 56.93772 ], [ -5.84549, 56.93796 ], [ -5.84549, 56.93797 ], [ -5.84526, 56.93816 ], [ -5.84506, 56.93831 ], [ -5.84483, 56.93847 ], [ -5.84453, 56.93865 ], [ -5.84352, 56.93926 ], [ -5.84338, 56.93934 ], [ -5.84271, 56.93974 ], [ -5.84259, 56.93981 ], [ -5.84248, 56.93987 ], [ -5.84204, 56.94014 ], [ -5.84186, 56.94024 ], [ -5.84181, 56.94027 ], [ -5.84135, 56.94052 ], [ -5.84096, 56.94075 ], [ -5.84086, 56.94081 ], [ -5.84075, 56.94087 ], [ -5.84049, 56.94102 ], [ -5.83983, 56.94138 ], [ -5.83913, 56.94176 ], [ -5.83828, 56.94224 ], [ -5.83797, 56.9424 ], [ -5.8375, 56.94265 ], [ -5.83703, 56.94291 ], [ -5.83679, 56.94304 ], [ -5.83612, 56.94342 ], [ -5.83587, 56.94355 ], [ -5.8354, 56.9438 ], [ -5.83534, 56.94383 ], [ -5.83471, 56.94419 ], [ -5.83445, 56.94433 ], [ -5.83379, 56.9447 ], [ -5.83367, 56.94477 ], [ -5.8332, 56.94508 ], [ -5.83315, 56.94511 ], [ -5.83308, 56.94516 ], [ -5.83294, 56.94525 ], [ -5.83287, 56.94529 ], [ -5.83278, 56.94535 ], [ -5.83275, 56.94538 ], [ -5.83269, 56.94543 ], [ -5.83256, 56.94554 ], [ -5.83239, 56.9457 ], [ -5.83229, 56.94579 ], [ -5.83223, 56.94586 ], [ -5.83208, 56.94602 ], [ -5.83198, 56.94611 ], [ -5.83184, 56.94631 ], [ -5.83173, 56.94646 ], [ -5.8317, 56.94651 ], [ -5.8316, 56.94668 ], [ -5.83152, 56.94685 ], [ -5.8314, 56.94715 ], [ -5.83132, 56.94739 ], [ -5.83126, 56.94756 ], [ -5.83121, 56.94772 ], [ -5.8312, 56.94774 ], [ -5.8311, 56.9481 ], [ -5.83105, 56.94828 ], [ -5.831, 56.94845 ], [ -5.83091, 56.94881 ], [ -5.83086, 56.94899 ], [ -5.83083, 56.94911 ], [ -5.83071, 56.9497 ], [ -5.83064, 56.95006 ], [ -5.83049, 56.95083 ], [ -5.83047, 56.95095 ], [ -5.83043, 56.95113 ], [ -5.83039, 56.95131 ], [ -5.83035, 56.95149 ], [ -5.83033, 56.95156 ], [ -5.83013, 56.95238 ], [ -5.83009, 56.95254 ], [ -5.83004, 56.95274 ], [ -5.83, 56.95292 ], [ -5.82996, 56.95304 ], [ -5.82994, 56.95309 ], [ -5.82987, 56.9533 ], [ -5.82981, 56.95345 ], [ -5.82974, 56.95358 ], [ -5.8296, 56.95379 ], [ -5.82951, 56.95392 ], [ -5.82948, 56.95395 ], [ -5.82932, 56.95415 ], [ -5.8292, 56.95428 ], [ -5.82918, 56.95429 ], [ -5.82902, 56.95443 ], [ -5.82898, 56.95447 ], [ -5.82886, 56.95456 ], [ -5.8287, 56.95468 ], [ -5.82864, 56.95472 ], [ -5.82849, 56.95482 ], [ -5.82828, 56.95495 ], [ -5.82801, 56.9551 ], [ -5.82776, 56.95522 ], [ -5.82767, 56.95526 ], [ -5.82665, 56.95566 ], [ -5.82589, 56.95595 ], [ -5.82584, 56.95597 ], [ -5.82557, 56.95607 ], [ -5.8253, 56.95617 ], [ -5.82518, 56.95622 ], [ -5.82503, 56.95628 ], [ -5.82476, 56.95638 ], [ -5.82458, 56.95645 ], [ -5.82449, 56.95649 ], [ -5.82422, 56.95659 ], [ -5.82383, 56.95675 ], [ -5.82369, 56.9568 ], [ -5.82315, 56.95701 ], [ -5.82304, 56.95706 ], [ -5.82228, 56.95737 ], [ -5.8221, 56.95744 ], [ -5.82166, 56.95762 ], [ -5.8212, 56.95783 ], [ -5.82094, 56.95796 ], [ -5.82027, 56.95835 ], [ -5.82025, 56.95837 ], [ -5.82007, 56.9585 ], [ -5.82003, 56.95852 ], [ -5.8199, 56.95864 ], [ -5.81989, 56.95865 ], [ -5.81976, 56.95877 ], [ -5.81944, 56.95911 ], [ -5.81932, 56.95929 ], [ -5.81922, 56.95948 ], [ -5.81918, 56.95959 ], [ -5.81898, 56.96007 ], [ -5.81894, 56.96032 ], [ -5.81893, 56.96061 ], [ -5.81892, 56.96073 ], [ -5.81892, 56.96079 ], [ -5.81892, 56.96098 ], [ -5.81893, 56.96115 ], [ -5.81894, 56.96128 ], [ -5.81899, 56.9616 ], [ -5.81905, 56.96188 ], [ -5.81915, 56.96222 ], [ -5.81918, 56.96232 ], [ -5.81921, 56.9624 ], [ -5.81927, 56.96257 ], [ -5.81933, 56.96275 ], [ -5.81936, 56.96283 ], [ -5.8194, 56.96293 ], [ -5.81944, 56.96302 ], [ -5.81956, 56.96328 ], [ -5.8196, 56.96336 ], [ -5.81965, 56.96345 ], [ -5.81969, 56.96354 ], [ -5.81974, 56.96362 ], [ -5.81981, 56.96372 ], [ -5.81986, 56.96379 ], [ -5.81997, 56.96396 ], [ -5.81998, 56.96397 ], [ -5.82022, 56.96429 ], [ -5.82065, 56.96479 ], [ -5.8208, 56.96494 ], [ -5.82083, 56.96498 ], [ -5.82096, 56.9651 ], [ -5.8211, 56.96522 ], [ -5.82113, 56.96525 ], [ -5.82131, 56.9654 ], [ -5.82149, 56.96555 ], [ -5.82167, 56.9657 ], [ -5.82185, 56.96585 ], [ -5.8219, 56.9659 ], [ -5.82204, 56.966 ], [ -5.82224, 56.96614 ], [ -5.82229, 56.96618 ], [ -5.82264, 56.96643 ], [ -5.82281, 56.96655 ], [ -5.82304, 56.96672 ], [ -5.82323, 56.96686 ], [ -5.82343, 56.96702 ], [ -5.82358, 56.96715 ], [ -5.82367, 56.96723 ], [ -5.82373, 56.9673 ], [ -5.82376, 56.96732 ], [ -5.82381, 56.96736 ], [ -5.82388, 56.96744 ], [ -5.82395, 56.96752 ], [ -5.82404, 56.96761 ], [ -5.82416, 56.96775 ], [ -5.8242, 56.9678 ], [ -5.82426, 56.96787 ], [ -5.82434, 56.968 ], [ -5.82448, 56.96822 ], [ -5.82453, 56.96831 ], [ -5.82459, 56.96841 ], [ -5.82464, 56.96852 ], [ -5.82471, 56.96866 ], [ -5.82478, 56.96883 ], [ -5.82486, 56.96901 ], [ -5.82488, 56.96904 ], [ -5.82505, 56.96944 ], [ -5.82554, 56.97058 ], [ -5.82562, 56.97076 ], [ -5.82575, 56.97106 ], [ -5.82577, 56.97111 ], [ -5.82584, 56.97128 ], [ -5.82615, 56.97198 ], [ -5.82622, 56.97216 ], [ -5.8263, 56.97233 ], [ -5.82645, 56.97268 ], [ -5.82653, 56.97286 ], [ -5.82661, 56.97303 ], [ -5.82668, 56.97321 ], [ -5.82676, 56.97338 ], [ -5.82692, 56.97375 ], [ -5.82707, 56.97409 ], [ -5.82721, 56.97443 ], [ -5.82722, 56.97445 ], [ -5.82746, 56.97499 ], [ -5.82774, 56.97564 ], [ -5.82814, 56.97657 ], [ -5.82836, 56.97708 ], [ -5.82849, 56.9774 ], [ -5.82857, 56.97761 ], [ -5.82857, 56.97762 ], [ -5.82863, 56.9778 ], [ -5.82866, 56.9779 ], [ -5.82869, 56.97803 ], [ -5.82871, 56.97819 ], [ -5.82873, 56.97834 ], [ -5.82874, 56.97838 ], [ -5.82874, 56.97852 ], [ -5.82875, 56.97856 ], [ -5.82874, 56.9787 ], [ -5.82873, 56.97883 ], [ -5.82872, 56.97888 ], [ -5.82866, 56.9792 ], [ -5.82864, 56.97923 ], [ -5.82859, 56.97941 ], [ -5.82853, 56.97959 ], [ -5.82848, 56.97977 ], [ -5.82846, 56.9798 ], [ -5.82842, 56.97994 ], [ -5.82836, 56.98012 ], [ -5.82829, 56.9803 ], [ -5.82824, 56.98045 ], [ -5.82823, 56.98047 ], [ -5.82817, 56.98065 ], [ -5.82811, 56.98083 ], [ -5.82804, 56.981 ], [ -5.82798, 56.98118 ], [ -5.82796, 56.98124 ], [ -5.82792, 56.98136 ], [ -5.82791, 56.98139 ], [ -5.82787, 56.98153 ], [ -5.82775, 56.98189 ], [ -5.82769, 56.98206 ], [ -5.82763, 56.98224 ], [ -5.82755, 56.98247 ], [ -5.82738, 56.98295 ], [ -5.82726, 56.9833 ], [ -5.82719, 56.98348 ], [ -5.82716, 56.98358 ], [ -5.82701, 56.98394 ], [ -5.82692, 56.98415 ], [ -5.8269, 56.98418 ], [ -5.82682, 56.98433 ], [ -5.82669, 56.98452 ], [ -5.82665, 56.98459 ], [ -5.82658, 56.98469 ], [ -5.82647, 56.98486 ], [ -5.82636, 56.98502 ], [ -5.82635, 56.98503 ], [ -5.82588, 56.9857 ], [ -5.82584, 56.98576 ], [ -5.82566, 56.98606 ], [ -5.82554, 56.98633 ], [ -5.82544, 56.98657 ], [ -5.82542, 56.98662 ], [ -5.82539, 56.98674 ], [ -5.82537, 56.98683 ], [ -5.82532, 56.9871 ], [ -5.8253, 56.9872 ], [ -5.82529, 56.98728 ], [ -5.82528, 56.98746 ], [ -5.82527, 56.98779 ], [ -5.82528, 56.98794 ], [ -5.82533, 56.98818 ], [ -5.82536, 56.98835 ], [ -5.82547, 56.9887 ], [ -5.8256, 56.98901 ], [ -5.82563, 56.98906 ], [ -5.82605, 56.98974 ], [ -5.82611, 56.98981 ], [ -5.82637, 56.99013 ], [ -5.8267, 56.99045 ], [ -5.82702, 56.99074 ], [ -5.8272, 56.99092 ], [ -5.82752, 56.99123 ], [ -5.82754, 56.99125 ], [ -5.82784, 56.99155 ], [ -5.82834, 56.99201 ], [ -5.82851, 56.99217 ], [ -5.82887, 56.9925 ], [ -5.82936, 56.99298 ], [ -5.83004, 56.99364 ], [ -5.83055, 56.99415 ], [ -5.83095, 56.99462 ], [ -5.83099, 56.99467 ], [ -5.83107, 56.99477 ], [ -5.83141, 56.99516 ], [ -5.83151, 56.99528 ], [ -5.83179, 56.99566 ], [ -5.83195, 56.99587 ], [ -5.83199, 56.99592 ], [ -5.8321, 56.99609 ], [ -5.83219, 56.99623 ], [ -5.83237, 56.99649 ], [ -5.83237, 56.9965 ], [ -5.83258, 56.99684 ], [ -5.83273, 56.99711 ], [ -5.83305, 56.99769 ], [ -5.83319, 56.99798 ], [ -5.83322, 56.99803 ], [ -5.83334, 56.99827 ], [ -5.83347, 56.99857 ], [ -5.83348, 56.9986 ], [ -5.83357, 56.99885 ], [ -5.83357, 56.99887 ], [ -5.83363, 56.99907 ], [ -5.83367, 56.99938 ], [ -5.83368, 56.99946 ], [ -5.83371, 56.99967 ], [ -5.83373, 56.99989 ], [ -5.83373, 57.00009 ], [ -5.83371, 57.00036 ], [ -5.8337, 57.00037 ], [ -5.83369, 57.00047 ], [ -5.83368, 57.00056 ], [ -5.83364, 57.00076 ], [ -5.8336, 57.00093 ], [ -5.83354, 57.00109 ], [ -5.83342, 57.00141 ], [ -5.83331, 57.00165 ], [ -5.83328, 57.0017 ], [ -5.83317, 57.0019 ], [ -5.83314, 57.00194 ], [ -5.83305, 57.0021 ], [ -5.83304, 57.00212 ], [ -5.83286, 57.0024 ], [ -5.83246, 57.00304 ], [ -5.83209, 57.00365 ], [ -5.83195, 57.00389 ], [ -5.83167, 57.00433 ], [ -5.83165, 57.00436 ], [ -5.83131, 57.0049 ], [ -5.8311, 57.00522 ], [ -5.831, 57.00532 ], [ -5.83092, 57.0054 ], [ -5.83079, 57.00552 ], [ -5.83065, 57.00564 ], [ -5.83051, 57.00573 ], [ -5.83038, 57.00581 ], [ -5.82998, 57.00602 ], [ -5.82978, 57.00612 ], [ -5.8297804, 57.0061164 ], [ -5.82976, 57.00611 ], [ -5.82976, 57.0061 ], [ -5.82975, 57.0061 ], [ -5.82974, 57.0061 ], [ -5.82973, 57.00609 ], [ -5.82972, 57.00609 ], [ -5.82971, 57.00609 ], [ -5.8297, 57.00609 ], [ -5.8297, 57.00608 ], [ -5.82969, 57.00608 ], [ -5.82968, 57.00608 ], [ -5.82967, 57.00608 ], [ -5.82966, 57.00608 ], [ -5.82965, 57.00608 ], [ -5.82964, 57.00608 ], [ -5.82963, 57.00608 ], [ -5.82962, 57.00608 ], [ -5.82961, 57.00608 ], [ -5.8296, 57.00608 ], [ -5.82959, 57.00608 ], [ -5.82958, 57.00608 ], [ -5.82957, 57.00608 ], [ -5.82956, 57.00609 ], [ -5.82953, 57.00609 ], [ -5.82951, 57.0061 ], [ -5.82951, 57.00611 ], [ -5.8295, 57.00611 ], [ -5.82949, 57.00612 ], [ -5.82948, 57.00612 ], [ -5.82948, 57.00613 ], [ -5.82947, 57.00613 ], [ -5.82947, 57.00614 ], [ -5.82946, 57.00614 ], [ -5.82946, 57.00615 ], [ -5.82946, 57.00616 ], [ -5.82945, 57.00616 ], [ -5.82945, 57.00617 ], [ -5.82945, 57.00618 ], [ -5.82945, 57.00619 ], [ -5.82946, 57.00619 ], [ -5.82946, 57.0062 ], [ -5.82946, 57.00621 ], [ -5.82947, 57.00621 ], [ -5.82947, 57.00622 ], [ -5.82949, 57.00624 ], [ -5.82897, 57.00639 ], [ -5.8287, 57.00647 ], [ -5.82863, 57.00651 ], [ -5.82858, 57.00655 ], [ -5.82855, 57.00657 ], [ -5.82846, 57.00663 ], [ -5.82835, 57.00667 ], [ -5.82823, 57.00671 ], [ -5.82801, 57.00677 ], [ -5.82794, 57.0068 ], [ -5.82787, 57.00684 ], [ -5.82784, 57.00687 ], [ -5.82782, 57.00689 ], [ -5.82782, 57.00693 ], [ -5.82779, 57.00697 ], [ -5.82776, 57.00699 ], [ -5.82773, 57.00702 ], [ -5.8277, 57.00703 ], [ -5.82764, 57.00705 ], [ -5.82743, 57.00709 ], [ -5.82731, 57.00712 ], [ -5.82638, 57.00731 ], [ -5.8263837, 57.0073059 ], [ -5.82601, 57.00727 ], [ -5.82588, 57.00728 ], [ -5.82573, 57.00728 ], [ -5.82543, 57.00729 ], [ -5.82507, 57.00732 ], [ -5.82492, 57.00734 ], [ -5.82475, 57.00737 ], [ -5.8246, 57.0074 ], [ -5.82438, 57.00749 ], [ -5.82427, 57.00759 ], [ -5.82424, 57.00762 ], [ -5.8242, 57.00795 ], [ -5.82408, 57.0091 ], [ -5.82388, 57.01083 ], [ -5.82383, 57.01106 ], [ -5.82347, 57.01234 ], [ -5.82333, 57.01332 ], [ -5.82328, 57.01368 ], [ -5.82322, 57.0141 ], [ -5.82368, 57.01568 ], [ -5.82509, 57.01789 ], [ -5.82558, 57.01831 ], [ -5.82807, 57.02043 ], [ -5.83301, 57.02463 ], [ -5.83622, 57.02702 ], [ -5.84535, 57.03362 ], [ -5.86749, 57.05124 ], [ -5.87009, 57.05321 ], [ -5.87363, 57.05601 ], [ -5.87773, 57.05893 ], [ -5.88242, 57.06274 ], [ -5.88305, 57.06314 ], [ -5.8844, 57.064 ], [ -5.88574, 57.06473 ], [ -5.88634, 57.06505 ], [ -5.88701, 57.06529 ], [ -5.88764, 57.06544 ], [ -5.88845, 57.0656 ], [ -5.88855, 57.06562 ], [ -5.88906, 57.06569 ], [ -5.8894, 57.06572 ], [ -5.89006, 57.06575 ], [ -5.89055, 57.06574 ], [ -5.89107, 57.0657 ], [ -5.89149, 57.06564 ], [ -5.89162, 57.06563 ], [ -5.89221, 57.06552 ], [ -5.8927, 57.06542 ], [ -5.89322, 57.0653 ], [ -5.89391, 57.06509 ], [ -5.89454, 57.06489 ], [ -5.894544, 57.0648905 ], [ -5.89524, 57.0647 ], [ -5.89527, 57.06468 ], [ -5.89529, 57.06467 ], [ -5.89532, 57.06464 ], [ -5.8955, 57.06436 ], [ -5.8954969, 57.0643628 ], [ -5.89618, 57.0643 ], [ -5.89669, 57.06425 ], [ -5.8967, 57.06425 ], [ -5.89743, 57.06419 ], [ -5.89768, 57.06418 ], [ -5.89801, 57.06416 ], [ -5.89822, 57.06415 ], [ -5.89834, 57.06416 ], [ -5.89867, 57.06418 ], [ -5.899, 57.0642 ], [ -5.89907, 57.0642 ], [ -5.89933, 57.06421 ], [ -5.89951, 57.06422 ], [ -5.89966, 57.06424 ], [ -5.89985, 57.06426 ], [ -5.89997, 57.06429 ], [ -5.90007, 57.06432 ], [ -5.90024, 57.06439 ], [ -5.90026, 57.0644 ], [ -5.90049, 57.06454 ], [ -5.90076, 57.06477 ], [ -5.90088, 57.06487 ], [ -5.90094, 57.06495 ], [ -5.90097, 57.06499 ], [ -5.90097, 57.06503 ], [ -5.90097, 57.06504 ], [ -5.90096, 57.06508 ], [ -5.90092, 57.06514 ], [ -5.90088, 57.0652 ], [ -5.90087, 57.06521 ], [ -5.90074, 57.06535 ], [ -5.90047, 57.06567 ], [ -5.9003, 57.06586 ], [ -5.89999, 57.0662 ], [ -5.89935, 57.06677 ], [ -5.89914, 57.06696 ], [ -5.89868, 57.06738 ], [ -5.89837, 57.06772 ], [ -5.89807, 57.06805 ], [ -5.89783, 57.06837 ], [ -5.89773, 57.06855 ], [ -5.89765, 57.06872 ], [ -5.8976, 57.06881 ], [ -5.89748, 57.06899 ], [ -5.8974, 57.06905 ], [ -5.89731, 57.06912 ], [ -5.89717, 57.0692 ], [ -5.89697, 57.06929 ], [ -5.89694, 57.06931 ], [ -5.89676, 57.06938 ], [ -5.89661, 57.06945 ], [ -5.89568, 57.06989 ], [ -5.89533, 57.07006 ], [ -5.89499, 57.07024 ], [ -5.89487, 57.07032 ], [ -5.89477, 57.07039 ], [ -5.89476, 57.07041 ], [ -5.89458, 57.07056 ], [ -5.89457, 57.07057 ], [ -5.89442, 57.07071 ], [ -5.89439, 57.07074 ], [ -5.89425, 57.07093 ], [ -5.89418, 57.07105 ], [ -5.89411, 57.07117 ], [ -5.89408, 57.07122 ], [ -5.89399, 57.07139 ], [ -5.89398, 57.07141 ], [ -5.89387, 57.07156 ], [ -5.89383, 57.07161 ], [ -5.89371, 57.07172 ], [ -5.89368, 57.07174 ], [ -5.89359, 57.0718 ], [ -5.89342, 57.07188 ], [ -5.89318, 57.07195 ], [ -5.89292, 57.07202 ], [ -5.89291, 57.07202 ], [ -5.8926, 57.07208 ], [ -5.89253, 57.07209 ], [ -5.89228, 57.07214 ], [ -5.89226, 57.07215 ], [ -5.89198, 57.07221 ], [ -5.89179, 57.07225 ], [ -5.89168, 57.07229 ], [ -5.89139, 57.07237 ], [ -5.89122, 57.07243 ], [ -5.89101, 57.07251 ], [ -5.89086, 57.07258 ], [ -5.89085, 57.07258 ], [ -5.89071, 57.07264 ], [ -5.89062, 57.07271 ], [ -5.89054, 57.07278 ], [ -5.89044, 57.07299 ], [ -5.8904, 57.07305 ], [ -5.89023, 57.07331 ], [ -5.89017, 57.07338 ], [ -5.89004, 57.07355 ], [ -5.88992, 57.07372 ], [ -5.88989, 57.07375 ], [ -5.88969, 57.07402 ], [ -5.8896, 57.07419 ], [ -5.88954, 57.07436 ], [ -5.88953, 57.0744 ], [ -5.88948, 57.07453 ], [ -5.88945, 57.07458 ], [ -5.88943, 57.07462 ], [ -5.88934, 57.07472 ], [ -5.88923, 57.07481 ], [ -5.88915, 57.07488 ], [ -5.88913, 57.07489 ], [ -5.88894, 57.07503 ], [ -5.88892, 57.07505 ], [ -5.88869, 57.07521 ], [ -5.88852, 57.07536 ], [ -5.88839, 57.07551 ], [ -5.8883, 57.07562 ], [ -5.88822, 57.07579 ], [ -5.88815, 57.07593 ], [ -5.88803, 57.07611 ], [ -5.88794, 57.07623 ], [ -5.88784, 57.07632 ], [ -5.88769, 57.07646 ], [ -5.88756, 57.07662 ], [ -5.88747, 57.07673 ], [ -5.88742, 57.07682 ], [ -5.88732, 57.07699 ], [ -5.88723, 57.07714 ], [ -5.88722, 57.07716 ], [ -5.88711, 57.07733 ], [ -5.88703, 57.07746 ], [ -5.88684, 57.07782 ], [ -5.88681, 57.07803 ], [ -5.88682, 57.07814 ], [ -5.88685, 57.07822 ], [ -5.8869, 57.07832 ], [ -5.88707, 57.07859 ], [ -5.88722, 57.0789 ], [ -5.88729, 57.07907 ], [ -5.8873, 57.07908 ], [ -5.88733, 57.07924 ], [ -5.88733, 57.07925 ], [ -5.88735, 57.07952 ], [ -5.88739, 57.07976 ], [ -5.8874, 57.07979 ], [ -5.88743, 57.07987 ], [ -5.88748, 57.07996 ], [ -5.88754, 57.08008 ], [ -5.88758, 57.08013 ], [ -5.8877, 57.0803 ], [ -5.88771, 57.08031 ], [ -5.88786, 57.08046 ], [ -5.88801, 57.08062 ], [ -5.88808, 57.08069 ], [ -5.88817, 57.08077 ], [ -5.88848, 57.08109 ], [ -5.88855, 57.08124 ], [ -5.88856, 57.08127 ], [ -5.88858, 57.08134 ], [ -5.8886, 57.08141 ], [ -5.8886, 57.08145 ], [ -5.8886, 57.08148 ], [ -5.88856, 57.08163 ], [ -5.8885, 57.08175 ], [ -5.88846, 57.0818 ], [ -5.88837, 57.0819 ], [ -5.88831, 57.08196 ], [ -5.88814, 57.0821 ], [ -5.88779, 57.08241 ], [ -5.88774, 57.08246 ], [ -5.88761, 57.08257 ], [ -5.88744, 57.08272 ], [ -5.8873, 57.08285 ], [ -5.88709, 57.08303 ], [ -5.88697, 57.08312 ], [ -5.88691, 57.08318 ], [ -5.88674, 57.08333 ], [ -5.88658, 57.08347 ], [ -5.88646, 57.08358 ], [ -5.88624, 57.08378 ], [ -5.88607, 57.08393 ], [ -5.88604, 57.08396 ], [ -5.8859, 57.08409 ], [ -5.88573, 57.08424 ], [ -5.88565, 57.08431 ], [ -5.88555, 57.0844 ], [ -5.88538, 57.08455 ], [ -5.88533, 57.08459 ], [ -5.88515, 57.08473 ], [ -5.88493, 57.08488 ], [ -5.88464, 57.08503 ], [ -5.88444, 57.08511 ], [ -5.88422, 57.08519 ], [ -5.88416, 57.0852 ], [ -5.88384, 57.08528 ], [ -5.88348, 57.08534 ], [ -5.88345, 57.08535 ], [ -5.88287, 57.08543 ], [ -5.88271, 57.08546 ], [ -5.88255, 57.08548 ], [ -5.88223, 57.08553 ], [ -5.88215, 57.08554 ], [ -5.88191, 57.08557 ], [ -5.88166, 57.0856 ], [ -5.88158, 57.0856 ], [ -5.88125, 57.08562 ], [ -5.88059, 57.08565 ], [ -5.88022, 57.08567 ], [ -5.87994, 57.08569 ], [ -5.87961, 57.08572 ], [ -5.87956, 57.08572 ], [ -5.87928, 57.08576 ], [ -5.87896, 57.0858 ], [ -5.87884, 57.08581 ], [ -5.87864, 57.08584 ], [ -5.87847, 57.08587 ], [ -5.87813, 57.08595 ], [ -5.87777, 57.08608 ], [ -5.8774, 57.08623 ], [ -5.87636, 57.08668 ], [ -5.87542, 57.08712 ], [ -5.87522, 57.08721 ], [ -5.87503, 57.08733 ], [ -5.87468, 57.08757 ], [ -5.87456, 57.08766 ], [ -5.87452, 57.08769 ], [ -5.87438, 57.08781 ], [ -5.87421, 57.08797 ], [ -5.87404, 57.08812 ], [ -5.87393, 57.08822 ], [ -5.8733, 57.08886 ], [ -5.87281, 57.08932 ], [ -5.87245, 57.08964 ], [ -5.87208, 57.08995 ], [ -5.87192, 57.0901 ], [ -5.8718, 57.09021 ], [ -5.87177, 57.09024 ], [ -5.87143, 57.09056 ], [ -5.87136, 57.09064 ], [ -5.87113, 57.09088 ], [ -5.87083, 57.09121 ], [ -5.87043, 57.0917 ], [ -5.87017, 57.09203 ], [ -5.87004, 57.09219 ], [ -5.86965, 57.09269 ], [ -5.86954, 57.09286 ], [ -5.86932, 57.0932 ], [ -5.8692, 57.09337 ], [ -5.86909, 57.09354 ], [ -5.86897, 57.09368 ], [ -5.86893, 57.09374 ], [ -5.86892, 57.09375 ], [ -5.86872, 57.09403 ], [ -5.8686, 57.09417 ], [ -5.86853, 57.09424 ], [ -5.86844, 57.09435 ], [ -5.86837, 57.0944 ], [ -5.86831, 57.09446 ], [ -5.86819, 57.09454 ], [ -5.86811, 57.0946 ], [ -5.86803, 57.09466 ], [ -5.86793, 57.09475 ], [ -5.86786, 57.09482 ], [ -5.8676, 57.09509 ], [ -5.86757, 57.09519 ], [ -5.86755, 57.09524 ], [ -5.86755, 57.0953 ], [ -5.86755, 57.09546 ], [ -5.86759, 57.09566 ], [ -5.86761, 57.09575 ], [ -5.86767, 57.09601 ], [ -5.86775, 57.09636 ], [ -5.86775, 57.09655 ], [ -5.86772, 57.09672 ], [ -5.86771, 57.09678 ], [ -5.86765, 57.09693 ], [ -5.86757, 57.09707 ], [ -5.86743, 57.09731 ], [ -5.86713, 57.09777 ], [ -5.86706, 57.09786 ], [ -5.86691, 57.09806 ], [ -5.86672, 57.09823 ], [ -5.86659, 57.09833 ], [ -5.86651, 57.09839 ], [ -5.86638, 57.09847 ], [ -5.86617, 57.09861 ], [ -5.86595, 57.09874 ], [ -5.8658, 57.09883 ], [ -5.86573, 57.09888 ], [ -5.86552, 57.09902 ], [ -5.86536, 57.09913 ], [ -5.86513, 57.09934 ], [ -5.86497, 57.09947 ], [ -5.86483, 57.09959 ], [ -5.86468, 57.09974 ], [ -5.86435, 57.10003 ], [ -5.86414, 57.10019 ], [ -5.86403, 57.10029 ], [ -5.86395, 57.10034 ], [ -5.86375, 57.10049 ], [ -5.8636, 57.1006 ], [ -5.86324, 57.10087 ], [ -5.86283, 57.1012 ], [ -5.8628, 57.10122 ], [ -5.86263, 57.10137 ], [ -5.86255, 57.10144 ], [ -5.86243, 57.10156 ], [ -5.86233, 57.10166 ], [ -5.86221, 57.10182 ], [ -5.86206, 57.10208 ], [ -5.86183, 57.1024 ], [ -5.86164, 57.1026 ], [ -5.86147, 57.10275 ], [ -5.8613, 57.10289 ], [ -5.86109, 57.10305 ], [ -5.86104, 57.10308 ], [ -5.8609, 57.10319 ], [ -5.86072, 57.10333 ], [ -5.8604, 57.10355 ], [ -5.86034, 57.10358 ], [ -5.86028, 57.10362 ], [ -5.86018, 57.10367 ], [ -5.86009, 57.1037 ], [ -5.86003, 57.10372 ], [ -5.85986, 57.10377 ], [ -5.85979, 57.10378 ], [ -5.85967, 57.10381 ], [ -5.85948, 57.10384 ], [ -5.85933, 57.10386 ], [ -5.85917, 57.1039 ], [ -5.85902, 57.10393 ], [ -5.85892, 57.10396 ], [ -5.85887, 57.10398 ], [ -5.85879, 57.10401 ], [ -5.85871, 57.10405 ], [ -5.85865, 57.10409 ], [ -5.85858, 57.10414 ], [ -5.85851, 57.10419 ], [ -5.85849, 57.10421 ], [ -5.85839, 57.10433 ], [ -5.85826, 57.10449 ], [ -5.85813, 57.10468 ], [ -5.85806, 57.10479 ], [ -5.85805, 57.10483 ], [ -5.85802, 57.10489 ], [ -5.85799, 57.10499 ], [ -5.85797, 57.10519 ], [ -5.85796, 57.10529 ], [ -5.85793, 57.10544 ], [ -5.85793, 57.10547 ], [ -5.8579, 57.10555 ], [ -5.85787, 57.10564 ], [ -5.85786, 57.10567 ], [ -5.85781, 57.10576 ], [ -5.85777, 57.10581 ], [ -5.85768, 57.10596 ], [ -5.85766, 57.10598 ], [ -5.85756, 57.10613 ], [ -5.85752, 57.10619 ], [ -5.85744, 57.10631 ], [ -5.8574, 57.10636 ], [ -5.85729, 57.10653 ], [ -5.85728, 57.10654 ], [ -5.85711, 57.10672 ], [ -5.85697, 57.10684 ], [ -5.85691, 57.1069 ], [ -5.85681, 57.107 ], [ -5.85669, 57.1071 ], [ -5.85664, 57.10715 ], [ -5.85657, 57.10722 ], [ -5.85648, 57.1073 ], [ -5.85631, 57.10749 ], [ -5.85626, 57.10756 ], [ -5.85621, 57.10764 ], [ -5.8562, 57.10765 ], [ -5.85615, 57.10776 ], [ -5.85612, 57.10786 ], [ -5.85611, 57.10796 ], [ -5.85612, 57.10808 ], [ -5.85624, 57.10838 ], [ -5.85631, 57.10852 ], [ -5.85639, 57.10867 ], [ -5.8564, 57.10869 ], [ -5.85651, 57.1089 ], [ -5.85654, 57.10903 ], [ -5.85654, 57.10904 ], [ -5.85654, 57.10911 ], [ -5.85652, 57.10921 ], [ -5.85651, 57.10922 ], [ -5.85646, 57.10932 ], [ -5.85641, 57.10939 ], [ -5.85639, 57.10942 ], [ -5.85634, 57.10948 ], [ -5.85626, 57.10954 ], [ -5.856, 57.10972 ], [ -5.85567, 57.1099 ], [ -5.85559, 57.10995 ], [ -5.85544, 57.11004 ], [ -5.85518, 57.11021 ], [ -5.85497, 57.11036 ], [ -5.8549, 57.11043 ], [ -5.85483, 57.11049 ], [ -5.85471, 57.11065 ], [ -5.85452, 57.11102 ], [ -5.8545, 57.11106 ], [ -5.85423, 57.11147 ], [ -5.85418, 57.11153 ], [ -5.85397, 57.11176 ], [ -5.85377, 57.11197 ], [ -5.85339, 57.11237 ], [ -5.85319, 57.11256 ], [ -5.85317, 57.11258 ], [ -5.85286, 57.11284 ], [ -5.85282, 57.11286 ], [ -5.85271, 57.11293 ], [ -5.85261, 57.11297 ], [ -5.85249, 57.11301 ], [ -5.85214, 57.11312 ], [ -5.85145, 57.11335 ], [ -5.85127, 57.11344 ], [ -5.85073, 57.11365 ], [ -5.85067, 57.11368 ], [ -5.8499, 57.11401 ], [ -5.84959, 57.11418 ], [ -5.84944, 57.11427 ], [ -5.84943, 57.11428 ], [ -5.84897, 57.11458 ], [ -5.8488, 57.11469 ], [ -5.84868, 57.11477 ], [ -5.84846, 57.11492 ], [ -5.84838, 57.11497 ], [ -5.84808, 57.11517 ], [ -5.84791, 57.11528 ], [ -5.84767, 57.11546 ], [ -5.8476, 57.11551 ], [ -5.8475, 57.11559 ], [ -5.84726, 57.11584 ], [ -5.84711, 57.11603 ], [ -5.84702, 57.11615 ], [ -5.84694, 57.1163 ], [ -5.84686, 57.11644 ], [ -5.84682, 57.11653 ], [ -5.84678, 57.11668 ], [ -5.84673, 57.11687 ], [ -5.84672, 57.11712 ], [ -5.84671, 57.1173 ], [ -5.84671, 57.11743 ], [ -5.8467, 57.11778 ], [ -5.84666, 57.11798 ], [ -5.84654, 57.11831 ], [ -5.84647, 57.11855 ], [ -5.84643, 57.11871 ], [ -5.84642, 57.11873 ], [ -5.84637, 57.11891 ], [ -5.84636, 57.11894 ], [ -5.84635, 57.11901 ], [ -5.84635, 57.11909 ], [ -5.84636, 57.11916 ], [ -5.84637, 57.11922 ], [ -5.8464, 57.11931 ], [ -5.84645, 57.11944 ], [ -5.84645, 57.11946 ], [ -5.84651, 57.11962 ], [ -5.8467, 57.12015 ], [ -5.84681, 57.12043 ], [ -5.84702, 57.12105 ], [ -5.84706, 57.12121 ], [ -5.84711, 57.12137 ], [ -5.84712, 57.12139 ], [ -5.84716, 57.1217 ], [ -5.84717, 57.12193 ], [ -5.84717, 57.122 ], [ -5.84716, 57.1221 ], [ -5.84714, 57.12235 ], [ -5.84711, 57.12246 ], [ -5.84705, 57.12271 ], [ -5.847, 57.12282 ], [ -5.84691, 57.12305 ], [ -5.84685, 57.12317 ], [ -5.84675, 57.12334 ], [ -5.84671, 57.12343 ], [ -5.8466, 57.12362 ], [ -5.84653, 57.12378 ], [ -5.84648, 57.12392 ], [ -5.84638, 57.12428 ], [ -5.84634, 57.12439 ], [ -5.84633, 57.12445 ], [ -5.84623, 57.12461 ], [ -5.84605, 57.12478 ], [ -5.84586, 57.12492 ], [ -5.84569, 57.12501 ], [ -5.84528, 57.12515 ], [ -5.84519, 57.12518 ], [ -5.84497, 57.12527 ], [ -5.84457, 57.12541 ], [ -5.84436, 57.12551 ], [ -5.84416, 57.12562 ], [ -5.84415, 57.12563 ], [ -5.84393, 57.12579 ], [ -5.84381, 57.12592 ], [ -5.84368, 57.12612 ], [ -5.84363, 57.12623 ], [ -5.84357, 57.1265 ], [ -5.84351, 57.12677 ], [ -5.84348, 57.12697 ], [ -5.8434, 57.12712 ], [ -5.84338, 57.12716 ], [ -5.84329, 57.12731 ], [ -5.84288, 57.12784 ], [ -5.84248, 57.12832 ], [ -5.84221, 57.12865 ], [ -5.84208, 57.12882 ], [ -5.84181, 57.12914 ], [ -5.84166, 57.1293 ], [ -5.84151, 57.12946 ], [ -5.84147, 57.12951 ], [ -5.84135, 57.12962 ], [ -5.84119, 57.12978 ], [ -5.84086, 57.13009 ], [ -5.8407, 57.13025 ], [ -5.84068, 57.13026 ], [ -5.84053, 57.1304 ], [ -5.84036, 57.13056 ], [ -5.84001, 57.13087 ], [ -5.83984, 57.13102 ], [ -5.83968, 57.13117 ], [ -5.83967, 57.13117 ], [ -5.83934, 57.13148 ], [ -5.83917, 57.13164 ], [ -5.839, 57.13179 ], [ -5.83883, 57.13195 ], [ -5.83873, 57.13204 ], [ -5.83866, 57.1321 ], [ -5.83848, 57.13225 ], [ -5.8374, 57.13316 ], [ -5.83725, 57.13329 ], [ -5.83615, 57.13422 ], [ -5.83578, 57.13454 ], [ -5.83543, 57.13482 ], [ -5.83525, 57.13498 ], [ -5.83488, 57.13528 ], [ -5.8347, 57.13543 ], [ -5.83452, 57.13558 ], [ -5.83424, 57.13581 ], [ -5.83397, 57.13603 ], [ -5.8336, 57.13632 ], [ -5.83341, 57.13647 ], [ -5.83325, 57.1366 ], [ -5.83322, 57.13662 ], [ -5.83233, 57.1373 ], [ -5.83189, 57.13765 ], [ -5.8317, 57.1378 ], [ -5.83132, 57.13809 ], [ -5.83085, 57.13843 ], [ -5.8305, 57.13866 ], [ -5.83029, 57.1388 ], [ -5.83027, 57.13881 ], [ -5.82973, 57.13913 ], [ -5.82919, 57.1394 ], [ -5.82886, 57.13954 ], [ -5.82861, 57.13966 ], [ -5.82834, 57.13976 ], [ -5.82807, 57.13987 ], [ -5.82799, 57.1399 ], [ -5.82779, 57.13997 ], [ -5.82752, 57.14006 ], [ -5.82751, 57.14007 ], [ -5.82722, 57.14015 ], [ -5.82664, 57.14032 ], [ -5.82662, 57.14033 ], [ -5.82606, 57.1405 ], [ -5.826, 57.14052 ], [ -5.82577, 57.14059 ], [ -5.82552, 57.14067 ], [ -5.82521, 57.14078 ], [ -5.82495, 57.14087 ], [ -5.82494, 57.14088 ], [ -5.82441, 57.1411 ], [ -5.82428, 57.14115 ], [ -5.82416, 57.14122 ], [ -5.82378, 57.14139 ], [ -5.82342, 57.14158 ], [ -5.82332, 57.14163 ], [ -5.82318, 57.1417 ], [ -5.82295, 57.14183 ], [ -5.82294, 57.14183 ], [ -5.82273, 57.14197 ], [ -5.82251, 57.1421 ], [ -5.8224, 57.14217 ], [ -5.82181, 57.14252 ], [ -5.82118, 57.14285 ], [ -5.82108, 57.1429 ], [ -5.82059, 57.14311 ], [ -5.82025, 57.14324 ], [ -5.81992, 57.14337 ], [ -5.81902, 57.14372 ], [ -5.81836, 57.14397 ], [ -5.81806, 57.14408 ], [ -5.81754, 57.14428 ], [ -5.81727, 57.14438 ], [ -5.81724, 57.14439 ], [ -5.817, 57.14448 ], [ -5.81672, 57.14458 ], [ -5.81663, 57.14461 ], [ -5.81643, 57.14467 ], [ -5.81628, 57.14471 ], [ -5.81584, 57.14482 ], [ -5.81584, 57.14483 ], [ -5.8154, 57.1449 ], [ -5.8152, 57.14493 ], [ -5.81488, 57.14497 ], [ -5.81481, 57.14498 ], [ -5.81429, 57.14502 ], [ -5.81389, 57.14503 ], [ -5.81356, 57.14504 ], [ -5.81346, 57.14505 ], [ -5.8129, 57.14506 ], [ -5.81282, 57.14506 ], [ -5.81232, 57.14507 ], [ -5.81203, 57.14509 ], [ -5.81179, 57.14513 ], [ -5.81159, 57.14515 ], [ -5.81141, 57.14519 ], [ -5.81094, 57.14531 ], [ -5.81055, 57.14541 ], [ -5.81047, 57.14543 ], [ -5.8102, 57.14551 ], [ -5.80982, 57.14562 ], [ -5.80944, 57.14576 ], [ -5.80905, 57.1459 ], [ -5.80876, 57.14601 ], [ -5.80824, 57.14621 ], [ -5.80764, 57.14648 ], [ -5.80728, 57.14664 ], [ -5.80676, 57.14688 ], [ -5.80645, 57.14701 ], [ -5.8064, 57.14704 ], [ -5.80616, 57.14716 ], [ -5.80609, 57.1472 ], [ -5.80579, 57.14737 ], [ -5.80572, 57.14743 ], [ -5.80562, 57.14751 ], [ -5.80556, 57.14759 ], [ -5.80542, 57.14774 ], [ -5.80541, 57.14775 ], [ -5.80537, 57.14782 ], [ -5.80532, 57.14791 ], [ -5.80532, 57.14792 ], [ -5.80525, 57.14806 ], [ -5.80518, 57.14822 ], [ -5.80512, 57.14839 ], [ -5.80506, 57.14855 ], [ -5.805, 57.1487 ], [ -5.80495, 57.14885 ], [ -5.8049, 57.14898 ], [ -5.80489, 57.149 ], [ -5.80486, 57.14907 ], [ -5.80482, 57.14915 ], [ -5.80478, 57.14922 ], [ -5.80473, 57.14929 ], [ -5.80462, 57.14943 ], [ -5.80455, 57.1495 ], [ -5.80447, 57.14957 ], [ -5.80439, 57.14963 ], [ -5.8043, 57.1497 ], [ -5.8042, 57.14975 ], [ -5.80417, 57.14977 ], [ -5.8041, 57.14981 ], [ -5.80376, 57.14997 ], [ -5.80368, 57.15001 ], [ -5.80363, 57.15003 ], [ -5.80316, 57.15023 ], [ -5.80305, 57.15028 ], [ -5.80281, 57.15039 ], [ -5.80264, 57.15046 ], [ -5.80258, 57.15049 ], [ -5.80248, 57.15054 ], [ -5.8024, 57.15058 ], [ -5.80237, 57.1506 ], [ -5.8023, 57.15064 ], [ -5.80219, 57.15071 ], [ -5.80218, 57.15072 ], [ -5.80212, 57.15077 ], [ -5.80202, 57.15087 ], [ -5.80199, 57.15091 ], [ -5.8019, 57.15104 ], [ -5.80189, 57.15105 ], [ -5.80185, 57.15113 ], [ -5.80182, 57.1512 ], [ -5.80182, 57.15121 ], [ -5.80176, 57.15136 ], [ -5.8017, 57.15152 ], [ -5.80163, 57.15169 ], [ -5.80161, 57.15174 ], [ -5.80155, 57.15189 ], [ -5.80154, 57.15192 ], [ -5.80146, 57.15209 ], [ -5.80141, 57.15222 ], [ -5.80139, 57.15227 ], [ -5.80133, 57.15242 ], [ -5.80132, 57.15244 ], [ -5.80127, 57.15256 ], [ -5.80125, 57.15262 ], [ -5.80116, 57.15282 ], [ -5.8011, 57.15299 ], [ -5.80103, 57.15315 ], [ -5.80102, 57.15315 ], [ -5.80096, 57.15331 ], [ -5.80089, 57.15348 ], [ -5.80083, 57.15364 ], [ -5.80082, 57.15367 ], [ -5.80079, 57.15372 ], [ -5.80075, 57.15385 ], [ -5.80073, 57.15388 ], [ -5.80068, 57.15403 ], [ -5.80064, 57.15413 ], [ -5.80061, 57.1542 ], [ -5.80058, 57.15429 ], [ -5.80053, 57.15444 ], [ -5.80052, 57.1546 ], [ -5.80052, 57.15468 ], [ -5.80053, 57.15476 ], [ -5.80055, 57.15484 ], [ -5.80058, 57.15492 ], [ -5.80061, 57.15499 ], [ -5.80065, 57.15506 ], [ -5.80066, 57.15509 ], [ -5.80074, 57.15521 ], [ -5.80078, 57.15526 ], [ -5.8008, 57.15528 ], [ -5.80086, 57.15534 ], [ -5.80093, 57.15541 ], [ -5.80094, 57.15541 ], [ -5.801, 57.15547 ], [ -5.80112, 57.15557 ], [ -5.80115, 57.15559 ], [ -5.80129, 57.15571 ], [ -5.8013, 57.15572 ], [ -5.80144, 57.15583 ], [ -5.80147, 57.15587 ], [ -5.80156, 57.15596 ], [ -5.80162, 57.15603 ], [ -5.80168, 57.1561 ], [ -5.80172, 57.15616 ], [ -5.80176, 57.15623 ], [ -5.80182, 57.15637 ], [ -5.80183, 57.15637 ], [ -5.80185, 57.15644 ], [ -5.80187, 57.1565 ], [ -5.80188, 57.15655 ], [ -5.80188, 57.15657 ], [ -5.80189, 57.15664 ], [ -5.8019, 57.15673 ], [ -5.8019, 57.15676 ], [ -5.8019, 57.15684 ], [ -5.80189, 57.1569 ], [ -5.80187, 57.15697 ], [ -5.80184, 57.15709 ], [ -5.8018, 57.15717 ], [ -5.80162, 57.15757 ], [ -5.80153, 57.15774 ], [ -5.80152, 57.15776 ], [ -5.80144, 57.15791 ], [ -5.80142, 57.15796 ], [ -5.8013, 57.15816 ], [ -5.80125, 57.15825 ], [ -5.80123, 57.15829 ], [ -5.80114, 57.15843 ], [ -5.80103, 57.15857 ], [ -5.80101, 57.15859 ], [ -5.80096, 57.15864 ], [ -5.8009, 57.15871 ], [ -5.80075, 57.15883 ], [ -5.80058, 57.15895 ], [ -5.80045, 57.15903 ], [ -5.80042, 57.15905 ], [ -5.80024, 57.15914 ], [ -5.80021, 57.15916 ], [ -5.80006, 57.15924 ], [ -5.79988, 57.15933 ], [ -5.79974, 57.15941 ], [ -5.79969, 57.15943 ], [ -5.79953, 57.15954 ], [ -5.79952, 57.15955 ], [ -5.79939, 57.15965 ], [ -5.79935, 57.1597 ], [ -5.79934, 57.15971 ], [ -5.79929, 57.15978 ], [ -5.79925, 57.15984 ], [ -5.79921, 57.15991 ], [ -5.79919, 57.15999 ], [ -5.79917, 57.16006 ], [ -5.79916, 57.16013 ], [ -5.79916, 57.16021 ], [ -5.79918, 57.16028 ], [ -5.7992, 57.16036 ], [ -5.79922, 57.1604 ], [ -5.79924, 57.16043 ], [ -5.79928, 57.16051 ], [ -5.79932, 57.16057 ], [ -5.79933, 57.16059 ], [ -5.79944, 57.16074 ], [ -5.79945, 57.16075 ], [ -5.79956, 57.16091 ], [ -5.79957, 57.16092 ], [ -5.79963, 57.16101 ], [ -5.79975, 57.16118 ], [ -5.79987, 57.16136 ], [ -5.79991, 57.16141 ], [ -5.79999, 57.16153 ], [ -5.80011, 57.16171 ], [ -5.80021, 57.16188 ], [ -5.80025, 57.16197 ], [ -5.80028, 57.16205 ], [ -5.8003, 57.1621 ], [ -5.80033, 57.16223 ], [ -5.80035, 57.16228 ], [ -5.80037, 57.1624 ], [ -5.80039, 57.16246 ], [ -5.80042, 57.16257 ], [ -5.80043, 57.16263 ], [ -5.80045, 57.16274 ], [ -5.80046, 57.16281 ], [ -5.80048, 57.16291 ], [ -5.8005, 57.16299 ], [ -5.80052, 57.16309 ], [ -5.80058, 57.16326 ], [ -5.80065, 57.16343 ], [ -5.80069, 57.16352 ], [ -5.80074, 57.1636 ], [ -5.80078, 57.16369 ], [ -5.80083, 57.16377 ], [ -5.80088, 57.16385 ], [ -5.80099, 57.16402 ], [ -5.801, 57.16403 ], [ -5.8011, 57.16418 ], [ -5.80111, 57.1642 ], [ -5.80122, 57.16437 ], [ -5.80125, 57.16443 ], [ -5.80132, 57.16454 ], [ -5.8014, 57.16467 ], [ -5.80143, 57.16471 ], [ -5.80152, 57.16484 ], [ -5.80155, 57.16488 ], [ -5.80163, 57.16501 ], [ -5.80166, 57.16505 ], [ -5.80178, 57.16522 ], [ -5.80182, 57.16529 ], [ -5.8019, 57.16539 ], [ -5.80196, 57.16548 ], [ -5.80202, 57.16556 ], [ -5.80217, 57.16576 ], [ -5.80231, 57.16594 ], [ -5.8024, 57.16605 ], [ -5.80246, 57.16611 ], [ -5.80254, 57.16622 ], [ -5.8026, 57.16629 ], [ -5.80266, 57.16638 ], [ -5.80272, 57.16646 ], [ -5.80283, 57.16664 ], [ -5.80288, 57.16672 ], [ -5.80292, 57.16681 ], [ -5.80302, 57.16698 ], [ -5.80313, 57.16716 ], [ -5.80322, 57.16732 ], [ -5.80332, 57.1675 ], [ -5.80338, 57.16758 ], [ -5.80343, 57.16765 ], [ -5.8035, 57.16773 ], [ -5.80352, 57.16774 ], [ -5.80358, 57.16781 ], [ -5.80367, 57.16788 ], [ -5.80369, 57.1679 ], [ -5.80376, 57.16795 ], [ -5.80395, 57.16809 ], [ -5.80416, 57.16824 ], [ -5.80429, 57.16833 ], [ -5.80438, 57.16839 ], [ -5.80447, 57.16847 ], [ -5.80448, 57.16847 ], [ -5.80456, 57.16855 ], [ -5.80464, 57.16863 ], [ -5.80465, 57.16864 ], [ -5.80472, 57.16873 ], [ -5.80476, 57.1688 ], [ -5.80478, 57.16883 ], [ -5.80483, 57.16893 ], [ -5.80484, 57.16897 ], [ -5.80487, 57.16903 ], [ -5.8049, 57.16913 ], [ -5.8049, 57.16915 ], [ -5.80495, 57.16933 ], [ -5.805, 57.16951 ], [ -5.80501, 57.16954 ], [ -5.80507, 57.16968 ], [ -5.80509, 57.16976 ], [ -5.80514, 57.16986 ], [ -5.80524, 57.17003 ], [ -5.80526, 57.17007 ], [ -5.80535, 57.1702 ], [ -5.8054, 57.17027 ], [ -5.80548, 57.17037 ], [ -5.80556, 57.17048 ], [ -5.80561, 57.17053 ], [ -5.80574, 57.17068 ], [ -5.80576, 57.17069 ], [ -5.80591, 57.17085 ], [ -5.80594, 57.17088 ], [ -5.80607, 57.17101 ], [ -5.80613, 57.17108 ], [ -5.80655, 57.17148 ], [ -5.80665, 57.17158 ], [ -5.80673, 57.17166 ], [ -5.80687, 57.1718 ], [ -5.80706, 57.17197 ], [ -5.80709, 57.172 ], [ -5.8074, 57.1723 ], [ -5.80751, 57.17241 ], [ -5.8077, 57.1726 ], [ -5.80799, 57.17288 ], [ -5.80811, 57.17299 ], [ -5.80816, 57.17304 ], [ -5.80852, 57.17338 ], [ -5.80912, 57.17396 ], [ -5.80942, 57.17425 ], [ -5.80963, 57.17445 ], [ -5.80983, 57.17464 ], [ -5.81004, 57.17484 ], [ -5.81044, 57.17522 ], [ -5.81044, 57.17523 ], [ -5.81061, 57.17538 ], [ -5.81077, 57.17554 ], [ -5.81084, 57.1756 ], [ -5.81122, 57.17598 ], [ -5.8115, 57.17625 ], [ -5.81158, 57.17632 ], [ -5.81191, 57.17664 ], [ -5.81202, 57.17675 ], [ -5.81218, 57.1769 ], [ -5.81223, 57.17695 ], [ -5.81234, 57.17705 ], [ -5.8124, 57.17711 ], [ -5.81256, 57.17726 ], [ -5.8133, 57.17796 ], [ -5.81373, 57.17837 ], [ -5.8139, 57.17853 ], [ -5.81428, 57.17889 ], [ -5.81464, 57.17924 ], [ -5.81471, 57.17931 ], [ -5.81511, 57.17969 ], [ -5.81536, 57.17994 ], [ -5.8156, 57.18017 ], [ -5.81602, 57.18056 ], [ -5.81637, 57.18088 ], [ -5.81719, 57.18162 ], [ -5.81721, 57.18164 ], [ -5.81754, 57.18192 ], [ -5.81779, 57.18214 ], [ -5.818, 57.18232 ], [ -5.81826, 57.18256 ], [ -5.8185, 57.18277 ], [ -5.81873, 57.18298 ], [ -5.81897, 57.18318 ], [ -5.81921, 57.18338 ], [ -5.8195, 57.18362 ], [ -5.81979, 57.18387 ], [ -5.81989, 57.18396 ], [ -5.82005, 57.18412 ], [ -5.82018, 57.18423 ], [ -5.82039, 57.18446 ], [ -5.8206, 57.18473 ], [ -5.82068, 57.18488 ], [ -5.8208, 57.1851 ], [ -5.82086, 57.18523 ], [ -5.82091, 57.18544 ], [ -5.82094, 57.18559 ], [ -5.82093, 57.1858 ], [ -5.82092, 57.18585 ], [ -5.82092, 57.18596 ], [ -5.82091, 57.18598 ], [ -5.82089, 57.18607 ], [ -5.82084, 57.18619 ], [ -5.82073, 57.18641 ], [ -5.82067, 57.1865 ], [ -5.82059, 57.18662 ], [ -5.82045, 57.18681 ], [ -5.82042, 57.18684 ], [ -5.82027, 57.18699 ], [ -5.82003, 57.18723 ], [ -5.81993, 57.18731 ], [ -5.81956, 57.18761 ], [ -5.81952, 57.18764 ], [ -5.81886, 57.18814 ], [ -5.81839, 57.18848 ], [ -5.81821, 57.18861 ], [ -5.81819, 57.18862 ], [ -5.81778, 57.18892 ], [ -5.81726, 57.18929 ], [ -5.8168, 57.18963 ], [ -5.81675, 57.18967 ], [ -5.81661, 57.18978 ], [ -5.81621, 57.19007 ], [ -5.81607, 57.19017 ], [ -5.81583, 57.19036 ], [ -5.81564, 57.19051 ], [ -5.81559, 57.19054 ], [ -5.81523, 57.19086 ], [ -5.81492, 57.19118 ], [ -5.81474, 57.19142 ], [ -5.8146, 57.19163 ], [ -5.81447, 57.19189 ], [ -5.81436, 57.19212 ], [ -5.81426, 57.19239 ], [ -5.81425, 57.19243 ], [ -5.8142, 57.1926 ], [ -5.81417, 57.19273 ], [ -5.81415, 57.19301 ], [ -5.81415, 57.1934 ], [ -5.81421, 57.19378 ], [ -5.81426, 57.19418 ], [ -5.81427, 57.19422 ], [ -5.8143, 57.1944 ], [ -5.81434, 57.19458 ], [ -5.81437, 57.19476 ], [ -5.81447, 57.19522 ], [ -5.81458, 57.19574 ], [ -5.81467, 57.19611 ], [ -5.81479, 57.1966 ], [ -5.8149, 57.19708 ], [ -5.81498, 57.19739 ], [ -5.81517, 57.19806 ], [ -5.81522, 57.19824 ], [ -5.81525, 57.19832 ], [ -5.8153, 57.1985 ], [ -5.81538, 57.19877 ], [ -5.8154, 57.19886 ], [ -5.81545, 57.19903 ], [ -5.81551, 57.19921 ], [ -5.81552, 57.19926 ], [ -5.81558, 57.19943 ], [ -5.81562, 57.19956 ], [ -5.81568, 57.19974 ], [ -5.81574, 57.19992 ], [ -5.81586, 57.20027 ], [ -5.81592, 57.20045 ], [ -5.81598, 57.20063 ], [ -5.81604, 57.2008 ], [ -5.81607, 57.20089 ], [ -5.81613, 57.20106 ], [ -5.81618, 57.20115 ], [ -5.81619, 57.20118 ], [ -5.81624, 57.20128 ], [ -5.81627, 57.20133 ], [ -5.81633, 57.20143 ], [ -5.81638, 57.20151 ], [ -5.81648, 57.20167 ], [ -5.81653, 57.20173 ], [ -5.81671, 57.20195 ], [ -5.81686, 57.20212 ], [ -5.81706, 57.20231 ], [ -5.81724, 57.20247 ], [ -5.81729, 57.20251 ], [ -5.81751, 57.20268 ], [ -5.81773, 57.20283 ], [ -5.81787, 57.20292 ], [ -5.81804, 57.20303 ], [ -5.81828, 57.20318 ], [ -5.81853, 57.20332 ], [ -5.81889, 57.20351 ], [ -5.81943, 57.20377 ], [ -5.81946, 57.20379 ], [ -5.81967, 57.2039 ], [ -5.8204, 57.20426 ], [ -5.82049, 57.2043 ], [ -5.82136, 57.20476 ], [ -5.82138, 57.20477 ], [ -5.82232, 57.20526 ], [ -5.82239, 57.2053 ], [ -5.82394, 57.20616 ], [ -5.82445, 57.20645 ], [ -5.82608, 57.20738 ], [ -5.82646, 57.2076 ], [ -5.82719, 57.20803 ], [ -5.82736, 57.20813 ], [ -5.82822, 57.20863 ], [ -5.8287, 57.20892 ], [ -5.82892, 57.20906 ], [ -5.82914, 57.20919 ], [ -5.82918, 57.20922 ], [ -5.82942, 57.20937 ], [ -5.82989, 57.20965 ], [ -5.83071, 57.21018 ], [ -5.83099, 57.21036 ], [ -5.83151, 57.2107 ], [ -5.83193, 57.21097 ], [ -5.83229, 57.2112 ], [ -5.83232, 57.21123 ], [ -5.8328, 57.21155 ], [ -5.83311, 57.21176 ], [ -5.83336, 57.21193 ], [ -5.83357, 57.21207 ], [ -5.83374, 57.21219 ], [ -5.8342, 57.21249 ], [ -5.83441, 57.21262 ], [ -5.83453, 57.21271 ], [ -5.83504, 57.21304 ], [ -5.83536, 57.21325 ], [ -5.83613, 57.21372 ], [ -5.8363, 57.21382 ], [ -5.83678, 57.21413 ], [ -5.83721, 57.2144 ], [ -5.83749, 57.21458 ], [ -5.83765, 57.21469 ], [ -5.83806, 57.21496 ], [ -5.83827, 57.2151 ], [ -5.83841, 57.21519 ], [ -5.83864, 57.21538 ], [ -5.83902, 57.21569 ], [ -5.83999, 57.21668 ], [ -5.84104, 57.21778 ], [ -5.84213, 57.21887 ], [ -5.84229, 57.21903 ], [ -5.84236, 57.2191 ], [ -5.84264, 57.21936 ], [ -5.84284, 57.21956 ], [ -5.84311, 57.21981 ], [ -5.84344, 57.22012 ], [ -5.8436, 57.22027 ], [ -5.8441, 57.22073 ], [ -5.84417, 57.2208 ], [ -5.84428, 57.22089 ], [ -5.84443, 57.22103 ], [ -5.84445, 57.22105 ], [ -5.84459, 57.22118 ], [ -5.8447, 57.22128 ], [ -5.84485, 57.22141 ], [ -5.84487, 57.22143 ], [ -5.84505, 57.22159 ], [ -5.84514, 57.22167 ], [ -5.84524, 57.22175 ], [ -5.84547, 57.22196 ], [ -5.84571, 57.22216 ], [ -5.84599, 57.22241 ], [ -5.84635, 57.22271 ], [ -5.84638, 57.22274 ], [ -5.84649, 57.22283 ], [ -5.84658, 57.22291 ], [ -5.84679, 57.22309 ], [ -5.84709, 57.22334 ], [ -5.84749, 57.22367 ], [ -5.84781, 57.22393 ], [ -5.84798, 57.22406 ], [ -5.84801, 57.22409 ], [ -5.84816, 57.22421 ], [ -5.84835, 57.22436 ], [ -5.84873, 57.22467 ], [ -5.84914, 57.22499 ], [ -5.84926, 57.22508 ], [ -5.85005, 57.22569 ], [ -5.85007, 57.22571 ], [ -5.85049, 57.22602 ], [ -5.85083, 57.22628 ], [ -5.85091, 57.22634 ], [ -5.85118, 57.22655 ], [ -5.8516, 57.22686 ], [ -5.8518, 57.22701 ], [ -5.852, 57.22715 ], [ -5.8525, 57.22752 ], [ -5.85259, 57.22758 ], [ -5.8528, 57.22773 ], [ -5.853, 57.22787 ], [ -5.85313, 57.22796 ], [ -5.85339, 57.22814 ], [ -5.85341, 57.22815 ], [ -5.85361, 57.22829 ], [ -5.85363, 57.22831 ], [ -5.85381, 57.22844 ], [ -5.85385, 57.22846 ], [ -5.85402, 57.22858 ], [ -5.85437, 57.22882 ], [ -5.85443, 57.22886 ], [ -5.85465, 57.229 ], [ -5.85467, 57.22901 ], [ -5.85508, 57.22925 ], [ -5.85539, 57.22941 ], [ -5.85559, 57.2295 ], [ -5.85577, 57.22959 ], [ -5.85584, 57.22962 ], [ -5.856, 57.22969 ], [ -5.8561, 57.22973 ], [ -5.85625, 57.22979 ], [ -5.85645, 57.22987 ], [ -5.8568, 57.23001 ], [ -5.85707, 57.2301 ], [ -5.85742, 57.23022 ], [ -5.85758, 57.23028 ], [ -5.85778, 57.23034 ], [ -5.8581, 57.23042 ], [ -5.85844, 57.23051 ], [ -5.85878, 57.23058 ], [ -5.85888, 57.2306 ], [ -5.85935, 57.23071 ], [ -5.85971, 57.23079 ], [ -5.85991, 57.23083 ], [ -5.8602, 57.2309 ], [ -5.8605, 57.23098 ], [ -5.86061, 57.23101 ], [ -5.86105, 57.23115 ], [ -5.86148, 57.23128 ], [ -5.86166, 57.23134 ], [ -5.86185, 57.2314 ], [ -5.86202, 57.23145 ], [ -5.86217, 57.23151 ], [ -5.86231, 57.23157 ], [ -5.86233, 57.23158 ], [ -5.86253, 57.23169 ], [ -5.86275, 57.2318 ], [ -5.86297, 57.23191 ], [ -5.86304, 57.23194 ], [ -5.86334, 57.23208 ], [ -5.86354, 57.23218 ], [ -5.86376, 57.23228 ], [ -5.8638, 57.23229 ], [ -5.86417, 57.23245 ], [ -5.86433, 57.23251 ], [ -5.86447, 57.23257 ], [ -5.86482, 57.2327 ], [ -5.86508, 57.2328 ], [ -5.86514, 57.23282 ], [ -5.86534, 57.2329 ], [ -5.86567, 57.23303 ], [ -5.86568, 57.23303 ], [ -5.866, 57.23317 ], [ -5.86645, 57.23337 ], [ -5.8666, 57.23344 ], [ -5.86721, 57.23372 ], [ -5.86728, 57.23376 ], [ -5.86843, 57.2343 ], [ -5.86846, 57.23431 ], [ -5.86873, 57.23442 ], [ -5.86899, 57.23453 ], [ -5.86914, 57.23459 ], [ -5.86946, 57.23474 ], [ -5.86951, 57.23476 ], [ -5.86966, 57.23482 ], [ -5.86991, 57.23491 ], [ -5.87015, 57.23499 ], [ -5.87064, 57.23515 ], [ -5.87091, 57.23524 ], [ -5.87147, 57.23543 ], [ -5.87149, 57.23544 ], [ -5.87214, 57.23565 ], [ -5.8723, 57.23571 ], [ -5.87243, 57.23575 ], [ -5.87251, 57.23579 ], [ -5.87257, 57.23583 ], [ -5.87266, 57.2359 ], [ -5.87268, 57.23594 ], [ -5.87269, 57.23604 ], [ -5.8726941, 57.2360364 ], [ -5.8728, 57.23604 ], [ -5.87294, 57.23606 ], [ -5.87305, 57.23608 ], [ -5.87319, 57.23611 ], [ -5.87329, 57.23613 ], [ -5.87341, 57.23617 ], [ -5.87353, 57.23622 ], [ -5.87382, 57.23633 ], [ -5.87437, 57.23656 ], [ -5.87473, 57.23669 ], [ -5.87488, 57.23675 ], [ -5.87494, 57.23677 ], [ -5.87513, 57.23684 ], [ -5.87533, 57.23689 ], [ -5.87543, 57.23691 ], [ -5.87552, 57.23692 ], [ -5.87564, 57.23692 ], [ -5.87578, 57.23692 ], [ -5.87592, 57.23691 ], [ -5.87678, 57.23686 ], [ -5.87691, 57.23685 ], [ -5.87754, 57.23681 ], [ -5.87757, 57.2368 ], [ -5.8779, 57.23678 ], [ -5.87823, 57.23676 ], [ -5.87825, 57.23676 ], [ -5.87849, 57.23675 ], [ -5.87856, 57.23675 ], [ -5.8787, 57.23675 ], [ -5.87883, 57.23676 ], [ -5.87889, 57.23677 ], [ -5.87898, 57.23678 ], [ -5.87919, 57.23682 ], [ -5.87934, 57.23686 ], [ -5.87947, 57.2369 ], [ -5.87959, 57.23695 ], [ -5.87973, 57.23703 ], [ -5.87985, 57.23709 ], [ -5.87993, 57.23715 ], [ -5.88053, 57.23759 ], [ -5.88066, 57.23769 ], [ -5.88074, 57.23775 ], [ -5.88092, 57.23786 ], [ -5.88104, 57.23793 ], [ -5.88112, 57.23797 ], [ -5.88115, 57.23799 ], [ -5.88131, 57.23806 ], [ -5.88137, 57.23808 ], [ -5.88146, 57.23811 ], [ -5.8817, 57.23818 ], [ -5.8819, 57.23823 ], [ -5.88198, 57.23825 ], [ -5.88209, 57.23827 ], [ -5.88226, 57.2383 ], [ -5.88237, 57.23831 ], [ -5.88251, 57.23832 ], [ -5.88268, 57.23832 ], [ -5.8829, 57.23832 ], [ -5.88303, 57.23831 ], [ -5.8831, 57.23831 ], [ -5.88319, 57.2383 ], [ -5.8835, 57.23825 ], [ -5.88359, 57.23824 ], [ -5.88373, 57.23822 ], [ -5.88394, 57.23817 ], [ -5.88427, 57.23809 ], [ -5.8846, 57.23801 ], [ -5.88482, 57.23795 ], [ -5.88528, 57.23783 ], [ -5.88549, 57.23779 ], [ -5.88557, 57.23777 ], [ -5.88582, 57.23774 ], [ -5.88595, 57.23773 ], [ -5.88611, 57.23772 ], [ -5.88643, 57.23772 ], [ -5.88685, 57.23775 ], [ -5.88717, 57.23777 ], [ -5.8875, 57.23779 ], [ -5.88792, 57.23783 ], [ -5.88841, 57.23787 ], [ -5.88886, 57.2379 ], [ -5.88932, 57.23792 ], [ -5.88976, 57.23794 ], [ -5.88988, 57.23794 ], [ -5.89042, 57.23795 ], [ -5.89088, 57.23797 ], [ -5.89117, 57.23798 ], [ -5.89154, 57.23799 ], [ -5.89187, 57.238 ], [ -5.89245, 57.23802 ], [ -5.89349, 57.23805 ], [ -5.89357, 57.23805 ], [ -5.8937, 57.23805 ], [ -5.89442, 57.23807 ], [ -5.89456, 57.23808 ], [ -5.89487, 57.23808 ], [ -5.89515, 57.2381 ], [ -5.89543, 57.23814 ], [ -5.89583, 57.23825 ], [ -5.89602, 57.2383 ], [ -5.89633, 57.23841 ], [ -5.8966, 57.23849 ], [ -5.89688, 57.23859 ], [ -5.89701, 57.23863 ], [ -5.89743, 57.23878 ], [ -5.8979, 57.23894 ], [ -5.89804, 57.23899 ], [ -5.89826, 57.23908 ], [ -5.8983, 57.2391 ], [ -5.89855, 57.2392 ], [ -5.89857, 57.23921 ], [ -5.89882, 57.23932 ], [ -5.89886, 57.23934 ], [ -5.89907, 57.23944 ], [ -5.89932, 57.23956 ], [ -5.89938, 57.23959 ], [ -5.89958, 57.23967 ], [ -5.90002, 57.23986 ], [ -5.90011, 57.23989 ], [ -5.90027, 57.23996 ], [ -5.90067, 57.24009 ], [ -5.90093, 57.24017 ], [ -5.90125, 57.24026 ], [ -5.9013, 57.24027 ], [ -5.90166, 57.24037 ], [ -5.90216, 57.24048 ], [ -5.90243, 57.24053 ], [ -5.90258, 57.24056 ], [ -5.90276, 57.24059 ], [ -5.90287, 57.24061 ], [ -5.90341, 57.24068 ], [ -5.90376, 57.24073 ], [ -5.90452, 57.24083 ], [ -5.90498, 57.24088 ], [ -5.90579, 57.24099 ], [ -5.90661, 57.24108 ], [ -5.90691, 57.24111 ], [ -5.90738, 57.24116 ], [ -5.90762, 57.24118 ], [ -5.90771, 57.24119 ], [ -5.90804, 57.24122 ], [ -5.90859, 57.24126 ], [ -5.90902, 57.24132 ], [ -5.90911, 57.24133 ], [ -5.90922, 57.24135 ], [ -5.90965, 57.24143 ], [ -5.91013, 57.24154 ], [ -5.91049, 57.24163 ], [ -5.91082, 57.24172 ], [ -5.91114, 57.24181 ], [ -5.91149, 57.24195 ], [ -5.91167, 57.24202 ], [ -5.9118, 57.24207 ], [ -5.91205, 57.2422 ], [ -5.91228, 57.2423 ], [ -5.91263, 57.2425 ], [ -5.91283, 57.24261 ], [ -5.91301, 57.2427 ], [ -5.91332, 57.24286 ], [ -5.9135, 57.24295 ], [ -5.9137, 57.24303 ], [ -5.91404, 57.24316 ], [ -5.9144, 57.2433 ], [ -5.91468, 57.2434 ], [ -5.91505, 57.24351 ], [ -5.91544, 57.24362 ], [ -5.91565, 57.24367 ], [ -5.91596, 57.24375 ], [ -5.91627, 57.2438 ], [ -5.91644, 57.24383 ], [ -5.9169, 57.24392 ], [ -5.91753, 57.24403 ], [ -5.9178, 57.24408 ], [ -5.91797, 57.2441 ], [ -5.91826, 57.24414 ], [ -5.91916, 57.24431 ], [ -5.92047, 57.24454 ], [ -5.92204, 57.24481 ], [ -5.92265, 57.24491 ], [ -5.92314, 57.24501 ], [ -5.92367, 57.24511 ], [ -5.92393, 57.24517 ], [ -5.92408, 57.24521 ], [ -5.92468, 57.24535 ], [ -5.92524, 57.24551 ], [ -5.92587, 57.24572 ], [ -5.92624, 57.24584 ], [ -5.92663, 57.24598 ], [ -5.92711, 57.24618 ], [ -5.92753, 57.24637 ], [ -5.92797, 57.24659 ], [ -5.92814, 57.24668 ], [ -5.92827, 57.24675 ], [ -5.92869, 57.24699 ], [ -5.92942, 57.2474 ], [ -5.92984, 57.24765 ], [ -5.93051, 57.24804 ], [ -5.93065, 57.24812 ], [ -5.93111, 57.24839 ], [ -5.93182, 57.24881 ], [ -5.93216, 57.249 ], [ -5.93295, 57.24946 ], [ -5.93336, 57.24969 ], [ -5.93367, 57.24989 ], [ -5.93383, 57.25 ], [ -5.93404, 57.25014 ], [ -5.93405, 57.25015 ], [ -5.93445, 57.25042 ], [ -5.93454, 57.25048 ], [ -5.93465, 57.25057 ], [ -5.93487, 57.25073 ], [ -5.93528, 57.25107 ], [ -5.93571, 57.25146 ], [ -5.93597, 57.25171 ], [ -5.93635, 57.25211 ], [ -5.9365, 57.25227 ], [ -5.93664, 57.25242 ], [ -5.93726, 57.25317 ], [ -5.93785, 57.25391 ], [ -5.93812, 57.25424 ], [ -5.93813, 57.25426 ], [ -5.93826, 57.25441 ], [ -5.93832, 57.25448 ], [ -5.93844, 57.25464 ], [ -5.93852, 57.25474 ], [ -5.93864, 57.2549 ], [ -5.9389, 57.25524 ], [ -5.93891, 57.25524 ], [ -5.93903, 57.2554 ], [ -5.93975, 57.25628 ], [ -5.94007, 57.25669 ], [ -5.94023, 57.2569 ], [ -5.94048, 57.25719 ], [ -5.94063, 57.25734 ], [ -5.94078, 57.2575 ], [ -5.94089, 57.25762 ], [ -5.94117, 57.25791 ], [ -5.9414, 57.25813 ], [ -5.94154, 57.25826 ], [ -5.94166, 57.25838 ], [ -5.94182, 57.25853 ], [ -5.94186, 57.25858 ], [ -5.94198, 57.25869 ], [ -5.94215, 57.25885 ], [ -5.94231, 57.259 ], [ -5.94232, 57.259 ], [ -5.94263, 57.25927 ], [ -5.94286, 57.25945 ], [ -5.94304, 57.25958 ], [ -5.94306, 57.2596 ], [ -5.94312, 57.25964 ], [ -5.94327, 57.25974 ], [ -5.94333, 57.25978 ], [ -5.94403, 57.2602 ], [ -5.94437, 57.26041 ], [ -5.94443, 57.26045 ], [ -5.94451, 57.2605 ], [ -5.94459, 57.26055 ], [ -5.94509, 57.26084 ], [ -5.94546, 57.26109 ], [ -5.94548, 57.2611 ], [ -5.94553, 57.26112 ], [ -5.94585, 57.26131 ], [ -5.94598, 57.26139 ], [ -5.94614, 57.26149 ], [ -5.94625, 57.26156 ], [ -5.94636, 57.26162 ], [ -5.94642, 57.26166 ], [ -5.94655, 57.26174 ], [ -5.94665, 57.26179 ], [ -5.94682, 57.26188 ], [ -5.94684, 57.2619 ], [ -5.94688, 57.26192 ], [ -5.94706, 57.262 ], [ -5.94713, 57.26204 ], [ -5.94721, 57.26208 ], [ -5.94755, 57.26222 ], [ -5.94757, 57.26223 ], [ -5.94788, 57.26236 ], [ -5.94791, 57.26237 ], [ -5.9481, 57.26245 ], [ -5.94823, 57.26251 ], [ -5.94837, 57.26255 ], [ -5.94845, 57.26258 ], [ -5.94859, 57.26263 ], [ -5.94866, 57.26265 ], [ -5.94874, 57.26267 ], [ -5.94894, 57.26274 ], [ -5.94895, 57.26274 ], [ -5.94938, 57.26287 ], [ -5.94977, 57.26296 ], [ -5.94984, 57.26298 ], [ -5.95015, 57.26305 ], [ -5.9505, 57.26312 ], [ -5.95092, 57.2632 ], [ -5.9515, 57.2633 ], [ -5.95172, 57.26333 ], [ -5.95213, 57.2634 ], [ -5.95244, 57.26346 ], [ -5.95266, 57.26351 ], [ -5.95275, 57.26353 ], [ -5.95283, 57.26354 ], [ -5.95297, 57.26358 ], [ -5.95306, 57.26359 ], [ -5.95324, 57.26364 ], [ -5.95328, 57.26364 ], [ -5.95364, 57.26372 ], [ -5.95389, 57.26378 ], [ -5.95404, 57.26382 ], [ -5.95472, 57.26399 ], [ -5.95488, 57.26403 ], [ -5.95518, 57.26411 ], [ -5.95526, 57.26414 ], [ -5.95548, 57.26419 ], [ -5.95578, 57.26427 ], [ -5.95605, 57.26433 ], [ -5.95608, 57.26434 ], [ -5.9563, 57.2644 ], [ -5.95684, 57.26454 ], [ -5.95736, 57.26468 ], [ -5.95758, 57.26473 ], [ -5.95788, 57.2648 ], [ -5.95789, 57.26481 ], [ -5.95818, 57.26488 ], [ -5.95854, 57.26498 ], [ -5.95906, 57.26512 ], [ -5.95947, 57.26523 ], [ -5.95967, 57.26529 ], [ -5.95988, 57.26535 ], [ -5.95996, 57.26537 ], [ -5.9601, 57.26541 ], [ -5.96017, 57.26543 ], [ -5.96025, 57.26546 ], [ -5.96047, 57.26552 ], [ -5.96055, 57.26554 ], [ -5.96084, 57.26563 ], [ -5.96086, 57.26563 ], [ -5.96149, 57.26583 ], [ -5.96228, 57.26609 ], [ -5.96284, 57.26627 ], [ -5.96299, 57.26632 ], [ -5.96313, 57.26636 ], [ -5.96334, 57.26643 ], [ -5.96341, 57.26645 ], [ -5.96362, 57.26652 ], [ -5.96365, 57.26653 ], [ -5.9637, 57.26655 ], [ -5.96438, 57.26677 ], [ -5.96488, 57.26693 ], [ -5.96505, 57.26698 ], [ -5.96564, 57.26718 ], [ -5.9662, 57.26737 ], [ -5.96685, 57.26757 ], [ -5.96732, 57.26773 ], [ -5.9674, 57.26775 ], [ -5.96789, 57.26792 ], [ -5.9681, 57.26799 ], [ -5.96851, 57.26812 ], [ -5.96875, 57.26819 ], [ -5.96894, 57.26824 ], [ -5.96913, 57.26829 ], [ -5.96931, 57.26834 ], [ -5.96935, 57.26835 ], [ -5.96943, 57.26837 ], [ -5.96963, 57.26842 ], [ -5.96965, 57.26843 ], [ -5.97, 57.2685 ], [ -5.97004, 57.26851 ], [ -5.97024, 57.26855 ], [ -5.97051, 57.2686 ], [ -5.971, 57.26867 ], [ -5.97165, 57.26875 ], [ -5.97173, 57.26876 ], [ -5.97197, 57.26878 ], [ -5.97229, 57.2688 ], [ -5.9723, 57.2688 ], [ -5.97263, 57.26882 ], [ -5.97268, 57.26882 ], [ -5.97297, 57.26883 ], [ -5.97306, 57.26884 ], [ -5.9734, 57.26885 ], [ -5.97363, 57.26885 ], [ -5.97364, 57.26885 ], [ -5.97396, 57.26883 ], [ -5.97404, 57.26883 ], [ -5.97448, 57.26878 ], [ -5.97461, 57.26875 ], [ -5.9748, 57.26872 ], [ -5.97497, 57.26868 ], [ -5.97514, 57.26863 ], [ -5.9753, 57.26858 ], [ -5.97551, 57.26851 ], [ -5.9757, 57.26842 ], [ -5.97594, 57.2683 ], [ -5.97619, 57.26815 ], [ -5.97622, 57.26814 ], [ -5.97644, 57.26802 ], [ -5.97645, 57.26801 ], [ -5.9767, 57.26789 ], [ -5.97672, 57.26788 ], [ -5.97703, 57.26772 ], [ -5.97728, 57.26761 ], [ -5.97768, 57.26749 ], [ -5.97806, 57.26739 ], [ -5.97808, 57.26739 ], [ -5.97835, 57.26733 ], [ -5.97839, 57.26733 ], [ -5.97866, 57.26729 ], [ -5.97901, 57.26726 ], [ -5.97938, 57.26725 ], [ -5.97965, 57.26725 ], [ -5.97971, 57.26725 ], [ -5.9799, 57.26727 ], [ -5.98004, 57.26728 ], [ -5.98034, 57.2673 ], [ -5.98037, 57.2673 ], [ -5.98069, 57.26733 ], [ -5.98097, 57.26736 ], [ -5.98102, 57.26736 ], [ -5.98135, 57.26739 ], [ -5.98168, 57.26742 ], [ -5.98174, 57.26743 ], [ -5.98249, 57.2675 ], [ -5.98307, 57.26756 ], [ -5.98331, 57.26759 ], [ -5.98347, 57.26762 ], [ -5.98363, 57.26764 ], [ -5.98366, 57.26765 ], [ -5.98388, 57.26769 ], [ -5.98394, 57.26771 ], [ -5.98423, 57.26779 ], [ -5.98431, 57.26781 ], [ -5.98452, 57.26789 ], [ -5.98461, 57.26792 ], [ -5.98478, 57.26799 ], [ -5.98483, 57.26801 ], [ -5.98504, 57.26811 ], [ -5.98509, 57.26813 ], [ -5.98529, 57.26823 ], [ -5.98542, 57.26828 ], [ -5.98554, 57.26835 ], [ -5.98578, 57.26847 ], [ -5.98579, 57.26847 ], [ -5.98602, 57.26859 ], [ -5.98612, 57.26864 ], [ -5.98653, 57.26885 ], [ -5.98675, 57.26896 ], [ -5.98695, 57.26906 ], [ -5.987, 57.26908 ], [ -5.98725, 57.2692 ], [ -5.98738, 57.26927 ], [ -5.9875, 57.26932 ], [ -5.98771, 57.26942 ], [ -5.98775, 57.26944 ], [ -5.988, 57.26955 ], [ -5.98811, 57.26961 ], [ -5.98827, 57.26966 ], [ -5.98838, 57.26969 ], [ -5.98855, 57.26975 ], [ -5.98869, 57.2698 ], [ -5.98885, 57.26984 ], [ -5.98905, 57.26988 ], [ -5.98916, 57.2699 ], [ -5.98938, 57.26994 ], [ -5.98947, 57.26996 ], [ -5.98974, 57.26999 ], [ -5.99012, 57.27003 ], [ -5.99046, 57.27004 ], [ -5.99053, 57.27004 ], [ -5.99108, 57.27003 ], [ -5.99112, 57.27003 ], [ -5.99193, 57.27001 ], [ -5.99212, 57.27001 ], [ -5.9925, 57.27 ], [ -5.99278, 57.27 ], [ -5.99303, 57.27 ], [ -5.99315, 57.27001 ], [ -5.99334, 57.27002 ], [ -5.99348, 57.27003 ], [ -5.99364, 57.27004 ], [ -5.9938, 57.27007 ], [ -5.99392, 57.27009 ], [ -5.99411, 57.27013 ], [ -5.99429, 57.27017 ], [ -5.99458, 57.27026 ], [ -5.99487, 57.27036 ], [ -5.99514, 57.27047 ], [ -5.99545, 57.27061 ], [ -5.99549, 57.27062 ], [ -5.99576, 57.27073 ], [ -5.99578, 57.27074 ], [ -5.996, 57.27085 ], [ -5.99613, 57.2709 ], [ -5.99636, 57.27102 ], [ -5.99657, 57.27115 ], [ -5.99684, 57.27131 ], [ -5.99702, 57.27145 ], [ -5.9973, 57.27164 ], [ -5.99754, 57.27179 ], [ -5.99789, 57.27202 ], [ -5.9984, 57.2723 ], [ -5.99885, 57.27254 ], [ -5.99906, 57.27267 ], [ -5.9992, 57.27274 ], [ -5.99929, 57.2728 ], [ -5.99949, 57.27292 ], [ -5.9995, 57.27293 ], [ -5.99969, 57.27308 ], [ -5.99971, 57.27309 ], [ -5.99991, 57.2733 ], [ -6.00008, 57.27351 ], [ -6.00022, 57.27372 ], [ -6.00035, 57.27391 ], [ -6.00039, 57.27397 ], [ -6.00047, 57.27407 ], [ -6.00053, 57.27415 ], [ -6.00074, 57.2744 ], [ -6.00096, 57.2746 ], [ -6.0011, 57.27471 ], [ -6.00123, 57.27481 ], [ -6.00154, 57.27502 ], [ -6.0017, 57.27513 ], [ -6.00191, 57.27527 ], [ -6.00194, 57.27529 ], [ -6.00233, 57.27555 ], [ -6.00241, 57.2756 ], [ -6.00254, 57.27569 ], [ -6.00274, 57.27582 ], [ -6.00275, 57.27583 ], [ -6.00297, 57.27597 ], [ -6.00318, 57.27611 ], [ -6.00336, 57.27621 ], [ -6.00352, 57.27629 ], [ -6.0036, 57.27633 ], [ -6.00382, 57.27644 ], [ -6.00411, 57.27656 ], [ -6.0042, 57.2766 ], [ -6.00439, 57.27666 ], [ -6.00462, 57.27675 ], [ -6.00493, 57.27687 ], [ -6.00517, 57.27696 ], [ -6.0052, 57.27697 ], [ -6.00539, 57.27706 ], [ -6.00565, 57.27719 ], [ -6.00591, 57.27734 ], [ -6.00592, 57.27735 ], [ -6.00614, 57.27748 ], [ -6.00639, 57.27766 ], [ -6.0069, 57.27802 ], [ -6.00744, 57.2784 ], [ -6.0079, 57.27874 ], [ -6.00839, 57.27909 ], [ -6.00912, 57.27957 ], [ -6.00984, 57.28003 ], [ -6.01021, 57.28026 ], [ -6.01056, 57.28047 ], [ -6.01106, 57.28077 ], [ -6.01112, 57.2808 ], [ -6.01128, 57.2809 ], [ -6.01167, 57.28113 ], [ -6.01173, 57.28116 ], [ -6.01217, 57.28143 ], [ -6.01239, 57.28157 ], [ -6.01266, 57.28175 ], [ -6.01291, 57.28193 ], [ -6.01299, 57.282 ], [ -6.01306, 57.28206 ], [ -6.01323, 57.28222 ], [ -6.01338, 57.28236 ], [ -6.01353, 57.28249 ], [ -6.01367, 57.28262 ], [ -6.014, 57.28292 ], [ -6.01435, 57.28324 ], [ -6.01452, 57.28339 ], [ -6.01454, 57.28341 ], [ -6.0147, 57.28354 ], [ -6.01494, 57.28375 ], [ -6.01525, 57.28399 ], [ -6.01531, 57.28403 ], [ -6.01557, 57.28421 ], [ -6.01567, 57.28427 ], [ -6.01588, 57.28442 ], [ -6.01608, 57.28455 ], [ -6.01617, 57.28461 ], [ -6.01659, 57.28486 ], [ -6.01708, 57.28511 ], [ -6.01725, 57.28519 ], [ -6.01746, 57.28529 ], [ -6.01798, 57.28555 ], [ -6.01842, 57.28575 ], [ -6.01871, 57.2859 ], [ -6.01874, 57.28591 ], [ -6.01907, 57.28606 ], [ -6.01938, 57.28617 ], [ -6.0197, 57.28627 ], [ -6.01997, 57.28635 ], [ -6.02019, 57.2864 ], [ -6.02056, 57.28645 ], [ -6.02092, 57.28649 ], [ -6.02132, 57.28653 ], [ -6.02169, 57.28656 ], [ -6.02232, 57.28661 ], [ -6.02278, 57.28663 ], [ -6.02302, 57.28664 ], [ -6.02326, 57.28664 ], [ -6.0235, 57.28662 ], [ -6.02379, 57.2866 ], [ -6.0238, 57.2866 ], [ -6.02411, 57.28654 ], [ -6.02439, 57.28648 ], [ -6.02461, 57.28642 ], [ -6.02493, 57.28632 ], [ -6.02499, 57.28629 ], [ -6.02516, 57.28622 ], [ -6.02526, 57.28618 ], [ -6.02545, 57.28609 ], [ -6.02551, 57.28606 ], [ -6.02572, 57.28597 ], [ -6.02576, 57.28595 ], [ -6.02591, 57.28587 ], [ -6.02601, 57.28583 ], [ -6.02619, 57.28576 ], [ -6.02654, 57.28562 ], [ -6.02655, 57.28561 ], [ -6.02682, 57.28552 ], [ -6.02691, 57.28549 ], [ -6.02735, 57.28535 ], [ -6.0274, 57.28534 ], [ -6.0277, 57.28525 ], [ -6.02784, 57.28521 ], [ -6.02799, 57.28517 ], [ -6.0285, 57.28503 ], [ -6.02947, 57.28477 ], [ -6.03036, 57.28451 ], [ -6.03069, 57.28442 ], [ -6.03095, 57.28434 ], [ -6.03119, 57.28427 ], [ -6.03153, 57.28417 ], [ -6.03171, 57.28411 ], [ -6.03182, 57.28408 ], [ -6.03236, 57.2839 ], [ -6.03299, 57.28369 ], [ -6.03323, 57.2836 ], [ -6.03349, 57.28351 ], [ -6.03351, 57.2835 ], [ -6.03384, 57.2834 ], [ -6.03424, 57.28326 ], [ -6.03435, 57.28322 ], [ -6.03463, 57.28312 ], [ -6.03483, 57.28305 ], [ -6.03511, 57.28295 ], [ -6.03519, 57.28292 ], [ -6.03546, 57.28282 ], [ -6.0355, 57.2828 ], [ -6.03572, 57.28271 ], [ -6.03581, 57.28267 ], [ -6.03596, 57.28258 ], [ -6.03604, 57.28254 ], [ -6.03624, 57.28243 ], [ -6.03644, 57.28231 ], [ -6.03663, 57.28218 ], [ -6.03687, 57.28198 ], [ -6.03703, 57.28183 ], [ -6.03714, 57.28172 ], [ -6.03716, 57.28169 ], [ -6.03727, 57.28156 ], [ -6.03728, 57.28155 ], [ -6.0374, 57.28139 ], [ -6.03751, 57.28123 ], [ -6.03751, 57.28122 ], [ -6.03765, 57.28102 ], [ -6.03774, 57.28088 ], [ -6.03775, 57.28085 ], [ -6.03791, 57.28064 ], [ -6.03805, 57.28048 ], [ -6.03817, 57.28034 ], [ -6.03834, 57.2802 ], [ -6.0385, 57.28008 ], [ -6.03873, 57.27991 ], [ -6.03905, 57.2797 ], [ -6.03931, 57.27953 ], [ -6.03969, 57.27927 ], [ -6.03982, 57.27917 ], [ -6.03999, 57.27904 ], [ -6.04018, 57.27886 ], [ -6.04039, 57.27864 ], [ -6.04073, 57.27829 ], [ -6.04086, 57.27814 ], [ -6.04101, 57.27798 ], [ -6.04104, 57.27795 ], [ -6.04131, 57.27765 ], [ -6.04143, 57.27752 ], [ -6.04169, 57.27726 ], [ -6.04179, 57.27718 ], [ -6.04197, 57.27703 ], [ -6.04219, 57.27687 ], [ -6.04238, 57.27676 ], [ -6.04252, 57.27669 ], [ -6.04269, 57.27663 ], [ -6.04276, 57.27661 ], [ -6.04301, 57.27653 ], [ -6.04328, 57.27648 ], [ -6.04329, 57.27648 ], [ -6.04357, 57.27644 ], [ -6.04384, 57.27642 ], [ -6.04394, 57.27642 ], [ -6.04415, 57.27641 ], [ -6.04455, 57.27642 ], [ -6.04461, 57.27642 ], [ -6.04502, 57.27644 ], [ -6.04593, 57.27647 ], [ -6.04621, 57.27648 ], [ -6.04699, 57.27651 ], [ -6.04765, 57.27653 ], [ -6.04793, 57.27654 ], [ -6.04804, 57.27654 ], [ -6.04852, 57.27654 ], [ -6.04897, 57.27653 ], [ -6.04929, 57.27651 ], [ -6.04966, 57.27647 ], [ -6.05003, 57.27642 ], [ -6.05023, 57.27639 ], [ -6.05033, 57.27637 ], [ -6.05063, 57.27632 ], [ -6.05091, 57.27626 ], [ -6.05116, 57.27621 ], [ -6.05122, 57.2762 ], [ -6.0516, 57.2761 ], [ -6.05176, 57.27605 ], [ -6.05193, 57.27599 ], [ -6.05224, 57.2759 ], [ -6.05287, 57.27565 ], [ -6.05295, 57.27562 ], [ -6.0532, 57.27552 ], [ -6.0534, 57.27544 ], [ -6.05346, 57.27542 ], [ -6.05381, 57.27528 ], [ -6.05384, 57.27527 ], [ -6.05458, 57.27497 ], [ -6.0555, 57.27463 ], [ -6.05621, 57.2744 ], [ -6.05657, 57.27428 ], [ -6.05685, 57.27419 ], [ -6.05714, 57.2741 ], [ -6.05745, 57.27401 ], [ -6.05771, 57.27391 ], [ -6.05799, 57.27382 ], [ -6.05819, 57.27375 ], [ -6.0582, 57.27375 ], [ -6.05854, 57.27362 ], [ -6.05867, 57.27357 ], [ -6.05874, 57.27354 ], [ -6.05901, 57.27343 ], [ -6.05915, 57.27337 ], [ -6.05934, 57.27329 ], [ -6.05961, 57.27318 ], [ -6.05962, 57.27318 ], [ -6.05979, 57.2731 ], [ -6.06009, 57.27297 ], [ -6.06055, 57.27275 ], [ -6.06059, 57.27273 ], [ -6.06062, 57.27272 ], [ -6.0608, 57.27263 ], [ -6.06086, 57.27259 ], [ -6.06092, 57.27256 ], [ -6.06123, 57.27241 ], [ -6.0617, 57.27217 ], [ -6.06177, 57.27214 ], [ -6.06183, 57.2721 ], [ -6.06201, 57.27201 ], [ -6.0621, 57.27197 ], [ -6.06226, 57.27189 ], [ -6.06251, 57.27176 ], [ -6.06256, 57.27173 ], [ -6.06274, 57.27164 ], [ -6.06286, 57.27158 ], [ -6.06298, 57.27152 ], [ -6.06311, 57.27145 ], [ -6.06317, 57.27142 ], [ -6.06322, 57.27139 ], [ -6.06335, 57.27132 ], [ -6.06349, 57.27126 ], [ -6.06359, 57.2712 ], [ -6.06389, 57.27104 ], [ -6.06412, 57.27091 ], [ -6.06444, 57.27072 ], [ -6.0645, 57.27067 ], [ -6.0647, 57.27053 ], [ -6.06476, 57.27049 ], [ -6.06479, 57.27047 ], [ -6.0649, 57.27038 ], [ -6.06497, 57.27033 ], [ -6.06498, 57.27032 ], [ -6.06517, 57.27017 ], [ -6.06521, 57.27014 ], [ -6.06535, 57.27002 ], [ -6.06554, 57.26986 ], [ -6.06577, 57.26965 ], [ -6.06603, 57.26944 ], [ -6.06616, 57.26933 ], [ -6.06642, 57.26911 ], [ -6.06643, 57.2691 ], [ -6.06683, 57.26876 ], [ -6.06723, 57.26842 ], [ -6.06762, 57.26808 ], [ -6.06796, 57.2678 ], [ -6.06813, 57.26765 ], [ -6.06839, 57.26747 ], [ -6.06841, 57.26745 ], [ -6.06866, 57.2673 ], [ -6.06891, 57.26717 ], [ -6.06913, 57.26708 ], [ -6.06927, 57.26703 ], [ -6.06941, 57.26698 ], [ -6.06953, 57.26693 ], [ -6.06993, 57.26683 ], [ -6.06999, 57.26681 ], [ -6.07021, 57.26677 ], [ -6.07049, 57.26672 ], [ -6.0708, 57.26668 ], [ -6.07127, 57.26661 ], [ -6.07134, 57.2666 ], [ -6.07159, 57.26657 ], [ -6.07191, 57.26653 ], [ -6.07234, 57.26648 ], [ -6.07257, 57.26645 ], [ -6.07276, 57.26642 ], [ -6.07289, 57.26641 ], [ -6.07305, 57.26639 ], [ -6.07321, 57.26637 ], [ -6.07347, 57.26634 ], [ -6.07354, 57.26633 ], [ -6.07386, 57.26628 ], [ -6.0739, 57.26628 ], [ -6.07418, 57.26623 ], [ -6.07431, 57.26621 ], [ -6.07475, 57.26612 ], [ -6.07481, 57.26611 ], [ -6.07512, 57.26605 ], [ -6.07518, 57.26603 ], [ -6.07542, 57.26598 ], [ -6.07573, 57.26591 ], [ -6.07672, 57.26567 ], [ -6.07764, 57.26546 ], [ -6.07838, 57.26529 ], [ -6.07879, 57.26518 ], [ -6.07915, 57.26509 ], [ -6.07925, 57.26507 ], [ -6.07944, 57.26501 ], [ -6.07959, 57.26496 ], [ -6.08002, 57.26483 ], [ -6.0803, 57.26473 ], [ -6.08057, 57.26463 ], [ -6.08069, 57.26459 ], [ -6.08085, 57.26453 ], [ -6.08111, 57.26442 ], [ -6.08138, 57.26431 ], [ -6.08164, 57.2642 ], [ -6.08191, 57.26409 ], [ -6.08215, 57.26399 ], [ -6.08217, 57.26399 ], [ -6.08244, 57.26388 ], [ -6.08271, 57.26377 ], [ -6.08284, 57.26372 ], [ -6.08298, 57.26367 ], [ -6.08324, 57.26356 ], [ -6.08351, 57.26345 ], [ -6.08352, 57.26345 ], [ -6.08414, 57.26319 ], [ -6.0843, 57.26312 ], [ -6.08457, 57.26301 ], [ -6.08483, 57.26291 ], [ -6.08483, 57.2629 ], [ -6.0851, 57.2628 ], [ -6.08524, 57.26274 ], [ -6.08537, 57.26269 ], [ -6.08564, 57.26259 ], [ -6.08573, 57.26256 ], [ -6.08592, 57.2625 ], [ -6.08611, 57.26243 ], [ -6.08621, 57.26241 ], [ -6.08642, 57.26236 ], [ -6.08669, 57.26231 ], [ -6.08684, 57.26229 ], [ -6.087, 57.26227 ], [ -6.08716, 57.26225 ], [ -6.08741, 57.26223 ], [ -6.0875, 57.26223 ], [ -6.08774, 57.26223 ], [ -6.0879, 57.26224 ], [ -6.08816, 57.26226 ], [ -6.08839, 57.26229 ], [ -6.08848, 57.2623 ], [ -6.08863, 57.26233 ], [ -6.08879, 57.26236 ], [ -6.08884, 57.26237 ], [ -6.0891, 57.26244 ], [ -6.08911, 57.26244 ], [ -6.0893, 57.2625 ], [ -6.08953, 57.26258 ], [ -6.08976, 57.26268 ], [ -6.09, 57.26281 ], [ -6.09022, 57.26294 ], [ -6.09039, 57.26306 ], [ -6.09052, 57.26317 ], [ -6.09067, 57.26333 ], [ -6.09078, 57.26348 ], [ -6.09079, 57.2635 ], [ -6.09085, 57.26361 ], [ -6.09088, 57.26367 ], [ -6.09094, 57.26378 ], [ -6.09099, 57.26389 ], [ -6.09103, 57.26402 ], [ -6.09106, 57.26418 ], [ -6.09106, 57.26436 ], [ -6.09104, 57.26449 ], [ -6.09099, 57.26465 ], [ -6.09094, 57.26478 ], [ -6.09088, 57.26491 ], [ -6.09081, 57.26509 ], [ -6.09075, 57.26527 ], [ -6.09063, 57.26558 ], [ -6.09054, 57.2658 ], [ -6.09047, 57.26597 ], [ -6.09045, 57.26603 ], [ -6.0904, 57.26615 ], [ -6.09032, 57.26637 ], [ -6.09023, 57.2666 ], [ -6.09012, 57.26686 ], [ -6.08996, 57.26718 ], [ -6.08995, 57.2672 ], [ -6.08983, 57.26737 ], [ -6.0898, 57.26742 ], [ -6.08972, 57.26753 ], [ -6.08964, 57.26765 ], [ -6.08948, 57.26787 ], [ -6.08942, 57.26794 ], [ -6.08936, 57.26804 ], [ -6.08928, 57.26817 ], [ -6.08925, 57.26821 ], [ -6.08916, 57.26838 ], [ -6.08907, 57.26859 ], [ -6.08904, 57.26872 ], [ -6.08902, 57.26887 ], [ -6.08902, 57.26891 ], [ -6.08904, 57.2691 ], [ -6.08905, 57.26931 ], [ -6.08914, 57.26963 ], [ -6.08914, 57.26966 ], [ -6.08924, 57.26994 ], [ -6.08932, 57.27022 ], [ -6.08935, 57.27034 ], [ -6.0894, 57.27052 ], [ -6.08941, 57.27059 ], [ -6.08944, 57.2707 ], [ -6.08952, 57.27095 ], [ -6.08962, 57.27129 ], [ -6.0897, 57.27159 ], [ -6.08978, 57.27182 ], [ -6.08983, 57.27194 ], [ -6.08988, 57.27207 ], [ -6.0899, 57.27211 ], [ -6.08998, 57.27229 ], [ -6.09007, 57.27244 ], [ -6.09008, 57.27246 ], [ -6.0902, 57.27263 ], [ -6.09022, 57.27266 ], [ -6.09034, 57.27279 ], [ -6.09046, 57.27292 ], [ -6.09049, 57.27295 ], [ -6.09066, 57.27311 ], [ -6.0907, 57.27314 ], [ -6.09086, 57.27331 ], [ -6.09103, 57.27345 ], [ -6.0912, 57.2736 ], [ -6.09132, 57.27368 ], [ -6.09157, 57.27384 ], [ -6.09158, 57.27385 ], [ -6.09183, 57.27397 ], [ -6.09187, 57.27398 ], [ -6.0921, 57.27408 ], [ -6.09216, 57.2741 ], [ -6.09238, 57.27417 ], [ -6.09247, 57.2742 ], [ -6.09268, 57.27425 ], [ -6.09275, 57.27426 ], [ -6.093, 57.2743 ], [ -6.09301, 57.2743 ], [ -6.09327, 57.27434 ], [ -6.09332, 57.27434 ], [ -6.09362, 57.27436 ], [ -6.09365, 57.27436 ], [ -6.09399, 57.27435 ], [ -6.09406, 57.27435 ], [ -6.09429, 57.27434 ], [ -6.09432, 57.27434 ], [ -6.09448, 57.27432 ], [ -6.09464, 57.2743 ], [ -6.09473, 57.27428 ], [ -6.09496, 57.27424 ], [ -6.09501, 57.27423 ], [ -6.09526, 57.27417 ], [ -6.09534, 57.27415 ], [ -6.09571, 57.27405 ], [ -6.09608, 57.27394 ], [ -6.09651, 57.27381 ], [ -6.09674, 57.27375 ], [ -6.09682, 57.27373 ], [ -6.097, 57.2737 ], [ -6.09716, 57.27368 ], [ -6.0973, 57.27366 ], [ -6.09748, 57.27366 ], [ -6.09768, 57.27366 ], [ -6.09771, 57.27367 ], [ -6.09789, 57.27369 ], [ -6.09803, 57.27371 ], [ -6.09804, 57.27371 ], [ -6.09822, 57.27377 ], [ -6.09844, 57.27386 ], [ -6.09861, 57.27396 ], [ -6.09872, 57.27404 ], [ -6.09884, 57.27418 ], [ -6.09888, 57.27424 ], [ -6.09889, 57.27425 ], [ -6.09892, 57.27435 ], [ -6.09893, 57.27441 ], [ -6.09893, 57.27444 ], [ -6.09891, 57.27455 ], [ -6.09885, 57.27469 ], [ -6.0988, 57.27477 ], [ -6.09875, 57.27484 ], [ -6.09866, 57.27493 ], [ -6.09864, 57.27495 ], [ -6.09842, 57.2752 ], [ -6.09823, 57.27541 ], [ -6.09819, 57.27545 ], [ -6.09808, 57.27558 ], [ -6.09785, 57.27581 ], [ -6.09777, 57.2759 ], [ -6.09762, 57.27606 ], [ -6.09747, 57.27622 ], [ -6.09732, 57.27638 ], [ -6.09722, 57.27649 ], [ -6.09687, 57.27686 ], [ -6.09657, 57.27718 ], [ -6.09645, 57.27731 ], [ -6.09642, 57.27734 ], [ -6.09627, 57.2775 ], [ -6.09624, 57.27753 ], [ -6.09612, 57.27766 ], [ -6.09604, 57.27776 ], [ -6.09598, 57.27782 ], [ -6.09584, 57.27799 ], [ -6.09572, 57.27813 ], [ -6.09558, 57.27832 ], [ -6.09555, 57.27836 ], [ -6.09546, 57.27849 ], [ -6.09544, 57.27852 ], [ -6.09536, 57.27866 ], [ -6.09534, 57.27868 ], [ -6.09525, 57.27883 ], [ -6.09523, 57.27887 ], [ -6.09515, 57.279 ], [ -6.09509, 57.27911 ], [ -6.0949, 57.27952 ], [ -6.09487, 57.27959 ], [ -6.09478, 57.27983 ], [ -6.09476, 57.27987 ], [ -6.09471, 57.28005 ], [ -6.09469, 57.28011 ], [ -6.09466, 57.28023 ], [ -6.09462, 57.2804 ], [ -6.09457, 57.28058 ], [ -6.09453, 57.28076 ], [ -6.09451, 57.28086 ], [ -6.09443, 57.28112 ], [ -6.09442, 57.28116 ], [ -6.09439, 57.2813 ], [ -6.09434, 57.28155 ], [ -6.09426, 57.28185 ], [ -6.09417, 57.28219 ], [ -6.09415, 57.28225 ], [ -6.09412, 57.28237 ], [ -6.09408, 57.28254 ], [ -6.09408, 57.28255 ], [ -6.09404, 57.28272 ], [ -6.09401, 57.28287 ], [ -6.09393, 57.28317 ], [ -6.09387, 57.28343 ], [ -6.09382, 57.28372 ], [ -6.09381, 57.2838 ], [ -6.0938, 57.28391 ], [ -6.09379, 57.28398 ], [ -6.09377, 57.28411 ], [ -6.09376, 57.28415 ], [ -6.09375, 57.28433 ], [ -6.09375, 57.28441 ], [ -6.09374, 57.28451 ], [ -6.09374, 57.2846 ], [ -6.09375, 57.28469 ], [ -6.09377, 57.28487 ], [ -6.09377, 57.28489 ], [ -6.09379, 57.28505 ], [ -6.0938, 57.28523 ], [ -6.09382, 57.28541 ], [ -6.09382, 57.28543 ], [ -6.09386, 57.28577 ], [ -6.09388, 57.28595 ], [ -6.09391, 57.28613 ], [ -6.09391, 57.28614 ], [ -6.09395, 57.28663 ], [ -6.09398, 57.28689 ], [ -6.09396, 57.28708 ], [ -6.09392, 57.28729 ], [ -6.09389, 57.28739 ], [ -6.09389, 57.28741 ], [ -6.09382, 57.28755 ], [ -6.09381, 57.28756 ], [ -6.09375, 57.28769 ], [ -6.09372, 57.28773 ], [ -6.09364, 57.28787 ], [ -6.09361, 57.2879 ], [ -6.09348, 57.28805 ], [ -6.09347, 57.28807 ], [ -6.09338, 57.28816 ], [ -6.09331, 57.28822 ], [ -6.09325, 57.28828 ], [ -6.09304, 57.28845 ], [ -6.09284, 57.2886 ], [ -6.09249, 57.28886 ], [ -6.09232, 57.28899 ], [ -6.09204, 57.28921 ], [ -6.0919, 57.28935 ], [ -6.09174, 57.28952 ], [ -6.09156, 57.28975 ], [ -6.09142, 57.28995 ], [ -6.0913, 57.29011 ], [ -6.09104, 57.2905 ], [ -6.09064, 57.29104 ], [ -6.09042, 57.29131 ], [ -6.09004, 57.29176 ], [ -6.08991, 57.29189 ], [ -6.08972, 57.29209 ], [ -6.08947, 57.29233 ], [ -6.0892, 57.29259 ], [ -6.08905, 57.29272 ], [ -6.08896, 57.29281 ], [ -6.08862, 57.29313 ], [ -6.08845, 57.29329 ], [ -6.08828, 57.29346 ], [ -6.08816, 57.29361 ], [ -6.08804, 57.29379 ], [ -6.08801, 57.29384 ], [ -6.08794, 57.29398 ], [ -6.08793, 57.29402 ], [ -6.08785, 57.29421 ], [ -6.08776, 57.29464 ], [ -6.08766, 57.29514 ], [ -6.08757, 57.29563 ], [ -6.08754, 57.2958 ], [ -6.08752, 57.29587 ], [ -6.08749, 57.29605 ], [ -6.08748, 57.29623 ], [ -6.08749, 57.2965 ], [ -6.08751, 57.29667 ], [ -6.08756, 57.29686 ], [ -6.08765, 57.29708 ], [ -6.0878, 57.29736 ], [ -6.0879, 57.2975 ], [ -6.08805, 57.29767 ], [ -6.0881, 57.29773 ], [ -6.08816, 57.29781 ], [ -6.08825, 57.29789 ], [ -6.08845, 57.29809 ], [ -6.08857, 57.2982 ], [ -6.0888, 57.29843 ], [ -6.08888, 57.29852 ], [ -6.08896, 57.29861 ], [ -6.08902, 57.29868 ], [ -6.08903, 57.2987 ], [ -6.0891, 57.29879 ], [ -6.08914, 57.29885 ], [ -6.08916, 57.29888 ], [ -6.08922, 57.29898 ], [ -6.0893, 57.29909 ], [ -6.0894, 57.29928 ], [ -6.08948, 57.2995 ], [ -6.08955, 57.29972 ], [ -6.0896, 57.29987 ], [ -6.0897, 57.30025 ], [ -6.08978, 57.30055 ], [ -6.08995, 57.30117 ], [ -6.08999, 57.30132 ], [ -6.0901, 57.3017 ], [ -6.09019, 57.30207 ], [ -6.09023, 57.30221 ], [ -6.09027, 57.30239 ], [ -6.09035, 57.30269 ], [ -6.09055, 57.30341 ], [ -6.09056, 57.30346 ], [ -6.09061, 57.30364 ], [ -6.09065, 57.30378 ], [ -6.0907, 57.30399 ], [ -6.0908, 57.30435 ], [ -6.09086, 57.30459 ], [ -6.09089, 57.3047 ], [ -6.09094, 57.30488 ], [ -6.09095, 57.30489 ], [ -6.091, 57.30506 ], [ -6.09101, 57.3051 ], [ -6.09106, 57.30524 ], [ -6.09108, 57.30528 ], [ -6.09113, 57.30541 ], [ -6.09114, 57.30544 ], [ -6.09122, 57.30559 ], [ -6.09125, 57.30565 ], [ -6.09135, 57.30587 ], [ -6.09138, 57.30593 ], [ -6.09148, 57.30611 ], [ -6.09156, 57.30625 ], [ -6.09157, 57.30628 ], [ -6.09174, 57.30657 ], [ -6.09178, 57.30662 ], [ -6.09181, 57.30668 ], [ -6.0919, 57.30679 ], [ -6.092, 57.30694 ], [ -6.09202, 57.30696 ], [ -6.09215, 57.30712 ], [ -6.09235, 57.30737 ], [ -6.09243, 57.30745 ], [ -6.09264, 57.30768 ], [ -6.09278, 57.30782 ], [ -6.09301, 57.30804 ], [ -6.0933, 57.30832 ], [ -6.09356, 57.30854 ], [ -6.09357, 57.30855 ], [ -6.09379, 57.30873 ], [ -6.09408, 57.30894 ], [ -6.09447, 57.30922 ], [ -6.09475, 57.30941 ], [ -6.09527, 57.30974 ], [ -6.09556, 57.30993 ], [ -6.0963, 57.31041 ], [ -6.09691, 57.3108 ], [ -6.09765, 57.31126 ], [ -6.09787, 57.3114 ], [ -6.09795, 57.31146 ], [ -6.09808, 57.31154 ], [ -6.09829, 57.31168 ], [ -6.0985, 57.31182 ], [ -6.09871, 57.31196 ], [ -6.09907, 57.31221 ], [ -6.09931, 57.31239 ], [ -6.09951, 57.31253 ], [ -6.09971, 57.31268 ], [ -6.10046, 57.31321 ], [ -6.10072, 57.31337 ], [ -6.10092, 57.31349 ], [ -6.10117, 57.31362 ], [ -6.10136, 57.31371 ], [ -6.10157, 57.31379 ], [ -6.10181, 57.31388 ], [ -6.10202, 57.31394 ], [ -6.10214, 57.31398 ], [ -6.10245, 57.31406 ], [ -6.10278, 57.31413 ], [ -6.10283, 57.31413 ], [ -6.10311, 57.31418 ], [ -6.10343, 57.31421 ], [ -6.10347, 57.31422 ], [ -6.10378, 57.31425 ], [ -6.10411, 57.31426 ], [ -6.1044, 57.31426 ], [ -6.10488, 57.31425 ], [ -6.10534, 57.31421 ], [ -6.10546, 57.31419 ], [ -6.10578, 57.31415 ], [ -6.10591, 57.31414 ], [ -6.10611, 57.31411 ], [ -6.10643, 57.31407 ], [ -6.10675, 57.31403 ], [ -6.10706, 57.31399 ], [ -6.10708, 57.31399 ], [ -6.1074, 57.31395 ], [ -6.10804, 57.31386 ], [ -6.1087, 57.31378 ], [ -6.10892, 57.31375 ], [ -6.10944, 57.31365 ], [ -6.10997, 57.31355 ], [ -6.11031, 57.31348 ], [ -6.11042, 57.31345 ], [ -6.11073, 57.31339 ], [ -6.11118, 57.3133 ], [ -6.11168, 57.31322 ], [ -6.11213, 57.31316 ], [ -6.11272, 57.3131 ], [ -6.11278, 57.3131 ], [ -6.11312, 57.31308 ], [ -6.11341, 57.31307 ], [ -6.11345, 57.31307 ], [ -6.11378, 57.31306 ], [ -6.11414, 57.31305 ], [ -6.11445, 57.31305 ], [ -6.11466, 57.31305 ], [ -6.11511, 57.31306 ], [ -6.11544, 57.31307 ], [ -6.11555, 57.31308 ], [ -6.11602, 57.31309 ], [ -6.11641, 57.3131 ], [ -6.11677, 57.31311 ], [ -6.11703, 57.3131 ], [ -6.11711, 57.3131 ], [ -6.1174, 57.31308 ], [ -6.11773, 57.31305 ], [ -6.11793, 57.31303 ], [ -6.11807, 57.31301 ], [ -6.11825, 57.31298 ], [ -6.11836, 57.31297 ], [ -6.11857, 57.31293 ], [ -6.1186, 57.31292 ], [ -6.11888, 57.31286 ], [ -6.11899, 57.31283 ], [ -6.11918, 57.31278 ], [ -6.11929, 57.31276 ], [ -6.11947, 57.3127 ], [ -6.11957, 57.31267 ], [ -6.11976, 57.3126 ], [ -6.11978, 57.31259 ], [ -6.12007, 57.31248 ], [ -6.12042, 57.31232 ], [ -6.12079, 57.31215 ], [ -6.12108, 57.312 ], [ -6.12142, 57.31182 ], [ -6.12151, 57.31178 ], [ -6.12175, 57.31165 ], [ -6.12177, 57.31164 ], [ -6.12199, 57.31153 ], [ -6.12231, 57.31137 ], [ -6.12266, 57.31117 ], [ -6.12319, 57.3109 ], [ -6.12326, 57.31087 ], [ -6.12365, 57.31069 ], [ -6.1242, 57.31043 ], [ -6.12445, 57.31032 ], [ -6.12457, 57.31026 ], [ -6.12471, 57.3102 ], [ -6.1257, 57.30979 ], [ -6.12628, 57.30954 ], [ -6.12702, 57.30923 ], [ -6.12707, 57.30921 ], [ -6.12783, 57.30888 ], [ -6.12838, 57.30865 ], [ -6.12843, 57.30863 ], [ -6.12864, 57.30853 ], [ -6.1288, 57.30846 ], [ -6.12906, 57.30831 ], [ -6.12911, 57.30828 ], [ -6.12929, 57.30816 ], [ -6.12956, 57.30795 ], [ -6.12997, 57.30761 ], [ -6.13052, 57.3072 ], [ -6.13086, 57.30697 ], [ -6.13101, 57.30687 ], [ -6.13107, 57.30683 ], [ -6.13157, 57.30649 ], [ -6.13221, 57.30608 ], [ -6.13301, 57.30561 ], [ -6.1335, 57.30535 ], [ -6.13369, 57.30525 ], [ -6.13399, 57.30511 ], [ -6.13474, 57.30475 ], [ -6.13481, 57.30471 ], [ -6.13499, 57.30463 ], [ -6.13549, 57.30439 ], [ -6.13565, 57.30432 ], [ -6.13574, 57.30428 ], [ -6.136, 57.30416 ], [ -6.13623, 57.30406 ], [ -6.13625, 57.30405 ], [ -6.13651, 57.30393 ], [ -6.13663, 57.30388 ], [ -6.13678, 57.30383 ], [ -6.13688, 57.3038 ], [ -6.13735, 57.30364 ], [ -6.13808, 57.30347 ], [ -6.13822, 57.30344 ], [ -6.13853, 57.30338 ], [ -6.13971, 57.30314 ], [ -6.14009, 57.30306 ], [ -6.1404, 57.30299 ], [ -6.14053, 57.30297 ], [ -6.14071, 57.30293 ], [ -6.14102, 57.30287 ], [ -6.14103, 57.30287 ], [ -6.14128, 57.30281 ], [ -6.14133, 57.3028 ], [ -6.14156, 57.30275 ], [ -6.14164, 57.30273 ], [ -6.14182, 57.30268 ], [ -6.14193, 57.30264 ], [ -6.14202, 57.30262 ], [ -6.14221, 57.30254 ], [ -6.14233, 57.3025 ], [ -6.14247, 57.30245 ], [ -6.14248, 57.30244 ], [ -6.14266, 57.30236 ], [ -6.14273, 57.30232 ], [ -6.14282, 57.30228 ], [ -6.14297, 57.3022 ], [ -6.14305, 57.30215 ], [ -6.1432, 57.30206 ], [ -6.14335, 57.30197 ], [ -6.14342, 57.30193 ], [ -6.14361, 57.30181 ], [ -6.14363, 57.30179 ], [ -6.14384, 57.30165 ], [ -6.14391, 57.30161 ], [ -6.14405, 57.30151 ], [ -6.14422, 57.30138 ], [ -6.14425, 57.30137 ], [ -6.1445, 57.30121 ], [ -6.14466, 57.30109 ], [ -6.14467, 57.30109 ], [ -6.14485, 57.30097 ], [ -6.14513, 57.30078 ], [ -6.1454, 57.3006 ], [ -6.1455, 57.30053 ], [ -6.14568, 57.30041 ], [ -6.14571, 57.30039 ], [ -6.14592, 57.30024 ], [ -6.14604, 57.30016 ], [ -6.14612, 57.30011 ], [ -6.14624, 57.30003 ], [ -6.14634, 57.29997 ], [ -6.14653, 57.29985 ], [ -6.14674, 57.29972 ], [ -6.14698, 57.29957 ], [ -6.14724, 57.29944 ], [ -6.14734, 57.29938 ], [ -6.14749, 57.29932 ], [ -6.1476, 57.29927 ], [ -6.14774, 57.2992 ], [ -6.14785, 57.29916 ], [ -6.14801, 57.2991 ], [ -6.14817, 57.29904 ], [ -6.14843, 57.29897 ], [ -6.14859, 57.29892 ], [ -6.14874, 57.29888 ], [ -6.14889, 57.29885 ], [ -6.14902, 57.29882 ], [ -6.14943, 57.29874 ], [ -6.14958, 57.29871 ], [ -6.14983, 57.29867 ], [ -6.15001, 57.29864 ], [ -6.15029, 57.29859 ], [ -6.15047, 57.29856 ], [ -6.15052, 57.29854 ], [ -6.15081, 57.29848 ], [ -6.15108, 57.2984 ], [ -6.1516, 57.29823 ], [ -6.15192, 57.29812 ], [ -6.1522, 57.29802 ], [ -6.15247, 57.29793 ], [ -6.15344, 57.2976 ], [ -6.1542, 57.29734 ], [ -6.15445, 57.29725 ], [ -6.15472, 57.29715 ], [ -6.1548, 57.29712 ], [ -6.15531, 57.29695 ], [ -6.15585, 57.29676 ], [ -6.15609, 57.29669 ], [ -6.1564, 57.29663 ], [ -6.15645, 57.29662 ], [ -6.15671, 57.29657 ], [ -6.15677, 57.29657 ], [ -6.15708, 57.29653 ], [ -6.1571, 57.29653 ], [ -6.15743, 57.29652 ], [ -6.15755, 57.29652 ], [ -6.15776, 57.29651 ], [ -6.15843, 57.29649 ], [ -6.15876, 57.29649 ], [ -6.1591, 57.29649 ], [ -6.15943, 57.29648 ], [ -6.15945, 57.29648 ], [ -6.15984, 57.29648 ], [ -6.16009, 57.29647 ], [ -6.16022, 57.29647 ], [ -6.16043, 57.29646 ], [ -6.16052, 57.29646 ], [ -6.16076, 57.29644 ], [ -6.16083, 57.29644 ], [ -6.16098, 57.29642 ], [ -6.16108, 57.29641 ], [ -6.16132, 57.29638 ], [ -6.1614, 57.29636 ], [ -6.16159, 57.29633 ], [ -6.1619, 57.29626 ], [ -6.16202, 57.29623 ], [ -6.16202, 57.29622 ], [ -6.16222, 57.29617 ], [ -6.1623, 57.29613 ], [ -6.16239, 57.2961 ], [ -6.16254, 57.29604 ], [ -6.16257, 57.29602 ], [ -6.16268, 57.29598 ], [ -6.1628, 57.29592 ], [ -6.16282, 57.29591 ], [ -6.16295, 57.29583 ], [ -6.16305, 57.29578 ], [ -6.16316, 57.29572 ], [ -6.16328, 57.29565 ], [ -6.16335, 57.29561 ], [ -6.16351, 57.29551 ], [ -6.16358, 57.29547 ], [ -6.16372, 57.29538 ], [ -6.1639, 57.29526 ], [ -6.16393, 57.29524 ], [ -6.16405, 57.29516 ], [ -6.16414, 57.2951 ], [ -6.16426, 57.29502 ], [ -6.16435, 57.29496 ], [ -6.16444, 57.2949 ], [ -6.16452, 57.29484 ], [ -6.16456, 57.29482 ], [ -6.16464, 57.29476 ], [ -6.1648, 57.29464 ], [ -6.16495, 57.29453 ], [ -6.16497, 57.29451 ], [ -6.16513, 57.29438 ], [ -6.16517, 57.29434 ], [ -6.16532, 57.29423 ], [ -6.16535, 57.2942 ], [ -6.16551, 57.29408 ], [ -6.16555, 57.29404 ], [ -6.1657, 57.29393 ], [ -6.16576, 57.29389 ], [ -6.1659, 57.29379 ], [ -6.16595, 57.29375 ], [ -6.16614, 57.29362 ], [ -6.16633, 57.29352 ], [ -6.16634, 57.29352 ], [ -6.16654, 57.29341 ], [ -6.16687, 57.29324 ], [ -6.16706, 57.29314 ], [ -6.16725, 57.29304 ], [ -6.1673, 57.29302 ], [ -6.16745, 57.29294 ], [ -6.16753, 57.29289 ], [ -6.16765, 57.29282 ], [ -6.16784, 57.29271 ], [ -6.16813, 57.29253 ], [ -6.16858, 57.29223 ], [ -6.16903, 57.29193 ], [ -6.16908, 57.2919 ], [ -6.16932, 57.29173 ], [ -6.16952, 57.2916 ], [ -6.16965, 57.29151 ], [ -6.1698, 57.29141 ], [ -6.17002, 57.29126 ], [ -6.17023, 57.29113 ], [ -6.17057, 57.29091 ], [ -6.17078, 57.29079 ], [ -6.17096, 57.29069 ], [ -6.17114, 57.29062 ], [ -6.17129, 57.29055 ], [ -6.1715, 57.29048 ], [ -6.17185, 57.2904 ], [ -6.17205, 57.29035 ], [ -6.17225, 57.29032 ], [ -6.17241, 57.2903 ], [ -6.17274, 57.29027 ], [ -6.17301, 57.29026 ], [ -6.1731, 57.29026 ], [ -6.17326, 57.29026 ], [ -6.17357, 57.29027 ], [ -6.17391, 57.2903 ], [ -6.1739112, 57.2903012 ], [ -6.1739, 57.29012 ], [ -6.17389, 57.29009 ], [ -6.17389, 57.28999 ], [ -6.1739, 57.28988 ], [ -6.17392, 57.28982 ], [ -6.17393, 57.28978 ], [ -6.17398, 57.2897 ], [ -6.17402, 57.28965 ], [ -6.17413, 57.28956 ], [ -6.17423, 57.2895 ], [ -6.17436, 57.28945 ], [ -6.17441, 57.28944 ], [ -6.17448, 57.28942 ], [ -6.17468, 57.28937 ], [ -6.17472, 57.28937 ], [ -6.17492, 57.28933 ], [ -6.17518, 57.2893 ], [ -6.17546, 57.28926 ], [ -6.17569, 57.28923 ], [ -6.1759, 57.28919 ], [ -6.17615, 57.28916 ], [ -6.17637, 57.28912 ], [ -6.17651, 57.28908 ], [ -6.17674, 57.28902 ], [ -6.17696, 57.28895 ], [ -6.17721, 57.28887 ], [ -6.1773, 57.28884 ], [ -6.17753, 57.28876 ], [ -6.17781, 57.28866 ], [ -6.17799, 57.2886 ], [ -6.17809, 57.28857 ], [ -6.17815, 57.28855 ], [ -6.17836, 57.28849 ], [ -6.17838, 57.28848 ], [ -6.17862, 57.28842 ], [ -6.17869, 57.28841 ], [ -6.17892, 57.28836 ], [ -6.179, 57.28834 ], [ -6.17906, 57.28833 ], [ -6.17919, 57.28831 ], [ -6.17932, 57.2883 ], [ -6.17938, 57.28829 ], [ -6.17939, 57.28829 ], [ -6.17965, 57.28827 ], [ -6.17966, 57.28827 ], [ -6.17986, 57.28827 ], [ -6.18004, 57.28827 ], [ -6.18012, 57.28827 ], [ -6.1804, 57.28828 ], [ -6.18065, 57.2883 ], [ -6.18097, 57.28833 ], [ -6.18142, 57.28838 ], [ -6.18163, 57.2884 ], [ -6.18215, 57.28845 ], [ -6.18234, 57.28847 ], [ -6.18261, 57.2885 ], [ -6.1828, 57.28852 ], [ -6.18299, 57.28855 ], [ -6.18321, 57.28859 ], [ -6.18348, 57.28865 ], [ -6.18374, 57.28871 ], [ -6.18394, 57.28876 ], [ -6.18414, 57.28882 ], [ -6.18424, 57.28885 ], [ -6.18447, 57.28894 ], [ -6.18464, 57.28901 ], [ -6.18491, 57.28914 ], [ -6.18501, 57.28919 ], [ -6.18517, 57.28927 ], [ -6.18536, 57.28938 ], [ -6.18538, 57.2894 ], [ -6.18552, 57.2895 ], [ -6.18556, 57.28953 ], [ -6.18567, 57.28961 ], [ -6.18581, 57.28974 ], [ -6.18593, 57.28986 ], [ -6.18604, 57.28998 ], [ -6.18616, 57.29015 ], [ -6.18637, 57.29046 ], [ -6.18655, 57.29077 ], [ -6.18675, 57.29108 ], [ -6.18693, 57.29132 ], [ -6.18712, 57.29155 ], [ -6.18732, 57.29175 ], [ -6.18756, 57.29197 ], [ -6.18777, 57.29214 ], [ -6.18801, 57.29234 ], [ -6.18832, 57.29256 ], [ -6.18876, 57.29283 ], [ -6.18878, 57.29284 ], [ -6.1891, 57.29302 ], [ -6.18948, 57.29321 ], [ -6.18977, 57.29334 ], [ -6.19015, 57.29351 ], [ -6.19084, 57.29377 ], [ -6.19121, 57.29391 ], [ -6.19169, 57.29406 ], [ -6.19191, 57.29412 ], [ -6.19214, 57.29418 ], [ -6.19241, 57.29424 ], [ -6.19272, 57.2943 ], [ -6.19289, 57.29432 ], [ -6.19307, 57.29434 ], [ -6.19372, 57.29442 ], [ -6.19419, 57.29448 ], [ -6.1946, 57.29455 ], [ -6.19503, 57.29464 ], [ -6.19539, 57.29473 ], [ -6.19563, 57.2948 ], [ -6.19576, 57.29484 ], [ -6.1961, 57.29496 ], [ -6.19639, 57.29508 ], [ -6.19671, 57.29522 ], [ -6.19685, 57.2953 ], [ -6.19688, 57.29531 ], [ -6.19708, 57.29542 ], [ -6.19712, 57.29544 ], [ -6.19729, 57.29556 ], [ -6.1973, 57.29556 ], [ -6.1975, 57.2957 ], [ -6.1975, 57.29571 ], [ -6.1977, 57.29585 ], [ -6.19776, 57.29589 ], [ -6.1979, 57.29599 ], [ -6.19797, 57.29604 ], [ -6.1981, 57.29614 ], [ -6.19821, 57.29621 ], [ -6.19848, 57.29639 ], [ -6.19876, 57.29654 ], [ -6.19904, 57.29668 ], [ -6.19934, 57.29682 ], [ -6.1996, 57.29693 ], [ -6.19985, 57.29703 ], [ -6.20059, 57.29732 ], [ -6.20086, 57.29742 ], [ -6.20087, 57.29743 ], [ -6.20113, 57.29753 ], [ -6.20142, 57.29765 ], [ -6.20166, 57.29775 ], [ -6.20174, 57.29778 ], [ -6.20191, 57.29786 ], [ -6.20199, 57.2979 ], [ -6.20214, 57.29799 ], [ -6.20216, 57.298 ], [ -6.20235, 57.29812 ], [ -6.20257, 57.29829 ], [ -6.20273, 57.29842 ], [ -6.20284, 57.29855 ], [ -6.20298, 57.29871 ], [ -6.20308, 57.29887 ], [ -6.20316, 57.29903 ], [ -6.20319, 57.2991 ], [ -6.20325, 57.29922 ], [ -6.20327, 57.29927 ], [ -6.20336, 57.29948 ], [ -6.20349, 57.2997 ], [ -6.20369, 57.29997 ], [ -6.20383, 57.30013 ], [ -6.20399, 57.30029 ], [ -6.20422, 57.30048 ], [ -6.20436, 57.30058 ], [ -6.2046, 57.30075 ], [ -6.20495, 57.30095 ], [ -6.20536, 57.30117 ], [ -6.20585, 57.30144 ], [ -6.2062, 57.30162 ], [ -6.20644, 57.30174 ], [ -6.20661, 57.30182 ], [ -6.20696, 57.30198 ], [ -6.20728, 57.30212 ], [ -6.20746, 57.30219 ], [ -6.20769, 57.30229 ], [ -6.20811, 57.30245 ], [ -6.20827, 57.30251 ], [ -6.20851, 57.30261 ], [ -6.20881, 57.30272 ], [ -6.20886, 57.30274 ], [ -6.20923, 57.30289 ], [ -6.20935, 57.30294 ], [ -6.20961, 57.30304 ], [ -6.21004, 57.30323 ], [ -6.21027, 57.30334 ], [ -6.21058, 57.30349 ], [ -6.21062, 57.30351 ], [ -6.21078, 57.30359 ], [ -6.21115, 57.30378 ], [ -6.21134, 57.30389 ], [ -6.21151, 57.30398 ], [ -6.21158, 57.30401 ], [ -6.21207, 57.30426 ], [ -6.21221, 57.30433 ], [ -6.21232, 57.30437 ], [ -6.21255, 57.30447 ], [ -6.21289, 57.30459 ], [ -6.2133, 57.30472 ], [ -6.21364, 57.30481 ], [ -6.21375, 57.30484 ], [ -6.21405, 57.30491 ], [ -6.21411, 57.30492 ], [ -6.21436, 57.30497 ], [ -6.21452, 57.305 ], [ -6.21468, 57.30503 ], [ -6.21489, 57.30506 ], [ -6.215, 57.30508 ], [ -6.21532, 57.30512 ], [ -6.21551, 57.30515 ], [ -6.21564, 57.30517 ], [ -6.21619, 57.30524 ], [ -6.21662, 57.3053 ], [ -6.21693, 57.30535 ], [ -6.21707, 57.30537 ], [ -6.21746, 57.30542 ], [ -6.21758, 57.30544 ], [ -6.21796, 57.30549 ], [ -6.21822, 57.30553 ], [ -6.21847, 57.30556 ], [ -6.21877, 57.3056 ], [ -6.21887, 57.30561 ], [ -6.21906, 57.30564 ], [ -6.21919, 57.30566 ], [ -6.21926, 57.30567 ], [ -6.21951, 57.30571 ], [ -6.21963, 57.30573 ], [ -6.21983, 57.30575 ], [ -6.21988, 57.30576 ], [ -6.22016, 57.3058 ], [ -6.22048, 57.30584 ], [ -6.22051, 57.30585 ], [ -6.22112, 57.30594 ], [ -6.22115, 57.30594 ], [ -6.22161, 57.306 ], [ -6.22177, 57.30603 ], [ -6.22208, 57.30607 ], [ -6.22209, 57.30607 ], [ -6.22241, 57.30612 ], [ -6.22263, 57.30615 ], [ -6.22287, 57.30617 ], [ -6.22306, 57.30619 ], [ -6.22347, 57.30624 ], [ -6.22372, 57.30625 ], [ -6.22405, 57.30628 ], [ -6.22411, 57.30628 ], [ -6.22438, 57.30629 ], [ -6.22467, 57.30631 ], [ -6.22471, 57.30631 ], [ -6.22504, 57.30632 ], [ -6.22514, 57.30632 ], [ -6.22538, 57.30633 ], [ -6.22569, 57.30634 ], [ -6.22571, 57.30634 ], [ -6.22604, 57.30633 ], [ -6.22662, 57.30632 ], [ -6.22671, 57.30632 ], [ -6.22735, 57.30629 ], [ -6.2277, 57.30628 ], [ -6.22816, 57.30625 ], [ -6.22868, 57.30621 ], [ -6.22916, 57.30618 ], [ -6.22984, 57.30614 ], [ -6.23045, 57.30608 ], [ -6.23142, 57.306 ], [ -6.23145, 57.306 ], [ -6.23174, 57.30596 ], [ -6.23201, 57.30593 ], [ -6.23256, 57.30586 ], [ -6.23344, 57.30575 ], [ -6.23401, 57.30567 ], [ -6.23434, 57.30561 ], [ -6.23536, 57.30546 ], [ -6.23636, 57.3053 ], [ -6.23691, 57.30522 ], [ -6.23756, 57.30512 ], [ -6.2377, 57.3051 ], [ -6.23823, 57.30502 ], [ -6.23915, 57.30488 ], [ -6.23948, 57.30483 ], [ -6.23981, 57.30478 ], [ -6.24017, 57.30473 ], [ -6.24077, 57.30464 ], [ -6.2408, 57.30464 ], [ -6.24109, 57.30459 ], [ -6.24124, 57.30457 ], [ -6.24141, 57.30454 ], [ -6.24173, 57.3045 ], [ -6.2418, 57.30449 ], [ -6.24205, 57.30445 ], [ -6.24231, 57.30441 ], [ -6.24237, 57.3044 ], [ -6.24269, 57.30434 ], [ -6.24288, 57.30431 ], [ -6.24301, 57.30428 ], [ -6.24332, 57.30422 ], [ -6.24335, 57.30421 ], [ -6.24363, 57.30415 ], [ -6.24379, 57.30412 ], [ -6.24394, 57.30409 ], [ -6.24418, 57.30403 ], [ -6.24459, 57.30392 ], [ -6.24496, 57.30383 ], [ -6.24538, 57.3037 ], [ -6.24571, 57.30359 ], [ -6.24577, 57.30357 ], [ -6.24599, 57.3035 ], [ -6.24617, 57.30344 ], [ -6.24627, 57.3034 ], [ -6.24655, 57.3033 ], [ -6.2468, 57.3032 ], [ -6.24682, 57.3032 ], [ -6.24709, 57.30309 ], [ -6.24736, 57.30299 ], [ -6.24763, 57.30288 ], [ -6.24817, 57.30267 ], [ -6.24836, 57.3026 ], [ -6.24844, 57.30257 ], [ -6.24872, 57.30246 ], [ -6.24899, 57.30236 ], [ -6.24926, 57.30226 ], [ -6.2497, 57.30209 ], [ -6.2498, 57.30205 ], [ -6.25008, 57.30194 ], [ -6.25083, 57.30166 ], [ -6.25089, 57.30164 ], [ -6.25117, 57.30154 ], [ -6.25145, 57.30144 ], [ -6.25213, 57.3012 ], [ -6.25295, 57.30092 ], [ -6.25341, 57.30075 ], [ -6.25348, 57.30073 ], [ -6.25369, 57.30066 ], [ -6.25408, 57.30051 ], [ -6.25449, 57.30037 ], [ -6.25502, 57.30019 ], [ -6.25508, 57.30016 ], [ -6.25536, 57.30007 ], [ -6.25657, 57.29966 ], [ -6.25761, 57.2993 ], [ -6.25775, 57.29925 ], [ -6.25873, 57.29891 ], [ -6.25875, 57.2989 ], [ -6.25989, 57.29851 ], [ -6.26014, 57.29843 ], [ -6.26027, 57.29839 ], [ -6.26066, 57.29828 ], [ -6.26072, 57.29826 ], [ -6.26124, 57.29811 ], [ -6.26182, 57.29796 ], [ -6.26242, 57.29781 ], [ -6.26252, 57.29779 ], [ -6.26293, 57.29769 ], [ -6.26321, 57.29764 ], [ -6.26355, 57.29756 ], [ -6.26427, 57.29743 ], [ -6.26454, 57.29739 ], [ -6.26485, 57.29734 ], [ -6.26547, 57.29725 ], [ -6.2655, 57.29725 ], [ -6.26624, 57.29716 ], [ -6.26672, 57.2971 ], [ -6.26718, 57.29706 ], [ -6.26776, 57.29702 ], [ -6.26845, 57.29698 ], [ -6.26852, 57.29698 ], [ -6.26879, 57.29697 ], [ -6.26939, 57.29694 ], [ -6.27078, 57.29693 ], [ -6.27084, 57.29693 ], [ -6.27145, 57.29692 ], [ -6.27311, 57.29691 ], [ -6.2732, 57.29691 ], [ -6.27344, 57.29691 ], [ -6.27504, 57.29691 ], [ -6.27511, 57.29691 ], [ -6.27544, 57.29691 ], [ -6.27577, 57.29691 ], [ -6.27611, 57.29691 ], [ -6.27644, 57.2969 ], [ -6.27677, 57.2969 ], [ -6.27711, 57.2969 ], [ -6.27744, 57.2969 ], [ -6.27756, 57.2969 ], [ -6.27777, 57.2969 ], [ -6.2781, 57.2969 ], [ -6.27844, 57.29689 ], [ -6.27897, 57.29689 ], [ -6.2791, 57.2969 ], [ -6.27944, 57.2969 ], [ -6.27977, 57.29691 ], [ -6.2801, 57.29691 ], [ -6.28013, 57.29691 ], [ -6.28043, 57.29692 ], [ -6.28077, 57.29694 ], [ -6.28106, 57.29695 ], [ -6.2811, 57.29695 ], [ -6.28143, 57.29698 ], [ -6.28176, 57.29701 ], [ -6.28197, 57.29702 ], [ -6.28208, 57.29704 ], [ -6.28241, 57.29707 ], [ -6.28274, 57.29711 ], [ -6.28284, 57.29712 ], [ -6.28306, 57.29714 ], [ -6.28372, 57.29721 ], [ -6.28393, 57.29723 ], [ -6.28404, 57.29725 ], [ -6.28437, 57.29728 ], [ -6.28469, 57.29732 ], [ -6.28502, 57.29736 ], [ -6.28505, 57.29736 ], [ -6.28535, 57.29739 ], [ -6.28567, 57.29743 ], [ -6.286, 57.29747 ], [ -6.28626, 57.2975 ], [ -6.28632, 57.2975 ], [ -6.28665, 57.29754 ], [ -6.28698, 57.29758 ], [ -6.28705, 57.29758 ], [ -6.2873, 57.29762 ], [ -6.28762, 57.29767 ], [ -6.28791, 57.29772 ], [ -6.28794, 57.29772 ], [ -6.28825, 57.29778 ], [ -6.28873, 57.29787 ], [ -6.28888, 57.2979 ], [ -6.2892, 57.29796 ], [ -6.28965, 57.29804 ], [ -6.29045, 57.29819 ], [ -6.29063, 57.29823 ], [ -6.29108, 57.29832 ], [ -6.29115, 57.29833 ], [ -6.29148, 57.29841 ], [ -6.29168, 57.29847 ], [ -6.29178, 57.29851 ], [ -6.29209, 57.29862 ], [ -6.2921, 57.29862 ], [ -6.29238, 57.29873 ], [ -6.29241, 57.29874 ], [ -6.29263, 57.29883 ], [ -6.29288, 57.29896 ], [ -6.2928833, 57.2989593 ], [ -6.29298, 57.2989 ], [ -6.29303, 57.29888 ], [ -6.29306, 57.29887 ], [ -6.2931, 57.29887 ], [ -6.29314, 57.29887 ], [ -6.29317, 57.29887 ], [ -6.29322, 57.29888 ], [ -6.29326, 57.2989 ], [ -6.29332, 57.29893 ], [ -6.2934, 57.29898 ], [ -6.29349, 57.29903 ], [ -6.29363, 57.29911 ], [ -6.29368, 57.29913 ], [ -6.29377, 57.29918 ], [ -6.29388, 57.29923 ], [ -6.29389, 57.29923 ], [ -6.29417, 57.29932 ], [ -6.29418, 57.29933 ], [ -6.29466, 57.29947 ], [ -6.29475, 57.29949 ], [ -6.29505, 57.29957 ], [ -6.29514, 57.2996 ], [ -6.29531, 57.29965 ], [ -6.29534, 57.29966 ], [ -6.29562, 57.29976 ], [ -6.29563, 57.29976 ], [ -6.2959, 57.29986 ], [ -6.29608, 57.29993 ], [ -6.29617, 57.29996 ], [ -6.29645, 57.30006 ], [ -6.29652, 57.30009 ], [ -6.29666, 57.30013 ], [ -6.29674, 57.30015 ], [ -6.29677, 57.30016 ], [ -6.29688, 57.30019 ], [ -6.29699, 57.30021 ], [ -6.29705, 57.30021 ], [ -6.2971, 57.30022 ], [ -6.29719, 57.30022 ], [ -6.2973, 57.30023 ], [ -6.29738, 57.30023 ], [ -6.29747, 57.30022 ], [ -6.29757, 57.30022 ], [ -6.29765, 57.30021 ], [ -6.29773, 57.3002 ], [ -6.29781, 57.30018 ], [ -6.29789, 57.30016 ], [ -6.29795, 57.30015 ], [ -6.29802, 57.30013 ], [ -6.29808, 57.30011 ], [ -6.29809, 57.30011 ], [ -6.29817, 57.30008 ], [ -6.29827, 57.30003 ], [ -6.29833, 57.3 ], [ -6.29835, 57.29999 ], [ -6.29842, 57.29993 ], [ -6.29847, 57.29989 ], [ -6.29852, 57.29983 ], [ -6.29863, 57.29968 ], [ -6.29868, 57.29959 ], [ -6.29872, 57.29955 ], [ -6.29876, 57.29951 ], [ -6.29879, 57.29948 ], [ -6.29886, 57.29942 ], [ -6.29894, 57.29936 ], [ -6.29895, 57.29935 ], [ -6.29907, 57.29928 ], [ -6.29917, 57.29923 ], [ -6.29923, 57.2992 ], [ -6.29942, 57.29911 ], [ -6.29945, 57.2991 ], [ -6.29967, 57.29901 ], [ -6.29969, 57.29901 ], [ -6.29989, 57.29893 ], [ -6.30004, 57.29889 ], [ -6.30019, 57.29884 ], [ -6.30026, 57.29882 ], [ -6.3004, 57.29879 ], [ -6.30057, 57.29876 ], [ -6.30061, 57.29875 ], [ -6.30082, 57.29872 ], [ -6.30104, 57.29871 ], [ -6.3013, 57.29871 ], [ -6.30152, 57.29871 ], [ -6.30163, 57.29871 ], [ -6.30206, 57.29871 ], [ -6.30326, 57.29873 ], [ -6.30371, 57.29874 ], [ -6.30426, 57.29877 ], [ -6.30429, 57.29877 ], [ -6.30445, 57.29877 ], [ -6.30459, 57.29877 ], [ -6.30462, 57.29877 ], [ -6.30476, 57.29875 ], [ -6.30491, 57.29873 ], [ -6.30495, 57.29872 ], [ -6.30506, 57.29869 ], [ -6.3052, 57.29865 ], [ -6.30537, 57.29859 ], [ -6.30549, 57.29855 ], [ -6.3056, 57.29851 ], [ -6.30578, 57.29846 ], [ -6.30579, 57.29846 ], [ -6.306, 57.2984 ], [ -6.30608, 57.29839 ], [ -6.30634, 57.29834 ], [ -6.3064, 57.29833 ], [ -6.30672, 57.29827 ], [ -6.30698, 57.29823 ], [ -6.30745, 57.29815 ], [ -6.30776, 57.2981 ], [ -6.30793, 57.29807 ], [ -6.30802, 57.29806 ], [ -6.30825, 57.29802 ], [ -6.30829, 57.29801 ], [ -6.30844, 57.29798 ], [ -6.30855, 57.29797 ], [ -6.30874, 57.29793 ], [ -6.30904, 57.29786 ], [ -6.30935, 57.29779 ], [ -6.30958, 57.29773 ], [ -6.30974, 57.2977 ], [ -6.30991, 57.29766 ], [ -6.31002, 57.29764 ], [ -6.31013, 57.29762 ], [ -6.31023, 57.2976 ], [ -6.31034, 57.29759 ], [ -6.31043, 57.29758 ], [ -6.31045, 57.29758 ], [ -6.31057, 57.29757 ], [ -6.31068, 57.29757 ], [ -6.31076, 57.29757 ], [ -6.3108, 57.29757 ], [ -6.31092, 57.29757 ], [ -6.31104, 57.29757 ], [ -6.31124, 57.29757 ], [ -6.31141, 57.29757 ], [ -6.31153, 57.29757 ], [ -6.31165, 57.29756 ], [ -6.31178, 57.29755 ], [ -6.3119, 57.29754 ], [ -6.31204, 57.29752 ], [ -6.3123, 57.29748 ], [ -6.31257, 57.29744 ], [ -6.3127, 57.29742 ], [ -6.3127032, 57.2974201 ] ] ] } }\n]\n}\n","import Circle from \"ol/geom/Circle\";\nimport LineString from 'ol/geom/LineString';\nimport Feature from \"ol/Feature\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport { Stroke, Style } from \"ol/style\";\nimport { OSM, Vector as VectorSource } from \"ol/source\";\nimport { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\nimport {fromLonLat} from 'ol/proj';\nimport {getDistance} from 'ol/sphere';\n\nimport Stamen from 'ol/source/Stamen';\n\nconst styles = {\n  Done: new Style({\n    stroke: new Stroke({\n      color: \"green\",\n      width: 4\n    })\n  }),\n  NotDone: new Style({\n    stroke: new Stroke({\n      color: [255, 0, 0, 0.7],\n      width: 4\n    })\n  }),\n};\n\nconst styleFunction = function (feature) {\n  return styles[feature.get(\"name\")];\n};\n\n\nconst vectorSource = new VectorSource();\n\nlet doneLineString = new LineString([]);\nlet notDoneLineString = new LineString([]);\n\nimport tracks from './tracks.json';\nconsole.log(\"track length: \" +  tracks[\"features\"][0][\"geometry\"][\"coordinates\"][0].length)\nlet meters = 0;\n//let completed = 190740;\nlet completed = 233820;\n\nfor(let p = 0; p < tracks[\"features\"][0][\"geometry\"][\"coordinates\"][0].length; p++) {\n    curCoord = tracks[\"features\"][0][\"geometry\"][\"coordinates\"][0][p];\n    if(p > 0)\n    {\n        prevCoord = tracks[\"features\"][0][\"geometry\"][\"coordinates\"][0][p-1];\n        meters += getDistance(prevCoord, curCoord);\n    }\n    if(meters < completed)\n    {\n        doneLineString.appendCoordinate(fromLonLat(curCoord));\n    }\n    else\n    {\n        notDoneLineString.appendCoordinate(fromLonLat(curCoord));\n    }\n}\nvectorSource.addFeature(new Feature({\n    geometry: doneLineString,\n    name: \"Done\"\n}));\nvectorSource.addFeature(new Feature({\n    geometry: notDoneLineString,\n    name: \"NotDone\"\n}));\nconsole.log(\"Meters: \" + meters + \" Completed \" + completed)\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n  style: styleFunction\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new Stamen({\n        layer: 'watercolor',\n      }),\n    }),\n      /*\n    new TileLayer({\n      source: new Stamen({\n        layer: 'terrain-labels',\n      }),\n    }),\n    */\n    vectorLayer\n  ],\n  target: \"map\",\n  view: new View({\n    center: fromLonLat([-3, 54.51]),\n    zoom: 5\n  })\n});\n\n"],"names":["$42282ac5c8474df1$export$2e2bcd8739ae039","XY","XYZ","XYM","XYZM","$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$e881b5dca21eb5d4$export$2e2bcd8739ae039","PROPERTYCHANGE","$3273ed08087da3da$export$2e2bcd8739ae039","Disposable","disposed","dispose","disposeInternal","$b998d41b678ed5d1$export$2e0ae67339d5f1ac","haystack","needle","opt_comparator","mid","cmp","comparator","$b998d41b678ed5d1$export$4e734a3b32fb971b","low","high","length","found","a","b","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","direction","n","i","$b998d41b678ed5d1$export$292cfa960964f0e0","begin","end","tmp","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","Array","isArray","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$beaefe87199bb537$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","push","$beaefe87199bb537$export$dd1bc94b04021eeb","$08c28d22c0cb5a39$export$2e2bcd8739ae039","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$294047c5e65f31a3$export$2e2bcd8739ae039","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$1f093ab5083c8a1f$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","changed","getRevision","len","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","$08c28d22c0cb5a39$exports","default","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$1f093ab5083c8a1f$exports","$03edbd434a9e6608$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","Math","PI","$03edbd434a9e6608$export$2e2bcd8739ae039","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","$67c66761d21428d0$export$39dfd62a25e0fe93","match","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","options","defineProperty","window","error","$40658b5e833b516b$export$2e2bcd8739ae039","AssertionError","code","message","split","name","$40658b5e833b516b$var$__extends","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$exports","$e22e7611e69f42a9$var$transformStringDiv","$e22e7611e69f42a9$export$adaa4cf7ef1b65be","transform","c","d","e","f","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","coordinate","x","y","$e22e7611e69f42a9$export$3e4e33ea14aeb531","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","mat","det","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$dab4245bc22b806c$export$2e2bcd8739ae039","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","extent","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$ab1029bcae9ddb4a","opt_extent","$6da4c8ed3074c92b$export$9cd59f9826255e47","slice","$6da4c8ed3074c92b$export$cbe64c389534206f","dx","dy","$6da4c8ed3074c92b$export$ac68c24d37ca240f","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$30570204156ffd18","flatCoordinates","offset","stride","$6da4c8ed3074c92b$export$f1dab130b92b85a9","min","max","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","$6da4c8ed3074c92b$export$13ba650faf8308","center","resolution","rotation","size","_a","$6da4c8ed3074c92b$export$4b7a6fb4002cd6ac","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$6a4fe494c558c238","$6da4c8ed3074c92b$export$a6a5a7a461419425","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6da4c8ed3074c92b$export$39a9ce3624977b84","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","$6da4c8ed3074c92b$export$9031237f01de0947","isFinite","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","exp","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","log","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$8240f01c446270e6","maxRow","maxEl","abs","r","absValue","j","coef","k","m","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$6b000a049d919fe5$export$a81f732198733497","decimals","factor","pow","round","$6b000a049d919fe5$export$a3fe094919f356fd","$6b000a049d919fe5$export$803ce6b71a0a94b2","ceil","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$f5ec5c943d804ecb$export$e16d8520af44a096","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$11b5dd198626e1de$export$3988ae62b71be9a3","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$1bd0a226f9a16141$export$bb628a54ab399bc9","cosAngle","sinAngle","$1bd0a226f9a16141$export$39a9ce3624977b84","worldsAway","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","sourceExtentWidth","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$9c4744460e43e41b$var$showCoordinateWarning","$9c4744460e43e41b$export$ed949affbc7c4223","opt_disable","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$9c4744460e43e41b$export$eeb8392580a05a37","projections","forEach","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$b15d9668511529b9","opt_projection","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$3973b77d5f6f2790","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","console","warn","$9c4744460e43e41b$export$96bfd09e2cffb006","$9c4744460e43e41b$export$494be3a3a25689ca","$9c4744460e43e41b$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","$14c6e714516e527b$export$bb628a54ab399bc9","anchor","anchorX","anchorY","deltaX","deltaY","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$b68b3d6e32e3074a$exports","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry","$c76e993e57efc8c4$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","$50db89a00eb954f6$exports","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$60815ead40ec79ab","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","simplifiedEnds","$3e64078bffae1cbd$export$4b80e395e36b5a56","ret","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$5454470599558ddd$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$43ed5485a1d0c509$export$687ff82efd78795b","fraction","o","length_1","cumulativeLengths","$43ed5485a1d0c509$export$8f44c3c220ef6f09","extrapolate","lo","hi","m0","$239aa88e7a573859$export$cedabedc7ac0e138","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","point1","point2","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$bf04349d827c1d16$export$153f8c6b4d8caebc","$292e4002746c8223$export$2e2bcd8739ae039","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$292e4002746c8223$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$c76e993e57efc8c4$exports","$9fd014ab6df63665$export$bb06ddfd5d66e02e","styles_1","getZIndex","$9fd014ab6df63665$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","$9fd014ab6df63665$var$__extends","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$322346e1ff7894ca$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$322346e1ff7894ca$export$a3295358bff77e","map","Number","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","$f351daabfe6e2d22$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$f351daabfe6e2d22$var$getKey","setSize","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$f6d1853b3fcae320$export$2e2bcd8739ae039","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$57c5f0299cb9b82f$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$f5e92a4d985a2824$export$2e2bcd8739ae039","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","$534f30fce11effcd$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$57c5f0299cb9b82f$exports","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","MapRenderer","map_","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","$534f30fce11effcd$exports","inView","getWrapX","callback_1","order","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$075f937d7366f1a2$export$e918ac6a1026a12a","clearRect","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","lastChild","$075f937d7366f1a2$export$caeacfe04f52533a","children","oldChildren","childNodes","oldChild","newChild","insertBefore","$d4aabc5c971073f1$export$e21b4112fdc612fc","$d4aabc5c971073f1$export$40a9eeef55665a40","$d4aabc5c971073f1$export$1d36981fcadac93b","$d4aabc5c971073f1$var$measureFont","measureElement","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","$d4aabc5c971073f1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$d4aabc5c971073f1$export$4feaf6852ff92513","metrics","$d4aabc5c971073f1$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d4aabc5c971073f1$export$915c7ba51467308f","reduce","prev","curr","$d4aabc5c971073f1$export$7d7c13020df1e791","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","$d4aabc5c971073f1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$d4aabc5c971073f1$var$executeLabelInstructions","drawImage","restore","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","event_1","$b80dddceb0c42ad4$exports","declutterLayers","previousElement","layerIndex","sourceState","element","renderDeclutter","getDataAtPixel","$b370ab32454a96fd$exports","$161dd067fe2d672c$export$2e2bcd8739ae039","ADD","REMOVE","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","setAt","opt_except","$0b703156bb914e6f$export$2f5ff21d758d25a7","GroupEvent","$0b703156bb914e6f$var$__extends","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$931ffc4e747c14db$exports","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","opt_activePointers","pixel_","coordinate_","dragging","activePointers","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent","$a1b91f073c6a6c43$exports","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","MOVESTART","MOVEEND","LOADSTART","LOADEND","$07fa325567004bb7$export$2e2bcd8739ae039","LAYERGROUP","SIZE","TARGET","VIEW","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b8291d9739c3c64e$export$2e2bcd8739ae039","IDLE","LOADING","LOADED","EMPTY","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","$7d362782b4ccb93d$export$2e2bcd8739ae039","ANIMATING","INTERACTING","$d35baefbe89be4c5$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$d65a517690fc4385","resolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","$bac43a1f4a628548$export$22ac0f6b219de91a","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$1c4e6da9b4b066fe","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$c7ccf7e681a9b333$export$929e5a82286172a6","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing","$548636579b4087f2$var$__extends","getArea","$6eced4c969949f6b$export$2e2bcd8739ae039","Point","$6eced4c969949f6b$var$__extends","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$155dc783a4ec227e$export$741858880c96b18c","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$40aa8d43bbe572bf$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$6eced4c969949f6b$exports","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","getRadius","startAngle","$70364d0195659942$var$animationCallback","returnValue","$70364d0195659942$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$70364d0195659942$export$c68d65f9148da196","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","$70364d0195659942$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$ee75376562060184","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$70364d0195659942$var$calculateCenterOn","rotX","rotY","$70364d0195659942$export$2e2bcd8739ae039","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$40aa8d43bbe572bf$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$a71a825ff42fb8e1","$cceb59c4bc2a46b0$var$removeLayerMapProperty","$0b703156bb914e6f$exports","$cceb59c4bc2a46b0$var$setLayerMapProperty","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$6085d006f9d0efe2$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control","target_","$b978dafe8f7d27ff$var$__extends","mapEvent","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$b978dafe8f7d27ff$exports","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$b4471d80e1d69273$export$ebe90cb607ad99e","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","ACTIVE","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","isContentEditable","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","centroid","$cf1eb502962d87a8$exports","update","getDistance","getAngle","centerpx","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","DragBoxEvent","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom","out_","out","$afc7f51010a5b660$var$__extends","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","UP","DOWN","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$fdc8b40501c0cf45$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$61c65c2463af340d$export$2e2bcd8739ae039","FRACTION","$546509bca2d85ec0$export$2e2bcd8739ae039","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$e60011aea38e6239$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase","$5edd00bd92be9cf8$var$__extends","$b54439be79d4619a$export$bc96ecc7c2a50764","image","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5edd00bd92be9cf8$exports","$0e5ad1d3b638689e$var$taintedTestContext","$0e5ad1d3b638689e$var$IconImage","IconImage","imageState","hitDetectionImage_","canvas_","color_","imageState_","size_","tainted_","$0e5ad1d3b638689e$var$__extends","isTainted_","getImageData","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$b54439be79d4619a$exports","listenImage","ctx","globalCompositeOperation","fillStyle","imgData","putImageData","$0e5ad1d3b638689e$export$3988ae62b71be9a3","$8463d325b53eeb0c$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize_","imgSize","iconImage_","$0e5ad1d3b638689e$exports","offset_","offsetOrigin_","offsetOrigin","origin_","$8463d325b53eeb0c$var$__extends","setAnchor","getColor","iconImageSize","$f9d0329c5c745263$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","getWidth","setColor","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$e0807f400ec9a0a9$export$dc5b1400ac3a10a8","$3e99c452138b2224$export$2e2bcd8739ae039","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","stroke","renderOptions_","$3e99c452138b2224$var$__extends","getFill","getPoints","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","maxRadius","createPath_","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$06150d8570b7481b$export$2e2bcd8739ae039","CircleStyle","$06150d8570b7481b$var$__extends","setRadius","$3e99c452138b2224$exports","$d61d1dcaf3c44610$export$2e2bcd8739ae039","Fill","$8c7f6dda98e8cb9c$var$Style","Style","geometryFunction_","$8c7f6dda98e8cb9c$var$defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","$8c7f6dda98e8cb9c$export$c314ea3f6b164147","styleFunction","$8c7f6dda98e8cb9c$var$defaultStyles","$8c7f6dda98e8cb9c$export$6865c5ac2f5ce8b6","$06150d8570b7481b$exports","$8c7f6dda98e8cb9c$export$2e2bcd8739ae039","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","$176ca75ee9f69668$exports","u","p","_maxEntries","_minEntries","leaf","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","$34c742891733e7a4$export$2e2bcd8739ae039","RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","interpolate","viewResolver","viewRejector","viewPromise_","reject","$ed6dc99f268f3882$var$__extends","getInterpolate","refresh","setAttributions","setState","$ccc4e6f11f11978f$export$2e2bcd8739ae039","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","$eb51d0a16123ee90$export$84bf76cd7afc7469","$588823c001569193$var$withCredentials","$588823c001569193$export$14cc81df70b6707e","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$588823c001569193$export$441d7b57adab24d0","dataProjection","addFeatures","$84888e4daf3fdf44$export$d402fd02dc2b661c","VectorSourceEvent","opt_feature","opt_features","$84888e4daf3fdf44$var$__extends","$84888e4daf3fdf44$export$2e2bcd8739ae039","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","$ed6dc99f268f3882$exports","$e4c61536de922b84$export$2e2bcd8739ae039","PRELOAD","USE_INTERIM_TILES_ON_ERROR","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","getUseInterimTilesOnError","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","$42152f52b26b6ca7$export$a166f0857c555517","$42152f52b26b6ca7$var$pixelContext","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$42152f52b26b6ca7$var$__extends","col","row","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext","pixelCanvas","Uint8Array","$cb18cdefd702a327$exports","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile","interimTile","transition_","transition","transitionStarts_","$0f235d2d04095c6e$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$cd3bc8d185522361$var$__extends","naturalWidth","naturalHeight","$0f235d2d04095c6e$exports","$2b0a118af78fb031$var$brokenDiagonalRendering_","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$fa21ebc07613627d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$fa21ebc07613627d$export$75f39f0ce198f93f","$2b0a118af78fb031$export$a166f0857c555517","$2b0a118af78fb031$var$drawTestTriangle","u1","v1","u2","v2","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$2b0a118af78fb031$export$16d356211d01f1cc","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","steps","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$398e350e33050c07$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","unlistenSources_","$550e524b0d1b61d4$var$TileRange","TileRange","containsTileRange","getHeight","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$02fffef185f4339b$export$2e2bcd8739ae039","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$02fffef185f4339b$var$__extends","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","$cd3bc8d185522361$exports","$398e350e33050c07$exports","tileOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$42152f52b26b6ca7$exports","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer","$32e67a4d3559554a$var$__extends","$02fffef185f4339b$exports","$93be2de6a052f587$exports","$c8d6dc4c09ed9916$var$Property","$c8d6dc4c09ed9916$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$c8d6dc4c09ed9916$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","$cf547866e052f25b$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$cf547866e052f25b$export$f21891651e408226","$cf547866e052f25b$export$7a98aa5364d62ba8","$cf547866e052f25b$export$9f746cc58a899a00","$cf547866e052f25b$export$89b10f327e413e71","$cf547866e052f25b$export$2e2bcd8739ae039","$eb0e5c3938110b4c$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$2bb20f8873deb436$export$2e2bcd8739ae039","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$2bb20f8873deb436$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$b652f9dd73b29cfe$export$2e2bcd8739ae039","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$b652f9dd73b29cfe$var$__extends","myBegin","opt_sharedData","origin","$2bb20f8873deb436$exports","$a207f23baa5aa2c5$export$2e2bcd8739ae039","CanvasLineStringBuilder","$a207f23baa5aa2c5$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$7d2e8ba11a45ae8a$export$2e2bcd8739ae039","CanvasPolygonBuilder","$7d2e8ba11a45ae8a$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$27569314e3df91c2$export$2e2bcd8739ae039","POINT","LINE","$79529ab61b92f869$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$8243e906fae47bbe$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$8243e906fae47bbe$export$2e2bcd8739ae039","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$8243e906fae47bbe$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","saveTextStates_","backgroundFill","backgroundStroke","p0","p1","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","justify","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$e22658f4b743550b$var$BATCH_CONSTRUCTORS","Circle","$7d2e8ba11a45ae8a$exports","Default","$b652f9dd73b29cfe$exports","$a207f23baa5aa2c5$exports","Text","$8243e906fae47bbe$exports","$e22658f4b743550b$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$f6421f31729929e6$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$6526fa4ee42dc39d$var$tmpExtent","$6526fa4ee42dc39d$var$p1","$6526fa4ee42dc39d$var$p2","$6526fa4ee42dc39d$var$p3","$6526fa4ee42dc39d$var$p4","$6526fa4ee42dc39d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6526fa4ee42dc39d$var$rtlRegEx","fromCharCode","$6526fa4ee42dc39d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6526fa4ee42dc39d$var$createTextChunks","acc","line","$6526fa4ee42dc39d$export$2e2bcd8739ae039","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$a34a824d875e4ea1$var$ORDER","$a34a824d875e4ea1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$a34a824d875e4ea1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$a34a824d875e4ea1$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$a34a824d875e4ea1$export$2e2bcd8739ae039","$7b0c2128a27f5020$export$2e2bcd8739ae039","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$7b0c2128a27f5020$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$13dfa0283bf5c35f$export$bd05e394339d469","transforms","$7b0c2128a27f5020$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$8463d325b53eeb0c$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$13dfa0283bf5c35f$export$6d4d555ddbfffa32","resultFeatures","$4b9ac454600c05d2$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageBuilderGroup","imageReplay_1","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","MultiPoint","imageReplay_2","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$4b9ac454600c05d2$export$531ddd8416d52dfc","feature1","feature2","$4b9ac454600c05d2$export$75084a70d324c1e6","$4b9ac454600c05d2$export$bdacc5b475012edb","$4b9ac454600c05d2$export$36f470a33a42f413","$4b9ac454600c05d2$var$renderGeometry","$4b9ac454600c05d2$var$renderFeatureInternal","getGeometries","$659e0e97392a5f5e$export$2e2bcd8739ae039","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","$659e0e97392a5f5e$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","canvasPool","releaseCompositionContext_","clipped","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","declutterBuilderGroup","userTransform","userExtent_1","dirty","renderFeature","userExtent","replayGroupInstructions","$82a68515bd6ef378$export$2e2bcd8739ae039","VectorLayer","$82a68515bd6ef378$var$__extends","$659e0e97392a5f5e$exports","$c8d6dc4c09ed9916$exports","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$bf2a04496fadabc6$export$a807b7874eb66454","$bf2a04496fadabc6$export$d6af199866bfb566","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","getFullTileRange","$a12e09565a34db59$export$2e2bcd8739ae039","TileCache","$a12e09565a34db59$var$__extends","pruneExceptNewestZ","$7e3d7a0f8b272861$export$2e2bcd8739ae039","TILELOADSTART","TILELOADEND","TILELOADERROR","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$export$2e2bcd8739ae039","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","fullTileRanges","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$var$resolutionsFromExtent","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$export$a251b12f5601c16f","$5779655d81caea04$export$39a9ce3624977b84","$5779655d81caea04$export$38500bbeccc864ff","xyzOptions","gridOptions","opt_maxResolution","half","$988a11d09320f6a8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$a12e09565a34db59$exports","tmpSize","tileOptions","$988a11d09320f6a8$var$__extends","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","$988a11d09320f6a8$export$c571855c51e6c4b6","TileSourceEvent","$988a11d09320f6a8$export$2e2bcd8739ae039","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","$91dd08a0f5859882$export$4229b1d9af69b3be","$91dd08a0f5859882$export$2a1fa079bfd73dde","urls","startCharCode","stopCharCode","stop_1","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$988a11d09320f6a8$exports","setTileLoadFunction","setTileUrlFunction","$51d055913ca55b5e$var$TileImage","TileImage","imageSmoothing","$51d055913ca55b5e$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$e6408236331c2614$exports","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","$963a7ef65488964c$export$2e2bcd8739ae039","$963a7ef65488964c$var$__extends","$51d055913ca55b5e$exports","$6c8498cc816f2362$export$4de8a5e77eb994ad","OSM","$6c8498cc816f2362$var$__extends","$963a7ef65488964c$exports","$2f0127a7d7474f3e$var$ATTRIBUTIONS","$6c8498cc816f2362$exports","ATTRIBUTION","$2f0127a7d7474f3e$var$LayerConfig","terrain","toner","watercolor","$2f0127a7d7474f3e$var$ProviderConfig","$2f0127a7d7474f3e$export$2e2bcd8739ae039","Stamen","provider","providerConfig","layerConfig","$2f0127a7d7474f3e$var$__extends","$47718fa87dff696c$exports","JSON","parse","$efd3ba4ec2608b1d$var$styles","Done","NotDone","$efd3ba4ec2608b1d$var$vectorSource","$84888e4daf3fdf44$exports","$efd3ba4ec2608b1d$var$doneLineString","$292e4002746c8223$exports","$efd3ba4ec2608b1d$var$notDoneLineString","$efd3ba4ec2608b1d$var$meters","curCoord","prevCoord","$9fd014ab6df63665$exports","$efd3ba4ec2608b1d$var$vectorLayer","$82a68515bd6ef378$exports","$41aa29ae0c4b607a$exports","$32e67a4d3559554a$exports","$2f0127a7d7474f3e$exports"],"version":3,"file":"index.47af490b.js.map"}